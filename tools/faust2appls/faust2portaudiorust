#! /bin/bash -e

#####################################################################
#                                                                   #
#          Compiles Faust programs to PortAudio and Rust binary     #
#               (c) Grame, 2018-2021                                #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags
. usage.sh

SRC="0"
ARCHFILE=$FAUSTARCH/portaudio.rs

#PHASE 2 : dispatch command arguments
while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        usage faust2portaudiorust "[options] [Faust options] <file.dsp>"
        require PortAudio
        echo "Compiles Faust programs to PortAudio and Rust binary"
        option
        option -source "only generates the source project."
        option "Faust options"
        exit
    fi

    if [ $p = "-source" ]; then
        SRC="1"
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]] && [ ${p: -4} == ".dsp" ]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi

shift

done

#-------------------------------------------------------------------
# compile the *.dsp files
#

for p in $FILES; do

    f=$(basename "$p")
    SRCDIR=$(dirname "$p")

    # creates the dir
    dspName="${f%.dsp}-portaudiorust"
    rm -rf "$SRCDIR/$dspName"

    # create rust project
    pushd "$SRCDIR"
    cargo new $dspName --bin
    popd

    # compile Faust DSP and put in the cargo folder
    faust -a $ARCHFILE -lang rust $OPTIONS "$SRCDIR/$f" -o "$SRCDIR/$dspName/src/main.rs"

    # add dependencies
    echo "portaudio = \"*\"" >> "$SRCDIR/$dspName/Cargo.toml"
    echo "libm = \"*\"" >> "$SRCDIR/$dspName/Cargo.toml"

    # build the project
    if [ $SRC = "0" ]; then
    (
        cd "$SRCDIR/$dspName"
        cargo build --release
        cargo build
    ) > /dev/null || exit
    fi

done
