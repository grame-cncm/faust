#! /bin/bash -e

. faustpath
. faustoptflags

CXXFLAGS=$MYGCCFLAGS

#-------------------------------------------------------------------
# Set Faust include path

if [ -f $FAUST_LIB_PATH/music.lib ]
then
    FAUSTLIB=$FAUST_LIB_PATH
elif [ -f /usr/local/share/faust/music.lib ]
then
    FAUSTLIB=/usr/local/share/faust/
elif [ -f /usr/share/faust/music.lib ]
then
    FAUSTLIB=/usr/share/faust/
else
    echo "ERROR : $0 cannot find Faust library dir (usually /usr/local/share/faust)"
fi

#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# existing *.dsp files          -> FILES
#

for p in $@; do
    if [ $p = "-osc" ]; then
	 	OSCDEFS="-DOSCCTRL -lOSCFaust"
    elif [ $p = "-httpd" ]; then
	 	HTTPDEFS="-DHTTPCTRL -lHTTPDFaust -lmicrohttpd"
    elif [ ${p:0:1} = "-" ]; then
	    OPTIONS="$OPTIONS $p"
	elif [[ -f "$p" ]]; then
	    FILES="$FILES $p"
	else
	    OPTIONS="$OPTIONS $p"
	fi
done

#-------------------------------------------------------------------
# compile the *.dsp files
#
for f in $FILES; do
    faust -i -a netjack-console.cpp $OPTIONS $f -o $f.cpp || exit
    $CXX $CXXFLAGS $f.cpp $FAUSTTOOLSFLAGS -I/usr/local/include -L/usr/local/lib -ljacknet $OSCDEFS $HTTPDEFS -o  ${f%.dsp} || exit
    rm $f.cpp

    # collect binary file name for FaustGIDE
    BINARIES="$BINARIES${f%.dsp}$EXT;"
done

echo $BINARIES

