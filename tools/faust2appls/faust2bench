#! /bin/bash -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to a bench                  #
#               (c) Grame, 2022-2023                                #
#                                                                   #
#####################################################################

# Define some common paths
. faustpath

# Define compilation flags
. faustoptflags

# Helper file to build the 'help' option
. usage.sh

CXXFLAGS+=" $MYGCCFLAGS"  # So that additional CXXFLAGS can be used

# The architecture file name
ARCHFILE=$FAUSTARCH/bench.cpp

# Global variables
OPTIONS=""
FILES=""
DOUBLE="0"

echoHelp() 
{
    usage faust2bench "[Faust options] <file.dsp>"
    echo "Compiles Faust programs to a benchmark executable"
    option "Faust options"
    exit
}

if [ "$#" -eq 0 ]; then
    echo 'Please, provide a Faust file to process !'
    echo ''
    echoHelp
fi

#-------------------------------------------------------------------
# dispatch command arguments
#-------------------------------------------------------------------

while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
       echoHelp
    elif [ "$p" = "-double" ]; then
        DOUBLE="1"
        OPTIONS="$OPTIONS $p"
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]] && [ ${p: -4} == ".dsp" ]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi

shift

done

#-------------------------------------------------------------------
# compile the *.dsp files
#-------------------------------------------------------------------

for f in $FILES; do

    # compile the DSP to c++ using the architecture file
    faust -i -a $ARCHFILE $OPTIONS "$f" -o "${f%.dsp}_tmp.cpp"|| exit
   
   # Create config file
    echo -n >> Config
    if [ $DOUBLE == "1" ]; then
        echo "#define FAUSTFLOAT double" >> Config
    else
        echo "#define FAUSTFLOAT float" >> Config
    fi
    cat Config "${f%.dsp}_tmp.cpp" > "${f%.dsp}.cpp"

    # compile c++ to binary
    (
        $CXX $CXXFLAGS "${f%.dsp}.cpp" -o "${f%.dsp}"
    ) > /dev/null || exit

    # remove temporary files
    rm -f Config "${f%.dsp}.cpp" "${f%.dsp}_tmp.cpp" 

    # collect binary file name for FaustWorks
    BINARIES="$BINARIES${f%.dsp};"
done

echo $BINARIES


