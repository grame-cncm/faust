#! /bin/bash -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to plotters					#
#               (c) Grame, 2009                                     #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags
. usage.sh

CXXFLAGS=$MYGCCFLAGS

ARCHFILE=$FAUSTARCH/matlabplot.cpp

FAUSTFLOAT=float
FAUST_INCLUDES="0"

#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# if -omp : -openmp or -fopenmp -> OPENMP
# existing *.dsp files          -> FILES

# dispatch command arguments
for p in $@; do

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        usage faust2plot "[options] [Faust options] <file.dsp>"
        echo "Compiles Faust programs to plotters"
        option
        option "-s <n>" "start at the sample number <n> (default is 0)"
        option "-n <n>" "render <n> samples (default is 16)"
        option "-r <rate>" "change the sample rate (default is 44100 Hz))"
        option "Faust options"
        exit
    fi

    if [ $FAUST_INCLUDES = "1" ]; then
        OPTIONS="$OPTIONS -I $p"
        CXXFLAGS="$CXXFLAGS -I $p"
        FAUST_INCLUDES="0"
	elif [ $p = "-arch32" ]; then
    	PROCARCH="-m32 -L/usr/lib32"
    elif [ $p = "-arch64" ]; then
    	PROCARCH="-m64"
    elif [ $p = "-double" ]; then
    	OPTIONS="$OPTIONS $p"
    	FAUSTFLOAT="double"
    elif [ $p = "-I" ]; then
        FAUST_INCLUDES="1"
    elif [ ${p:0:1} = "-" ]; then
    	OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]]; then
    	FILES="$FILES $p"
    else
    	OPTIONS="$OPTIONS $p"        
    fi
    
done

#-------------------------------------------------------------------
# compile the *.dsp files 

for f in $FILES; do
	
	# compile faust to c++
    faust -i -a $ARCHFILE $OPTIONS "$f" -o "$f.cpp" || exit

    echo $CXX $CXXFLAGS $PROCARCH $OMP -DFAUSTFLOAT=$FAUSTFLOAT "$f.cpp" -o "${f%.dsp}"

	# compile c++ to binary
	(
		$CXX $CXXFLAGS $PROCARCH $OMP -DFAUSTFLOAT=$FAUSTFLOAT "$f.cpp" -o "${f%.dsp}"
	) > /dev/null || exit
	rm "$f.cpp"

	# collect binary file name for FaustWorks
	BINARIES="$BINARIES${f%.dsp};"
done
echo $BINARIES
