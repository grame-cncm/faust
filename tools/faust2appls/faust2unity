#! /bin/bash -e

. faustpath


#------------------------------------------------------------------------------
# Generates a folder with all available architecture libraries for faust unity
# plugin and the C# and JSON files required

#PHASE 2 : dispatch command arguments
for p in $@; do
    if [ "$p" = -omp ]; then
        OMP="-fopenmp"
    fi

    if [ "$p" = -icc ]; then
        ignore=" "
    elif [ $p = "-arch32" ]; then
        PROCARCH="-m32 -L/usr/lib32"
    elif [ $p = "-arch64" ]; then
        PROCARCH="-m64"
    elif [ $p = "-poly" ]; then
        F2PDPOLY="-n 8"
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi
done

for p in $FILES; do

    CUR=$(pwd)
    f=$(basename "$p")
    SRCDIR=$(dirname "$p")
    NAME=${f%.dsp}
    DIR=$SRCDIR/FaustPlugin_$NAME


    # creates final dir / overwrites it if already created
    if [ -d "$DIR" ]; then
        rm -rf "$DIR"
    fi
    mkdir "$DIR"

    # finds number of parameters
    faust -uim $f -o $NAME.cpp
    grep FAUST_ACTIVES $NAME.cpp > params.txt
    var1=$(cut -d" " -f3- params.txt)
    grep FAUST_PASSIVES $NAME.cpp > params.txt
    var2=$(cut -d" " -f3- params.txt)
    let "var=var1+var2"
    rm $NAME.cpp
    rm params.txt

    # generates c# file
    sed -e "s/model/FaustPlugin_$NAME/g;s/plugname/libFaustPlugin_$NAME/g;s/_UI/_$NAME/g;s/Ctx/Context_$NAME/g;s/variables/$var/g;s/androidpluginname/FaustPlugin_$NAME/g" $FAUSTLIB/unity/template.cs > $SRCDIR/$DIR/FaustPlugin_$NAME.cs

    # compiles faust to c++ and json
    faust -json "$SRCDIR/$f" -o /dev/null;
    mv "$SRCDIR/$f.json" $DIR/FaustPlugin_$NAME.json

    # compiles c++ to binaries
    (
        # w64
        faust2w64unity $f
        mv $SRCDIR/w64 $DIR/w64

        # w32
        faust2w32unity $f
        mv $SRCDIR/w32 $DIR/w32

        # macos
        faust2osxiosunity $f
        MACOS="$SRCDIR/$DIR/MACOS/"
        mkdir -p "$MACOS"
        mv "$SRCDIR/libFaustPlugin_$NAME.bundle" "$DIR/MACOS/libFaustPlugin_$NAME.bundle"

        #ios
        faust2osxiosunity -ios $f
        IOS="$SRCDIR/$DIR/IOS/"
        mkdir -p "$IOS"
        mv "$SRCDIR/libFaustPlugin_$NAME.a" "$DIR/IOS/libFaustPlugin_$NAME.a"

        #android
        faust2androidunity $f
        mv $SRCDIR/Android $DIR/Android

    ) > /dev/null || exit



done



