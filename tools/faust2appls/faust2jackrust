#! /bin/bash -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to JACK and Rust binary     #
#               (c) Grame, 2017                                     #
#                                                                   #
#####################################################################


#-------------------------------------------------------------------
# Set Faust include path

if [ -f $FAUST_LIB_PATH/music.lib ]
then
  	FAUSTLIB=$FAUST_LIB_PATH
elif [ -f /usr/local/share/faust/music.lib ]
then
  	FAUSTLIB=/usr/local/share/faust
  	JSFILE_PATH="ui.js"
elif [ -f /usr/share/faust/music.lib ]
then
  	FAUSTLIB=/usr/share/faust
  	JSFILE_PATH="ui.js"
else
  error "$0: Cannot find Faust library dir (usually /usr/local/share/faust)"
fi

#PHASE 2 : dispatch command arguments
while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echo "faust2jackrust <file.dsp>"
    fi
    
    if [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi

shift

done


#-------------------------------------------------------------------
# compile the *.dsp files
#

for p in $FILES; do

    f=$(basename "$p")
    SRCDIR=$(dirname "$p")

    # creates the dir
    dspName="${f%.dsp}-rust"
    rm -rf "$SRCDIR/$dspName"

    # create rust project
    cargo new $dspName --bin

    # compile Faust DSP and put in the cargo folder
    faust -a "$FAUSTLIB/minimal-jack.rs" -lang rust "$SRCDIR/$f" -o "$SRCDIR/$dspName/src/main.rs"

    # add JACK dependency
    echo "jack = \"0.5.3\"" >> "$SRCDIR/$dspName/Cargo.toml"

    # build the project
    cd "$SRCDIR/$dspName"
    cargo build --release
    cargo build

done


