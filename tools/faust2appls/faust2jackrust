#! /bin/bash -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to JACK and Rust binary     #
#               (c) Grame, 2017-2019                                #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags

SRC="0"
ARCHFILE=$FAUSTARCH/minimal-jack.rs

#PHASE 2 : dispatch command arguments
while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echo "faust2jackrust [-source] [additional Faust options (-vec -vs 8...)] <file.dsp>"
        echo "Use '-source' to only generate the source project"
    fi

    if [ $p = "-source" ]; then
        SRC="1"
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi

shift

done

#-------------------------------------------------------------------
# compile the *.dsp files
#

for p in $FILES; do

    f=$(basename "$p")
    SRCDIR=$(dirname "$p")
  
    # creates the dir
    dspName="${f%.dsp}-jackrust"
    rm -rf "$SRCDIR/$dspName"

    # create rust project
    cargo new $dspName --bin

    # compile Faust DSP and put in the cargo folder
    faust -a $ARCHFILE -lang rust "$SRCDIR/$f" -o "$SRCDIR/$dspName/src/main.rs"

    # add dependencies
    echo "jack = \"0.5.3\"" >> "$SRCDIR/$dspName/Cargo.toml"
    echo "libm = \"*\"" >> "$SRCDIR/$dspName/Cargo.toml"

    # build the project
    if [ $SRC = "0" ]; then
    (
        cd "$SRCDIR/$dspName"
        cargo build --release
        cargo build
    ) > /dev/null || exit

    fi

done
