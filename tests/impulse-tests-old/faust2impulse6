#!/bin/bash

#####################################################################
#                                                                   #
#               Compiles Faust programs to impulse tests			#
#               (c) Grame, 2017                                     #
#                                                                   #
#####################################################################


#-------------------------------------------------------------------
# Set Faust include path

if [ -f $FAUST_LIB_PATH/music.lib ]
    then
    FAUSTLIB=$FAUST_LIB_PATH
elif [ -f /usr/local/share/faust/all.lib ]
    then
    FAUSTLIB=/usr/local/share/faust/
elif [ -f /usr/share/faust/all.lib ]
    then
FAUSTLIB=/usr/share/faust/
    else
echo "ERROR : $0 cannot find Faust library dir (usually /usr/local/share/faust)"
fi

for p in $@; do
    if [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi
done

#-------------------------------------------------------------------
# compile the *.dsp files 

for f in $FILES; do

    name=$(basename "$f" .dsp)
    dirname=$(dirname "$f");

    # compile Faust to wasm
    faust $OPTIONS -lang wasm-i  "$f" -o "${f%.dsp}.wasm" || exit

    # create the nodejs ready file
    cd $dirname
    sed -e "s/mydsp/"$name"/g" "$name.js"  >> "$name-tmp1.js"
    sed -e "s/mydsp/"$name"/g" $FAUSTLIB/webaudio/wasm-standalone-node-wrapper-double.js >> "$name-tmp1.js"
    sed -e "s/DSP/"$name"/g" "$name-tmp1.js"  >> "$name-tmp2.js"

	# run the binary to generate the impulse response
    node --expose-wasm $name-tmp2.js || exit

    # cleanup
    rm $name-tmp1.js $name-tmp2.js $name.js $name.wasm

done

