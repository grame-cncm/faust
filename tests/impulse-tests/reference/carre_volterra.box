declare version "2.50.2";
declare compile_options "-single -scal ../../build/bin/faust -I dsp -e dsp/carre_volterra.dsp -o reference/carre_volterra.box";
declare library_path0 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/effect.lib";
declare library_path1 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/filter.lib";
declare library_path2 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/music.lib";
declare library_path3 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/math.lib";
declare library_path4 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/oscillator.lib";
declare effect_lib_name "Faust Audio Effect Library";
declare filename "carre_volterra.dsp";
declare filter_lib_author "Julius O. Smith (jos at ccrma.stanford.edu)";
declare filter_lib_copyright "Julius O. Smith III";
declare filter_lib_license "STK-4.3";
declare filter_lib_name "Faust Filter Library";
declare filter_lib_reference "https://ccrma.stanford.edu/~jos/filters/";
declare filter_lib_version "1.29";
declare math_lib_author "GRAME";
declare math_lib_copyright "GRAME";
declare math_lib_deprecated "This library is deprecated and is not maintained anymore. It will be removed in August 2017.";
declare math_lib_license "LGPL with exception";
declare math_lib_name "Math Library";
declare math_lib_version "1.0";
declare music_lib_author "GRAME";
declare music_lib_copyright "GRAME";
declare music_lib_license "LGPL with exception";
declare music_lib_name "Music Library";
declare music_lib_version "1.0";
declare name "carre_volterra";
declare oscillator_lib_author "Julius O. Smith (jos at ccrma.stanford.edu)";
declare oscillator_lib_copyright "Julius O. Smith III";
declare oscillator_lib_license "STK-4.3";
declare oscillator_lib_name "Faust Oscillator Library";
declare oscillator_lib_version "1.11";
ID_0 = hslider("freq carre", 4.4e+02f, 2e+01f, 8e+03f, 1.0f);
ID_1 = ID_0, 23.44895f;
ID_2 = ID_1 : max;
ID_3 = (ID_2 : abs);
ID_4 = 2e+01f, ID_3;
ID_5 = (ID_4 : max);
ID_6 = fconstant(int fSamplingFreq, <math.h>);
ID_7 = 1.0f, ID_6;
ID_8 = (ID_7 : max);
ID_9 = 1.92e+05f, ID_8;
ID_10 = (ID_9 : min);
ID_11 = ID_5, ID_10;
ID_12 = (ID_11 : /);
ID_13 = _, ID_12;
ID_14 = (ID_13 : +);
ID_15 = \(x7).(x7,(x7 : floor) : -) ~ ID_14;
ID_16 = 2, ID_15;
ID_17 = (ID_16 : *);
ID_18 = ID_17, 1;
ID_19 = ID_18 : -;
ID_20 = \(x8).((x8,(x8 : mem) : -),(2.0f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(2e+01f,(hslider("freq carre", 4.4e+02f, 2e+01f, 8e+03f, 1.0f),23.44895f : max : abs) : max) : /) : /) : /), 2;
ID_21 = ID_20 : /;
ID_22 = 1, 1;
ID_23 = (ID_22 : @);
ID_24 = _, ID_23;
ID_25 = ID_24 : *;
ID_26 = ID_21 : ID_25;
ID_27 = \(x2).(x2,x2 : *) : ID_26;
ID_28 = (ID_19 : ID_27);
ID_29 = (ID_10 : float);
ID_30 = ID_29, ID_2;
ID_31 = (ID_30 : /);
ID_32 = 0.5f, ID_31;
ID_33 = (ID_32 : *);
ID_34 = 2047, ID_33;
ID_35 = (ID_34 : min);
ID_36 = 0, ID_35;
ID_37 = ID_36 : max;
ID_38 = (ID_37 : int);
ID_39 = ID_28, ID_38;
ID_40 = (ID_39 : @);
ID_41 = ID_37, ID_38;
ID_42 = (ID_41 : -);
ID_43 = 1, ID_42;
ID_44 = (ID_43 : -);
ID_45 = ID_40, ID_44;
ID_46 = (ID_45 : *);
ID_47 = ID_28, ID_46;
ID_48 = (ID_47 : -);
ID_49 = ID_38, 1;
ID_50 = (ID_49 : +);
ID_51 = ID_28, ID_50;
ID_52 = (ID_51 : @);
ID_53 = ID_52, ID_42;
ID_54 = (ID_53 : *);
ID_55 = ID_48, ID_54;
ID_56 = (ID_55 : -);
ID_57 = hslider("delta", 2.0f, 0.0f, 6.0f, 0.1f);
ID_58 = ID_0, ID_57;
ID_59 = (ID_58 : +);
ID_60 = ID_59, 23.44895f;
ID_61 = ID_60 : max;
ID_62 = (ID_61 : abs);
ID_63 = 2e+01f, ID_62;
ID_64 = (ID_63 : max);
ID_65 = ID_64, ID_10;
ID_66 = (ID_65 : /);
ID_67 = _, ID_66;
ID_68 = (ID_67 : +);
ID_69 = \(x9).(x9,(x9 : floor) : -) ~ ID_68;
ID_70 = 2, ID_69;
ID_71 = (ID_70 : *);
ID_72 = ID_71, 1;
ID_73 = ID_72 : -;
ID_74 = \(x10).((x10,(x10 : mem) : -),(2.0f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(2e+01f,((hslider("freq carre", 4.4e+02f, 2e+01f, 8e+03f, 1.0f),hslider("delta", 2.0f, 0.0f, 6.0f, 0.1f) : +),23.44895f : max : abs) : max) : /) : /) : /), 2;
ID_75 = ID_74 : /;
ID_76 = ID_75 : ID_25;
ID_77 = \(x5).(x5,x5 : *) : ID_76;
ID_78 = (ID_73 : ID_77);
ID_79 = ID_29, ID_61;
ID_80 = (ID_79 : /);
ID_81 = 0.5f, ID_80;
ID_82 = (ID_81 : *);
ID_83 = 2047, ID_82;
ID_84 = (ID_83 : min);
ID_85 = 0, ID_84;
ID_86 = ID_85 : max;
ID_87 = (ID_86 : int);
ID_88 = ID_78, ID_87;
ID_89 = (ID_88 : @);
ID_90 = ID_86, ID_87;
ID_91 = (ID_90 : -);
ID_92 = 1, ID_91;
ID_93 = (ID_92 : -);
ID_94 = ID_89, ID_93;
ID_95 = (ID_94 : *);
ID_96 = ID_78, ID_95;
ID_97 = (ID_96 : -);
ID_98 = ID_87, 1;
ID_99 = (ID_98 : +);
ID_100 = ID_78, ID_99;
ID_101 = (ID_100 : @);
ID_102 = ID_101, ID_91;
ID_103 = (ID_102 : *);
ID_104 = ID_97, ID_103;
ID_105 = (ID_104 : -);
ID_106 = ID_56, ID_105;
ID_107 = ID_106 : +;
ID_108 = hslider("level", 0.5f, 0.0f, 1.0f, 0.01f);
ID_109 = _, ID_108;
ID_110 = ID_109 : *;
ID_111 = (ID_107 : ID_110);
ID_112 = ID_111, 0;
ID_113 = \(x11).(\(x12).((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),(((x11,3 : pow),((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),3 : pow) : -),x12 : + : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)))) : \(x13).(\(x14).(x13,((-0.33333334f,checkbox("NL") : *),x14 : *) : +));
ID_114 = \(x11).(\(x12).((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),(((x11,3 : pow),((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),3 : pow) : -),x12 : + : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)))) : ID_113;
ID_115 = \(x11).(\(x12).((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),(((x11,3 : pow),((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),3 : pow) : -),x12 : + : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)))) : ID_114;
ID_116 = \(x11).(\(x12).((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),(((x11,3 : pow),((x11 : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)),3 : pow) : -),x12 : + : _,(((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *),(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /) : * : +~(_,(1.0f,((6.2831855f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /),hslider("freq[unit:Hz]", 7e+02f, 1.0f, 2e+04f, 1.0f) : *) : +) : /)))) : ID_115;
ID_117 = ID_112 : ID_116;
process = ID_117;
