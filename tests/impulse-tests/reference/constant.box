declare version "2.50.2";
declare compile_options "-single -scal ../../build/bin/faust -I dsp -e dsp/constant.dsp -o reference/constant.box";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.1";
declare compilation_options "-single -scal -e t1.dsp -o t1_exp.dsp";
declare filename "t1.dsp";
declare library_path "/Users/letz/Developpements/faust/t1.dsp";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.3";
declare name "t1";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.1";
ID_0 = fconstant(int fSamplingFreq, <math.h>);
ID_1 = 1.0f, ID_0;
ID_2 = (ID_1 : max);
ID_3 = 1.92e+05f, ID_2;
ID_4 = (ID_3 : min);
ID_5 = \(x1).((x1,0 : @ : _<:(1,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0 : ==) : &),((((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),1 : / : floor : int),2 : %),0,_ : select2),_ : select2),((x1,(x1,1 : @) : +),(1,(((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),1 : / : floor : int),2 : %) : *:>_) : @ : _<:(0,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0 : ==) : &),((((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),2 : / : floor : int),2 : %),0,_ : select2),_ : select2),(((x1,(x1,1 : @) : +),((x1,(x1,1 : @) : +),2 : @) : +),((1,(((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),1 : / : floor : int),2 : %) : *),(2,(((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),2 : / : floor : int),2 : %) : *):>_) : @ : _<:(0,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),0 : ==) : &),((((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),4 : / : floor : int),2 : %),0,_ : select2),_ : select2) : +,_ : +), ID_4;
ID_6 = ID_5 : /;
process = ID_6;
