declare version "2.50.2";
declare compile_options "-single -scal ../../build/bin/faust -I dsp -e dsp/karplus32.dsp -o reference/karplus32.box";
declare library_path0 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/music.lib";
declare library_path1 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/math.lib";
declare author "Grame";
declare copyright "(c)GRAME 2006";
declare filename "karplus32.dsp";
declare license "BSD";
declare math_lib_author "GRAME";
declare math_lib_copyright "GRAME";
declare math_lib_deprecated "This library is deprecated and is not maintained anymore. It will be removed in August 2017.";
declare math_lib_license "LGPL with exception";
declare math_lib_name "Math Library";
declare math_lib_version "1.0";
declare music_lib_author "GRAME";
declare music_lib_copyright "GRAME";
declare music_lib_license "LGPL with exception";
declare music_lib_name "Music Library";
declare music_lib_version "1.0";
declare name "karplus32";
declare version "1.0";
ID_0 = _, 12345;
ID_1 = (ID_0 : +);
ID_2 = _, 1103515245;
ID_3 = (ID_2 : *);
ID_4 = ID_1 ~ ID_3;
ID_5 = ID_4, 2.1474836e+09f;
ID_6 = (ID_5 : /);
ID_7 = hslider("level", 0.5f, 0.0f, 1.0f, 0.1f);
ID_8 = ID_6, ID_7;
ID_9 = ID_8 : *;
ID_10 = vgroup("noise generator", ID_9);
ID_11 = button("play");
ID_12 = + ~ \(x2).(x2,((x2,0 : >),hslider("excitation (samples)", 128.0f, 2.0f, 512.0f, 1.0f) : /) : -);
ID_13 = _, 0.0f;
ID_14 = ID_13 : >;
ID_15 = _, 1.5258789e-05f;
ID_16 = ID_15 : +;
ID_17 = ID_14 : ID_16;
ID_18 = ID_12 : ID_17;
ID_19 = \(x1).((x1,(x1 : mem) : -),0.0f : >) : ID_18;
ID_20 = (ID_11 : ID_19);
ID_21 = _, ID_20;
ID_22 = ID_21 : *;
ID_23 = vgroup("excitator", ID_22);
ID_24 = ID_10 : ID_23;
ID_25 = (+ : \(x3).(x3,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(0,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_26 = hslider("attenuation", 0.0f, 0.0f, 1.0f, 0.01f);
ID_27 = 1.0f, ID_26;
ID_28 = (ID_27 : -);
ID_29 = _, ID_28;
ID_30 = ID_29 : *;
ID_31 = (\(x4).((x4,(x4 : mem) : +),2 : /) : ID_30);
ID_32 = ID_25 ~ ID_31;
ID_33 = hslider("polyphony", 14.0f, 0.0f, 32.0f, 1.0f);
ID_34 = ID_33, 0;
ID_35 = (ID_34 : >);
ID_36 = ID_32, ID_35;
ID_37 = (ID_36 : *);
ID_38 = (+ : \(x5).(x5,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(1,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_39 = ID_38 ~ ID_31;
ID_40 = ID_33, 1;
ID_41 = (ID_40 : >);
ID_42 = ID_39, ID_41;
ID_43 = (ID_42 : *);
ID_44 = (+ : \(x6).(x6,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(2,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_45 = ID_44 ~ ID_31;
ID_46 = ID_33, 2;
ID_47 = (ID_46 : >);
ID_48 = ID_45, ID_47;
ID_49 = (ID_48 : *);
ID_50 = (+ : \(x7).(x7,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(3,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_51 = ID_50 ~ ID_31;
ID_52 = ID_33, 3;
ID_53 = (ID_52 : >);
ID_54 = ID_51, ID_53;
ID_55 = (ID_54 : *);
ID_56 = (+ : \(x8).(x8,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(4,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_57 = ID_56 ~ ID_31;
ID_58 = ID_33, 4;
ID_59 = (ID_58 : >);
ID_60 = ID_57, ID_59;
ID_61 = (ID_60 : *);
ID_62 = (+ : \(x9).(x9,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(5,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_63 = ID_62 ~ ID_31;
ID_64 = ID_33, 5;
ID_65 = (ID_64 : >);
ID_66 = ID_63, ID_65;
ID_67 = (ID_66 : *);
ID_68 = (+ : \(x10).(x10,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(6,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_69 = ID_68 ~ ID_31;
ID_70 = ID_33, 6;
ID_71 = (ID_70 : >);
ID_72 = ID_69, ID_71;
ID_73 = (ID_72 : *);
ID_74 = (+ : \(x11).(x11,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(7,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_75 = ID_74 ~ ID_31;
ID_76 = ID_33, 7;
ID_77 = (ID_76 : >);
ID_78 = ID_75, ID_77;
ID_79 = (ID_78 : *);
ID_80 = (+ : \(x12).(x12,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(8,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_81 = ID_80 ~ ID_31;
ID_82 = ID_33, 8;
ID_83 = (ID_82 : >);
ID_84 = ID_81, ID_83;
ID_85 = (ID_84 : *);
ID_86 = (+ : \(x13).(x13,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(9,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_87 = ID_86 ~ ID_31;
ID_88 = ID_33, 9;
ID_89 = (ID_88 : >);
ID_90 = ID_87, ID_89;
ID_91 = (ID_90 : *);
ID_92 = (+ : \(x14).(x14,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(10,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_93 = ID_92 ~ ID_31;
ID_94 = ID_33, 10;
ID_95 = (ID_94 : >);
ID_96 = ID_93, ID_95;
ID_97 = (ID_96 : *);
ID_98 = (+ : \(x15).(x15,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(11,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_99 = ID_98 ~ ID_31;
ID_100 = ID_33, 11;
ID_101 = (ID_100 : >);
ID_102 = ID_99, ID_101;
ID_103 = (ID_102 : *);
ID_104 = (+ : \(x16).(x16,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(12,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_105 = ID_104 ~ ID_31;
ID_106 = ID_33, 12;
ID_107 = (ID_106 : >);
ID_108 = ID_105, ID_107;
ID_109 = (ID_108 : *);
ID_110 = (+ : \(x17).(x17,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(13,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_111 = ID_110 ~ ID_31;
ID_112 = ID_33, 13;
ID_113 = (ID_112 : >);
ID_114 = ID_111, ID_113;
ID_115 = (ID_114 : *);
ID_116 = (+ : \(x18).(x18,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(14,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_117 = ID_116 ~ ID_31;
ID_118 = ID_33, 14;
ID_119 = (ID_118 : >);
ID_120 = ID_117, ID_119;
ID_121 = (ID_120 : *);
ID_122 = (+ : \(x19).(x19,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(15,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_123 = ID_122 ~ ID_31;
ID_124 = ID_33, 15;
ID_125 = (ID_124 : >);
ID_126 = ID_123, ID_125;
ID_127 = (ID_126 : *);
ID_128 = (+ : \(x20).(x20,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(16,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_129 = ID_128 ~ ID_31;
ID_130 = ID_33, 16;
ID_131 = (ID_130 : >);
ID_132 = ID_129, ID_131;
ID_133 = (ID_132 : *);
ID_134 = (+ : \(x21).(x21,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(17,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_135 = ID_134 ~ ID_31;
ID_136 = ID_33, 17;
ID_137 = (ID_136 : >);
ID_138 = ID_135, ID_137;
ID_139 = (ID_138 : *);
ID_140 = (+ : \(x22).(x22,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(18,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_141 = ID_140 ~ ID_31;
ID_142 = ID_33, 18;
ID_143 = (ID_142 : >);
ID_144 = ID_141, ID_143;
ID_145 = (ID_144 : *);
ID_146 = (+ : \(x23).(x23,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(19,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_147 = ID_146 ~ ID_31;
ID_148 = ID_33, 19;
ID_149 = (ID_148 : >);
ID_150 = ID_147, ID_149;
ID_151 = (ID_150 : *);
ID_152 = (+ : \(x24).(x24,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(20,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_153 = ID_152 ~ ID_31;
ID_154 = ID_33, 20;
ID_155 = (ID_154 : >);
ID_156 = ID_153, ID_155;
ID_157 = (ID_156 : *);
ID_158 = (+ : \(x25).(x25,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(21,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_159 = ID_158 ~ ID_31;
ID_160 = ID_33, 21;
ID_161 = (ID_160 : >);
ID_162 = ID_159, ID_161;
ID_163 = (ID_162 : *);
ID_164 = (+ : \(x26).(x26,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(22,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_165 = ID_164 ~ ID_31;
ID_166 = ID_33, 22;
ID_167 = (ID_166 : >);
ID_168 = ID_165, ID_167;
ID_169 = (ID_168 : *);
ID_170 = (+ : \(x27).(x27,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(23,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_171 = ID_170 ~ ID_31;
ID_172 = ID_33, 23;
ID_173 = (ID_172 : >);
ID_174 = ID_171, ID_173;
ID_175 = (ID_174 : *);
ID_176 = (+ : \(x28).(x28,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(24,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_177 = ID_176 ~ ID_31;
ID_178 = ID_33, 24;
ID_179 = (ID_178 : >);
ID_180 = ID_177, ID_179;
ID_181 = (ID_180 : *);
ID_182 = (+ : \(x29).(x29,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(25,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_183 = ID_182 ~ ID_31;
ID_184 = ID_33, 25;
ID_185 = (ID_184 : >);
ID_186 = ID_183, ID_185;
ID_187 = (ID_186 : *);
ID_188 = (+ : \(x30).(x30,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(26,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_189 = ID_188 ~ ID_31;
ID_190 = ID_33, 26;
ID_191 = (ID_190 : >);
ID_192 = ID_189, ID_191;
ID_193 = (ID_192 : *);
ID_194 = (+ : \(x31).(x31,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(27,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_195 = ID_194 ~ ID_31;
ID_196 = ID_33, 27;
ID_197 = (ID_196 : >);
ID_198 = ID_195, ID_197;
ID_199 = (ID_198 : *);
ID_200 = (+ : \(x32).(x32,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(28,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_201 = ID_200 ~ ID_31;
ID_202 = ID_33, 28;
ID_203 = (ID_202 : >);
ID_204 = ID_201, ID_203;
ID_205 = (ID_204 : *);
ID_206 = (+ : \(x33).(x33,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(29,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_207 = ID_206 ~ ID_31;
ID_208 = ID_33, 29;
ID_209 = (ID_208 : >);
ID_210 = ID_207, ID_209;
ID_211 = (ID_210 : *);
ID_212 = (+ : \(x34).(x34,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(30,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_213 = ID_212 ~ ID_31;
ID_214 = ID_33, 30;
ID_215 = (ID_214 : >);
ID_216 = ID_213, ID_215;
ID_217 = (ID_216 : *);
ID_218 = (+ : \(x35).(x35,(((hslider("duration (samples)", 128.0f, 2.0f, 512.0f, 1.0f),(31,hslider("detune", 37.9904f, 0.0f, 512.0f, 1.0f) : *) : +),1.5f : - : int),4095 : &) : @));
ID_219 = ID_218 ~ ID_31;
ID_220 = ID_33, 31;
ID_221 = (ID_220 : >);
ID_222 = ID_219, ID_221;
ID_223 = (ID_222 : *);
ID_224 = ID_217, ID_223;
ID_225 = ID_211, ID_224;
ID_226 = ID_205, ID_225;
ID_227 = ID_199, ID_226;
ID_228 = ID_193, ID_227;
ID_229 = ID_187, ID_228;
ID_230 = ID_181, ID_229;
ID_231 = ID_175, ID_230;
ID_232 = ID_169, ID_231;
ID_233 = ID_163, ID_232;
ID_234 = ID_157, ID_233;
ID_235 = ID_151, ID_234;
ID_236 = ID_145, ID_235;
ID_237 = ID_139, ID_236;
ID_238 = ID_133, ID_237;
ID_239 = ID_127, ID_238;
ID_240 = ID_121, ID_239;
ID_241 = ID_115, ID_240;
ID_242 = ID_109, ID_241;
ID_243 = ID_103, ID_242;
ID_244 = ID_97, ID_243;
ID_245 = ID_91, ID_244;
ID_246 = ID_85, ID_245;
ID_247 = ID_79, ID_246;
ID_248 = ID_73, ID_247;
ID_249 = ID_67, ID_248;
ID_250 = ID_61, ID_249;
ID_251 = ID_55, ID_250;
ID_252 = ID_49, ID_251;
ID_253 = ID_43, ID_252;
ID_254 = ID_37, ID_253;
ID_255 = vgroup("resonator x32", ID_254);
ID_256 = hslider("output volume", 0.4866f, 0.0f, 1.0f, 0.1f);
ID_257 = _, ID_256;
ID_258 = (ID_257 : *);
ID_259 = ID_258, ID_258;
ID_260 = ID_255 :> ID_259;
ID_261 = ID_24 <: ID_260;
ID_262 = vgroup("karplus32", ID_261);
process = ID_262;
