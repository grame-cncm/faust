declare version "2.50.2";
declare compile_options "-single -scal ../../build/bin/faust -I dsp -e dsp/tester2.dsp -o reference/tester2.box";
declare library_path0 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/music.lib";
declare library_path1 "/Users/letz/Developpements/faust/tests/impulse-tests/dsp/math.lib";
declare author "Grame";
declare copyright "(c)GRAME 2014";
declare filename "tester2.dsp";
declare license "BSD";
declare math_lib_author "GRAME";
declare math_lib_copyright "GRAME";
declare math_lib_deprecated "This library is deprecated and is not maintained anymore. It will be removed in August 2017.";
declare math_lib_license "LGPL with exception";
declare math_lib_name "Math Library";
declare math_lib_version "1.0";
declare music_lib_author "GRAME";
declare music_lib_copyright "GRAME";
declare music_lib_license "LGPL with exception";
declare music_lib_name "Music Library";
declare music_lib_version "1.0";
declare name "StereoAudioTester";
declare version "1.0";
ID_0 = _, 12345;
ID_1 = (ID_0 : +);
ID_2 = _, 1103515245;
ID_3 = (ID_2 : *);
ID_4 = ID_1 ~ ID_3;
ID_5 = ID_4, 2.1474836e+09f;
ID_6 = (ID_5 : /);
ID_7 = + ~ \(x2).((1.8011608f,x2 : *),(0.8025774f,(x2 : mem) : *) : -);
ID_8 = \(x1).(((0.04957526f,x1 : *),(0.06305581f,(x1 : mem) : *) : -),(0.014832203f,(x1 : mem : mem) : *) : +) : ID_7;
ID_9 = (ID_6 : ID_8);
ID_10 = _, 1;
ID_11 = (ID_10 : +);
ID_12 = ID_11 ~ _;
ID_13 = ID_12, 1;
ID_14 = ID_13 : -;
ID_15 = (ID_14 : float);
ID_16 = ID_15, 6.2831855f;
ID_17 = (ID_16 : *);
ID_18 = (65536 : float);
ID_19 = ID_17, ID_18;
ID_20 = ID_19 : /;
ID_21 = (ID_20 : sin);
ID_22 = hslider("[1] freq [unit:Hz][scale:log]", 3043.0f, 4e+01f, 2e+04f, 1.0f);
ID_23 = fconstant(int fSamplingFreq, <math.h>);
ID_24 = 1.0f, ID_23;
ID_25 = (ID_24 : max);
ID_26 = 1.92e+05f, ID_25;
ID_27 = ID_26 : min;
ID_28 = (ID_27 : float);
ID_29 = ID_22, ID_28;
ID_30 = ID_29 : /;
ID_31 = (+ : \(x3).(x3,(x3 : floor) : -));
ID_32 = ID_31 ~ _;
ID_33 = _, ID_18;
ID_34 = ID_33 : *;
ID_35 = ID_32 : ID_34;
ID_36 = ID_30 : ID_35;
ID_37 = (ID_36 : int);
ID_38 = ID_21, ID_37;
ID_39 = 65537, ID_38;
ID_40 = (ID_39 : rdtable);
ID_41 = (+ : \(x4).(x4,(x4 : floor) : -));
ID_42 = ID_41 ~ _;
ID_43 = _, 65536.0f;
ID_44 = ID_43 : *;
ID_45 = ID_42 : ID_44;
ID_46 = (ID_30 : ID_45);
ID_47 = (ID_46 : floor);
ID_48 = ID_46, ID_47;
ID_49 = (ID_48 : -);
ID_50 = ID_37, 1;
ID_51 = (ID_50 : +);
ID_52 = ID_21, ID_51;
ID_53 = 65537, ID_52;
ID_54 = (ID_53 : rdtable);
ID_55 = ID_54, ID_40;
ID_56 = (ID_55 : -);
ID_57 = ID_49, ID_56;
ID_58 = (ID_57 : *);
ID_59 = ID_40, ID_58;
ID_60 = (ID_59 : +);
ID_61 = ID_9, ID_60;
ID_62 = ID_6, ID_61;
ID_63 = hslider("[3] signal [style:menu{'white noise':0;'pink noise':1;'sine':2}]", 0.0f, 0.0f, 2.0f, 1.0f);
ID_64 = (ID_63 : int);
ID_65 = _, _;
ID_66 = _, ID_65;
ID_67 = ID_64, ID_66;
ID_68 = ID_67 : select3;
ID_69 = (ID_62 : ID_68);
ID_70 = hslider("[2] volume [unit:dB]", -31.9968f, -96.0f, 0.0f, 1.0f);
ID_71 = _, 0.001f;
ID_72 = ID_71 : *;
ID_73 = _, 0.999f;
ID_74 = (ID_73 : *);
ID_75 = + ~ ID_74;
ID_76 = ID_72 : ID_75;
ID_77 = \(x9).(10,(x9,2e+01f : /) : pow) : ID_76;
ID_78 = (ID_70 : ID_77);
ID_79 = ID_69, ID_78;
ID_80 = ID_79 : *;
ID_81 = hslider("[4] channel [style:radio{'none':0;'left':1;'right':2;'both':3}]", 1.0f, 0.0f, 3.0f, 1.0f);
ID_82 = (ID_81 : int);
ID_83 = ID_82, 1;
ID_84 = (ID_83 : &);
ID_85 = ID_84, 0;
ID_86 = ID_85 : !=;
ID_87 = \(x7).(\(x8).((x7,x8 : <),((x7,0.00022675737f : -),x8 : max),((x7,0.00022675737f : +),x8 : min) : select2)) ~ _;
ID_88 = (ID_86 : ID_87);
ID_89 = _, ID_88;
ID_90 = (ID_89 : *);
ID_91 = ID_82, 2;
ID_92 = (ID_91 : &);
ID_93 = ID_92, 0;
ID_94 = ID_93 : !=;
ID_95 = \(x5).(\(x6).((x5,x6 : <),((x5,0.00022675737f : -),x6 : max),((x5,0.00022675737f : +),x6 : min) : select2)) ~ _;
ID_96 = (ID_94 : ID_95);
ID_97 = _, ID_96;
ID_98 = (ID_97 : *);
ID_99 = ID_90, ID_98;
ID_100 = ID_80 <: ID_99;
ID_101 = vgroup("Stereo Audio Tester", ID_100);
process = ID_101;
