/* ------------------------------------------------------------
name: "reverb_designer"
Code generated with Faust 2.75.3 (https://faust.grame.fr)
Compilation options: -lang cpp -ct 1 -es 1 -mcd 16 -mdd 1024 -mdy 33 -single -ftz 0
------------------------------------------------------------ */

#ifndef  __mydsp_H__
#define  __mydsp_H__

#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif 

#include <algorithm>
#include <cmath>
#include <cstdint>
#include <math.h>

#ifndef FAUSTCLASS 
#define FAUSTCLASS mydsp
#endif

#ifdef __APPLE__ 
#define exp10f __exp10f
#define exp10 __exp10
#endif

#if defined(_WIN32)
#define RESTRICT __restrict
#else
#define RESTRICT __restrict__
#endif

static float mydsp_faustpower2_f(float value) {
	return value * value;
}

class mydsp : public dsp {
	
 private:
	
	FAUSTFLOAT fHslider0;
	FAUSTFLOAT fCheckbox0;
	int iRec17[2];
	float fRec16[4];
	FAUSTFLOAT fButton0;
	float fVec0[2];
	FAUSTFLOAT fButton1;
	float fVec1[2];
	FAUSTFLOAT fButton2;
	int fSampleRate;
	float fConst0;
	float fConst1;
	float fConst2;
	FAUSTFLOAT fHslider1;
	FAUSTFLOAT fVslider0;
	float fConst3;
	FAUSTFLOAT fHslider2;
	float fRec22[2];
	float fRec21[3];
	FAUSTFLOAT fHslider3;
	float fRec20[3];
	FAUSTFLOAT fHslider4;
	float fRec19[3];
	FAUSTFLOAT fHslider5;
	float fRec18[3];
	FAUSTFLOAT fVslider1;
	float fRec28[2];
	float fRec27[3];
	float fVec2[2];
	float fRec26[2];
	float fRec25[3];
	float fRec24[3];
	float fRec23[3];
	FAUSTFLOAT fVslider2;
	float fRec33[2];
	float fRec32[3];
	float fVec3[2];
	float fRec31[2];
	float fRec30[3];
	float fRec29[3];
	FAUSTFLOAT fVslider3;
	float fRec37[2];
	float fRec36[3];
	float fVec4[2];
	float fRec35[2];
	float fRec34[3];
	FAUSTFLOAT fVslider4;
	float fRec39[2];
	float fRec38[3];
	FAUSTFLOAT fHslider6;
	float fRec44[2];
	float fRec43[3];
	float fRec42[3];
	float fRec41[3];
	float fRec40[3];
	float fRec50[2];
	float fRec49[3];
	float fVec5[2];
	float fRec48[2];
	float fRec47[3];
	float fRec46[3];
	float fRec45[3];
	float fRec55[2];
	float fRec54[3];
	float fVec6[2];
	float fRec53[2];
	float fRec52[3];
	float fRec51[3];
	float fRec59[2];
	float fRec58[3];
	float fVec7[2];
	float fRec57[2];
	float fRec56[3];
	float fRec61[2];
	float fRec60[3];
	float fRec66[2];
	float fRec65[3];
	float fRec64[3];
	float fRec63[3];
	float fRec62[3];
	float fRec72[2];
	float fRec71[3];
	float fVec8[2];
	float fRec70[2];
	float fRec69[3];
	float fRec68[3];
	float fRec67[3];
	float fRec77[2];
	float fRec76[3];
	float fVec9[2];
	float fRec75[2];
	float fRec74[3];
	float fRec73[3];
	float fRec81[2];
	float fRec80[3];
	float fVec10[2];
	float fRec79[2];
	float fRec78[3];
	float fRec83[2];
	float fRec82[3];
	float fRec88[2];
	float fRec87[3];
	float fRec86[3];
	float fRec85[3];
	float fRec84[3];
	float fRec94[2];
	float fRec93[3];
	float fVec11[2];
	float fRec92[2];
	float fRec91[3];
	float fRec90[3];
	float fRec89[3];
	float fRec99[2];
	float fRec98[3];
	float fVec12[2];
	float fRec97[2];
	float fRec96[3];
	float fRec95[3];
	float fRec103[2];
	float fRec102[3];
	float fVec13[2];
	float fRec101[2];
	float fRec100[3];
	float fRec105[2];
	float fRec104[3];
	float fRec110[2];
	float fRec109[3];
	float fRec108[3];
	float fRec107[3];
	float fRec106[3];
	float fRec116[2];
	float fRec115[3];
	float fVec14[2];
	float fRec114[2];
	float fRec113[3];
	float fRec112[3];
	float fRec111[3];
	float fRec121[2];
	float fRec120[3];
	float fVec15[2];
	float fRec119[2];
	float fRec118[3];
	float fRec117[3];
	float fRec125[2];
	float fRec124[3];
	float fVec16[2];
	float fRec123[2];
	float fRec122[3];
	float fRec127[2];
	float fRec126[3];
	float fRec132[2];
	float fRec131[3];
	float fRec130[3];
	float fRec129[3];
	float fRec128[3];
	float fRec138[2];
	float fRec137[3];
	float fVec17[2];
	float fRec136[2];
	float fRec135[3];
	float fRec134[3];
	float fRec133[3];
	float fRec143[2];
	float fRec142[3];
	float fVec18[2];
	float fRec141[2];
	float fRec140[3];
	float fRec139[3];
	float fRec147[2];
	float fRec146[3];
	float fVec19[2];
	float fRec145[2];
	float fRec144[3];
	float fRec149[2];
	float fRec148[3];
	float fRec154[2];
	float fRec153[3];
	float fRec152[3];
	float fRec151[3];
	float fRec150[3];
	float fRec160[2];
	float fRec159[3];
	float fVec20[2];
	float fRec158[2];
	float fRec157[3];
	float fRec156[3];
	float fRec155[3];
	float fRec165[2];
	float fRec164[3];
	float fVec21[2];
	float fRec163[2];
	float fRec162[3];
	float fRec161[3];
	float fRec169[2];
	float fRec168[3];
	float fVec22[2];
	float fRec167[2];
	float fRec166[3];
	float fRec171[2];
	float fRec170[3];
	float fRec176[2];
	float fRec175[3];
	float fRec174[3];
	float fRec173[3];
	float fRec172[3];
	float fRec182[2];
	float fRec181[3];
	float fVec23[2];
	float fRec180[2];
	float fRec179[3];
	float fRec178[3];
	float fRec177[3];
	float fRec187[2];
	float fRec186[3];
	float fVec24[2];
	float fRec185[2];
	float fRec184[3];
	float fRec183[3];
	float fRec191[2];
	float fRec190[3];
	float fVec25[2];
	float fRec189[2];
	float fRec188[3];
	float fRec193[2];
	float fRec192[3];
	float fRec198[2];
	float fRec197[3];
	float fRec196[3];
	float fRec195[3];
	float fRec194[3];
	float fRec204[2];
	float fRec203[3];
	float fVec26[2];
	float fRec202[2];
	float fRec201[3];
	float fRec200[3];
	float fRec199[3];
	float fRec209[2];
	float fRec208[3];
	float fVec27[2];
	float fRec207[2];
	float fRec206[3];
	float fRec205[3];
	float fRec213[2];
	float fRec212[3];
	float fVec28[2];
	float fRec211[2];
	float fRec210[3];
	float fRec215[2];
	float fRec214[3];
	float fRec220[2];
	float fRec219[3];
	float fRec218[3];
	float fRec217[3];
	float fRec216[3];
	float fRec226[2];
	float fRec225[3];
	float fVec29[2];
	float fRec224[2];
	float fRec223[3];
	float fRec222[3];
	float fRec221[3];
	float fRec231[2];
	float fRec230[3];
	float fVec30[2];
	float fRec229[2];
	float fRec228[3];
	float fRec227[3];
	float fRec235[2];
	float fRec234[3];
	float fVec31[2];
	float fRec233[2];
	float fRec232[3];
	float fRec237[2];
	float fRec236[3];
	float fRec242[2];
	float fRec241[3];
	float fRec240[3];
	float fRec239[3];
	float fRec238[3];
	float fRec248[2];
	float fRec247[3];
	float fVec32[2];
	float fRec246[2];
	float fRec245[3];
	float fRec244[3];
	float fRec243[3];
	float fRec253[2];
	float fRec252[3];
	float fVec33[2];
	float fRec251[2];
	float fRec250[3];
	float fRec249[3];
	float fRec257[2];
	float fRec256[3];
	float fVec34[2];
	float fRec255[2];
	float fRec254[3];
	float fRec259[2];
	float fRec258[3];
	float fRec264[2];
	float fRec263[3];
	float fRec262[3];
	float fRec261[3];
	float fRec260[3];
	float fRec270[2];
	float fRec269[3];
	float fVec35[2];
	float fRec268[2];
	float fRec267[3];
	float fRec266[3];
	float fRec265[3];
	float fRec275[2];
	float fRec274[3];
	float fVec36[2];
	float fRec273[2];
	float fRec272[3];
	float fRec271[3];
	float fRec279[2];
	float fRec278[3];
	float fVec37[2];
	float fRec277[2];
	float fRec276[3];
	float fRec281[2];
	float fRec280[3];
	float fRec286[2];
	float fRec285[3];
	float fRec284[3];
	float fRec283[3];
	float fRec282[3];
	float fRec292[2];
	float fRec291[3];
	float fVec38[2];
	float fRec290[2];
	float fRec289[3];
	float fRec288[3];
	float fRec287[3];
	float fRec297[2];
	float fRec296[3];
	float fVec39[2];
	float fRec295[2];
	float fRec294[3];
	float fRec293[3];
	float fRec301[2];
	float fRec300[3];
	float fVec40[2];
	float fRec299[2];
	float fRec298[3];
	float fRec303[2];
	float fRec302[3];
	float fRec308[2];
	float fRec307[3];
	float fRec306[3];
	float fRec305[3];
	float fRec304[3];
	float fRec314[2];
	float fRec313[3];
	float fVec41[2];
	float fRec312[2];
	float fRec311[3];
	float fRec310[3];
	float fRec309[3];
	float fRec319[2];
	float fRec318[3];
	float fVec42[2];
	float fRec317[2];
	float fRec316[3];
	float fRec315[3];
	float fRec323[2];
	float fRec322[3];
	float fVec43[2];
	float fRec321[2];
	float fRec320[3];
	float fRec325[2];
	float fRec324[3];
	float fRec330[2];
	float fRec329[3];
	float fRec328[3];
	float fRec327[3];
	float fRec326[3];
	float fRec336[2];
	float fRec335[3];
	float fVec44[2];
	float fRec334[2];
	float fRec333[3];
	float fRec332[3];
	float fRec331[3];
	float fRec341[2];
	float fRec340[3];
	float fVec45[2];
	float fRec339[2];
	float fRec338[3];
	float fRec337[3];
	float fRec345[2];
	float fRec344[3];
	float fVec46[2];
	float fRec343[2];
	float fRec342[3];
	float fRec347[2];
	float fRec346[3];
	float fRec352[2];
	float fRec351[3];
	float fRec350[3];
	float fRec349[3];
	float fRec348[3];
	float fRec358[2];
	float fRec357[3];
	float fVec47[2];
	float fRec356[2];
	float fRec355[3];
	float fRec354[3];
	float fRec353[3];
	float fRec363[2];
	float fRec362[3];
	float fVec48[2];
	float fRec361[2];
	float fRec360[3];
	float fRec359[3];
	float fRec367[2];
	float fRec366[3];
	float fVec49[2];
	float fRec365[2];
	float fRec364[3];
	float fRec369[2];
	float fRec368[3];
	FAUSTFLOAT fCheckbox1;
	int IOTA0;
	float fVec50[8192];
	float fRec0[3];
	FAUSTFLOAT fButton3;
	float fVec51[2];
	float fVec52[8192];
	float fRec1[3];
	float fVec53[8192];
	float fRec2[3];
	float fVec54[8192];
	float fRec3[3];
	float fVec55[8192];
	float fRec4[3];
	float fVec56[8192];
	float fRec5[3];
	float fVec57[8192];
	float fRec6[3];
	float fVec58[8192];
	float fRec7[3];
	float fVec59[8192];
	float fRec8[3];
	float fVec60[8192];
	float fRec9[3];
	float fVec61[8192];
	float fRec10[3];
	float fVec62[8192];
	float fRec11[3];
	float fVec63[8192];
	float fRec12[3];
	float fVec64[8192];
	float fRec13[3];
	float fVec65[8192];
	float fRec14[3];
	float fVec66[8192];
	float fRec15[3];
	
 public:
	mydsp() {
	}
	
	void metadata(Meta* m) { 
		m->declare("compile_options", "-lang cpp -ct 1 -es 1 -mcd 16 -mdd 1024 -mdy 33 -single -ftz 0");
		m->declare("effect.lib/fdnrev0:author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("effect.lib/fdnrev0:copyright", "Julius O. Smith III");
		m->declare("effect.lib/fdnrev0:license", "STK-4.3");
		m->declare("effect.lib/fdnrev0_demo:author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("effect.lib/fdnrev0_demo:copyright", "Julius O. Smith III");
		m->declare("effect.lib/fdnrev0_demo:license", "STK-4.3");
		m->declare("effect.lib/name", "Faust Audio Effect Library");
		m->declare("effect.lib/prime_power_delays:author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("effect.lib/prime_power_delays:copyright", "Julius O. Smith III");
		m->declare("effect.lib/prime_power_delays:license", "STK-4.3");
		m->declare("effect.lib/stereo_reverb_tester:author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("effect.lib/stereo_reverb_tester:copyright", "Julius O. Smith III");
		m->declare("effect.lib/stereo_reverb_tester:license", "STK-4.3");
		m->declare("filename", "reverb_designer.dsp");
		m->declare("filter.lib/author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("filter.lib/copyright", "Julius O. Smith III");
		m->declare("filter.lib/license", "STK-4.3");
		m->declare("filter.lib/name", "Faust Filter Library");
		m->declare("filter.lib/reference", "https://ccrma.stanford.edu/~jos/filters/");
		m->declare("filter.lib/version", "1.29");
		m->declare("math.lib/author", "GRAME");
		m->declare("math.lib/copyright", "GRAME");
		m->declare("math.lib/deprecated", "This library is deprecated and is not maintained anymore. It will be removed in August 2017.");
		m->declare("math.lib/license", "LGPL with exception");
		m->declare("math.lib/name", "Math Library");
		m->declare("math.lib/version", "1.0");
		m->declare("music.lib/author", "GRAME");
		m->declare("music.lib/copyright", "GRAME");
		m->declare("music.lib/license", "LGPL with exception");
		m->declare("music.lib/name", "Music Library");
		m->declare("music.lib/version", "1.0");
		m->declare("name", "reverb_designer");
		m->declare("oscillator.lib/author", "Julius O. Smith (jos at ccrma.stanford.edu)");
		m->declare("oscillator.lib/copyright", "Julius O. Smith III");
		m->declare("oscillator.lib/license", "STK-4.3");
		m->declare("oscillator.lib/name", "Faust Oscillator Library");
		m->declare("oscillator.lib/version", "1.11");
	}

	virtual int getNumInputs() {
		return 2;
	}
	virtual int getNumOutputs() {
		return 2;
	}
	
	static void classInit(int sample_rate) {
	}
	
	virtual void instanceConstants(int sample_rate) {
		fSampleRate = sample_rate;
		fConst0 = std::min<float>(1.92e+05f, std::max<float>(1.0f, float(fSampleRate)));
		fConst1 = 6.9077554f / fConst0;
		fConst2 = 0.002915452f * fConst0;
		fConst3 = 3.1415927f / fConst0;
	}
	
	virtual void instanceResetUserInterface() {
		fHslider0 = FAUSTFLOAT(-4e+01f);
		fCheckbox0 = FAUSTFLOAT(0.0f);
		fButton0 = FAUSTFLOAT(0.0f);
		fButton1 = FAUSTFLOAT(0.0f);
		fButton2 = FAUSTFLOAT(0.0f);
		fHslider1 = FAUSTFLOAT(46.0f);
		fVslider0 = FAUSTFLOAT(2.7f);
		fHslider2 = FAUSTFLOAT(4e+03f);
		fHslider3 = FAUSTFLOAT(2e+03f);
		fHslider4 = FAUSTFLOAT(1e+03f);
		fHslider5 = FAUSTFLOAT(5e+02f);
		fVslider1 = FAUSTFLOAT(3.8f);
		fVslider2 = FAUSTFLOAT(5.0f);
		fVslider3 = FAUSTFLOAT(6.5f);
		fVslider4 = FAUSTFLOAT(8.4f);
		fHslider6 = FAUSTFLOAT(63.0f);
		fCheckbox1 = FAUSTFLOAT(0.0f);
		fButton3 = FAUSTFLOAT(0.0f);
	}
	
	virtual void instanceClear() {
		for (int l0 = 0; l0 < 2; l0 = l0 + 1) {
			iRec17[l0] = 0;
		}
		for (int l1 = 0; l1 < 4; l1 = l1 + 1) {
			fRec16[l1] = 0.0f;
		}
		for (int l2 = 0; l2 < 2; l2 = l2 + 1) {
			fVec0[l2] = 0.0f;
		}
		for (int l3 = 0; l3 < 2; l3 = l3 + 1) {
			fVec1[l3] = 0.0f;
		}
		for (int l4 = 0; l4 < 2; l4 = l4 + 1) {
			fRec22[l4] = 0.0f;
		}
		for (int l5 = 0; l5 < 3; l5 = l5 + 1) {
			fRec21[l5] = 0.0f;
		}
		for (int l6 = 0; l6 < 3; l6 = l6 + 1) {
			fRec20[l6] = 0.0f;
		}
		for (int l7 = 0; l7 < 3; l7 = l7 + 1) {
			fRec19[l7] = 0.0f;
		}
		for (int l8 = 0; l8 < 3; l8 = l8 + 1) {
			fRec18[l8] = 0.0f;
		}
		for (int l9 = 0; l9 < 2; l9 = l9 + 1) {
			fRec28[l9] = 0.0f;
		}
		for (int l10 = 0; l10 < 3; l10 = l10 + 1) {
			fRec27[l10] = 0.0f;
		}
		for (int l11 = 0; l11 < 2; l11 = l11 + 1) {
			fVec2[l11] = 0.0f;
		}
		for (int l12 = 0; l12 < 2; l12 = l12 + 1) {
			fRec26[l12] = 0.0f;
		}
		for (int l13 = 0; l13 < 3; l13 = l13 + 1) {
			fRec25[l13] = 0.0f;
		}
		for (int l14 = 0; l14 < 3; l14 = l14 + 1) {
			fRec24[l14] = 0.0f;
		}
		for (int l15 = 0; l15 < 3; l15 = l15 + 1) {
			fRec23[l15] = 0.0f;
		}
		for (int l16 = 0; l16 < 2; l16 = l16 + 1) {
			fRec33[l16] = 0.0f;
		}
		for (int l17 = 0; l17 < 3; l17 = l17 + 1) {
			fRec32[l17] = 0.0f;
		}
		for (int l18 = 0; l18 < 2; l18 = l18 + 1) {
			fVec3[l18] = 0.0f;
		}
		for (int l19 = 0; l19 < 2; l19 = l19 + 1) {
			fRec31[l19] = 0.0f;
		}
		for (int l20 = 0; l20 < 3; l20 = l20 + 1) {
			fRec30[l20] = 0.0f;
		}
		for (int l21 = 0; l21 < 3; l21 = l21 + 1) {
			fRec29[l21] = 0.0f;
		}
		for (int l22 = 0; l22 < 2; l22 = l22 + 1) {
			fRec37[l22] = 0.0f;
		}
		for (int l23 = 0; l23 < 3; l23 = l23 + 1) {
			fRec36[l23] = 0.0f;
		}
		for (int l24 = 0; l24 < 2; l24 = l24 + 1) {
			fVec4[l24] = 0.0f;
		}
		for (int l25 = 0; l25 < 2; l25 = l25 + 1) {
			fRec35[l25] = 0.0f;
		}
		for (int l26 = 0; l26 < 3; l26 = l26 + 1) {
			fRec34[l26] = 0.0f;
		}
		for (int l27 = 0; l27 < 2; l27 = l27 + 1) {
			fRec39[l27] = 0.0f;
		}
		for (int l28 = 0; l28 < 3; l28 = l28 + 1) {
			fRec38[l28] = 0.0f;
		}
		for (int l29 = 0; l29 < 2; l29 = l29 + 1) {
			fRec44[l29] = 0.0f;
		}
		for (int l30 = 0; l30 < 3; l30 = l30 + 1) {
			fRec43[l30] = 0.0f;
		}
		for (int l31 = 0; l31 < 3; l31 = l31 + 1) {
			fRec42[l31] = 0.0f;
		}
		for (int l32 = 0; l32 < 3; l32 = l32 + 1) {
			fRec41[l32] = 0.0f;
		}
		for (int l33 = 0; l33 < 3; l33 = l33 + 1) {
			fRec40[l33] = 0.0f;
		}
		for (int l34 = 0; l34 < 2; l34 = l34 + 1) {
			fRec50[l34] = 0.0f;
		}
		for (int l35 = 0; l35 < 3; l35 = l35 + 1) {
			fRec49[l35] = 0.0f;
		}
		for (int l36 = 0; l36 < 2; l36 = l36 + 1) {
			fVec5[l36] = 0.0f;
		}
		for (int l37 = 0; l37 < 2; l37 = l37 + 1) {
			fRec48[l37] = 0.0f;
		}
		for (int l38 = 0; l38 < 3; l38 = l38 + 1) {
			fRec47[l38] = 0.0f;
		}
		for (int l39 = 0; l39 < 3; l39 = l39 + 1) {
			fRec46[l39] = 0.0f;
		}
		for (int l40 = 0; l40 < 3; l40 = l40 + 1) {
			fRec45[l40] = 0.0f;
		}
		for (int l41 = 0; l41 < 2; l41 = l41 + 1) {
			fRec55[l41] = 0.0f;
		}
		for (int l42 = 0; l42 < 3; l42 = l42 + 1) {
			fRec54[l42] = 0.0f;
		}
		for (int l43 = 0; l43 < 2; l43 = l43 + 1) {
			fVec6[l43] = 0.0f;
		}
		for (int l44 = 0; l44 < 2; l44 = l44 + 1) {
			fRec53[l44] = 0.0f;
		}
		for (int l45 = 0; l45 < 3; l45 = l45 + 1) {
			fRec52[l45] = 0.0f;
		}
		for (int l46 = 0; l46 < 3; l46 = l46 + 1) {
			fRec51[l46] = 0.0f;
		}
		for (int l47 = 0; l47 < 2; l47 = l47 + 1) {
			fRec59[l47] = 0.0f;
		}
		for (int l48 = 0; l48 < 3; l48 = l48 + 1) {
			fRec58[l48] = 0.0f;
		}
		for (int l49 = 0; l49 < 2; l49 = l49 + 1) {
			fVec7[l49] = 0.0f;
		}
		for (int l50 = 0; l50 < 2; l50 = l50 + 1) {
			fRec57[l50] = 0.0f;
		}
		for (int l51 = 0; l51 < 3; l51 = l51 + 1) {
			fRec56[l51] = 0.0f;
		}
		for (int l52 = 0; l52 < 2; l52 = l52 + 1) {
			fRec61[l52] = 0.0f;
		}
		for (int l53 = 0; l53 < 3; l53 = l53 + 1) {
			fRec60[l53] = 0.0f;
		}
		for (int l54 = 0; l54 < 2; l54 = l54 + 1) {
			fRec66[l54] = 0.0f;
		}
		for (int l55 = 0; l55 < 3; l55 = l55 + 1) {
			fRec65[l55] = 0.0f;
		}
		for (int l56 = 0; l56 < 3; l56 = l56 + 1) {
			fRec64[l56] = 0.0f;
		}
		for (int l57 = 0; l57 < 3; l57 = l57 + 1) {
			fRec63[l57] = 0.0f;
		}
		for (int l58 = 0; l58 < 3; l58 = l58 + 1) {
			fRec62[l58] = 0.0f;
		}
		for (int l59 = 0; l59 < 2; l59 = l59 + 1) {
			fRec72[l59] = 0.0f;
		}
		for (int l60 = 0; l60 < 3; l60 = l60 + 1) {
			fRec71[l60] = 0.0f;
		}
		for (int l61 = 0; l61 < 2; l61 = l61 + 1) {
			fVec8[l61] = 0.0f;
		}
		for (int l62 = 0; l62 < 2; l62 = l62 + 1) {
			fRec70[l62] = 0.0f;
		}
		for (int l63 = 0; l63 < 3; l63 = l63 + 1) {
			fRec69[l63] = 0.0f;
		}
		for (int l64 = 0; l64 < 3; l64 = l64 + 1) {
			fRec68[l64] = 0.0f;
		}
		for (int l65 = 0; l65 < 3; l65 = l65 + 1) {
			fRec67[l65] = 0.0f;
		}
		for (int l66 = 0; l66 < 2; l66 = l66 + 1) {
			fRec77[l66] = 0.0f;
		}
		for (int l67 = 0; l67 < 3; l67 = l67 + 1) {
			fRec76[l67] = 0.0f;
		}
		for (int l68 = 0; l68 < 2; l68 = l68 + 1) {
			fVec9[l68] = 0.0f;
		}
		for (int l69 = 0; l69 < 2; l69 = l69 + 1) {
			fRec75[l69] = 0.0f;
		}
		for (int l70 = 0; l70 < 3; l70 = l70 + 1) {
			fRec74[l70] = 0.0f;
		}
		for (int l71 = 0; l71 < 3; l71 = l71 + 1) {
			fRec73[l71] = 0.0f;
		}
		for (int l72 = 0; l72 < 2; l72 = l72 + 1) {
			fRec81[l72] = 0.0f;
		}
		for (int l73 = 0; l73 < 3; l73 = l73 + 1) {
			fRec80[l73] = 0.0f;
		}
		for (int l74 = 0; l74 < 2; l74 = l74 + 1) {
			fVec10[l74] = 0.0f;
		}
		for (int l75 = 0; l75 < 2; l75 = l75 + 1) {
			fRec79[l75] = 0.0f;
		}
		for (int l76 = 0; l76 < 3; l76 = l76 + 1) {
			fRec78[l76] = 0.0f;
		}
		for (int l77 = 0; l77 < 2; l77 = l77 + 1) {
			fRec83[l77] = 0.0f;
		}
		for (int l78 = 0; l78 < 3; l78 = l78 + 1) {
			fRec82[l78] = 0.0f;
		}
		for (int l79 = 0; l79 < 2; l79 = l79 + 1) {
			fRec88[l79] = 0.0f;
		}
		for (int l80 = 0; l80 < 3; l80 = l80 + 1) {
			fRec87[l80] = 0.0f;
		}
		for (int l81 = 0; l81 < 3; l81 = l81 + 1) {
			fRec86[l81] = 0.0f;
		}
		for (int l82 = 0; l82 < 3; l82 = l82 + 1) {
			fRec85[l82] = 0.0f;
		}
		for (int l83 = 0; l83 < 3; l83 = l83 + 1) {
			fRec84[l83] = 0.0f;
		}
		for (int l84 = 0; l84 < 2; l84 = l84 + 1) {
			fRec94[l84] = 0.0f;
		}
		for (int l85 = 0; l85 < 3; l85 = l85 + 1) {
			fRec93[l85] = 0.0f;
		}
		for (int l86 = 0; l86 < 2; l86 = l86 + 1) {
			fVec11[l86] = 0.0f;
		}
		for (int l87 = 0; l87 < 2; l87 = l87 + 1) {
			fRec92[l87] = 0.0f;
		}
		for (int l88 = 0; l88 < 3; l88 = l88 + 1) {
			fRec91[l88] = 0.0f;
		}
		for (int l89 = 0; l89 < 3; l89 = l89 + 1) {
			fRec90[l89] = 0.0f;
		}
		for (int l90 = 0; l90 < 3; l90 = l90 + 1) {
			fRec89[l90] = 0.0f;
		}
		for (int l91 = 0; l91 < 2; l91 = l91 + 1) {
			fRec99[l91] = 0.0f;
		}
		for (int l92 = 0; l92 < 3; l92 = l92 + 1) {
			fRec98[l92] = 0.0f;
		}
		for (int l93 = 0; l93 < 2; l93 = l93 + 1) {
			fVec12[l93] = 0.0f;
		}
		for (int l94 = 0; l94 < 2; l94 = l94 + 1) {
			fRec97[l94] = 0.0f;
		}
		for (int l95 = 0; l95 < 3; l95 = l95 + 1) {
			fRec96[l95] = 0.0f;
		}
		for (int l96 = 0; l96 < 3; l96 = l96 + 1) {
			fRec95[l96] = 0.0f;
		}
		for (int l97 = 0; l97 < 2; l97 = l97 + 1) {
			fRec103[l97] = 0.0f;
		}
		for (int l98 = 0; l98 < 3; l98 = l98 + 1) {
			fRec102[l98] = 0.0f;
		}
		for (int l99 = 0; l99 < 2; l99 = l99 + 1) {
			fVec13[l99] = 0.0f;
		}
		for (int l100 = 0; l100 < 2; l100 = l100 + 1) {
			fRec101[l100] = 0.0f;
		}
		for (int l101 = 0; l101 < 3; l101 = l101 + 1) {
			fRec100[l101] = 0.0f;
		}
		for (int l102 = 0; l102 < 2; l102 = l102 + 1) {
			fRec105[l102] = 0.0f;
		}
		for (int l103 = 0; l103 < 3; l103 = l103 + 1) {
			fRec104[l103] = 0.0f;
		}
		for (int l104 = 0; l104 < 2; l104 = l104 + 1) {
			fRec110[l104] = 0.0f;
		}
		for (int l105 = 0; l105 < 3; l105 = l105 + 1) {
			fRec109[l105] = 0.0f;
		}
		for (int l106 = 0; l106 < 3; l106 = l106 + 1) {
			fRec108[l106] = 0.0f;
		}
		for (int l107 = 0; l107 < 3; l107 = l107 + 1) {
			fRec107[l107] = 0.0f;
		}
		for (int l108 = 0; l108 < 3; l108 = l108 + 1) {
			fRec106[l108] = 0.0f;
		}
		for (int l109 = 0; l109 < 2; l109 = l109 + 1) {
			fRec116[l109] = 0.0f;
		}
		for (int l110 = 0; l110 < 3; l110 = l110 + 1) {
			fRec115[l110] = 0.0f;
		}
		for (int l111 = 0; l111 < 2; l111 = l111 + 1) {
			fVec14[l111] = 0.0f;
		}
		for (int l112 = 0; l112 < 2; l112 = l112 + 1) {
			fRec114[l112] = 0.0f;
		}
		for (int l113 = 0; l113 < 3; l113 = l113 + 1) {
			fRec113[l113] = 0.0f;
		}
		for (int l114 = 0; l114 < 3; l114 = l114 + 1) {
			fRec112[l114] = 0.0f;
		}
		for (int l115 = 0; l115 < 3; l115 = l115 + 1) {
			fRec111[l115] = 0.0f;
		}
		for (int l116 = 0; l116 < 2; l116 = l116 + 1) {
			fRec121[l116] = 0.0f;
		}
		for (int l117 = 0; l117 < 3; l117 = l117 + 1) {
			fRec120[l117] = 0.0f;
		}
		for (int l118 = 0; l118 < 2; l118 = l118 + 1) {
			fVec15[l118] = 0.0f;
		}
		for (int l119 = 0; l119 < 2; l119 = l119 + 1) {
			fRec119[l119] = 0.0f;
		}
		for (int l120 = 0; l120 < 3; l120 = l120 + 1) {
			fRec118[l120] = 0.0f;
		}
		for (int l121 = 0; l121 < 3; l121 = l121 + 1) {
			fRec117[l121] = 0.0f;
		}
		for (int l122 = 0; l122 < 2; l122 = l122 + 1) {
			fRec125[l122] = 0.0f;
		}
		for (int l123 = 0; l123 < 3; l123 = l123 + 1) {
			fRec124[l123] = 0.0f;
		}
		for (int l124 = 0; l124 < 2; l124 = l124 + 1) {
			fVec16[l124] = 0.0f;
		}
		for (int l125 = 0; l125 < 2; l125 = l125 + 1) {
			fRec123[l125] = 0.0f;
		}
		for (int l126 = 0; l126 < 3; l126 = l126 + 1) {
			fRec122[l126] = 0.0f;
		}
		for (int l127 = 0; l127 < 2; l127 = l127 + 1) {
			fRec127[l127] = 0.0f;
		}
		for (int l128 = 0; l128 < 3; l128 = l128 + 1) {
			fRec126[l128] = 0.0f;
		}
		for (int l129 = 0; l129 < 2; l129 = l129 + 1) {
			fRec132[l129] = 0.0f;
		}
		for (int l130 = 0; l130 < 3; l130 = l130 + 1) {
			fRec131[l130] = 0.0f;
		}
		for (int l131 = 0; l131 < 3; l131 = l131 + 1) {
			fRec130[l131] = 0.0f;
		}
		for (int l132 = 0; l132 < 3; l132 = l132 + 1) {
			fRec129[l132] = 0.0f;
		}
		for (int l133 = 0; l133 < 3; l133 = l133 + 1) {
			fRec128[l133] = 0.0f;
		}
		for (int l134 = 0; l134 < 2; l134 = l134 + 1) {
			fRec138[l134] = 0.0f;
		}
		for (int l135 = 0; l135 < 3; l135 = l135 + 1) {
			fRec137[l135] = 0.0f;
		}
		for (int l136 = 0; l136 < 2; l136 = l136 + 1) {
			fVec17[l136] = 0.0f;
		}
		for (int l137 = 0; l137 < 2; l137 = l137 + 1) {
			fRec136[l137] = 0.0f;
		}
		for (int l138 = 0; l138 < 3; l138 = l138 + 1) {
			fRec135[l138] = 0.0f;
		}
		for (int l139 = 0; l139 < 3; l139 = l139 + 1) {
			fRec134[l139] = 0.0f;
		}
		for (int l140 = 0; l140 < 3; l140 = l140 + 1) {
			fRec133[l140] = 0.0f;
		}
		for (int l141 = 0; l141 < 2; l141 = l141 + 1) {
			fRec143[l141] = 0.0f;
		}
		for (int l142 = 0; l142 < 3; l142 = l142 + 1) {
			fRec142[l142] = 0.0f;
		}
		for (int l143 = 0; l143 < 2; l143 = l143 + 1) {
			fVec18[l143] = 0.0f;
		}
		for (int l144 = 0; l144 < 2; l144 = l144 + 1) {
			fRec141[l144] = 0.0f;
		}
		for (int l145 = 0; l145 < 3; l145 = l145 + 1) {
			fRec140[l145] = 0.0f;
		}
		for (int l146 = 0; l146 < 3; l146 = l146 + 1) {
			fRec139[l146] = 0.0f;
		}
		for (int l147 = 0; l147 < 2; l147 = l147 + 1) {
			fRec147[l147] = 0.0f;
		}
		for (int l148 = 0; l148 < 3; l148 = l148 + 1) {
			fRec146[l148] = 0.0f;
		}
		for (int l149 = 0; l149 < 2; l149 = l149 + 1) {
			fVec19[l149] = 0.0f;
		}
		for (int l150 = 0; l150 < 2; l150 = l150 + 1) {
			fRec145[l150] = 0.0f;
		}
		for (int l151 = 0; l151 < 3; l151 = l151 + 1) {
			fRec144[l151] = 0.0f;
		}
		for (int l152 = 0; l152 < 2; l152 = l152 + 1) {
			fRec149[l152] = 0.0f;
		}
		for (int l153 = 0; l153 < 3; l153 = l153 + 1) {
			fRec148[l153] = 0.0f;
		}
		for (int l154 = 0; l154 < 2; l154 = l154 + 1) {
			fRec154[l154] = 0.0f;
		}
		for (int l155 = 0; l155 < 3; l155 = l155 + 1) {
			fRec153[l155] = 0.0f;
		}
		for (int l156 = 0; l156 < 3; l156 = l156 + 1) {
			fRec152[l156] = 0.0f;
		}
		for (int l157 = 0; l157 < 3; l157 = l157 + 1) {
			fRec151[l157] = 0.0f;
		}
		for (int l158 = 0; l158 < 3; l158 = l158 + 1) {
			fRec150[l158] = 0.0f;
		}
		for (int l159 = 0; l159 < 2; l159 = l159 + 1) {
			fRec160[l159] = 0.0f;
		}
		for (int l160 = 0; l160 < 3; l160 = l160 + 1) {
			fRec159[l160] = 0.0f;
		}
		for (int l161 = 0; l161 < 2; l161 = l161 + 1) {
			fVec20[l161] = 0.0f;
		}
		for (int l162 = 0; l162 < 2; l162 = l162 + 1) {
			fRec158[l162] = 0.0f;
		}
		for (int l163 = 0; l163 < 3; l163 = l163 + 1) {
			fRec157[l163] = 0.0f;
		}
		for (int l164 = 0; l164 < 3; l164 = l164 + 1) {
			fRec156[l164] = 0.0f;
		}
		for (int l165 = 0; l165 < 3; l165 = l165 + 1) {
			fRec155[l165] = 0.0f;
		}
		for (int l166 = 0; l166 < 2; l166 = l166 + 1) {
			fRec165[l166] = 0.0f;
		}
		for (int l167 = 0; l167 < 3; l167 = l167 + 1) {
			fRec164[l167] = 0.0f;
		}
		for (int l168 = 0; l168 < 2; l168 = l168 + 1) {
			fVec21[l168] = 0.0f;
		}
		for (int l169 = 0; l169 < 2; l169 = l169 + 1) {
			fRec163[l169] = 0.0f;
		}
		for (int l170 = 0; l170 < 3; l170 = l170 + 1) {
			fRec162[l170] = 0.0f;
		}
		for (int l171 = 0; l171 < 3; l171 = l171 + 1) {
			fRec161[l171] = 0.0f;
		}
		for (int l172 = 0; l172 < 2; l172 = l172 + 1) {
			fRec169[l172] = 0.0f;
		}
		for (int l173 = 0; l173 < 3; l173 = l173 + 1) {
			fRec168[l173] = 0.0f;
		}
		for (int l174 = 0; l174 < 2; l174 = l174 + 1) {
			fVec22[l174] = 0.0f;
		}
		for (int l175 = 0; l175 < 2; l175 = l175 + 1) {
			fRec167[l175] = 0.0f;
		}
		for (int l176 = 0; l176 < 3; l176 = l176 + 1) {
			fRec166[l176] = 0.0f;
		}
		for (int l177 = 0; l177 < 2; l177 = l177 + 1) {
			fRec171[l177] = 0.0f;
		}
		for (int l178 = 0; l178 < 3; l178 = l178 + 1) {
			fRec170[l178] = 0.0f;
		}
		for (int l179 = 0; l179 < 2; l179 = l179 + 1) {
			fRec176[l179] = 0.0f;
		}
		for (int l180 = 0; l180 < 3; l180 = l180 + 1) {
			fRec175[l180] = 0.0f;
		}
		for (int l181 = 0; l181 < 3; l181 = l181 + 1) {
			fRec174[l181] = 0.0f;
		}
		for (int l182 = 0; l182 < 3; l182 = l182 + 1) {
			fRec173[l182] = 0.0f;
		}
		for (int l183 = 0; l183 < 3; l183 = l183 + 1) {
			fRec172[l183] = 0.0f;
		}
		for (int l184 = 0; l184 < 2; l184 = l184 + 1) {
			fRec182[l184] = 0.0f;
		}
		for (int l185 = 0; l185 < 3; l185 = l185 + 1) {
			fRec181[l185] = 0.0f;
		}
		for (int l186 = 0; l186 < 2; l186 = l186 + 1) {
			fVec23[l186] = 0.0f;
		}
		for (int l187 = 0; l187 < 2; l187 = l187 + 1) {
			fRec180[l187] = 0.0f;
		}
		for (int l188 = 0; l188 < 3; l188 = l188 + 1) {
			fRec179[l188] = 0.0f;
		}
		for (int l189 = 0; l189 < 3; l189 = l189 + 1) {
			fRec178[l189] = 0.0f;
		}
		for (int l190 = 0; l190 < 3; l190 = l190 + 1) {
			fRec177[l190] = 0.0f;
		}
		for (int l191 = 0; l191 < 2; l191 = l191 + 1) {
			fRec187[l191] = 0.0f;
		}
		for (int l192 = 0; l192 < 3; l192 = l192 + 1) {
			fRec186[l192] = 0.0f;
		}
		for (int l193 = 0; l193 < 2; l193 = l193 + 1) {
			fVec24[l193] = 0.0f;
		}
		for (int l194 = 0; l194 < 2; l194 = l194 + 1) {
			fRec185[l194] = 0.0f;
		}
		for (int l195 = 0; l195 < 3; l195 = l195 + 1) {
			fRec184[l195] = 0.0f;
		}
		for (int l196 = 0; l196 < 3; l196 = l196 + 1) {
			fRec183[l196] = 0.0f;
		}
		for (int l197 = 0; l197 < 2; l197 = l197 + 1) {
			fRec191[l197] = 0.0f;
		}
		for (int l198 = 0; l198 < 3; l198 = l198 + 1) {
			fRec190[l198] = 0.0f;
		}
		for (int l199 = 0; l199 < 2; l199 = l199 + 1) {
			fVec25[l199] = 0.0f;
		}
		for (int l200 = 0; l200 < 2; l200 = l200 + 1) {
			fRec189[l200] = 0.0f;
		}
		for (int l201 = 0; l201 < 3; l201 = l201 + 1) {
			fRec188[l201] = 0.0f;
		}
		for (int l202 = 0; l202 < 2; l202 = l202 + 1) {
			fRec193[l202] = 0.0f;
		}
		for (int l203 = 0; l203 < 3; l203 = l203 + 1) {
			fRec192[l203] = 0.0f;
		}
		for (int l204 = 0; l204 < 2; l204 = l204 + 1) {
			fRec198[l204] = 0.0f;
		}
		for (int l205 = 0; l205 < 3; l205 = l205 + 1) {
			fRec197[l205] = 0.0f;
		}
		for (int l206 = 0; l206 < 3; l206 = l206 + 1) {
			fRec196[l206] = 0.0f;
		}
		for (int l207 = 0; l207 < 3; l207 = l207 + 1) {
			fRec195[l207] = 0.0f;
		}
		for (int l208 = 0; l208 < 3; l208 = l208 + 1) {
			fRec194[l208] = 0.0f;
		}
		for (int l209 = 0; l209 < 2; l209 = l209 + 1) {
			fRec204[l209] = 0.0f;
		}
		for (int l210 = 0; l210 < 3; l210 = l210 + 1) {
			fRec203[l210] = 0.0f;
		}
		for (int l211 = 0; l211 < 2; l211 = l211 + 1) {
			fVec26[l211] = 0.0f;
		}
		for (int l212 = 0; l212 < 2; l212 = l212 + 1) {
			fRec202[l212] = 0.0f;
		}
		for (int l213 = 0; l213 < 3; l213 = l213 + 1) {
			fRec201[l213] = 0.0f;
		}
		for (int l214 = 0; l214 < 3; l214 = l214 + 1) {
			fRec200[l214] = 0.0f;
		}
		for (int l215 = 0; l215 < 3; l215 = l215 + 1) {
			fRec199[l215] = 0.0f;
		}
		for (int l216 = 0; l216 < 2; l216 = l216 + 1) {
			fRec209[l216] = 0.0f;
		}
		for (int l217 = 0; l217 < 3; l217 = l217 + 1) {
			fRec208[l217] = 0.0f;
		}
		for (int l218 = 0; l218 < 2; l218 = l218 + 1) {
			fVec27[l218] = 0.0f;
		}
		for (int l219 = 0; l219 < 2; l219 = l219 + 1) {
			fRec207[l219] = 0.0f;
		}
		for (int l220 = 0; l220 < 3; l220 = l220 + 1) {
			fRec206[l220] = 0.0f;
		}
		for (int l221 = 0; l221 < 3; l221 = l221 + 1) {
			fRec205[l221] = 0.0f;
		}
		for (int l222 = 0; l222 < 2; l222 = l222 + 1) {
			fRec213[l222] = 0.0f;
		}
		for (int l223 = 0; l223 < 3; l223 = l223 + 1) {
			fRec212[l223] = 0.0f;
		}
		for (int l224 = 0; l224 < 2; l224 = l224 + 1) {
			fVec28[l224] = 0.0f;
		}
		for (int l225 = 0; l225 < 2; l225 = l225 + 1) {
			fRec211[l225] = 0.0f;
		}
		for (int l226 = 0; l226 < 3; l226 = l226 + 1) {
			fRec210[l226] = 0.0f;
		}
		for (int l227 = 0; l227 < 2; l227 = l227 + 1) {
			fRec215[l227] = 0.0f;
		}
		for (int l228 = 0; l228 < 3; l228 = l228 + 1) {
			fRec214[l228] = 0.0f;
		}
		for (int l229 = 0; l229 < 2; l229 = l229 + 1) {
			fRec220[l229] = 0.0f;
		}
		for (int l230 = 0; l230 < 3; l230 = l230 + 1) {
			fRec219[l230] = 0.0f;
		}
		for (int l231 = 0; l231 < 3; l231 = l231 + 1) {
			fRec218[l231] = 0.0f;
		}
		for (int l232 = 0; l232 < 3; l232 = l232 + 1) {
			fRec217[l232] = 0.0f;
		}
		for (int l233 = 0; l233 < 3; l233 = l233 + 1) {
			fRec216[l233] = 0.0f;
		}
		for (int l234 = 0; l234 < 2; l234 = l234 + 1) {
			fRec226[l234] = 0.0f;
		}
		for (int l235 = 0; l235 < 3; l235 = l235 + 1) {
			fRec225[l235] = 0.0f;
		}
		for (int l236 = 0; l236 < 2; l236 = l236 + 1) {
			fVec29[l236] = 0.0f;
		}
		for (int l237 = 0; l237 < 2; l237 = l237 + 1) {
			fRec224[l237] = 0.0f;
		}
		for (int l238 = 0; l238 < 3; l238 = l238 + 1) {
			fRec223[l238] = 0.0f;
		}
		for (int l239 = 0; l239 < 3; l239 = l239 + 1) {
			fRec222[l239] = 0.0f;
		}
		for (int l240 = 0; l240 < 3; l240 = l240 + 1) {
			fRec221[l240] = 0.0f;
		}
		for (int l241 = 0; l241 < 2; l241 = l241 + 1) {
			fRec231[l241] = 0.0f;
		}
		for (int l242 = 0; l242 < 3; l242 = l242 + 1) {
			fRec230[l242] = 0.0f;
		}
		for (int l243 = 0; l243 < 2; l243 = l243 + 1) {
			fVec30[l243] = 0.0f;
		}
		for (int l244 = 0; l244 < 2; l244 = l244 + 1) {
			fRec229[l244] = 0.0f;
		}
		for (int l245 = 0; l245 < 3; l245 = l245 + 1) {
			fRec228[l245] = 0.0f;
		}
		for (int l246 = 0; l246 < 3; l246 = l246 + 1) {
			fRec227[l246] = 0.0f;
		}
		for (int l247 = 0; l247 < 2; l247 = l247 + 1) {
			fRec235[l247] = 0.0f;
		}
		for (int l248 = 0; l248 < 3; l248 = l248 + 1) {
			fRec234[l248] = 0.0f;
		}
		for (int l249 = 0; l249 < 2; l249 = l249 + 1) {
			fVec31[l249] = 0.0f;
		}
		for (int l250 = 0; l250 < 2; l250 = l250 + 1) {
			fRec233[l250] = 0.0f;
		}
		for (int l251 = 0; l251 < 3; l251 = l251 + 1) {
			fRec232[l251] = 0.0f;
		}
		for (int l252 = 0; l252 < 2; l252 = l252 + 1) {
			fRec237[l252] = 0.0f;
		}
		for (int l253 = 0; l253 < 3; l253 = l253 + 1) {
			fRec236[l253] = 0.0f;
		}
		for (int l254 = 0; l254 < 2; l254 = l254 + 1) {
			fRec242[l254] = 0.0f;
		}
		for (int l255 = 0; l255 < 3; l255 = l255 + 1) {
			fRec241[l255] = 0.0f;
		}
		for (int l256 = 0; l256 < 3; l256 = l256 + 1) {
			fRec240[l256] = 0.0f;
		}
		for (int l257 = 0; l257 < 3; l257 = l257 + 1) {
			fRec239[l257] = 0.0f;
		}
		for (int l258 = 0; l258 < 3; l258 = l258 + 1) {
			fRec238[l258] = 0.0f;
		}
		for (int l259 = 0; l259 < 2; l259 = l259 + 1) {
			fRec248[l259] = 0.0f;
		}
		for (int l260 = 0; l260 < 3; l260 = l260 + 1) {
			fRec247[l260] = 0.0f;
		}
		for (int l261 = 0; l261 < 2; l261 = l261 + 1) {
			fVec32[l261] = 0.0f;
		}
		for (int l262 = 0; l262 < 2; l262 = l262 + 1) {
			fRec246[l262] = 0.0f;
		}
		for (int l263 = 0; l263 < 3; l263 = l263 + 1) {
			fRec245[l263] = 0.0f;
		}
		for (int l264 = 0; l264 < 3; l264 = l264 + 1) {
			fRec244[l264] = 0.0f;
		}
		for (int l265 = 0; l265 < 3; l265 = l265 + 1) {
			fRec243[l265] = 0.0f;
		}
		for (int l266 = 0; l266 < 2; l266 = l266 + 1) {
			fRec253[l266] = 0.0f;
		}
		for (int l267 = 0; l267 < 3; l267 = l267 + 1) {
			fRec252[l267] = 0.0f;
		}
		for (int l268 = 0; l268 < 2; l268 = l268 + 1) {
			fVec33[l268] = 0.0f;
		}
		for (int l269 = 0; l269 < 2; l269 = l269 + 1) {
			fRec251[l269] = 0.0f;
		}
		for (int l270 = 0; l270 < 3; l270 = l270 + 1) {
			fRec250[l270] = 0.0f;
		}
		for (int l271 = 0; l271 < 3; l271 = l271 + 1) {
			fRec249[l271] = 0.0f;
		}
		for (int l272 = 0; l272 < 2; l272 = l272 + 1) {
			fRec257[l272] = 0.0f;
		}
		for (int l273 = 0; l273 < 3; l273 = l273 + 1) {
			fRec256[l273] = 0.0f;
		}
		for (int l274 = 0; l274 < 2; l274 = l274 + 1) {
			fVec34[l274] = 0.0f;
		}
		for (int l275 = 0; l275 < 2; l275 = l275 + 1) {
			fRec255[l275] = 0.0f;
		}
		for (int l276 = 0; l276 < 3; l276 = l276 + 1) {
			fRec254[l276] = 0.0f;
		}
		for (int l277 = 0; l277 < 2; l277 = l277 + 1) {
			fRec259[l277] = 0.0f;
		}
		for (int l278 = 0; l278 < 3; l278 = l278 + 1) {
			fRec258[l278] = 0.0f;
		}
		for (int l279 = 0; l279 < 2; l279 = l279 + 1) {
			fRec264[l279] = 0.0f;
		}
		for (int l280 = 0; l280 < 3; l280 = l280 + 1) {
			fRec263[l280] = 0.0f;
		}
		for (int l281 = 0; l281 < 3; l281 = l281 + 1) {
			fRec262[l281] = 0.0f;
		}
		for (int l282 = 0; l282 < 3; l282 = l282 + 1) {
			fRec261[l282] = 0.0f;
		}
		for (int l283 = 0; l283 < 3; l283 = l283 + 1) {
			fRec260[l283] = 0.0f;
		}
		for (int l284 = 0; l284 < 2; l284 = l284 + 1) {
			fRec270[l284] = 0.0f;
		}
		for (int l285 = 0; l285 < 3; l285 = l285 + 1) {
			fRec269[l285] = 0.0f;
		}
		for (int l286 = 0; l286 < 2; l286 = l286 + 1) {
			fVec35[l286] = 0.0f;
		}
		for (int l287 = 0; l287 < 2; l287 = l287 + 1) {
			fRec268[l287] = 0.0f;
		}
		for (int l288 = 0; l288 < 3; l288 = l288 + 1) {
			fRec267[l288] = 0.0f;
		}
		for (int l289 = 0; l289 < 3; l289 = l289 + 1) {
			fRec266[l289] = 0.0f;
		}
		for (int l290 = 0; l290 < 3; l290 = l290 + 1) {
			fRec265[l290] = 0.0f;
		}
		for (int l291 = 0; l291 < 2; l291 = l291 + 1) {
			fRec275[l291] = 0.0f;
		}
		for (int l292 = 0; l292 < 3; l292 = l292 + 1) {
			fRec274[l292] = 0.0f;
		}
		for (int l293 = 0; l293 < 2; l293 = l293 + 1) {
			fVec36[l293] = 0.0f;
		}
		for (int l294 = 0; l294 < 2; l294 = l294 + 1) {
			fRec273[l294] = 0.0f;
		}
		for (int l295 = 0; l295 < 3; l295 = l295 + 1) {
			fRec272[l295] = 0.0f;
		}
		for (int l296 = 0; l296 < 3; l296 = l296 + 1) {
			fRec271[l296] = 0.0f;
		}
		for (int l297 = 0; l297 < 2; l297 = l297 + 1) {
			fRec279[l297] = 0.0f;
		}
		for (int l298 = 0; l298 < 3; l298 = l298 + 1) {
			fRec278[l298] = 0.0f;
		}
		for (int l299 = 0; l299 < 2; l299 = l299 + 1) {
			fVec37[l299] = 0.0f;
		}
		for (int l300 = 0; l300 < 2; l300 = l300 + 1) {
			fRec277[l300] = 0.0f;
		}
		for (int l301 = 0; l301 < 3; l301 = l301 + 1) {
			fRec276[l301] = 0.0f;
		}
		for (int l302 = 0; l302 < 2; l302 = l302 + 1) {
			fRec281[l302] = 0.0f;
		}
		for (int l303 = 0; l303 < 3; l303 = l303 + 1) {
			fRec280[l303] = 0.0f;
		}
		for (int l304 = 0; l304 < 2; l304 = l304 + 1) {
			fRec286[l304] = 0.0f;
		}
		for (int l305 = 0; l305 < 3; l305 = l305 + 1) {
			fRec285[l305] = 0.0f;
		}
		for (int l306 = 0; l306 < 3; l306 = l306 + 1) {
			fRec284[l306] = 0.0f;
		}
		for (int l307 = 0; l307 < 3; l307 = l307 + 1) {
			fRec283[l307] = 0.0f;
		}
		for (int l308 = 0; l308 < 3; l308 = l308 + 1) {
			fRec282[l308] = 0.0f;
		}
		for (int l309 = 0; l309 < 2; l309 = l309 + 1) {
			fRec292[l309] = 0.0f;
		}
		for (int l310 = 0; l310 < 3; l310 = l310 + 1) {
			fRec291[l310] = 0.0f;
		}
		for (int l311 = 0; l311 < 2; l311 = l311 + 1) {
			fVec38[l311] = 0.0f;
		}
		for (int l312 = 0; l312 < 2; l312 = l312 + 1) {
			fRec290[l312] = 0.0f;
		}
		for (int l313 = 0; l313 < 3; l313 = l313 + 1) {
			fRec289[l313] = 0.0f;
		}
		for (int l314 = 0; l314 < 3; l314 = l314 + 1) {
			fRec288[l314] = 0.0f;
		}
		for (int l315 = 0; l315 < 3; l315 = l315 + 1) {
			fRec287[l315] = 0.0f;
		}
		for (int l316 = 0; l316 < 2; l316 = l316 + 1) {
			fRec297[l316] = 0.0f;
		}
		for (int l317 = 0; l317 < 3; l317 = l317 + 1) {
			fRec296[l317] = 0.0f;
		}
		for (int l318 = 0; l318 < 2; l318 = l318 + 1) {
			fVec39[l318] = 0.0f;
		}
		for (int l319 = 0; l319 < 2; l319 = l319 + 1) {
			fRec295[l319] = 0.0f;
		}
		for (int l320 = 0; l320 < 3; l320 = l320 + 1) {
			fRec294[l320] = 0.0f;
		}
		for (int l321 = 0; l321 < 3; l321 = l321 + 1) {
			fRec293[l321] = 0.0f;
		}
		for (int l322 = 0; l322 < 2; l322 = l322 + 1) {
			fRec301[l322] = 0.0f;
		}
		for (int l323 = 0; l323 < 3; l323 = l323 + 1) {
			fRec300[l323] = 0.0f;
		}
		for (int l324 = 0; l324 < 2; l324 = l324 + 1) {
			fVec40[l324] = 0.0f;
		}
		for (int l325 = 0; l325 < 2; l325 = l325 + 1) {
			fRec299[l325] = 0.0f;
		}
		for (int l326 = 0; l326 < 3; l326 = l326 + 1) {
			fRec298[l326] = 0.0f;
		}
		for (int l327 = 0; l327 < 2; l327 = l327 + 1) {
			fRec303[l327] = 0.0f;
		}
		for (int l328 = 0; l328 < 3; l328 = l328 + 1) {
			fRec302[l328] = 0.0f;
		}
		for (int l329 = 0; l329 < 2; l329 = l329 + 1) {
			fRec308[l329] = 0.0f;
		}
		for (int l330 = 0; l330 < 3; l330 = l330 + 1) {
			fRec307[l330] = 0.0f;
		}
		for (int l331 = 0; l331 < 3; l331 = l331 + 1) {
			fRec306[l331] = 0.0f;
		}
		for (int l332 = 0; l332 < 3; l332 = l332 + 1) {
			fRec305[l332] = 0.0f;
		}
		for (int l333 = 0; l333 < 3; l333 = l333 + 1) {
			fRec304[l333] = 0.0f;
		}
		for (int l334 = 0; l334 < 2; l334 = l334 + 1) {
			fRec314[l334] = 0.0f;
		}
		for (int l335 = 0; l335 < 3; l335 = l335 + 1) {
			fRec313[l335] = 0.0f;
		}
		for (int l336 = 0; l336 < 2; l336 = l336 + 1) {
			fVec41[l336] = 0.0f;
		}
		for (int l337 = 0; l337 < 2; l337 = l337 + 1) {
			fRec312[l337] = 0.0f;
		}
		for (int l338 = 0; l338 < 3; l338 = l338 + 1) {
			fRec311[l338] = 0.0f;
		}
		for (int l339 = 0; l339 < 3; l339 = l339 + 1) {
			fRec310[l339] = 0.0f;
		}
		for (int l340 = 0; l340 < 3; l340 = l340 + 1) {
			fRec309[l340] = 0.0f;
		}
		for (int l341 = 0; l341 < 2; l341 = l341 + 1) {
			fRec319[l341] = 0.0f;
		}
		for (int l342 = 0; l342 < 3; l342 = l342 + 1) {
			fRec318[l342] = 0.0f;
		}
		for (int l343 = 0; l343 < 2; l343 = l343 + 1) {
			fVec42[l343] = 0.0f;
		}
		for (int l344 = 0; l344 < 2; l344 = l344 + 1) {
			fRec317[l344] = 0.0f;
		}
		for (int l345 = 0; l345 < 3; l345 = l345 + 1) {
			fRec316[l345] = 0.0f;
		}
		for (int l346 = 0; l346 < 3; l346 = l346 + 1) {
			fRec315[l346] = 0.0f;
		}
		for (int l347 = 0; l347 < 2; l347 = l347 + 1) {
			fRec323[l347] = 0.0f;
		}
		for (int l348 = 0; l348 < 3; l348 = l348 + 1) {
			fRec322[l348] = 0.0f;
		}
		for (int l349 = 0; l349 < 2; l349 = l349 + 1) {
			fVec43[l349] = 0.0f;
		}
		for (int l350 = 0; l350 < 2; l350 = l350 + 1) {
			fRec321[l350] = 0.0f;
		}
		for (int l351 = 0; l351 < 3; l351 = l351 + 1) {
			fRec320[l351] = 0.0f;
		}
		for (int l352 = 0; l352 < 2; l352 = l352 + 1) {
			fRec325[l352] = 0.0f;
		}
		for (int l353 = 0; l353 < 3; l353 = l353 + 1) {
			fRec324[l353] = 0.0f;
		}
		for (int l354 = 0; l354 < 2; l354 = l354 + 1) {
			fRec330[l354] = 0.0f;
		}
		for (int l355 = 0; l355 < 3; l355 = l355 + 1) {
			fRec329[l355] = 0.0f;
		}
		for (int l356 = 0; l356 < 3; l356 = l356 + 1) {
			fRec328[l356] = 0.0f;
		}
		for (int l357 = 0; l357 < 3; l357 = l357 + 1) {
			fRec327[l357] = 0.0f;
		}
		for (int l358 = 0; l358 < 3; l358 = l358 + 1) {
			fRec326[l358] = 0.0f;
		}
		for (int l359 = 0; l359 < 2; l359 = l359 + 1) {
			fRec336[l359] = 0.0f;
		}
		for (int l360 = 0; l360 < 3; l360 = l360 + 1) {
			fRec335[l360] = 0.0f;
		}
		for (int l361 = 0; l361 < 2; l361 = l361 + 1) {
			fVec44[l361] = 0.0f;
		}
		for (int l362 = 0; l362 < 2; l362 = l362 + 1) {
			fRec334[l362] = 0.0f;
		}
		for (int l363 = 0; l363 < 3; l363 = l363 + 1) {
			fRec333[l363] = 0.0f;
		}
		for (int l364 = 0; l364 < 3; l364 = l364 + 1) {
			fRec332[l364] = 0.0f;
		}
		for (int l365 = 0; l365 < 3; l365 = l365 + 1) {
			fRec331[l365] = 0.0f;
		}
		for (int l366 = 0; l366 < 2; l366 = l366 + 1) {
			fRec341[l366] = 0.0f;
		}
		for (int l367 = 0; l367 < 3; l367 = l367 + 1) {
			fRec340[l367] = 0.0f;
		}
		for (int l368 = 0; l368 < 2; l368 = l368 + 1) {
			fVec45[l368] = 0.0f;
		}
		for (int l369 = 0; l369 < 2; l369 = l369 + 1) {
			fRec339[l369] = 0.0f;
		}
		for (int l370 = 0; l370 < 3; l370 = l370 + 1) {
			fRec338[l370] = 0.0f;
		}
		for (int l371 = 0; l371 < 3; l371 = l371 + 1) {
			fRec337[l371] = 0.0f;
		}
		for (int l372 = 0; l372 < 2; l372 = l372 + 1) {
			fRec345[l372] = 0.0f;
		}
		for (int l373 = 0; l373 < 3; l373 = l373 + 1) {
			fRec344[l373] = 0.0f;
		}
		for (int l374 = 0; l374 < 2; l374 = l374 + 1) {
			fVec46[l374] = 0.0f;
		}
		for (int l375 = 0; l375 < 2; l375 = l375 + 1) {
			fRec343[l375] = 0.0f;
		}
		for (int l376 = 0; l376 < 3; l376 = l376 + 1) {
			fRec342[l376] = 0.0f;
		}
		for (int l377 = 0; l377 < 2; l377 = l377 + 1) {
			fRec347[l377] = 0.0f;
		}
		for (int l378 = 0; l378 < 3; l378 = l378 + 1) {
			fRec346[l378] = 0.0f;
		}
		for (int l379 = 0; l379 < 2; l379 = l379 + 1) {
			fRec352[l379] = 0.0f;
		}
		for (int l380 = 0; l380 < 3; l380 = l380 + 1) {
			fRec351[l380] = 0.0f;
		}
		for (int l381 = 0; l381 < 3; l381 = l381 + 1) {
			fRec350[l381] = 0.0f;
		}
		for (int l382 = 0; l382 < 3; l382 = l382 + 1) {
			fRec349[l382] = 0.0f;
		}
		for (int l383 = 0; l383 < 3; l383 = l383 + 1) {
			fRec348[l383] = 0.0f;
		}
		for (int l384 = 0; l384 < 2; l384 = l384 + 1) {
			fRec358[l384] = 0.0f;
		}
		for (int l385 = 0; l385 < 3; l385 = l385 + 1) {
			fRec357[l385] = 0.0f;
		}
		for (int l386 = 0; l386 < 2; l386 = l386 + 1) {
			fVec47[l386] = 0.0f;
		}
		for (int l387 = 0; l387 < 2; l387 = l387 + 1) {
			fRec356[l387] = 0.0f;
		}
		for (int l388 = 0; l388 < 3; l388 = l388 + 1) {
			fRec355[l388] = 0.0f;
		}
		for (int l389 = 0; l389 < 3; l389 = l389 + 1) {
			fRec354[l389] = 0.0f;
		}
		for (int l390 = 0; l390 < 3; l390 = l390 + 1) {
			fRec353[l390] = 0.0f;
		}
		for (int l391 = 0; l391 < 2; l391 = l391 + 1) {
			fRec363[l391] = 0.0f;
		}
		for (int l392 = 0; l392 < 3; l392 = l392 + 1) {
			fRec362[l392] = 0.0f;
		}
		for (int l393 = 0; l393 < 2; l393 = l393 + 1) {
			fVec48[l393] = 0.0f;
		}
		for (int l394 = 0; l394 < 2; l394 = l394 + 1) {
			fRec361[l394] = 0.0f;
		}
		for (int l395 = 0; l395 < 3; l395 = l395 + 1) {
			fRec360[l395] = 0.0f;
		}
		for (int l396 = 0; l396 < 3; l396 = l396 + 1) {
			fRec359[l396] = 0.0f;
		}
		for (int l397 = 0; l397 < 2; l397 = l397 + 1) {
			fRec367[l397] = 0.0f;
		}
		for (int l398 = 0; l398 < 3; l398 = l398 + 1) {
			fRec366[l398] = 0.0f;
		}
		for (int l399 = 0; l399 < 2; l399 = l399 + 1) {
			fVec49[l399] = 0.0f;
		}
		for (int l400 = 0; l400 < 2; l400 = l400 + 1) {
			fRec365[l400] = 0.0f;
		}
		for (int l401 = 0; l401 < 3; l401 = l401 + 1) {
			fRec364[l401] = 0.0f;
		}
		for (int l402 = 0; l402 < 2; l402 = l402 + 1) {
			fRec369[l402] = 0.0f;
		}
		for (int l403 = 0; l403 < 3; l403 = l403 + 1) {
			fRec368[l403] = 0.0f;
		}
		IOTA0 = 0;
		for (int l404 = 0; l404 < 8192; l404 = l404 + 1) {
			fVec50[l404] = 0.0f;
		}
		for (int l405 = 0; l405 < 3; l405 = l405 + 1) {
			fRec0[l405] = 0.0f;
		}
		for (int l406 = 0; l406 < 2; l406 = l406 + 1) {
			fVec51[l406] = 0.0f;
		}
		for (int l407 = 0; l407 < 8192; l407 = l407 + 1) {
			fVec52[l407] = 0.0f;
		}
		for (int l408 = 0; l408 < 3; l408 = l408 + 1) {
			fRec1[l408] = 0.0f;
		}
		for (int l409 = 0; l409 < 8192; l409 = l409 + 1) {
			fVec53[l409] = 0.0f;
		}
		for (int l410 = 0; l410 < 3; l410 = l410 + 1) {
			fRec2[l410] = 0.0f;
		}
		for (int l411 = 0; l411 < 8192; l411 = l411 + 1) {
			fVec54[l411] = 0.0f;
		}
		for (int l412 = 0; l412 < 3; l412 = l412 + 1) {
			fRec3[l412] = 0.0f;
		}
		for (int l413 = 0; l413 < 8192; l413 = l413 + 1) {
			fVec55[l413] = 0.0f;
		}
		for (int l414 = 0; l414 < 3; l414 = l414 + 1) {
			fRec4[l414] = 0.0f;
		}
		for (int l415 = 0; l415 < 8192; l415 = l415 + 1) {
			fVec56[l415] = 0.0f;
		}
		for (int l416 = 0; l416 < 3; l416 = l416 + 1) {
			fRec5[l416] = 0.0f;
		}
		for (int l417 = 0; l417 < 8192; l417 = l417 + 1) {
			fVec57[l417] = 0.0f;
		}
		for (int l418 = 0; l418 < 3; l418 = l418 + 1) {
			fRec6[l418] = 0.0f;
		}
		for (int l419 = 0; l419 < 8192; l419 = l419 + 1) {
			fVec58[l419] = 0.0f;
		}
		for (int l420 = 0; l420 < 3; l420 = l420 + 1) {
			fRec7[l420] = 0.0f;
		}
		for (int l421 = 0; l421 < 8192; l421 = l421 + 1) {
			fVec59[l421] = 0.0f;
		}
		for (int l422 = 0; l422 < 3; l422 = l422 + 1) {
			fRec8[l422] = 0.0f;
		}
		for (int l423 = 0; l423 < 8192; l423 = l423 + 1) {
			fVec60[l423] = 0.0f;
		}
		for (int l424 = 0; l424 < 3; l424 = l424 + 1) {
			fRec9[l424] = 0.0f;
		}
		for (int l425 = 0; l425 < 8192; l425 = l425 + 1) {
			fVec61[l425] = 0.0f;
		}
		for (int l426 = 0; l426 < 3; l426 = l426 + 1) {
			fRec10[l426] = 0.0f;
		}
		for (int l427 = 0; l427 < 8192; l427 = l427 + 1) {
			fVec62[l427] = 0.0f;
		}
		for (int l428 = 0; l428 < 3; l428 = l428 + 1) {
			fRec11[l428] = 0.0f;
		}
		for (int l429 = 0; l429 < 8192; l429 = l429 + 1) {
			fVec63[l429] = 0.0f;
		}
		for (int l430 = 0; l430 < 3; l430 = l430 + 1) {
			fRec12[l430] = 0.0f;
		}
		for (int l431 = 0; l431 < 8192; l431 = l431 + 1) {
			fVec64[l431] = 0.0f;
		}
		for (int l432 = 0; l432 < 3; l432 = l432 + 1) {
			fRec13[l432] = 0.0f;
		}
		for (int l433 = 0; l433 < 8192; l433 = l433 + 1) {
			fVec65[l433] = 0.0f;
		}
		for (int l434 = 0; l434 < 3; l434 = l434 + 1) {
			fRec14[l434] = 0.0f;
		}
		for (int l435 = 0; l435 < 8192; l435 = l435 + 1) {
			fVec66[l435] = 0.0f;
		}
		for (int l436 = 0; l436 < 3; l436 = l436 + 1) {
			fRec15[l436] = 0.0f;
		}
	}
	
	virtual void init(int sample_rate) {
		classInit(sample_rate);
		instanceInit(sample_rate);
	}
	
	virtual void instanceInit(int sample_rate) {
		instanceConstants(sample_rate);
		instanceResetUserInterface();
		instanceClear();
	}
	
	virtual mydsp* clone() {
		return new mydsp();
	}
	
	virtual int getSampleRate() {
		return fSampleRate;
	}
	
	virtual void buildUserInterface(UI* ui_interface) {
		ui_interface->openVerticalBox("reverb_designer");
		ui_interface->declare(0, "tooltip", "See Faust's effect.lib for documentation and references");
		ui_interface->openVerticalBox("FEEDBACK DELAY NETWORK (FDN) REVERBERATOR, ORDER 16");
		ui_interface->declare(0, "1", "");
		ui_interface->openVerticalBox("Band Crossover Frequencies");
		ui_interface->declare(&fHslider5, "0", "");
		ui_interface->declare(&fHslider5, "scale", "log");
		ui_interface->declare(&fHslider5, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		ui_interface->declare(&fHslider5, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 0 upper edge in Hz", &fHslider5, FAUSTFLOAT(5e+02f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(1e+04f), FAUSTFLOAT(1.0f));
		ui_interface->declare(&fHslider4, "1", "");
		ui_interface->declare(&fHslider4, "scale", "log");
		ui_interface->declare(&fHslider4, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		ui_interface->declare(&fHslider4, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 1 upper edge in Hz", &fHslider4, FAUSTFLOAT(1e+03f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(1e+04f), FAUSTFLOAT(1.0f));
		ui_interface->declare(&fHslider3, "2", "");
		ui_interface->declare(&fHslider3, "scale", "log");
		ui_interface->declare(&fHslider3, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		ui_interface->declare(&fHslider3, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 2 upper edge in Hz", &fHslider3, FAUSTFLOAT(2e+03f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(1e+04f), FAUSTFLOAT(1.0f));
		ui_interface->declare(&fHslider2, "3", "");
		ui_interface->declare(&fHslider2, "scale", "log");
		ui_interface->declare(&fHslider2, "tooltip", "Each delay-line signal is split into frequency-bands for separate decay-time control in each band");
		ui_interface->declare(&fHslider2, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 3 upper edge in Hz", &fHslider2, FAUSTFLOAT(4e+03f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(1e+04f), FAUSTFLOAT(1.0f));
		ui_interface->closeBox();
		ui_interface->declare(0, "2", "");
		ui_interface->openHorizontalBox("Band Decay Times (T60)");
		ui_interface->declare(&fVslider4, "0", "");
		ui_interface->declare(&fVslider4, "scale", "log");
		ui_interface->declare(&fVslider4, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		ui_interface->declare(&fVslider4, "unit", "s");
		ui_interface->addVerticalSlider("0", &fVslider4, FAUSTFLOAT(8.4f), FAUSTFLOAT(0.1f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(0.1f));
		ui_interface->declare(&fVslider3, "1", "");
		ui_interface->declare(&fVslider3, "scale", "log");
		ui_interface->declare(&fVslider3, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		ui_interface->declare(&fVslider3, "unit", "s");
		ui_interface->addVerticalSlider("1", &fVslider3, FAUSTFLOAT(6.5f), FAUSTFLOAT(0.1f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(0.1f));
		ui_interface->declare(&fVslider2, "2", "");
		ui_interface->declare(&fVslider2, "scale", "log");
		ui_interface->declare(&fVslider2, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		ui_interface->declare(&fVslider2, "unit", "s");
		ui_interface->addVerticalSlider("2", &fVslider2, FAUSTFLOAT(5.0f), FAUSTFLOAT(0.1f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(0.1f));
		ui_interface->declare(&fVslider1, "3", "");
		ui_interface->declare(&fVslider1, "scale", "log");
		ui_interface->declare(&fVslider1, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		ui_interface->declare(&fVslider1, "unit", "s");
		ui_interface->addVerticalSlider("3", &fVslider1, FAUSTFLOAT(3.8f), FAUSTFLOAT(0.1f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(0.1f));
		ui_interface->declare(&fVslider0, "4", "");
		ui_interface->declare(&fVslider0, "scale", "log");
		ui_interface->declare(&fVslider0, "tooltip", "T60 is the 60dB decay-time in seconds. For concert halls, an overall reverberation time (T60) near 1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each frequency band.  In real rooms, higher frequency bands generally decay faster due to absorption and scattering.");
		ui_interface->declare(&fVslider0, "unit", "s");
		ui_interface->addVerticalSlider("4", &fVslider0, FAUSTFLOAT(2.7f), FAUSTFLOAT(0.1f), FAUSTFLOAT(1e+02f), FAUSTFLOAT(0.1f));
		ui_interface->closeBox();
		ui_interface->declare(0, "3", "");
		ui_interface->openVerticalBox("Room Dimensions");
		ui_interface->declare(&fHslider1, "1", "");
		ui_interface->declare(&fHslider1, "scale", "log");
		ui_interface->declare(&fHslider1, "tooltip", "This length (in meters) determines the shortest delay-line used in the FDN reverberator.               Think of it as the shortest wall-to-wall separation in the room.");
		ui_interface->declare(&fHslider1, "unit", "m");
		ui_interface->addHorizontalSlider("min acoustic ray length", &fHslider1, FAUSTFLOAT(46.0f), FAUSTFLOAT(0.1f), FAUSTFLOAT(63.0f), FAUSTFLOAT(0.1f));
		ui_interface->declare(&fHslider6, "2", "");
		ui_interface->declare(&fHslider6, "scale", "log");
		ui_interface->declare(&fHslider6, "tooltip", "This length (in meters) determines the longest delay-line used in the FDN reverberator.               Think of it as the largest wall-to-wall separation in the room.");
		ui_interface->declare(&fHslider6, "unit", "m");
		ui_interface->addHorizontalSlider("max acoustic ray length", &fHslider6, FAUSTFLOAT(63.0f), FAUSTFLOAT(0.1f), FAUSTFLOAT(63.0f), FAUSTFLOAT(0.1f));
		ui_interface->closeBox();
		ui_interface->declare(0, "4", "");
		ui_interface->openHorizontalBox("Input Controls");
		ui_interface->declare(0, "1", "");
		ui_interface->openVerticalBox("Input Config");
		ui_interface->declare(&fCheckbox1, "1", "");
		ui_interface->declare(&fCheckbox1, "tooltip", "When this is checked, the stereo external audio inputs are disabled (good for hearing the impulse response or pink-noise response alone)");
		ui_interface->addCheckButton("Mute Ext Inputs", &fCheckbox1);
		ui_interface->declare(&fCheckbox0, "2", "");
		ui_interface->declare(&fCheckbox0, "tooltip", "Pink Noise (or 1/f noise) is Constant-Q Noise (useful for adjusting the EQ sections)");
		ui_interface->addCheckButton("Pink Noise", &fCheckbox0);
		ui_interface->closeBox();
		ui_interface->declare(0, "2", "");
		ui_interface->openHorizontalBox("Impulse Selection");
		ui_interface->declare(&fButton0, "1", "");
		ui_interface->declare(&fButton0, "tooltip", "Send impulse into LEFT channel");
		ui_interface->addButton("Left", &fButton0);
		ui_interface->declare(&fButton1, "2", "");
		ui_interface->declare(&fButton1, "tooltip", "Send impulse into LEFT and RIGHT channels");
		ui_interface->addButton("Center", &fButton1);
		ui_interface->declare(&fButton3, "3", "");
		ui_interface->declare(&fButton3, "tooltip", "Send impulse into RIGHT channel");
		ui_interface->addButton("Right", &fButton3);
		ui_interface->closeBox();
		ui_interface->declare(0, "3", "");
		ui_interface->openVerticalBox("Reverb State");
		ui_interface->declare(&fButton2, "1", "");
		ui_interface->declare(&fButton2, "tooltip", "Hold down 'Quench' to clear the reverberator");
		ui_interface->addButton("Quench", &fButton2);
		ui_interface->closeBox();
		ui_interface->closeBox();
		ui_interface->closeBox();
		ui_interface->declare(&fHslider0, "3", "");
		ui_interface->declare(&fHslider0, "tooltip", "Output scale factor");
		ui_interface->declare(&fHslider0, "unit", "dB");
		ui_interface->addHorizontalSlider("Output Level (dB)", &fHslider0, FAUSTFLOAT(-4e+01f), FAUSTFLOAT(-7e+01f), FAUSTFLOAT(2e+01f), FAUSTFLOAT(0.1f));
		ui_interface->closeBox();
	}
	
	virtual void compute(int count, FAUSTFLOAT** RESTRICT inputs, FAUSTFLOAT** RESTRICT outputs) {
		FAUSTFLOAT* input0 = inputs[0];
		FAUSTFLOAT* input1 = inputs[1];
		FAUSTFLOAT* output0 = outputs[0];
		FAUSTFLOAT* output1 = outputs[1];
		float fSlow0 = std::pow(1e+01f, 0.05f * float(fHslider0));
		float fSlow1 = 0.1f * float(fCheckbox0);
		float fSlow2 = float(fButton0);
		float fSlow3 = float(fButton1);
		float fSlow4 = 0.25f * (1.0f - 0.5f * float(fButton2));
		float fSlow5 = float(fHslider1);
		float fSlow6 = std::pow(2.0f, std::floor(1.442695f * std::log(fConst2 * fSlow5) + 0.5f));
		float fSlow7 = float(fVslider0);
		float fSlow8 = std::exp(-(fConst1 * (fSlow6 / fSlow7)));
		float fSlow9 = std::tan(fConst3 * float(fHslider2));
		float fSlow10 = mydsp_faustpower2_f(fSlow9);
		float fSlow11 = 1.0f / fSlow9;
		float fSlow12 = (fSlow11 + 1.0f) / fSlow9 + 1.0f;
		float fSlow13 = 1.0f / (fSlow10 * fSlow12);
		float fSlow14 = 1.0f / (fSlow11 + 1.0f);
		float fSlow15 = 1.0f - fSlow11;
		float fSlow16 = 1.0f / fSlow12;
		float fSlow17 = (fSlow11 + -1.0f) / fSlow9 + 1.0f;
		float fSlow18 = 2.0f * (1.0f - 1.0f / fSlow10);
		float fSlow19 = std::tan(fConst3 * float(fHslider3));
		float fSlow20 = 1.0f / fSlow19;
		float fSlow21 = fSlow20 + 1.0f;
		float fSlow22 = 1.0f / (fSlow21 / fSlow19 + 1.0f);
		float fSlow23 = 1.0f - fSlow20;
		float fSlow24 = 1.0f - fSlow23 / fSlow19;
		float fSlow25 = mydsp_faustpower2_f(fSlow19);
		float fSlow26 = 2.0f * (1.0f - 1.0f / fSlow25);
		float fSlow27 = std::tan(fConst3 * float(fHslider4));
		float fSlow28 = 1.0f / fSlow27;
		float fSlow29 = fSlow28 + 1.0f;
		float fSlow30 = 1.0f / (fSlow29 / fSlow27 + 1.0f);
		float fSlow31 = 1.0f - fSlow28;
		float fSlow32 = 1.0f - fSlow31 / fSlow27;
		float fSlow33 = mydsp_faustpower2_f(fSlow27);
		float fSlow34 = 2.0f * (1.0f - 1.0f / fSlow33);
		float fSlow35 = std::tan(fConst3 * float(fHslider5));
		float fSlow36 = 1.0f / fSlow35;
		float fSlow37 = fSlow36 + 1.0f;
		float fSlow38 = 1.0f / (fSlow37 / fSlow35 + 1.0f);
		float fSlow39 = 1.0f - fSlow36;
		float fSlow40 = 1.0f - fSlow39 / fSlow35;
		float fSlow41 = mydsp_faustpower2_f(fSlow35);
		float fSlow42 = 2.0f * (1.0f - 1.0f / fSlow41);
		float fSlow43 = float(fVslider1);
		float fSlow44 = std::exp(-(fConst1 * (fSlow6 / fSlow43)));
		float fSlow45 = (fSlow20 + 1.0f) / fSlow19 + 1.0f;
		float fSlow46 = 1.0f / (fSlow25 * fSlow45);
		float fSlow47 = 1.0f / fSlow21;
		float fSlow48 = 1.0f / fSlow45;
		float fSlow49 = (fSlow20 + -1.0f) / fSlow19 + 1.0f;
		float fSlow50 = float(fVslider2);
		float fSlow51 = std::exp(-(fConst1 * (fSlow6 / fSlow50)));
		float fSlow52 = (fSlow28 + 1.0f) / fSlow27 + 1.0f;
		float fSlow53 = 1.0f / (fSlow33 * fSlow52);
		float fSlow54 = 1.0f / fSlow29;
		float fSlow55 = 1.0f / fSlow52;
		float fSlow56 = (fSlow28 + -1.0f) / fSlow27 + 1.0f;
		float fSlow57 = 1.0f / ((fSlow36 + 1.0f) / fSlow35 + 1.0f);
		float fSlow58 = float(fVslider3);
		float fSlow59 = std::exp(-(fConst1 * (fSlow6 / fSlow58))) / fSlow41;
		float fSlow60 = 1.0f / fSlow37;
		float fSlow61 = (fSlow36 + -1.0f) / fSlow35 + 1.0f;
		float fSlow62 = float(fVslider4);
		float fSlow63 = std::exp(-(fConst1 * (fSlow6 / fSlow62)));
		float fSlow64 = float(fHslider6);
		float fSlow65 = fSlow64 / fSlow5;
		float fSlow66 = std::pow(23.0f, std::floor(0.318929f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.53333336f)) + 0.5f));
		float fSlow67 = std::exp(-(fConst1 * (fSlow66 / fSlow7)));
		float fSlow68 = std::exp(-(fConst1 * (fSlow66 / fSlow43)));
		float fSlow69 = std::exp(-(fConst1 * (fSlow66 / fSlow50)));
		float fSlow70 = std::exp(-(fConst1 * (fSlow66 / fSlow58))) / fSlow41;
		float fSlow71 = std::exp(-(fConst1 * (fSlow66 / fSlow62)));
		float fSlow72 = std::pow(11.0f, std::floor(0.4170324f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.26666668f)) + 0.5f));
		float fSlow73 = std::exp(-(fConst1 * (fSlow72 / fSlow7)));
		float fSlow74 = std::exp(-(fConst1 * (fSlow72 / fSlow43)));
		float fSlow75 = std::exp(-(fConst1 * (fSlow72 / fSlow50)));
		float fSlow76 = std::exp(-(fConst1 * (fSlow72 / fSlow58))) / fSlow41;
		float fSlow77 = std::exp(-(fConst1 * (fSlow72 / fSlow62)));
		float fSlow78 = std::pow(41.0f, std::floor(0.26928252f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.8f)) + 0.5f));
		float fSlow79 = std::exp(-(fConst1 * (fSlow78 / fSlow7)));
		float fSlow80 = std::exp(-(fConst1 * (fSlow78 / fSlow43)));
		float fSlow81 = std::exp(-(fConst1 * (fSlow78 / fSlow50)));
		float fSlow82 = std::exp(-(fConst1 * (fSlow78 / fSlow58))) / fSlow41;
		float fSlow83 = std::exp(-(fConst1 * (fSlow78 / fSlow62)));
		float fSlow84 = std::pow(5.0f, std::floor(0.6213349f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.13333334f)) + 0.5f));
		float fSlow85 = std::exp(-(fConst1 * (fSlow84 / fSlow7)));
		float fSlow86 = std::exp(-(fConst1 * (fSlow84 / fSlow43)));
		float fSlow87 = std::exp(-(fConst1 * (fSlow84 / fSlow50)));
		float fSlow88 = std::exp(-(fConst1 * (fSlow84 / fSlow58))) / fSlow41;
		float fSlow89 = std::exp(-(fConst1 * (fSlow84 / fSlow62)));
		float fSlow90 = std::pow(31.0f, std::floor(0.2912067f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.6666667f)) + 0.5f));
		float fSlow91 = std::exp(-(fConst1 * (fSlow90 / fSlow7)));
		float fSlow92 = std::exp(-(fConst1 * (fSlow90 / fSlow43)));
		float fSlow93 = std::exp(-(fConst1 * (fSlow90 / fSlow50)));
		float fSlow94 = std::exp(-(fConst1 * (fSlow90 / fSlow58))) / fSlow41;
		float fSlow95 = std::exp(-(fConst1 * (fSlow90 / fSlow62)));
		float fSlow96 = std::pow(17.0f, std::floor(0.35295612f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.4f)) + 0.5f));
		float fSlow97 = std::exp(-(fConst1 * (fSlow96 / fSlow7)));
		float fSlow98 = std::exp(-(fConst1 * (fSlow96 / fSlow43)));
		float fSlow99 = std::exp(-(fConst1 * (fSlow96 / fSlow50)));
		float fSlow100 = std::exp(-(fConst1 * (fSlow96 / fSlow58))) / fSlow41;
		float fSlow101 = std::exp(-(fConst1 * (fSlow96 / fSlow62)));
		float fSlow102 = std::pow(47.0f, std::floor(0.2597303f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.93333334f)) + 0.5f));
		float fSlow103 = std::exp(-(fConst1 * (fSlow102 / fSlow7)));
		float fSlow104 = std::exp(-(fConst1 * (fSlow102 / fSlow43)));
		float fSlow105 = std::exp(-(fConst1 * (fSlow102 / fSlow50)));
		float fSlow106 = std::exp(-(fConst1 * (fSlow102 / fSlow58))) / fSlow41;
		float fSlow107 = std::exp(-(fConst1 * (fSlow102 / fSlow62)));
		float fSlow108 = std::pow(3.0f, std::floor(0.9102392f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.06666667f)) + 0.5f));
		float fSlow109 = std::exp(-(fConst1 * (fSlow108 / fSlow7)));
		float fSlow110 = std::exp(-(fConst1 * (fSlow108 / fSlow43)));
		float fSlow111 = std::exp(-(fConst1 * (fSlow108 / fSlow50)));
		float fSlow112 = std::exp(-(fConst1 * (fSlow108 / fSlow58))) / fSlow41;
		float fSlow113 = std::exp(-(fConst1 * (fSlow108 / fSlow62)));
		float fSlow114 = std::pow(29.0f, std::floor(0.2969742f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.6f)) + 0.5f));
		float fSlow115 = std::exp(-(fConst1 * (fSlow114 / fSlow7)));
		float fSlow116 = std::exp(-(fConst1 * (fSlow114 / fSlow43)));
		float fSlow117 = std::exp(-(fConst1 * (fSlow114 / fSlow50)));
		float fSlow118 = std::exp(-(fConst1 * (fSlow114 / fSlow58))) / fSlow41;
		float fSlow119 = std::exp(-(fConst1 * (fSlow114 / fSlow62)));
		float fSlow120 = std::pow(13.0f, std::floor(0.38987124f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.33333334f)) + 0.5f));
		float fSlow121 = std::exp(-(fConst1 * (fSlow120 / fSlow7)));
		float fSlow122 = std::exp(-(fConst1 * (fSlow120 / fSlow43)));
		float fSlow123 = std::exp(-(fConst1 * (fSlow120 / fSlow50)));
		float fSlow124 = std::exp(-(fConst1 * (fSlow120 / fSlow58))) / fSlow41;
		float fSlow125 = std::exp(-(fConst1 * (fSlow120 / fSlow62)));
		float fSlow126 = std::pow(43.0f, std::floor(0.2658726f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.8666667f)) + 0.5f));
		float fSlow127 = std::exp(-(fConst1 * (fSlow126 / fSlow7)));
		float fSlow128 = std::exp(-(fConst1 * (fSlow126 / fSlow43)));
		float fSlow129 = std::exp(-(fConst1 * (fSlow126 / fSlow50)));
		float fSlow130 = std::exp(-(fConst1 * (fSlow126 / fSlow58))) / fSlow41;
		float fSlow131 = std::exp(-(fConst1 * (fSlow126 / fSlow62)));
		float fSlow132 = std::pow(7.0f, std::floor(0.5138983f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.2f)) + 0.5f));
		float fSlow133 = std::exp(-(fConst1 * (fSlow132 / fSlow7)));
		float fSlow134 = std::exp(-(fConst1 * (fSlow132 / fSlow43)));
		float fSlow135 = std::exp(-(fConst1 * (fSlow132 / fSlow50)));
		float fSlow136 = std::exp(-(fConst1 * (fSlow132 / fSlow58))) / fSlow41;
		float fSlow137 = std::exp(-(fConst1 * (fSlow132 / fSlow62)));
		float fSlow138 = std::pow(37.0f, std::floor(0.2769379f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.73333335f)) + 0.5f));
		float fSlow139 = std::exp(-(fConst1 * (fSlow138 / fSlow7)));
		float fSlow140 = std::exp(-(fConst1 * (fSlow138 / fSlow43)));
		float fSlow141 = std::exp(-(fConst1 * (fSlow138 / fSlow50)));
		float fSlow142 = std::exp(-(fConst1 * (fSlow138 / fSlow58))) / fSlow41;
		float fSlow143 = std::exp(-(fConst1 * (fSlow138 / fSlow62)));
		float fSlow144 = std::pow(19.0f, std::floor(0.33962327f * std::log(fConst2 * fSlow5 * std::pow(fSlow65, 0.46666667f)) + 0.5f));
		float fSlow145 = std::exp(-(fConst1 * (fSlow144 / fSlow7)));
		float fSlow146 = std::exp(-(fConst1 * (fSlow144 / fSlow43)));
		float fSlow147 = std::exp(-(fConst1 * (fSlow144 / fSlow50)));
		float fSlow148 = std::exp(-(fConst1 * (fSlow144 / fSlow58))) / fSlow41;
		float fSlow149 = std::exp(-(fConst1 * (fSlow144 / fSlow62)));
		float fSlow150 = std::pow(53.0f, std::floor(0.25187066f * std::log(fConst2 * fSlow64) + 0.5f));
		float fSlow151 = std::exp(-(fConst1 * (fSlow150 / fSlow7)));
		float fSlow152 = std::exp(-(fConst1 * (fSlow150 / fSlow43)));
		float fSlow153 = std::exp(-(fConst1 * (fSlow150 / fSlow50)));
		float fSlow154 = std::exp(-(fConst1 * (fSlow150 / fSlow58))) / fSlow41;
		float fSlow155 = std::exp(-(fConst1 * (fSlow150 / fSlow62)));
		float fSlow156 = 1.0f - float(fCheckbox1);
		int iSlow157 = int(fSlow6 + -1.0f) & 8191;
		float fSlow158 = float(fButton3);
		int iSlow159 = int(fSlow108 + -1.0f) & 8191;
		int iSlow160 = int(fSlow84 + -1.0f) & 8191;
		int iSlow161 = int(fSlow132 + -1.0f) & 8191;
		int iSlow162 = int(fSlow72 + -1.0f) & 8191;
		int iSlow163 = int(fSlow120 + -1.0f) & 8191;
		int iSlow164 = int(fSlow96 + -1.0f) & 8191;
		int iSlow165 = int(fSlow144 + -1.0f) & 8191;
		int iSlow166 = int(fSlow66 + -1.0f) & 8191;
		int iSlow167 = int(fSlow114 + -1.0f) & 8191;
		int iSlow168 = int(fSlow90 + -1.0f) & 8191;
		int iSlow169 = int(fSlow138 + -1.0f) & 8191;
		int iSlow170 = int(fSlow78 + -1.0f) & 8191;
		int iSlow171 = int(fSlow126 + -1.0f) & 8191;
		int iSlow172 = int(fSlow102 + -1.0f) & 8191;
		int iSlow173 = int(fSlow150 + -1.0f) & 8191;
		for (int i0 = 0; i0 < count; i0 = i0 + 1) {
			iRec17[0] = 1103515245 * iRec17[1] + 12345;
			fRec16[0] = 0.5221894f * fRec16[3] + 4.656613e-10f * float(iRec17[0]) + 2.494956f * fRec16[1] - 2.0172658f * fRec16[2];
			float fTemp0 = fSlow1 * (0.049922034f * fRec16[0] + 0.0506127f * fRec16[2] - (0.095993534f * fRec16[1] + 0.004408786f * fRec16[3]));
			fVec0[0] = fSlow2;
			fVec1[0] = fSlow3;
			int iTemp1 = (fSlow3 - fVec1[1]) > 0.0f;
			float fTemp2 = float(((fSlow2 - fVec0[1]) > 0.0f) + iTemp1);
			fRec22[0] = -(fSlow14 * (fSlow15 * fRec22[1] - fSlow11 * (fRec0[1] - fRec0[2])));
			fRec21[0] = fRec22[0] - fSlow16 * (fSlow17 * fRec21[2] + fSlow18 * fRec21[1]);
			float fTemp3 = fSlow26 * fRec20[1];
			fRec20[0] = fSlow13 * (fRec21[2] + (fRec21[0] - 2.0f * fRec21[1])) - fSlow22 * (fSlow24 * fRec20[2] + fTemp3);
			float fTemp4 = fSlow34 * fRec19[1];
			fRec19[0] = fRec20[2] + fSlow22 * (fTemp3 + fSlow24 * fRec20[0]) - fSlow30 * (fSlow32 * fRec19[2] + fTemp4);
			float fTemp5 = fSlow42 * fRec18[1];
			fRec18[0] = fRec19[2] + fSlow30 * (fTemp4 + fSlow32 * fRec19[0]) - fSlow38 * (fSlow40 * fRec18[2] + fTemp5);
			fRec28[0] = -(fSlow14 * (fSlow15 * fRec28[1] - (fRec0[1] + fRec0[2])));
			fRec27[0] = fRec28[0] - fSlow16 * (fSlow17 * fRec27[2] + fSlow18 * fRec27[1]);
			float fTemp6 = fSlow16 * (fRec27[2] + fRec27[0] + 2.0f * fRec27[1]);
			fVec2[0] = fTemp6;
			fRec26[0] = -(fSlow47 * (fSlow23 * fRec26[1] - fSlow20 * (fTemp6 - fVec2[1])));
			fRec25[0] = fRec26[0] - fSlow48 * (fSlow49 * fRec25[2] + fSlow26 * fRec25[1]);
			float fTemp7 = fSlow34 * fRec24[1];
			fRec24[0] = fSlow46 * (fRec25[2] + (fRec25[0] - 2.0f * fRec25[1])) - fSlow30 * (fSlow32 * fRec24[2] + fTemp7);
			float fTemp8 = fSlow42 * fRec23[1];
			fRec23[0] = fRec24[2] + fSlow30 * (fTemp7 + fSlow32 * fRec24[0]) - fSlow38 * (fSlow40 * fRec23[2] + fTemp8);
			fRec33[0] = -(fSlow47 * (fSlow23 * fRec33[1] - (fTemp6 + fVec2[1])));
			fRec32[0] = fRec33[0] - fSlow48 * (fSlow49 * fRec32[2] + fSlow26 * fRec32[1]);
			float fTemp9 = fSlow48 * (fRec32[2] + fRec32[0] + 2.0f * fRec32[1]);
			fVec3[0] = fTemp9;
			fRec31[0] = -(fSlow54 * (fSlow31 * fRec31[1] - fSlow28 * (fTemp9 - fVec3[1])));
			fRec30[0] = fRec31[0] - fSlow55 * (fSlow56 * fRec30[2] + fSlow34 * fRec30[1]);
			float fTemp10 = fSlow42 * fRec29[1];
			fRec29[0] = fSlow53 * (fRec30[2] + (fRec30[0] - 2.0f * fRec30[1])) - fSlow38 * (fSlow40 * fRec29[2] + fTemp10);
			fRec37[0] = -(fSlow54 * (fSlow31 * fRec37[1] - (fTemp9 + fVec3[1])));
			fRec36[0] = fRec37[0] - fSlow55 * (fSlow56 * fRec36[2] + fSlow34 * fRec36[1]);
			float fTemp11 = fSlow55 * (fRec36[2] + fRec36[0] + 2.0f * fRec36[1]);
			fVec4[0] = fTemp11;
			fRec35[0] = -(fSlow60 * (fSlow39 * fRec35[1] - fSlow36 * (fTemp11 - fVec4[1])));
			fRec34[0] = fRec35[0] - fSlow57 * (fSlow61 * fRec34[2] + fSlow42 * fRec34[1]);
			fRec39[0] = -(fSlow60 * (fSlow39 * fRec39[1] - (fTemp11 + fVec4[1])));
			fRec38[0] = fRec39[0] - fSlow57 * (fSlow61 * fRec38[2] + fSlow42 * fRec38[1]);
			float fTemp12 = fSlow8 * (fRec18[2] + fSlow38 * (fTemp5 + fSlow40 * fRec18[0])) + fSlow44 * (fRec23[2] + fSlow38 * (fTemp8 + fSlow40 * fRec23[0])) + fSlow51 * (fRec29[2] + fSlow38 * (fTemp10 + fSlow40 * fRec29[0])) + fSlow57 * (fSlow59 * (fRec34[2] + (fRec34[0] - 2.0f * fRec34[1])) + fSlow63 * (fRec38[2] + fRec38[0] + 2.0f * fRec38[1]));
			fRec44[0] = -(fSlow14 * (fSlow15 * fRec44[1] - fSlow11 * (fRec8[1] - fRec8[2])));
			fRec43[0] = fRec44[0] - fSlow16 * (fSlow17 * fRec43[2] + fSlow18 * fRec43[1]);
			float fTemp13 = fSlow26 * fRec42[1];
			fRec42[0] = fSlow13 * (fRec43[2] + (fRec43[0] - 2.0f * fRec43[1])) - fSlow22 * (fSlow24 * fRec42[2] + fTemp13);
			float fTemp14 = fSlow34 * fRec41[1];
			fRec41[0] = fRec42[2] + fSlow22 * (fTemp13 + fSlow24 * fRec42[0]) - fSlow30 * (fSlow32 * fRec41[2] + fTemp14);
			float fTemp15 = fSlow42 * fRec40[1];
			fRec40[0] = fRec41[2] + fSlow30 * (fTemp14 + fSlow32 * fRec41[0]) - fSlow38 * (fSlow40 * fRec40[2] + fTemp15);
			fRec50[0] = -(fSlow14 * (fSlow15 * fRec50[1] - (fRec8[1] + fRec8[2])));
			fRec49[0] = fRec50[0] - fSlow16 * (fSlow17 * fRec49[2] + fSlow18 * fRec49[1]);
			float fTemp16 = fSlow16 * (fRec49[2] + fRec49[0] + 2.0f * fRec49[1]);
			fVec5[0] = fTemp16;
			fRec48[0] = -(fSlow47 * (fSlow23 * fRec48[1] - fSlow20 * (fTemp16 - fVec5[1])));
			fRec47[0] = fRec48[0] - fSlow48 * (fSlow49 * fRec47[2] + fSlow26 * fRec47[1]);
			float fTemp17 = fSlow34 * fRec46[1];
			fRec46[0] = fSlow46 * (fRec47[2] + (fRec47[0] - 2.0f * fRec47[1])) - fSlow30 * (fSlow32 * fRec46[2] + fTemp17);
			float fTemp18 = fSlow42 * fRec45[1];
			fRec45[0] = fRec46[2] + fSlow30 * (fTemp17 + fSlow32 * fRec46[0]) - fSlow38 * (fSlow40 * fRec45[2] + fTemp18);
			fRec55[0] = -(fSlow47 * (fSlow23 * fRec55[1] - (fTemp16 + fVec5[1])));
			fRec54[0] = fRec55[0] - fSlow48 * (fSlow49 * fRec54[2] + fSlow26 * fRec54[1]);
			float fTemp19 = fSlow48 * (fRec54[2] + fRec54[0] + 2.0f * fRec54[1]);
			fVec6[0] = fTemp19;
			fRec53[0] = -(fSlow54 * (fSlow31 * fRec53[1] - fSlow28 * (fTemp19 - fVec6[1])));
			fRec52[0] = fRec53[0] - fSlow55 * (fSlow56 * fRec52[2] + fSlow34 * fRec52[1]);
			float fTemp20 = fSlow42 * fRec51[1];
			fRec51[0] = fSlow53 * (fRec52[2] + (fRec52[0] - 2.0f * fRec52[1])) - fSlow38 * (fSlow40 * fRec51[2] + fTemp20);
			fRec59[0] = -(fSlow54 * (fSlow31 * fRec59[1] - (fTemp19 + fVec6[1])));
			fRec58[0] = fRec59[0] - fSlow55 * (fSlow56 * fRec58[2] + fSlow34 * fRec58[1]);
			float fTemp21 = fSlow55 * (fRec58[2] + fRec58[0] + 2.0f * fRec58[1]);
			fVec7[0] = fTemp21;
			fRec57[0] = -(fSlow60 * (fSlow39 * fRec57[1] - fSlow36 * (fTemp21 - fVec7[1])));
			fRec56[0] = fRec57[0] - fSlow57 * (fSlow61 * fRec56[2] + fSlow42 * fRec56[1]);
			fRec61[0] = -(fSlow60 * (fSlow39 * fRec61[1] - (fTemp21 + fVec7[1])));
			fRec60[0] = fRec61[0] - fSlow57 * (fSlow61 * fRec60[2] + fSlow42 * fRec60[1]);
			float fTemp22 = fSlow67 * (fRec40[2] + fSlow38 * (fTemp15 + fSlow40 * fRec40[0])) + fSlow68 * (fRec45[2] + fSlow38 * (fTemp18 + fSlow40 * fRec45[0])) + fSlow69 * (fRec51[2] + fSlow38 * (fTemp20 + fSlow40 * fRec51[0])) + fSlow57 * (fSlow70 * (fRec56[2] + (fRec56[0] - 2.0f * fRec56[1])) + fSlow71 * (fRec60[2] + fRec60[0] + 2.0f * fRec60[1]));
			float fTemp23 = fTemp12 + fTemp22;
			fRec66[0] = -(fSlow14 * (fSlow15 * fRec66[1] - fSlow11 * (fRec4[1] - fRec4[2])));
			fRec65[0] = fRec66[0] - fSlow16 * (fSlow17 * fRec65[2] + fSlow18 * fRec65[1]);
			float fTemp24 = fSlow26 * fRec64[1];
			fRec64[0] = fSlow13 * (fRec65[2] + (fRec65[0] - 2.0f * fRec65[1])) - fSlow22 * (fSlow24 * fRec64[2] + fTemp24);
			float fTemp25 = fSlow34 * fRec63[1];
			fRec63[0] = fRec64[2] + fSlow22 * (fTemp24 + fSlow24 * fRec64[0]) - fSlow30 * (fSlow32 * fRec63[2] + fTemp25);
			float fTemp26 = fSlow42 * fRec62[1];
			fRec62[0] = fRec63[2] + fSlow30 * (fTemp25 + fSlow32 * fRec63[0]) - fSlow38 * (fSlow40 * fRec62[2] + fTemp26);
			fRec72[0] = -(fSlow14 * (fSlow15 * fRec72[1] - (fRec4[1] + fRec4[2])));
			fRec71[0] = fRec72[0] - fSlow16 * (fSlow17 * fRec71[2] + fSlow18 * fRec71[1]);
			float fTemp27 = fSlow16 * (fRec71[2] + fRec71[0] + 2.0f * fRec71[1]);
			fVec8[0] = fTemp27;
			fRec70[0] = -(fSlow47 * (fSlow23 * fRec70[1] - fSlow20 * (fTemp27 - fVec8[1])));
			fRec69[0] = fRec70[0] - fSlow48 * (fSlow49 * fRec69[2] + fSlow26 * fRec69[1]);
			float fTemp28 = fSlow34 * fRec68[1];
			fRec68[0] = fSlow46 * (fRec69[2] + (fRec69[0] - 2.0f * fRec69[1])) - fSlow30 * (fSlow32 * fRec68[2] + fTemp28);
			float fTemp29 = fSlow42 * fRec67[1];
			fRec67[0] = fRec68[2] + fSlow30 * (fTemp28 + fSlow32 * fRec68[0]) - fSlow38 * (fSlow40 * fRec67[2] + fTemp29);
			fRec77[0] = -(fSlow47 * (fSlow23 * fRec77[1] - (fTemp27 + fVec8[1])));
			fRec76[0] = fRec77[0] - fSlow48 * (fSlow49 * fRec76[2] + fSlow26 * fRec76[1]);
			float fTemp30 = fSlow48 * (fRec76[2] + fRec76[0] + 2.0f * fRec76[1]);
			fVec9[0] = fTemp30;
			fRec75[0] = -(fSlow54 * (fSlow31 * fRec75[1] - fSlow28 * (fTemp30 - fVec9[1])));
			fRec74[0] = fRec75[0] - fSlow55 * (fSlow56 * fRec74[2] + fSlow34 * fRec74[1]);
			float fTemp31 = fSlow42 * fRec73[1];
			fRec73[0] = fSlow53 * (fRec74[2] + (fRec74[0] - 2.0f * fRec74[1])) - fSlow38 * (fSlow40 * fRec73[2] + fTemp31);
			fRec81[0] = -(fSlow54 * (fSlow31 * fRec81[1] - (fTemp30 + fVec9[1])));
			fRec80[0] = fRec81[0] - fSlow55 * (fSlow56 * fRec80[2] + fSlow34 * fRec80[1]);
			float fTemp32 = fSlow55 * (fRec80[2] + fRec80[0] + 2.0f * fRec80[1]);
			fVec10[0] = fTemp32;
			fRec79[0] = -(fSlow60 * (fSlow39 * fRec79[1] - fSlow36 * (fTemp32 - fVec10[1])));
			fRec78[0] = fRec79[0] - fSlow57 * (fSlow61 * fRec78[2] + fSlow42 * fRec78[1]);
			fRec83[0] = -(fSlow60 * (fSlow39 * fRec83[1] - (fTemp32 + fVec10[1])));
			fRec82[0] = fRec83[0] - fSlow57 * (fSlow61 * fRec82[2] + fSlow42 * fRec82[1]);
			float fTemp33 = fSlow73 * (fRec62[2] + fSlow38 * (fTemp26 + fSlow40 * fRec62[0])) + fSlow74 * (fRec67[2] + fSlow38 * (fTemp29 + fSlow40 * fRec67[0])) + fSlow75 * (fRec73[2] + fSlow38 * (fTemp31 + fSlow40 * fRec73[0])) + fSlow57 * (fSlow76 * (fRec78[2] + (fRec78[0] - 2.0f * fRec78[1])) + fSlow77 * (fRec82[2] + fRec82[0] + 2.0f * fRec82[1]));
			fRec88[0] = -(fSlow14 * (fSlow15 * fRec88[1] - fSlow11 * (fRec12[1] - fRec12[2])));
			fRec87[0] = fRec88[0] - fSlow16 * (fSlow17 * fRec87[2] + fSlow18 * fRec87[1]);
			float fTemp34 = fSlow26 * fRec86[1];
			fRec86[0] = fSlow13 * (fRec87[2] + (fRec87[0] - 2.0f * fRec87[1])) - fSlow22 * (fSlow24 * fRec86[2] + fTemp34);
			float fTemp35 = fSlow34 * fRec85[1];
			fRec85[0] = fRec86[2] + fSlow22 * (fTemp34 + fSlow24 * fRec86[0]) - fSlow30 * (fSlow32 * fRec85[2] + fTemp35);
			float fTemp36 = fSlow42 * fRec84[1];
			fRec84[0] = fRec85[2] + fSlow30 * (fTemp35 + fSlow32 * fRec85[0]) - fSlow38 * (fSlow40 * fRec84[2] + fTemp36);
			fRec94[0] = -(fSlow14 * (fSlow15 * fRec94[1] - (fRec12[1] + fRec12[2])));
			fRec93[0] = fRec94[0] - fSlow16 * (fSlow17 * fRec93[2] + fSlow18 * fRec93[1]);
			float fTemp37 = fSlow16 * (fRec93[2] + fRec93[0] + 2.0f * fRec93[1]);
			fVec11[0] = fTemp37;
			fRec92[0] = -(fSlow47 * (fSlow23 * fRec92[1] - fSlow20 * (fTemp37 - fVec11[1])));
			fRec91[0] = fRec92[0] - fSlow48 * (fSlow49 * fRec91[2] + fSlow26 * fRec91[1]);
			float fTemp38 = fSlow34 * fRec90[1];
			fRec90[0] = fSlow46 * (fRec91[2] + (fRec91[0] - 2.0f * fRec91[1])) - fSlow30 * (fSlow32 * fRec90[2] + fTemp38);
			float fTemp39 = fSlow42 * fRec89[1];
			fRec89[0] = fRec90[2] + fSlow30 * (fTemp38 + fSlow32 * fRec90[0]) - fSlow38 * (fSlow40 * fRec89[2] + fTemp39);
			fRec99[0] = -(fSlow47 * (fSlow23 * fRec99[1] - (fTemp37 + fVec11[1])));
			fRec98[0] = fRec99[0] - fSlow48 * (fSlow49 * fRec98[2] + fSlow26 * fRec98[1]);
			float fTemp40 = fSlow48 * (fRec98[2] + fRec98[0] + 2.0f * fRec98[1]);
			fVec12[0] = fTemp40;
			fRec97[0] = -(fSlow54 * (fSlow31 * fRec97[1] - fSlow28 * (fTemp40 - fVec12[1])));
			fRec96[0] = fRec97[0] - fSlow55 * (fSlow56 * fRec96[2] + fSlow34 * fRec96[1]);
			float fTemp41 = fSlow42 * fRec95[1];
			fRec95[0] = fSlow53 * (fRec96[2] + (fRec96[0] - 2.0f * fRec96[1])) - fSlow38 * (fSlow40 * fRec95[2] + fTemp41);
			fRec103[0] = -(fSlow54 * (fSlow31 * fRec103[1] - (fTemp40 + fVec12[1])));
			fRec102[0] = fRec103[0] - fSlow55 * (fSlow56 * fRec102[2] + fSlow34 * fRec102[1]);
			float fTemp42 = fSlow55 * (fRec102[2] + fRec102[0] + 2.0f * fRec102[1]);
			fVec13[0] = fTemp42;
			fRec101[0] = -(fSlow60 * (fSlow39 * fRec101[1] - fSlow36 * (fTemp42 - fVec13[1])));
			fRec100[0] = fRec101[0] - fSlow57 * (fSlow61 * fRec100[2] + fSlow42 * fRec100[1]);
			fRec105[0] = -(fSlow60 * (fSlow39 * fRec105[1] - (fTemp42 + fVec13[1])));
			fRec104[0] = fRec105[0] - fSlow57 * (fSlow61 * fRec104[2] + fSlow42 * fRec104[1]);
			float fTemp43 = fSlow79 * (fRec84[2] + fSlow38 * (fTemp36 + fSlow40 * fRec84[0])) + fSlow80 * (fRec89[2] + fSlow38 * (fTemp39 + fSlow40 * fRec89[0])) + fSlow81 * (fRec95[2] + fSlow38 * (fTemp41 + fSlow40 * fRec95[0])) + fSlow57 * (fSlow82 * (fRec100[2] + (fRec100[0] - 2.0f * fRec100[1])) + fSlow83 * (fRec104[2] + fRec104[0] + 2.0f * fRec104[1]));
			float fTemp44 = fTemp33 + fTemp43;
			float fTemp45 = fTemp23 + fTemp44;
			fRec110[0] = -(fSlow14 * (fSlow15 * fRec110[1] - fSlow11 * (fRec2[1] - fRec2[2])));
			fRec109[0] = fRec110[0] - fSlow16 * (fSlow17 * fRec109[2] + fSlow18 * fRec109[1]);
			float fTemp46 = fSlow26 * fRec108[1];
			fRec108[0] = fSlow13 * (fRec109[2] + (fRec109[0] - 2.0f * fRec109[1])) - fSlow22 * (fSlow24 * fRec108[2] + fTemp46);
			float fTemp47 = fSlow34 * fRec107[1];
			fRec107[0] = fRec108[2] + fSlow22 * (fTemp46 + fSlow24 * fRec108[0]) - fSlow30 * (fSlow32 * fRec107[2] + fTemp47);
			float fTemp48 = fSlow42 * fRec106[1];
			fRec106[0] = fRec107[2] + fSlow30 * (fTemp47 + fSlow32 * fRec107[0]) - fSlow38 * (fSlow40 * fRec106[2] + fTemp48);
			fRec116[0] = -(fSlow14 * (fSlow15 * fRec116[1] - (fRec2[1] + fRec2[2])));
			fRec115[0] = fRec116[0] - fSlow16 * (fSlow17 * fRec115[2] + fSlow18 * fRec115[1]);
			float fTemp49 = fSlow16 * (fRec115[2] + fRec115[0] + 2.0f * fRec115[1]);
			fVec14[0] = fTemp49;
			fRec114[0] = -(fSlow47 * (fSlow23 * fRec114[1] - fSlow20 * (fTemp49 - fVec14[1])));
			fRec113[0] = fRec114[0] - fSlow48 * (fSlow49 * fRec113[2] + fSlow26 * fRec113[1]);
			float fTemp50 = fSlow34 * fRec112[1];
			fRec112[0] = fSlow46 * (fRec113[2] + (fRec113[0] - 2.0f * fRec113[1])) - fSlow30 * (fSlow32 * fRec112[2] + fTemp50);
			float fTemp51 = fSlow42 * fRec111[1];
			fRec111[0] = fRec112[2] + fSlow30 * (fTemp50 + fSlow32 * fRec112[0]) - fSlow38 * (fSlow40 * fRec111[2] + fTemp51);
			fRec121[0] = -(fSlow47 * (fSlow23 * fRec121[1] - (fTemp49 + fVec14[1])));
			fRec120[0] = fRec121[0] - fSlow48 * (fSlow49 * fRec120[2] + fSlow26 * fRec120[1]);
			float fTemp52 = fSlow48 * (fRec120[2] + fRec120[0] + 2.0f * fRec120[1]);
			fVec15[0] = fTemp52;
			fRec119[0] = -(fSlow54 * (fSlow31 * fRec119[1] - fSlow28 * (fTemp52 - fVec15[1])));
			fRec118[0] = fRec119[0] - fSlow55 * (fSlow56 * fRec118[2] + fSlow34 * fRec118[1]);
			float fTemp53 = fSlow42 * fRec117[1];
			fRec117[0] = fSlow53 * (fRec118[2] + (fRec118[0] - 2.0f * fRec118[1])) - fSlow38 * (fSlow40 * fRec117[2] + fTemp53);
			fRec125[0] = -(fSlow54 * (fSlow31 * fRec125[1] - (fTemp52 + fVec15[1])));
			fRec124[0] = fRec125[0] - fSlow55 * (fSlow56 * fRec124[2] + fSlow34 * fRec124[1]);
			float fTemp54 = fSlow55 * (fRec124[2] + fRec124[0] + 2.0f * fRec124[1]);
			fVec16[0] = fTemp54;
			fRec123[0] = -(fSlow60 * (fSlow39 * fRec123[1] - fSlow36 * (fTemp54 - fVec16[1])));
			fRec122[0] = fRec123[0] - fSlow57 * (fSlow61 * fRec122[2] + fSlow42 * fRec122[1]);
			fRec127[0] = -(fSlow60 * (fSlow39 * fRec127[1] - (fTemp54 + fVec16[1])));
			fRec126[0] = fRec127[0] - fSlow57 * (fSlow61 * fRec126[2] + fSlow42 * fRec126[1]);
			float fTemp55 = fSlow85 * (fRec106[2] + fSlow38 * (fTemp48 + fSlow40 * fRec106[0])) + fSlow86 * (fRec111[2] + fSlow38 * (fTemp51 + fSlow40 * fRec111[0])) + fSlow87 * (fRec117[2] + fSlow38 * (fTemp53 + fSlow40 * fRec117[0])) + fSlow57 * (fSlow88 * (fRec122[2] + (fRec122[0] - 2.0f * fRec122[1])) + fSlow89 * (fRec126[2] + fRec126[0] + 2.0f * fRec126[1]));
			fRec132[0] = -(fSlow14 * (fSlow15 * fRec132[1] - fSlow11 * (fRec10[1] - fRec10[2])));
			fRec131[0] = fRec132[0] - fSlow16 * (fSlow17 * fRec131[2] + fSlow18 * fRec131[1]);
			float fTemp56 = fSlow26 * fRec130[1];
			fRec130[0] = fSlow13 * (fRec131[2] + (fRec131[0] - 2.0f * fRec131[1])) - fSlow22 * (fSlow24 * fRec130[2] + fTemp56);
			float fTemp57 = fSlow34 * fRec129[1];
			fRec129[0] = fRec130[2] + fSlow22 * (fTemp56 + fSlow24 * fRec130[0]) - fSlow30 * (fSlow32 * fRec129[2] + fTemp57);
			float fTemp58 = fSlow42 * fRec128[1];
			fRec128[0] = fRec129[2] + fSlow30 * (fTemp57 + fSlow32 * fRec129[0]) - fSlow38 * (fSlow40 * fRec128[2] + fTemp58);
			fRec138[0] = -(fSlow14 * (fSlow15 * fRec138[1] - (fRec10[1] + fRec10[2])));
			fRec137[0] = fRec138[0] - fSlow16 * (fSlow17 * fRec137[2] + fSlow18 * fRec137[1]);
			float fTemp59 = fSlow16 * (fRec137[2] + fRec137[0] + 2.0f * fRec137[1]);
			fVec17[0] = fTemp59;
			fRec136[0] = -(fSlow47 * (fSlow23 * fRec136[1] - fSlow20 * (fTemp59 - fVec17[1])));
			fRec135[0] = fRec136[0] - fSlow48 * (fSlow49 * fRec135[2] + fSlow26 * fRec135[1]);
			float fTemp60 = fSlow34 * fRec134[1];
			fRec134[0] = fSlow46 * (fRec135[2] + (fRec135[0] - 2.0f * fRec135[1])) - fSlow30 * (fSlow32 * fRec134[2] + fTemp60);
			float fTemp61 = fSlow42 * fRec133[1];
			fRec133[0] = fRec134[2] + fSlow30 * (fTemp60 + fSlow32 * fRec134[0]) - fSlow38 * (fSlow40 * fRec133[2] + fTemp61);
			fRec143[0] = -(fSlow47 * (fSlow23 * fRec143[1] - (fTemp59 + fVec17[1])));
			fRec142[0] = fRec143[0] - fSlow48 * (fSlow49 * fRec142[2] + fSlow26 * fRec142[1]);
			float fTemp62 = fSlow48 * (fRec142[2] + fRec142[0] + 2.0f * fRec142[1]);
			fVec18[0] = fTemp62;
			fRec141[0] = -(fSlow54 * (fSlow31 * fRec141[1] - fSlow28 * (fTemp62 - fVec18[1])));
			fRec140[0] = fRec141[0] - fSlow55 * (fSlow56 * fRec140[2] + fSlow34 * fRec140[1]);
			float fTemp63 = fSlow42 * fRec139[1];
			fRec139[0] = fSlow53 * (fRec140[2] + (fRec140[0] - 2.0f * fRec140[1])) - fSlow38 * (fSlow40 * fRec139[2] + fTemp63);
			fRec147[0] = -(fSlow54 * (fSlow31 * fRec147[1] - (fTemp62 + fVec18[1])));
			fRec146[0] = fRec147[0] - fSlow55 * (fSlow56 * fRec146[2] + fSlow34 * fRec146[1]);
			float fTemp64 = fSlow55 * (fRec146[2] + fRec146[0] + 2.0f * fRec146[1]);
			fVec19[0] = fTemp64;
			fRec145[0] = -(fSlow60 * (fSlow39 * fRec145[1] - fSlow36 * (fTemp64 - fVec19[1])));
			fRec144[0] = fRec145[0] - fSlow57 * (fSlow61 * fRec144[2] + fSlow42 * fRec144[1]);
			fRec149[0] = -(fSlow60 * (fSlow39 * fRec149[1] - (fTemp64 + fVec19[1])));
			fRec148[0] = fRec149[0] - fSlow57 * (fSlow61 * fRec148[2] + fSlow42 * fRec148[1]);
			float fTemp65 = fSlow91 * (fRec128[2] + fSlow38 * (fTemp58 + fSlow40 * fRec128[0])) + fSlow92 * (fRec133[2] + fSlow38 * (fTemp61 + fSlow40 * fRec133[0])) + fSlow93 * (fRec139[2] + fSlow38 * (fTemp63 + fSlow40 * fRec139[0])) + fSlow57 * (fSlow94 * (fRec144[2] + (fRec144[0] - 2.0f * fRec144[1])) + fSlow95 * (fRec148[2] + fRec148[0] + 2.0f * fRec148[1]));
			float fTemp66 = fTemp55 + fTemp65;
			fRec154[0] = -(fSlow14 * (fSlow15 * fRec154[1] - fSlow11 * (fRec6[1] - fRec6[2])));
			fRec153[0] = fRec154[0] - fSlow16 * (fSlow17 * fRec153[2] + fSlow18 * fRec153[1]);
			float fTemp67 = fSlow26 * fRec152[1];
			fRec152[0] = fSlow13 * (fRec153[2] + (fRec153[0] - 2.0f * fRec153[1])) - fSlow22 * (fSlow24 * fRec152[2] + fTemp67);
			float fTemp68 = fSlow34 * fRec151[1];
			fRec151[0] = fRec152[2] + fSlow22 * (fTemp67 + fSlow24 * fRec152[0]) - fSlow30 * (fSlow32 * fRec151[2] + fTemp68);
			float fTemp69 = fSlow42 * fRec150[1];
			fRec150[0] = fRec151[2] + fSlow30 * (fTemp68 + fSlow32 * fRec151[0]) - fSlow38 * (fSlow40 * fRec150[2] + fTemp69);
			fRec160[0] = -(fSlow14 * (fSlow15 * fRec160[1] - (fRec6[1] + fRec6[2])));
			fRec159[0] = fRec160[0] - fSlow16 * (fSlow17 * fRec159[2] + fSlow18 * fRec159[1]);
			float fTemp70 = fSlow16 * (fRec159[2] + fRec159[0] + 2.0f * fRec159[1]);
			fVec20[0] = fTemp70;
			fRec158[0] = -(fSlow47 * (fSlow23 * fRec158[1] - fSlow20 * (fTemp70 - fVec20[1])));
			fRec157[0] = fRec158[0] - fSlow48 * (fSlow49 * fRec157[2] + fSlow26 * fRec157[1]);
			float fTemp71 = fSlow34 * fRec156[1];
			fRec156[0] = fSlow46 * (fRec157[2] + (fRec157[0] - 2.0f * fRec157[1])) - fSlow30 * (fSlow32 * fRec156[2] + fTemp71);
			float fTemp72 = fSlow42 * fRec155[1];
			fRec155[0] = fRec156[2] + fSlow30 * (fTemp71 + fSlow32 * fRec156[0]) - fSlow38 * (fSlow40 * fRec155[2] + fTemp72);
			fRec165[0] = -(fSlow47 * (fSlow23 * fRec165[1] - (fTemp70 + fVec20[1])));
			fRec164[0] = fRec165[0] - fSlow48 * (fSlow49 * fRec164[2] + fSlow26 * fRec164[1]);
			float fTemp73 = fSlow48 * (fRec164[2] + fRec164[0] + 2.0f * fRec164[1]);
			fVec21[0] = fTemp73;
			fRec163[0] = -(fSlow54 * (fSlow31 * fRec163[1] - fSlow28 * (fTemp73 - fVec21[1])));
			fRec162[0] = fRec163[0] - fSlow55 * (fSlow56 * fRec162[2] + fSlow34 * fRec162[1]);
			float fTemp74 = fSlow42 * fRec161[1];
			fRec161[0] = fSlow53 * (fRec162[2] + (fRec162[0] - 2.0f * fRec162[1])) - fSlow38 * (fSlow40 * fRec161[2] + fTemp74);
			fRec169[0] = -(fSlow54 * (fSlow31 * fRec169[1] - (fTemp73 + fVec21[1])));
			fRec168[0] = fRec169[0] - fSlow55 * (fSlow56 * fRec168[2] + fSlow34 * fRec168[1]);
			float fTemp75 = fSlow55 * (fRec168[2] + fRec168[0] + 2.0f * fRec168[1]);
			fVec22[0] = fTemp75;
			fRec167[0] = -(fSlow60 * (fSlow39 * fRec167[1] - fSlow36 * (fTemp75 - fVec22[1])));
			fRec166[0] = fRec167[0] - fSlow57 * (fSlow61 * fRec166[2] + fSlow42 * fRec166[1]);
			fRec171[0] = -(fSlow60 * (fSlow39 * fRec171[1] - (fTemp75 + fVec22[1])));
			fRec170[0] = fRec171[0] - fSlow57 * (fSlow61 * fRec170[2] + fSlow42 * fRec170[1]);
			float fTemp76 = fSlow97 * (fRec150[2] + fSlow38 * (fTemp69 + fSlow40 * fRec150[0])) + fSlow98 * (fRec155[2] + fSlow38 * (fTemp72 + fSlow40 * fRec155[0])) + fSlow99 * (fRec161[2] + fSlow38 * (fTemp74 + fSlow40 * fRec161[0])) + fSlow57 * (fSlow100 * (fRec166[2] + (fRec166[0] - 2.0f * fRec166[1])) + fSlow101 * (fRec170[2] + fRec170[0] + 2.0f * fRec170[1]));
			fRec176[0] = -(fSlow14 * (fSlow15 * fRec176[1] - fSlow11 * (fRec14[1] - fRec14[2])));
			fRec175[0] = fRec176[0] - fSlow16 * (fSlow17 * fRec175[2] + fSlow18 * fRec175[1]);
			float fTemp77 = fSlow26 * fRec174[1];
			fRec174[0] = fSlow13 * (fRec175[2] + (fRec175[0] - 2.0f * fRec175[1])) - fSlow22 * (fSlow24 * fRec174[2] + fTemp77);
			float fTemp78 = fSlow34 * fRec173[1];
			fRec173[0] = fRec174[2] + fSlow22 * (fTemp77 + fSlow24 * fRec174[0]) - fSlow30 * (fSlow32 * fRec173[2] + fTemp78);
			float fTemp79 = fSlow42 * fRec172[1];
			fRec172[0] = fRec173[2] + fSlow30 * (fTemp78 + fSlow32 * fRec173[0]) - fSlow38 * (fSlow40 * fRec172[2] + fTemp79);
			fRec182[0] = -(fSlow14 * (fSlow15 * fRec182[1] - (fRec14[1] + fRec14[2])));
			fRec181[0] = fRec182[0] - fSlow16 * (fSlow17 * fRec181[2] + fSlow18 * fRec181[1]);
			float fTemp80 = fSlow16 * (fRec181[2] + fRec181[0] + 2.0f * fRec181[1]);
			fVec23[0] = fTemp80;
			fRec180[0] = -(fSlow47 * (fSlow23 * fRec180[1] - fSlow20 * (fTemp80 - fVec23[1])));
			fRec179[0] = fRec180[0] - fSlow48 * (fSlow49 * fRec179[2] + fSlow26 * fRec179[1]);
			float fTemp81 = fSlow34 * fRec178[1];
			fRec178[0] = fSlow46 * (fRec179[2] + (fRec179[0] - 2.0f * fRec179[1])) - fSlow30 * (fSlow32 * fRec178[2] + fTemp81);
			float fTemp82 = fSlow42 * fRec177[1];
			fRec177[0] = fRec178[2] + fSlow30 * (fTemp81 + fSlow32 * fRec178[0]) - fSlow38 * (fSlow40 * fRec177[2] + fTemp82);
			fRec187[0] = -(fSlow47 * (fSlow23 * fRec187[1] - (fTemp80 + fVec23[1])));
			fRec186[0] = fRec187[0] - fSlow48 * (fSlow49 * fRec186[2] + fSlow26 * fRec186[1]);
			float fTemp83 = fSlow48 * (fRec186[2] + fRec186[0] + 2.0f * fRec186[1]);
			fVec24[0] = fTemp83;
			fRec185[0] = -(fSlow54 * (fSlow31 * fRec185[1] - fSlow28 * (fTemp83 - fVec24[1])));
			fRec184[0] = fRec185[0] - fSlow55 * (fSlow56 * fRec184[2] + fSlow34 * fRec184[1]);
			float fTemp84 = fSlow42 * fRec183[1];
			fRec183[0] = fSlow53 * (fRec184[2] + (fRec184[0] - 2.0f * fRec184[1])) - fSlow38 * (fSlow40 * fRec183[2] + fTemp84);
			fRec191[0] = -(fSlow54 * (fSlow31 * fRec191[1] - (fTemp83 + fVec24[1])));
			fRec190[0] = fRec191[0] - fSlow55 * (fSlow56 * fRec190[2] + fSlow34 * fRec190[1]);
			float fTemp85 = fSlow55 * (fRec190[2] + fRec190[0] + 2.0f * fRec190[1]);
			fVec25[0] = fTemp85;
			fRec189[0] = -(fSlow60 * (fSlow39 * fRec189[1] - fSlow36 * (fTemp85 - fVec25[1])));
			fRec188[0] = fRec189[0] - fSlow57 * (fSlow61 * fRec188[2] + fSlow42 * fRec188[1]);
			fRec193[0] = -(fSlow60 * (fSlow39 * fRec193[1] - (fTemp85 + fVec25[1])));
			fRec192[0] = fRec193[0] - fSlow57 * (fSlow61 * fRec192[2] + fSlow42 * fRec192[1]);
			float fTemp86 = fSlow103 * (fRec172[2] + fSlow38 * (fTemp79 + fSlow40 * fRec172[0])) + fSlow104 * (fRec177[2] + fSlow38 * (fTemp82 + fSlow40 * fRec177[0])) + fSlow105 * (fRec183[2] + fSlow38 * (fTemp84 + fSlow40 * fRec183[0])) + fSlow57 * (fSlow106 * (fRec188[2] + (fRec188[0] - 2.0f * fRec188[1])) + fSlow107 * (fRec192[2] + fRec192[0] + 2.0f * fRec192[1]));
			float fTemp87 = fTemp76 + fTemp86;
			float fTemp88 = fTemp66 + fTemp87;
			float fTemp89 = fTemp45 + fTemp88;
			fRec198[0] = -(fSlow14 * (fSlow15 * fRec198[1] - fSlow11 * (fRec1[1] - fRec1[2])));
			fRec197[0] = fRec198[0] - fSlow16 * (fSlow17 * fRec197[2] + fSlow18 * fRec197[1]);
			float fTemp90 = fSlow26 * fRec196[1];
			fRec196[0] = fSlow13 * (fRec197[2] + (fRec197[0] - 2.0f * fRec197[1])) - fSlow22 * (fSlow24 * fRec196[2] + fTemp90);
			float fTemp91 = fSlow34 * fRec195[1];
			fRec195[0] = fRec196[2] + fSlow22 * (fTemp90 + fSlow24 * fRec196[0]) - fSlow30 * (fSlow32 * fRec195[2] + fTemp91);
			float fTemp92 = fSlow42 * fRec194[1];
			fRec194[0] = fRec195[2] + fSlow30 * (fTemp91 + fSlow32 * fRec195[0]) - fSlow38 * (fSlow40 * fRec194[2] + fTemp92);
			fRec204[0] = -(fSlow14 * (fSlow15 * fRec204[1] - (fRec1[1] + fRec1[2])));
			fRec203[0] = fRec204[0] - fSlow16 * (fSlow17 * fRec203[2] + fSlow18 * fRec203[1]);
			float fTemp93 = fSlow16 * (fRec203[2] + fRec203[0] + 2.0f * fRec203[1]);
			fVec26[0] = fTemp93;
			fRec202[0] = -(fSlow47 * (fSlow23 * fRec202[1] - fSlow20 * (fTemp93 - fVec26[1])));
			fRec201[0] = fRec202[0] - fSlow48 * (fSlow49 * fRec201[2] + fSlow26 * fRec201[1]);
			float fTemp94 = fSlow34 * fRec200[1];
			fRec200[0] = fSlow46 * (fRec201[2] + (fRec201[0] - 2.0f * fRec201[1])) - fSlow30 * (fSlow32 * fRec200[2] + fTemp94);
			float fTemp95 = fSlow42 * fRec199[1];
			fRec199[0] = fRec200[2] + fSlow30 * (fTemp94 + fSlow32 * fRec200[0]) - fSlow38 * (fSlow40 * fRec199[2] + fTemp95);
			fRec209[0] = -(fSlow47 * (fSlow23 * fRec209[1] - (fTemp93 + fVec26[1])));
			fRec208[0] = fRec209[0] - fSlow48 * (fSlow49 * fRec208[2] + fSlow26 * fRec208[1]);
			float fTemp96 = fSlow48 * (fRec208[2] + fRec208[0] + 2.0f * fRec208[1]);
			fVec27[0] = fTemp96;
			fRec207[0] = -(fSlow54 * (fSlow31 * fRec207[1] - fSlow28 * (fTemp96 - fVec27[1])));
			fRec206[0] = fRec207[0] - fSlow55 * (fSlow56 * fRec206[2] + fSlow34 * fRec206[1]);
			float fTemp97 = fSlow42 * fRec205[1];
			fRec205[0] = fSlow53 * (fRec206[2] + (fRec206[0] - 2.0f * fRec206[1])) - fSlow38 * (fSlow40 * fRec205[2] + fTemp97);
			fRec213[0] = -(fSlow54 * (fSlow31 * fRec213[1] - (fTemp96 + fVec27[1])));
			fRec212[0] = fRec213[0] - fSlow55 * (fSlow56 * fRec212[2] + fSlow34 * fRec212[1]);
			float fTemp98 = fSlow55 * (fRec212[2] + fRec212[0] + 2.0f * fRec212[1]);
			fVec28[0] = fTemp98;
			fRec211[0] = -(fSlow60 * (fSlow39 * fRec211[1] - fSlow36 * (fTemp98 - fVec28[1])));
			fRec210[0] = fRec211[0] - fSlow57 * (fSlow61 * fRec210[2] + fSlow42 * fRec210[1]);
			fRec215[0] = -(fSlow60 * (fSlow39 * fRec215[1] - (fTemp98 + fVec28[1])));
			fRec214[0] = fRec215[0] - fSlow57 * (fSlow61 * fRec214[2] + fSlow42 * fRec214[1]);
			float fTemp99 = fSlow109 * (fRec194[2] + fSlow38 * (fTemp92 + fSlow40 * fRec194[0])) + fSlow110 * (fRec199[2] + fSlow38 * (fTemp95 + fSlow40 * fRec199[0])) + fSlow111 * (fRec205[2] + fSlow38 * (fTemp97 + fSlow40 * fRec205[0])) + fSlow57 * (fSlow112 * (fRec210[2] + (fRec210[0] - 2.0f * fRec210[1])) + fSlow113 * (fRec214[2] + fRec214[0] + 2.0f * fRec214[1]));
			fRec220[0] = -(fSlow14 * (fSlow15 * fRec220[1] - fSlow11 * (fRec9[1] - fRec9[2])));
			fRec219[0] = fRec220[0] - fSlow16 * (fSlow17 * fRec219[2] + fSlow18 * fRec219[1]);
			float fTemp100 = fSlow26 * fRec218[1];
			fRec218[0] = fSlow13 * (fRec219[2] + (fRec219[0] - 2.0f * fRec219[1])) - fSlow22 * (fSlow24 * fRec218[2] + fTemp100);
			float fTemp101 = fSlow34 * fRec217[1];
			fRec217[0] = fRec218[2] + fSlow22 * (fTemp100 + fSlow24 * fRec218[0]) - fSlow30 * (fSlow32 * fRec217[2] + fTemp101);
			float fTemp102 = fSlow42 * fRec216[1];
			fRec216[0] = fRec217[2] + fSlow30 * (fTemp101 + fSlow32 * fRec217[0]) - fSlow38 * (fSlow40 * fRec216[2] + fTemp102);
			fRec226[0] = -(fSlow14 * (fSlow15 * fRec226[1] - (fRec9[1] + fRec9[2])));
			fRec225[0] = fRec226[0] - fSlow16 * (fSlow17 * fRec225[2] + fSlow18 * fRec225[1]);
			float fTemp103 = fSlow16 * (fRec225[2] + fRec225[0] + 2.0f * fRec225[1]);
			fVec29[0] = fTemp103;
			fRec224[0] = -(fSlow47 * (fSlow23 * fRec224[1] - fSlow20 * (fTemp103 - fVec29[1])));
			fRec223[0] = fRec224[0] - fSlow48 * (fSlow49 * fRec223[2] + fSlow26 * fRec223[1]);
			float fTemp104 = fSlow34 * fRec222[1];
			fRec222[0] = fSlow46 * (fRec223[2] + (fRec223[0] - 2.0f * fRec223[1])) - fSlow30 * (fSlow32 * fRec222[2] + fTemp104);
			float fTemp105 = fSlow42 * fRec221[1];
			fRec221[0] = fRec222[2] + fSlow30 * (fTemp104 + fSlow32 * fRec222[0]) - fSlow38 * (fSlow40 * fRec221[2] + fTemp105);
			fRec231[0] = -(fSlow47 * (fSlow23 * fRec231[1] - (fTemp103 + fVec29[1])));
			fRec230[0] = fRec231[0] - fSlow48 * (fSlow49 * fRec230[2] + fSlow26 * fRec230[1]);
			float fTemp106 = fSlow48 * (fRec230[2] + fRec230[0] + 2.0f * fRec230[1]);
			fVec30[0] = fTemp106;
			fRec229[0] = -(fSlow54 * (fSlow31 * fRec229[1] - fSlow28 * (fTemp106 - fVec30[1])));
			fRec228[0] = fRec229[0] - fSlow55 * (fSlow56 * fRec228[2] + fSlow34 * fRec228[1]);
			float fTemp107 = fSlow42 * fRec227[1];
			fRec227[0] = fSlow53 * (fRec228[2] + (fRec228[0] - 2.0f * fRec228[1])) - fSlow38 * (fSlow40 * fRec227[2] + fTemp107);
			fRec235[0] = -(fSlow54 * (fSlow31 * fRec235[1] - (fTemp106 + fVec30[1])));
			fRec234[0] = fRec235[0] - fSlow55 * (fSlow56 * fRec234[2] + fSlow34 * fRec234[1]);
			float fTemp108 = fSlow55 * (fRec234[2] + fRec234[0] + 2.0f * fRec234[1]);
			fVec31[0] = fTemp108;
			fRec233[0] = -(fSlow60 * (fSlow39 * fRec233[1] - fSlow36 * (fTemp108 - fVec31[1])));
			fRec232[0] = fRec233[0] - fSlow57 * (fSlow61 * fRec232[2] + fSlow42 * fRec232[1]);
			fRec237[0] = -(fSlow60 * (fSlow39 * fRec237[1] - (fTemp108 + fVec31[1])));
			fRec236[0] = fRec237[0] - fSlow57 * (fSlow61 * fRec236[2] + fSlow42 * fRec236[1]);
			float fTemp109 = fSlow115 * (fRec216[2] + fSlow38 * (fTemp102 + fSlow40 * fRec216[0])) + fSlow116 * (fRec221[2] + fSlow38 * (fTemp105 + fSlow40 * fRec221[0])) + fSlow117 * (fRec227[2] + fSlow38 * (fTemp107 + fSlow40 * fRec227[0])) + fSlow57 * (fSlow118 * (fRec232[2] + (fRec232[0] - 2.0f * fRec232[1])) + fSlow119 * (fRec236[2] + fRec236[0] + 2.0f * fRec236[1]));
			float fTemp110 = fTemp99 + fTemp109;
			fRec242[0] = -(fSlow14 * (fSlow15 * fRec242[1] - fSlow11 * (fRec5[1] - fRec5[2])));
			fRec241[0] = fRec242[0] - fSlow16 * (fSlow17 * fRec241[2] + fSlow18 * fRec241[1]);
			float fTemp111 = fSlow26 * fRec240[1];
			fRec240[0] = fSlow13 * (fRec241[2] + (fRec241[0] - 2.0f * fRec241[1])) - fSlow22 * (fSlow24 * fRec240[2] + fTemp111);
			float fTemp112 = fSlow34 * fRec239[1];
			fRec239[0] = fRec240[2] + fSlow22 * (fTemp111 + fSlow24 * fRec240[0]) - fSlow30 * (fSlow32 * fRec239[2] + fTemp112);
			float fTemp113 = fSlow42 * fRec238[1];
			fRec238[0] = fRec239[2] + fSlow30 * (fTemp112 + fSlow32 * fRec239[0]) - fSlow38 * (fSlow40 * fRec238[2] + fTemp113);
			fRec248[0] = -(fSlow14 * (fSlow15 * fRec248[1] - (fRec5[1] + fRec5[2])));
			fRec247[0] = fRec248[0] - fSlow16 * (fSlow17 * fRec247[2] + fSlow18 * fRec247[1]);
			float fTemp114 = fSlow16 * (fRec247[2] + fRec247[0] + 2.0f * fRec247[1]);
			fVec32[0] = fTemp114;
			fRec246[0] = -(fSlow47 * (fSlow23 * fRec246[1] - fSlow20 * (fTemp114 - fVec32[1])));
			fRec245[0] = fRec246[0] - fSlow48 * (fSlow49 * fRec245[2] + fSlow26 * fRec245[1]);
			float fTemp115 = fSlow34 * fRec244[1];
			fRec244[0] = fSlow46 * (fRec245[2] + (fRec245[0] - 2.0f * fRec245[1])) - fSlow30 * (fSlow32 * fRec244[2] + fTemp115);
			float fTemp116 = fSlow42 * fRec243[1];
			fRec243[0] = fRec244[2] + fSlow30 * (fTemp115 + fSlow32 * fRec244[0]) - fSlow38 * (fSlow40 * fRec243[2] + fTemp116);
			fRec253[0] = -(fSlow47 * (fSlow23 * fRec253[1] - (fTemp114 + fVec32[1])));
			fRec252[0] = fRec253[0] - fSlow48 * (fSlow49 * fRec252[2] + fSlow26 * fRec252[1]);
			float fTemp117 = fSlow48 * (fRec252[2] + fRec252[0] + 2.0f * fRec252[1]);
			fVec33[0] = fTemp117;
			fRec251[0] = -(fSlow54 * (fSlow31 * fRec251[1] - fSlow28 * (fTemp117 - fVec33[1])));
			fRec250[0] = fRec251[0] - fSlow55 * (fSlow56 * fRec250[2] + fSlow34 * fRec250[1]);
			float fTemp118 = fSlow42 * fRec249[1];
			fRec249[0] = fSlow53 * (fRec250[2] + (fRec250[0] - 2.0f * fRec250[1])) - fSlow38 * (fSlow40 * fRec249[2] + fTemp118);
			fRec257[0] = -(fSlow54 * (fSlow31 * fRec257[1] - (fTemp117 + fVec33[1])));
			fRec256[0] = fRec257[0] - fSlow55 * (fSlow56 * fRec256[2] + fSlow34 * fRec256[1]);
			float fTemp119 = fSlow55 * (fRec256[2] + fRec256[0] + 2.0f * fRec256[1]);
			fVec34[0] = fTemp119;
			fRec255[0] = -(fSlow60 * (fSlow39 * fRec255[1] - fSlow36 * (fTemp119 - fVec34[1])));
			fRec254[0] = fRec255[0] - fSlow57 * (fSlow61 * fRec254[2] + fSlow42 * fRec254[1]);
			fRec259[0] = -(fSlow60 * (fSlow39 * fRec259[1] - (fTemp119 + fVec34[1])));
			fRec258[0] = fRec259[0] - fSlow57 * (fSlow61 * fRec258[2] + fSlow42 * fRec258[1]);
			float fTemp120 = fSlow121 * (fRec238[2] + fSlow38 * (fTemp113 + fSlow40 * fRec238[0])) + fSlow122 * (fRec243[2] + fSlow38 * (fTemp116 + fSlow40 * fRec243[0])) + fSlow123 * (fRec249[2] + fSlow38 * (fTemp118 + fSlow40 * fRec249[0])) + fSlow57 * (fSlow124 * (fRec254[2] + (fRec254[0] - 2.0f * fRec254[1])) + fSlow125 * (fRec258[2] + fRec258[0] + 2.0f * fRec258[1]));
			fRec264[0] = -(fSlow14 * (fSlow15 * fRec264[1] - fSlow11 * (fRec13[1] - fRec13[2])));
			fRec263[0] = fRec264[0] - fSlow16 * (fSlow17 * fRec263[2] + fSlow18 * fRec263[1]);
			float fTemp121 = fSlow26 * fRec262[1];
			fRec262[0] = fSlow13 * (fRec263[2] + (fRec263[0] - 2.0f * fRec263[1])) - fSlow22 * (fSlow24 * fRec262[2] + fTemp121);
			float fTemp122 = fSlow34 * fRec261[1];
			fRec261[0] = fRec262[2] + fSlow22 * (fTemp121 + fSlow24 * fRec262[0]) - fSlow30 * (fSlow32 * fRec261[2] + fTemp122);
			float fTemp123 = fSlow42 * fRec260[1];
			fRec260[0] = fRec261[2] + fSlow30 * (fTemp122 + fSlow32 * fRec261[0]) - fSlow38 * (fSlow40 * fRec260[2] + fTemp123);
			fRec270[0] = -(fSlow14 * (fSlow15 * fRec270[1] - (fRec13[1] + fRec13[2])));
			fRec269[0] = fRec270[0] - fSlow16 * (fSlow17 * fRec269[2] + fSlow18 * fRec269[1]);
			float fTemp124 = fSlow16 * (fRec269[2] + fRec269[0] + 2.0f * fRec269[1]);
			fVec35[0] = fTemp124;
			fRec268[0] = -(fSlow47 * (fSlow23 * fRec268[1] - fSlow20 * (fTemp124 - fVec35[1])));
			fRec267[0] = fRec268[0] - fSlow48 * (fSlow49 * fRec267[2] + fSlow26 * fRec267[1]);
			float fTemp125 = fSlow34 * fRec266[1];
			fRec266[0] = fSlow46 * (fRec267[2] + (fRec267[0] - 2.0f * fRec267[1])) - fSlow30 * (fSlow32 * fRec266[2] + fTemp125);
			float fTemp126 = fSlow42 * fRec265[1];
			fRec265[0] = fRec266[2] + fSlow30 * (fTemp125 + fSlow32 * fRec266[0]) - fSlow38 * (fSlow40 * fRec265[2] + fTemp126);
			fRec275[0] = -(fSlow47 * (fSlow23 * fRec275[1] - (fTemp124 + fVec35[1])));
			fRec274[0] = fRec275[0] - fSlow48 * (fSlow49 * fRec274[2] + fSlow26 * fRec274[1]);
			float fTemp127 = fSlow48 * (fRec274[2] + fRec274[0] + 2.0f * fRec274[1]);
			fVec36[0] = fTemp127;
			fRec273[0] = -(fSlow54 * (fSlow31 * fRec273[1] - fSlow28 * (fTemp127 - fVec36[1])));
			fRec272[0] = fRec273[0] - fSlow55 * (fSlow56 * fRec272[2] + fSlow34 * fRec272[1]);
			float fTemp128 = fSlow42 * fRec271[1];
			fRec271[0] = fSlow53 * (fRec272[2] + (fRec272[0] - 2.0f * fRec272[1])) - fSlow38 * (fSlow40 * fRec271[2] + fTemp128);
			fRec279[0] = -(fSlow54 * (fSlow31 * fRec279[1] - (fTemp127 + fVec36[1])));
			fRec278[0] = fRec279[0] - fSlow55 * (fSlow56 * fRec278[2] + fSlow34 * fRec278[1]);
			float fTemp129 = fSlow55 * (fRec278[2] + fRec278[0] + 2.0f * fRec278[1]);
			fVec37[0] = fTemp129;
			fRec277[0] = -(fSlow60 * (fSlow39 * fRec277[1] - fSlow36 * (fTemp129 - fVec37[1])));
			fRec276[0] = fRec277[0] - fSlow57 * (fSlow61 * fRec276[2] + fSlow42 * fRec276[1]);
			fRec281[0] = -(fSlow60 * (fSlow39 * fRec281[1] - (fTemp129 + fVec37[1])));
			fRec280[0] = fRec281[0] - fSlow57 * (fSlow61 * fRec280[2] + fSlow42 * fRec280[1]);
			float fTemp130 = fSlow127 * (fRec260[2] + fSlow38 * (fTemp123 + fSlow40 * fRec260[0])) + fSlow128 * (fRec265[2] + fSlow38 * (fTemp126 + fSlow40 * fRec265[0])) + fSlow129 * (fRec271[2] + fSlow38 * (fTemp128 + fSlow40 * fRec271[0])) + fSlow57 * (fSlow130 * (fRec276[2] + (fRec276[0] - 2.0f * fRec276[1])) + fSlow131 * (fRec280[2] + fRec280[0] + 2.0f * fRec280[1]));
			float fTemp131 = fTemp120 + fTemp130;
			float fTemp132 = fTemp110 + fTemp131;
			fRec286[0] = -(fSlow14 * (fSlow15 * fRec286[1] - fSlow11 * (fRec3[1] - fRec3[2])));
			fRec285[0] = fRec286[0] - fSlow16 * (fSlow17 * fRec285[2] + fSlow18 * fRec285[1]);
			float fTemp133 = fSlow26 * fRec284[1];
			fRec284[0] = fSlow13 * (fRec285[2] + (fRec285[0] - 2.0f * fRec285[1])) - fSlow22 * (fSlow24 * fRec284[2] + fTemp133);
			float fTemp134 = fSlow34 * fRec283[1];
			fRec283[0] = fRec284[2] + fSlow22 * (fTemp133 + fSlow24 * fRec284[0]) - fSlow30 * (fSlow32 * fRec283[2] + fTemp134);
			float fTemp135 = fSlow42 * fRec282[1];
			fRec282[0] = fRec283[2] + fSlow30 * (fTemp134 + fSlow32 * fRec283[0]) - fSlow38 * (fSlow40 * fRec282[2] + fTemp135);
			fRec292[0] = -(fSlow14 * (fSlow15 * fRec292[1] - (fRec3[1] + fRec3[2])));
			fRec291[0] = fRec292[0] - fSlow16 * (fSlow17 * fRec291[2] + fSlow18 * fRec291[1]);
			float fTemp136 = fSlow16 * (fRec291[2] + fRec291[0] + 2.0f * fRec291[1]);
			fVec38[0] = fTemp136;
			fRec290[0] = -(fSlow47 * (fSlow23 * fRec290[1] - fSlow20 * (fTemp136 - fVec38[1])));
			fRec289[0] = fRec290[0] - fSlow48 * (fSlow49 * fRec289[2] + fSlow26 * fRec289[1]);
			float fTemp137 = fSlow34 * fRec288[1];
			fRec288[0] = fSlow46 * (fRec289[2] + (fRec289[0] - 2.0f * fRec289[1])) - fSlow30 * (fSlow32 * fRec288[2] + fTemp137);
			float fTemp138 = fSlow42 * fRec287[1];
			fRec287[0] = fRec288[2] + fSlow30 * (fTemp137 + fSlow32 * fRec288[0]) - fSlow38 * (fSlow40 * fRec287[2] + fTemp138);
			fRec297[0] = -(fSlow47 * (fSlow23 * fRec297[1] - (fTemp136 + fVec38[1])));
			fRec296[0] = fRec297[0] - fSlow48 * (fSlow49 * fRec296[2] + fSlow26 * fRec296[1]);
			float fTemp139 = fSlow48 * (fRec296[2] + fRec296[0] + 2.0f * fRec296[1]);
			fVec39[0] = fTemp139;
			fRec295[0] = -(fSlow54 * (fSlow31 * fRec295[1] - fSlow28 * (fTemp139 - fVec39[1])));
			fRec294[0] = fRec295[0] - fSlow55 * (fSlow56 * fRec294[2] + fSlow34 * fRec294[1]);
			float fTemp140 = fSlow42 * fRec293[1];
			fRec293[0] = fSlow53 * (fRec294[2] + (fRec294[0] - 2.0f * fRec294[1])) - fSlow38 * (fSlow40 * fRec293[2] + fTemp140);
			fRec301[0] = -(fSlow54 * (fSlow31 * fRec301[1] - (fTemp139 + fVec39[1])));
			fRec300[0] = fRec301[0] - fSlow55 * (fSlow56 * fRec300[2] + fSlow34 * fRec300[1]);
			float fTemp141 = fSlow55 * (fRec300[2] + fRec300[0] + 2.0f * fRec300[1]);
			fVec40[0] = fTemp141;
			fRec299[0] = -(fSlow60 * (fSlow39 * fRec299[1] - fSlow36 * (fTemp141 - fVec40[1])));
			fRec298[0] = fRec299[0] - fSlow57 * (fSlow61 * fRec298[2] + fSlow42 * fRec298[1]);
			fRec303[0] = -(fSlow60 * (fSlow39 * fRec303[1] - (fTemp141 + fVec40[1])));
			fRec302[0] = fRec303[0] - fSlow57 * (fSlow61 * fRec302[2] + fSlow42 * fRec302[1]);
			float fTemp142 = fSlow133 * (fRec282[2] + fSlow38 * (fTemp135 + fSlow40 * fRec282[0])) + fSlow134 * (fRec287[2] + fSlow38 * (fTemp138 + fSlow40 * fRec287[0])) + fSlow135 * (fRec293[2] + fSlow38 * (fTemp140 + fSlow40 * fRec293[0])) + fSlow57 * (fSlow136 * (fRec298[2] + (fRec298[0] - 2.0f * fRec298[1])) + fSlow137 * (fRec302[2] + fRec302[0] + 2.0f * fRec302[1]));
			fRec308[0] = -(fSlow14 * (fSlow15 * fRec308[1] - fSlow11 * (fRec11[1] - fRec11[2])));
			fRec307[0] = fRec308[0] - fSlow16 * (fSlow17 * fRec307[2] + fSlow18 * fRec307[1]);
			float fTemp143 = fSlow26 * fRec306[1];
			fRec306[0] = fSlow13 * (fRec307[2] + (fRec307[0] - 2.0f * fRec307[1])) - fSlow22 * (fSlow24 * fRec306[2] + fTemp143);
			float fTemp144 = fSlow34 * fRec305[1];
			fRec305[0] = fRec306[2] + fSlow22 * (fTemp143 + fSlow24 * fRec306[0]) - fSlow30 * (fSlow32 * fRec305[2] + fTemp144);
			float fTemp145 = fSlow42 * fRec304[1];
			fRec304[0] = fRec305[2] + fSlow30 * (fTemp144 + fSlow32 * fRec305[0]) - fSlow38 * (fSlow40 * fRec304[2] + fTemp145);
			fRec314[0] = -(fSlow14 * (fSlow15 * fRec314[1] - (fRec11[1] + fRec11[2])));
			fRec313[0] = fRec314[0] - fSlow16 * (fSlow17 * fRec313[2] + fSlow18 * fRec313[1]);
			float fTemp146 = fSlow16 * (fRec313[2] + fRec313[0] + 2.0f * fRec313[1]);
			fVec41[0] = fTemp146;
			fRec312[0] = -(fSlow47 * (fSlow23 * fRec312[1] - fSlow20 * (fTemp146 - fVec41[1])));
			fRec311[0] = fRec312[0] - fSlow48 * (fSlow49 * fRec311[2] + fSlow26 * fRec311[1]);
			float fTemp147 = fSlow34 * fRec310[1];
			fRec310[0] = fSlow46 * (fRec311[2] + (fRec311[0] - 2.0f * fRec311[1])) - fSlow30 * (fSlow32 * fRec310[2] + fTemp147);
			float fTemp148 = fSlow42 * fRec309[1];
			fRec309[0] = fRec310[2] + fSlow30 * (fTemp147 + fSlow32 * fRec310[0]) - fSlow38 * (fSlow40 * fRec309[2] + fTemp148);
			fRec319[0] = -(fSlow47 * (fSlow23 * fRec319[1] - (fTemp146 + fVec41[1])));
			fRec318[0] = fRec319[0] - fSlow48 * (fSlow49 * fRec318[2] + fSlow26 * fRec318[1]);
			float fTemp149 = fSlow48 * (fRec318[2] + fRec318[0] + 2.0f * fRec318[1]);
			fVec42[0] = fTemp149;
			fRec317[0] = -(fSlow54 * (fSlow31 * fRec317[1] - fSlow28 * (fTemp149 - fVec42[1])));
			fRec316[0] = fRec317[0] - fSlow55 * (fSlow56 * fRec316[2] + fSlow34 * fRec316[1]);
			float fTemp150 = fSlow42 * fRec315[1];
			fRec315[0] = fSlow53 * (fRec316[2] + (fRec316[0] - 2.0f * fRec316[1])) - fSlow38 * (fSlow40 * fRec315[2] + fTemp150);
			fRec323[0] = -(fSlow54 * (fSlow31 * fRec323[1] - (fTemp149 + fVec42[1])));
			fRec322[0] = fRec323[0] - fSlow55 * (fSlow56 * fRec322[2] + fSlow34 * fRec322[1]);
			float fTemp151 = fSlow55 * (fRec322[2] + fRec322[0] + 2.0f * fRec322[1]);
			fVec43[0] = fTemp151;
			fRec321[0] = -(fSlow60 * (fSlow39 * fRec321[1] - fSlow36 * (fTemp151 - fVec43[1])));
			fRec320[0] = fRec321[0] - fSlow57 * (fSlow61 * fRec320[2] + fSlow42 * fRec320[1]);
			fRec325[0] = -(fSlow60 * (fSlow39 * fRec325[1] - (fTemp151 + fVec43[1])));
			fRec324[0] = fRec325[0] - fSlow57 * (fSlow61 * fRec324[2] + fSlow42 * fRec324[1]);
			float fTemp152 = fSlow139 * (fRec304[2] + fSlow38 * (fTemp145 + fSlow40 * fRec304[0])) + fSlow140 * (fRec309[2] + fSlow38 * (fTemp148 + fSlow40 * fRec309[0])) + fSlow141 * (fRec315[2] + fSlow38 * (fTemp150 + fSlow40 * fRec315[0])) + fSlow57 * (fSlow142 * (fRec320[2] + (fRec320[0] - 2.0f * fRec320[1])) + fSlow143 * (fRec324[2] + fRec324[0] + 2.0f * fRec324[1]));
			float fTemp153 = fTemp142 + fTemp152;
			fRec330[0] = -(fSlow14 * (fSlow15 * fRec330[1] - fSlow11 * (fRec7[1] - fRec7[2])));
			fRec329[0] = fRec330[0] - fSlow16 * (fSlow17 * fRec329[2] + fSlow18 * fRec329[1]);
			float fTemp154 = fSlow26 * fRec328[1];
			fRec328[0] = fSlow13 * (fRec329[2] + (fRec329[0] - 2.0f * fRec329[1])) - fSlow22 * (fSlow24 * fRec328[2] + fTemp154);
			float fTemp155 = fSlow34 * fRec327[1];
			fRec327[0] = fRec328[2] + fSlow22 * (fTemp154 + fSlow24 * fRec328[0]) - fSlow30 * (fSlow32 * fRec327[2] + fTemp155);
			float fTemp156 = fSlow42 * fRec326[1];
			fRec326[0] = fRec327[2] + fSlow30 * (fTemp155 + fSlow32 * fRec327[0]) - fSlow38 * (fSlow40 * fRec326[2] + fTemp156);
			fRec336[0] = -(fSlow14 * (fSlow15 * fRec336[1] - (fRec7[1] + fRec7[2])));
			fRec335[0] = fRec336[0] - fSlow16 * (fSlow17 * fRec335[2] + fSlow18 * fRec335[1]);
			float fTemp157 = fSlow16 * (fRec335[2] + fRec335[0] + 2.0f * fRec335[1]);
			fVec44[0] = fTemp157;
			fRec334[0] = -(fSlow47 * (fSlow23 * fRec334[1] - fSlow20 * (fTemp157 - fVec44[1])));
			fRec333[0] = fRec334[0] - fSlow48 * (fSlow49 * fRec333[2] + fSlow26 * fRec333[1]);
			float fTemp158 = fSlow34 * fRec332[1];
			fRec332[0] = fSlow46 * (fRec333[2] + (fRec333[0] - 2.0f * fRec333[1])) - fSlow30 * (fSlow32 * fRec332[2] + fTemp158);
			float fTemp159 = fSlow42 * fRec331[1];
			fRec331[0] = fRec332[2] + fSlow30 * (fTemp158 + fSlow32 * fRec332[0]) - fSlow38 * (fSlow40 * fRec331[2] + fTemp159);
			fRec341[0] = -(fSlow47 * (fSlow23 * fRec341[1] - (fTemp157 + fVec44[1])));
			fRec340[0] = fRec341[0] - fSlow48 * (fSlow49 * fRec340[2] + fSlow26 * fRec340[1]);
			float fTemp160 = fSlow48 * (fRec340[2] + fRec340[0] + 2.0f * fRec340[1]);
			fVec45[0] = fTemp160;
			fRec339[0] = -(fSlow54 * (fSlow31 * fRec339[1] - fSlow28 * (fTemp160 - fVec45[1])));
			fRec338[0] = fRec339[0] - fSlow55 * (fSlow56 * fRec338[2] + fSlow34 * fRec338[1]);
			float fTemp161 = fSlow42 * fRec337[1];
			fRec337[0] = fSlow53 * (fRec338[2] + (fRec338[0] - 2.0f * fRec338[1])) - fSlow38 * (fSlow40 * fRec337[2] + fTemp161);
			fRec345[0] = -(fSlow54 * (fSlow31 * fRec345[1] - (fTemp160 + fVec45[1])));
			fRec344[0] = fRec345[0] - fSlow55 * (fSlow56 * fRec344[2] + fSlow34 * fRec344[1]);
			float fTemp162 = fSlow55 * (fRec344[2] + fRec344[0] + 2.0f * fRec344[1]);
			fVec46[0] = fTemp162;
			fRec343[0] = -(fSlow60 * (fSlow39 * fRec343[1] - fSlow36 * (fTemp162 - fVec46[1])));
			fRec342[0] = fRec343[0] - fSlow57 * (fSlow61 * fRec342[2] + fSlow42 * fRec342[1]);
			fRec347[0] = -(fSlow60 * (fSlow39 * fRec347[1] - (fTemp162 + fVec46[1])));
			fRec346[0] = fRec347[0] - fSlow57 * (fSlow61 * fRec346[2] + fSlow42 * fRec346[1]);
			float fTemp163 = fSlow145 * (fRec326[2] + fSlow38 * (fTemp156 + fSlow40 * fRec326[0])) + fSlow146 * (fRec331[2] + fSlow38 * (fTemp159 + fSlow40 * fRec331[0])) + fSlow147 * (fRec337[2] + fSlow38 * (fTemp161 + fSlow40 * fRec337[0])) + fSlow57 * (fSlow148 * (fRec342[2] + (fRec342[0] - 2.0f * fRec342[1])) + fSlow149 * (fRec346[2] + fRec346[0] + 2.0f * fRec346[1]));
			fRec352[0] = -(fSlow14 * (fSlow15 * fRec352[1] - fSlow11 * (fRec15[1] - fRec15[2])));
			fRec351[0] = fRec352[0] - fSlow16 * (fSlow17 * fRec351[2] + fSlow18 * fRec351[1]);
			float fTemp164 = fSlow26 * fRec350[1];
			fRec350[0] = fSlow13 * (fRec351[2] + (fRec351[0] - 2.0f * fRec351[1])) - fSlow22 * (fSlow24 * fRec350[2] + fTemp164);
			float fTemp165 = fSlow34 * fRec349[1];
			fRec349[0] = fRec350[2] + fSlow22 * (fTemp164 + fSlow24 * fRec350[0]) - fSlow30 * (fSlow32 * fRec349[2] + fTemp165);
			float fTemp166 = fSlow42 * fRec348[1];
			fRec348[0] = fRec349[2] + fSlow30 * (fTemp165 + fSlow32 * fRec349[0]) - fSlow38 * (fSlow40 * fRec348[2] + fTemp166);
			fRec358[0] = -(fSlow14 * (fSlow15 * fRec358[1] - (fRec15[1] + fRec15[2])));
			fRec357[0] = fRec358[0] - fSlow16 * (fSlow17 * fRec357[2] + fSlow18 * fRec357[1]);
			float fTemp167 = fSlow16 * (fRec357[2] + fRec357[0] + 2.0f * fRec357[1]);
			fVec47[0] = fTemp167;
			fRec356[0] = -(fSlow47 * (fSlow23 * fRec356[1] - fSlow20 * (fTemp167 - fVec47[1])));
			fRec355[0] = fRec356[0] - fSlow48 * (fSlow49 * fRec355[2] + fSlow26 * fRec355[1]);
			float fTemp168 = fSlow34 * fRec354[1];
			fRec354[0] = fSlow46 * (fRec355[2] + (fRec355[0] - 2.0f * fRec355[1])) - fSlow30 * (fSlow32 * fRec354[2] + fTemp168);
			float fTemp169 = fSlow42 * fRec353[1];
			fRec353[0] = fRec354[2] + fSlow30 * (fTemp168 + fSlow32 * fRec354[0]) - fSlow38 * (fSlow40 * fRec353[2] + fTemp169);
			fRec363[0] = -(fSlow47 * (fSlow23 * fRec363[1] - (fTemp167 + fVec47[1])));
			fRec362[0] = fRec363[0] - fSlow48 * (fSlow49 * fRec362[2] + fSlow26 * fRec362[1]);
			float fTemp170 = fSlow48 * (fRec362[2] + fRec362[0] + 2.0f * fRec362[1]);
			fVec48[0] = fTemp170;
			fRec361[0] = -(fSlow54 * (fSlow31 * fRec361[1] - fSlow28 * (fTemp170 - fVec48[1])));
			fRec360[0] = fRec361[0] - fSlow55 * (fSlow56 * fRec360[2] + fSlow34 * fRec360[1]);
			float fTemp171 = fSlow42 * fRec359[1];
			fRec359[0] = fSlow53 * (fRec360[2] + (fRec360[0] - 2.0f * fRec360[1])) - fSlow38 * (fSlow40 * fRec359[2] + fTemp171);
			fRec367[0] = -(fSlow54 * (fSlow31 * fRec367[1] - (fTemp170 + fVec48[1])));
			fRec366[0] = fRec367[0] - fSlow55 * (fSlow56 * fRec366[2] + fSlow34 * fRec366[1]);
			float fTemp172 = fSlow55 * (fRec366[2] + fRec366[0] + 2.0f * fRec366[1]);
			fVec49[0] = fTemp172;
			fRec365[0] = -(fSlow60 * (fSlow39 * fRec365[1] - fSlow36 * (fTemp172 - fVec49[1])));
			fRec364[0] = fRec365[0] - fSlow57 * (fSlow61 * fRec364[2] + fSlow42 * fRec364[1]);
			fRec369[0] = -(fSlow60 * (fSlow39 * fRec369[1] - (fTemp172 + fVec49[1])));
			fRec368[0] = fRec369[0] - fSlow57 * (fSlow61 * fRec368[2] + fSlow42 * fRec368[1]);
			float fTemp173 = fSlow151 * (fRec348[2] + fSlow38 * (fTemp166 + fSlow40 * fRec348[0])) + fSlow152 * (fRec353[2] + fSlow38 * (fTemp169 + fSlow40 * fRec353[0])) + fSlow153 * (fRec359[2] + fSlow38 * (fTemp171 + fSlow40 * fRec359[0])) + fSlow57 * (fSlow154 * (fRec364[2] + (fRec364[0] - 2.0f * fRec364[1])) + fSlow155 * (fRec368[2] + fRec368[0] + 2.0f * fRec368[1]));
			float fTemp174 = fTemp163 + fTemp173;
			float fTemp175 = fTemp153 + fTemp174;
			float fTemp176 = fTemp132 + fTemp175;
			float fTemp177 = fSlow156 * float(input0[i0]);
			fVec50[IOTA0 & 8191] = fTemp0 + fTemp2 + fSlow4 * (fTemp89 + fTemp176) + fTemp177;
			fRec0[0] = fVec50[(IOTA0 - iSlow157) & 8191];
			fVec51[0] = fSlow158;
			float fTemp178 = float(iTemp1 + ((fSlow158 - fVec51[1]) > 0.0f));
			float fTemp179 = fSlow156 * float(input1[i0]);
			fVec52[IOTA0 & 8191] = fTemp178 + fTemp179 + fTemp0 + fSlow4 * (fTemp89 - fTemp176);
			fRec1[0] = fVec52[(IOTA0 - iSlow159) & 8191];
			float fTemp180 = fTemp177 + fTemp2 + fTemp0;
			float fTemp181 = fTemp45 - fTemp88;
			float fTemp182 = fTemp132 - fTemp175;
			fVec53[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp181 + fTemp182);
			fRec2[0] = fVec53[(IOTA0 - iSlow160) & 8191];
			float fTemp183 = fTemp178 + fTemp0 + fTemp179;
			fVec54[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp181 - fTemp182);
			fRec3[0] = fVec54[(IOTA0 - iSlow161) & 8191];
			float fTemp184 = fTemp23 - fTemp44;
			float fTemp185 = fTemp66 - fTemp87;
			float fTemp186 = fTemp184 + fTemp185;
			float fTemp187 = fTemp110 - fTemp131;
			float fTemp188 = fTemp153 - fTemp174;
			float fTemp189 = fTemp187 + fTemp188;
			fVec55[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp186 + fTemp189);
			fRec4[0] = fVec55[(IOTA0 - iSlow162) & 8191];
			fVec56[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp186 - fTemp189);
			fRec5[0] = fVec56[(IOTA0 - iSlow163) & 8191];
			float fTemp190 = fTemp184 - fTemp185;
			float fTemp191 = fTemp187 - fTemp188;
			fVec57[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp190 + fTemp191);
			fRec6[0] = fVec57[(IOTA0 - iSlow164) & 8191];
			fVec58[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp190 - fTemp191);
			fRec7[0] = fVec58[(IOTA0 - iSlow165) & 8191];
			float fTemp192 = fTemp12 - fTemp22;
			float fTemp193 = fTemp33 - fTemp43;
			float fTemp194 = fTemp192 + fTemp193;
			float fTemp195 = fTemp55 - fTemp65;
			float fTemp196 = fTemp76 - fTemp86;
			float fTemp197 = fTemp195 + fTemp196;
			float fTemp198 = fTemp194 + fTemp197;
			float fTemp199 = fTemp99 - fTemp109;
			float fTemp200 = fTemp120 - fTemp130;
			float fTemp201 = fTemp199 + fTemp200;
			float fTemp202 = fTemp142 - fTemp152;
			float fTemp203 = fTemp163 - fTemp173;
			float fTemp204 = fTemp202 + fTemp203;
			float fTemp205 = fTemp201 + fTemp204;
			fVec59[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp198 + fTemp205);
			fRec8[0] = fVec59[(IOTA0 - iSlow166) & 8191];
			fVec60[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp198 - fTemp205);
			fRec9[0] = fVec60[(IOTA0 - iSlow167) & 8191];
			float fTemp206 = fTemp194 - fTemp197;
			float fTemp207 = fTemp201 - fTemp204;
			fVec61[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp206 + fTemp207);
			fRec10[0] = fVec61[(IOTA0 - iSlow168) & 8191];
			fVec62[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp206 - fTemp207);
			fRec11[0] = fVec62[(IOTA0 - iSlow169) & 8191];
			float fTemp208 = fTemp192 - fTemp193;
			float fTemp209 = fTemp195 - fTemp196;
			float fTemp210 = fTemp208 + fTemp209;
			float fTemp211 = fTemp199 - fTemp200;
			float fTemp212 = fTemp202 - fTemp203;
			float fTemp213 = fTemp211 + fTemp212;
			fVec63[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp210 + fTemp213);
			fRec12[0] = fVec63[(IOTA0 - iSlow170) & 8191];
			fVec64[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp210 - fTemp213);
			fRec13[0] = fVec64[(IOTA0 - iSlow171) & 8191];
			float fTemp214 = fTemp208 - fTemp209;
			float fTemp215 = fTemp211 - fTemp212;
			fVec65[IOTA0 & 8191] = fTemp180 + fSlow4 * (fTemp214 + fTemp215);
			fRec14[0] = fVec65[(IOTA0 - iSlow172) & 8191];
			fVec66[IOTA0 & 8191] = fTemp183 + fSlow4 * (fTemp214 - fTemp215);
			fRec15[0] = fVec66[(IOTA0 - iSlow173) & 8191];
			output0[i0] = FAUSTFLOAT(fSlow0 * (fRec0[0] + fRec2[0] + fRec4[0] + fRec6[0] + fRec8[0] + fRec10[0] + fRec12[0] + fRec14[0]));
			output1[i0] = FAUSTFLOAT(fSlow0 * (fRec1[0] + fRec3[0] + fRec5[0] + fRec7[0] + fRec9[0] + fRec11[0] + fRec13[0] + fRec15[0]));
			iRec17[1] = iRec17[0];
			for (int j0 = 3; j0 > 0; j0 = j0 - 1) {
				fRec16[j0] = fRec16[j0 - 1];
			}
			fVec0[1] = fVec0[0];
			fVec1[1] = fVec1[0];
			fRec22[1] = fRec22[0];
			fRec21[2] = fRec21[1];
			fRec21[1] = fRec21[0];
			fRec20[2] = fRec20[1];
			fRec20[1] = fRec20[0];
			fRec19[2] = fRec19[1];
			fRec19[1] = fRec19[0];
			fRec18[2] = fRec18[1];
			fRec18[1] = fRec18[0];
			fRec28[1] = fRec28[0];
			fRec27[2] = fRec27[1];
			fRec27[1] = fRec27[0];
			fVec2[1] = fVec2[0];
			fRec26[1] = fRec26[0];
			fRec25[2] = fRec25[1];
			fRec25[1] = fRec25[0];
			fRec24[2] = fRec24[1];
			fRec24[1] = fRec24[0];
			fRec23[2] = fRec23[1];
			fRec23[1] = fRec23[0];
			fRec33[1] = fRec33[0];
			fRec32[2] = fRec32[1];
			fRec32[1] = fRec32[0];
			fVec3[1] = fVec3[0];
			fRec31[1] = fRec31[0];
			fRec30[2] = fRec30[1];
			fRec30[1] = fRec30[0];
			fRec29[2] = fRec29[1];
			fRec29[1] = fRec29[0];
			fRec37[1] = fRec37[0];
			fRec36[2] = fRec36[1];
			fRec36[1] = fRec36[0];
			fVec4[1] = fVec4[0];
			fRec35[1] = fRec35[0];
			fRec34[2] = fRec34[1];
			fRec34[1] = fRec34[0];
			fRec39[1] = fRec39[0];
			fRec38[2] = fRec38[1];
			fRec38[1] = fRec38[0];
			fRec44[1] = fRec44[0];
			fRec43[2] = fRec43[1];
			fRec43[1] = fRec43[0];
			fRec42[2] = fRec42[1];
			fRec42[1] = fRec42[0];
			fRec41[2] = fRec41[1];
			fRec41[1] = fRec41[0];
			fRec40[2] = fRec40[1];
			fRec40[1] = fRec40[0];
			fRec50[1] = fRec50[0];
			fRec49[2] = fRec49[1];
			fRec49[1] = fRec49[0];
			fVec5[1] = fVec5[0];
			fRec48[1] = fRec48[0];
			fRec47[2] = fRec47[1];
			fRec47[1] = fRec47[0];
			fRec46[2] = fRec46[1];
			fRec46[1] = fRec46[0];
			fRec45[2] = fRec45[1];
			fRec45[1] = fRec45[0];
			fRec55[1] = fRec55[0];
			fRec54[2] = fRec54[1];
			fRec54[1] = fRec54[0];
			fVec6[1] = fVec6[0];
			fRec53[1] = fRec53[0];
			fRec52[2] = fRec52[1];
			fRec52[1] = fRec52[0];
			fRec51[2] = fRec51[1];
			fRec51[1] = fRec51[0];
			fRec59[1] = fRec59[0];
			fRec58[2] = fRec58[1];
			fRec58[1] = fRec58[0];
			fVec7[1] = fVec7[0];
			fRec57[1] = fRec57[0];
			fRec56[2] = fRec56[1];
			fRec56[1] = fRec56[0];
			fRec61[1] = fRec61[0];
			fRec60[2] = fRec60[1];
			fRec60[1] = fRec60[0];
			fRec66[1] = fRec66[0];
			fRec65[2] = fRec65[1];
			fRec65[1] = fRec65[0];
			fRec64[2] = fRec64[1];
			fRec64[1] = fRec64[0];
			fRec63[2] = fRec63[1];
			fRec63[1] = fRec63[0];
			fRec62[2] = fRec62[1];
			fRec62[1] = fRec62[0];
			fRec72[1] = fRec72[0];
			fRec71[2] = fRec71[1];
			fRec71[1] = fRec71[0];
			fVec8[1] = fVec8[0];
			fRec70[1] = fRec70[0];
			fRec69[2] = fRec69[1];
			fRec69[1] = fRec69[0];
			fRec68[2] = fRec68[1];
			fRec68[1] = fRec68[0];
			fRec67[2] = fRec67[1];
			fRec67[1] = fRec67[0];
			fRec77[1] = fRec77[0];
			fRec76[2] = fRec76[1];
			fRec76[1] = fRec76[0];
			fVec9[1] = fVec9[0];
			fRec75[1] = fRec75[0];
			fRec74[2] = fRec74[1];
			fRec74[1] = fRec74[0];
			fRec73[2] = fRec73[1];
			fRec73[1] = fRec73[0];
			fRec81[1] = fRec81[0];
			fRec80[2] = fRec80[1];
			fRec80[1] = fRec80[0];
			fVec10[1] = fVec10[0];
			fRec79[1] = fRec79[0];
			fRec78[2] = fRec78[1];
			fRec78[1] = fRec78[0];
			fRec83[1] = fRec83[0];
			fRec82[2] = fRec82[1];
			fRec82[1] = fRec82[0];
			fRec88[1] = fRec88[0];
			fRec87[2] = fRec87[1];
			fRec87[1] = fRec87[0];
			fRec86[2] = fRec86[1];
			fRec86[1] = fRec86[0];
			fRec85[2] = fRec85[1];
			fRec85[1] = fRec85[0];
			fRec84[2] = fRec84[1];
			fRec84[1] = fRec84[0];
			fRec94[1] = fRec94[0];
			fRec93[2] = fRec93[1];
			fRec93[1] = fRec93[0];
			fVec11[1] = fVec11[0];
			fRec92[1] = fRec92[0];
			fRec91[2] = fRec91[1];
			fRec91[1] = fRec91[0];
			fRec90[2] = fRec90[1];
			fRec90[1] = fRec90[0];
			fRec89[2] = fRec89[1];
			fRec89[1] = fRec89[0];
			fRec99[1] = fRec99[0];
			fRec98[2] = fRec98[1];
			fRec98[1] = fRec98[0];
			fVec12[1] = fVec12[0];
			fRec97[1] = fRec97[0];
			fRec96[2] = fRec96[1];
			fRec96[1] = fRec96[0];
			fRec95[2] = fRec95[1];
			fRec95[1] = fRec95[0];
			fRec103[1] = fRec103[0];
			fRec102[2] = fRec102[1];
			fRec102[1] = fRec102[0];
			fVec13[1] = fVec13[0];
			fRec101[1] = fRec101[0];
			fRec100[2] = fRec100[1];
			fRec100[1] = fRec100[0];
			fRec105[1] = fRec105[0];
			fRec104[2] = fRec104[1];
			fRec104[1] = fRec104[0];
			fRec110[1] = fRec110[0];
			fRec109[2] = fRec109[1];
			fRec109[1] = fRec109[0];
			fRec108[2] = fRec108[1];
			fRec108[1] = fRec108[0];
			fRec107[2] = fRec107[1];
			fRec107[1] = fRec107[0];
			fRec106[2] = fRec106[1];
			fRec106[1] = fRec106[0];
			fRec116[1] = fRec116[0];
			fRec115[2] = fRec115[1];
			fRec115[1] = fRec115[0];
			fVec14[1] = fVec14[0];
			fRec114[1] = fRec114[0];
			fRec113[2] = fRec113[1];
			fRec113[1] = fRec113[0];
			fRec112[2] = fRec112[1];
			fRec112[1] = fRec112[0];
			fRec111[2] = fRec111[1];
			fRec111[1] = fRec111[0];
			fRec121[1] = fRec121[0];
			fRec120[2] = fRec120[1];
			fRec120[1] = fRec120[0];
			fVec15[1] = fVec15[0];
			fRec119[1] = fRec119[0];
			fRec118[2] = fRec118[1];
			fRec118[1] = fRec118[0];
			fRec117[2] = fRec117[1];
			fRec117[1] = fRec117[0];
			fRec125[1] = fRec125[0];
			fRec124[2] = fRec124[1];
			fRec124[1] = fRec124[0];
			fVec16[1] = fVec16[0];
			fRec123[1] = fRec123[0];
			fRec122[2] = fRec122[1];
			fRec122[1] = fRec122[0];
			fRec127[1] = fRec127[0];
			fRec126[2] = fRec126[1];
			fRec126[1] = fRec126[0];
			fRec132[1] = fRec132[0];
			fRec131[2] = fRec131[1];
			fRec131[1] = fRec131[0];
			fRec130[2] = fRec130[1];
			fRec130[1] = fRec130[0];
			fRec129[2] = fRec129[1];
			fRec129[1] = fRec129[0];
			fRec128[2] = fRec128[1];
			fRec128[1] = fRec128[0];
			fRec138[1] = fRec138[0];
			fRec137[2] = fRec137[1];
			fRec137[1] = fRec137[0];
			fVec17[1] = fVec17[0];
			fRec136[1] = fRec136[0];
			fRec135[2] = fRec135[1];
			fRec135[1] = fRec135[0];
			fRec134[2] = fRec134[1];
			fRec134[1] = fRec134[0];
			fRec133[2] = fRec133[1];
			fRec133[1] = fRec133[0];
			fRec143[1] = fRec143[0];
			fRec142[2] = fRec142[1];
			fRec142[1] = fRec142[0];
			fVec18[1] = fVec18[0];
			fRec141[1] = fRec141[0];
			fRec140[2] = fRec140[1];
			fRec140[1] = fRec140[0];
			fRec139[2] = fRec139[1];
			fRec139[1] = fRec139[0];
			fRec147[1] = fRec147[0];
			fRec146[2] = fRec146[1];
			fRec146[1] = fRec146[0];
			fVec19[1] = fVec19[0];
			fRec145[1] = fRec145[0];
			fRec144[2] = fRec144[1];
			fRec144[1] = fRec144[0];
			fRec149[1] = fRec149[0];
			fRec148[2] = fRec148[1];
			fRec148[1] = fRec148[0];
			fRec154[1] = fRec154[0];
			fRec153[2] = fRec153[1];
			fRec153[1] = fRec153[0];
			fRec152[2] = fRec152[1];
			fRec152[1] = fRec152[0];
			fRec151[2] = fRec151[1];
			fRec151[1] = fRec151[0];
			fRec150[2] = fRec150[1];
			fRec150[1] = fRec150[0];
			fRec160[1] = fRec160[0];
			fRec159[2] = fRec159[1];
			fRec159[1] = fRec159[0];
			fVec20[1] = fVec20[0];
			fRec158[1] = fRec158[0];
			fRec157[2] = fRec157[1];
			fRec157[1] = fRec157[0];
			fRec156[2] = fRec156[1];
			fRec156[1] = fRec156[0];
			fRec155[2] = fRec155[1];
			fRec155[1] = fRec155[0];
			fRec165[1] = fRec165[0];
			fRec164[2] = fRec164[1];
			fRec164[1] = fRec164[0];
			fVec21[1] = fVec21[0];
			fRec163[1] = fRec163[0];
			fRec162[2] = fRec162[1];
			fRec162[1] = fRec162[0];
			fRec161[2] = fRec161[1];
			fRec161[1] = fRec161[0];
			fRec169[1] = fRec169[0];
			fRec168[2] = fRec168[1];
			fRec168[1] = fRec168[0];
			fVec22[1] = fVec22[0];
			fRec167[1] = fRec167[0];
			fRec166[2] = fRec166[1];
			fRec166[1] = fRec166[0];
			fRec171[1] = fRec171[0];
			fRec170[2] = fRec170[1];
			fRec170[1] = fRec170[0];
			fRec176[1] = fRec176[0];
			fRec175[2] = fRec175[1];
			fRec175[1] = fRec175[0];
			fRec174[2] = fRec174[1];
			fRec174[1] = fRec174[0];
			fRec173[2] = fRec173[1];
			fRec173[1] = fRec173[0];
			fRec172[2] = fRec172[1];
			fRec172[1] = fRec172[0];
			fRec182[1] = fRec182[0];
			fRec181[2] = fRec181[1];
			fRec181[1] = fRec181[0];
			fVec23[1] = fVec23[0];
			fRec180[1] = fRec180[0];
			fRec179[2] = fRec179[1];
			fRec179[1] = fRec179[0];
			fRec178[2] = fRec178[1];
			fRec178[1] = fRec178[0];
			fRec177[2] = fRec177[1];
			fRec177[1] = fRec177[0];
			fRec187[1] = fRec187[0];
			fRec186[2] = fRec186[1];
			fRec186[1] = fRec186[0];
			fVec24[1] = fVec24[0];
			fRec185[1] = fRec185[0];
			fRec184[2] = fRec184[1];
			fRec184[1] = fRec184[0];
			fRec183[2] = fRec183[1];
			fRec183[1] = fRec183[0];
			fRec191[1] = fRec191[0];
			fRec190[2] = fRec190[1];
			fRec190[1] = fRec190[0];
			fVec25[1] = fVec25[0];
			fRec189[1] = fRec189[0];
			fRec188[2] = fRec188[1];
			fRec188[1] = fRec188[0];
			fRec193[1] = fRec193[0];
			fRec192[2] = fRec192[1];
			fRec192[1] = fRec192[0];
			fRec198[1] = fRec198[0];
			fRec197[2] = fRec197[1];
			fRec197[1] = fRec197[0];
			fRec196[2] = fRec196[1];
			fRec196[1] = fRec196[0];
			fRec195[2] = fRec195[1];
			fRec195[1] = fRec195[0];
			fRec194[2] = fRec194[1];
			fRec194[1] = fRec194[0];
			fRec204[1] = fRec204[0];
			fRec203[2] = fRec203[1];
			fRec203[1] = fRec203[0];
			fVec26[1] = fVec26[0];
			fRec202[1] = fRec202[0];
			fRec201[2] = fRec201[1];
			fRec201[1] = fRec201[0];
			fRec200[2] = fRec200[1];
			fRec200[1] = fRec200[0];
			fRec199[2] = fRec199[1];
			fRec199[1] = fRec199[0];
			fRec209[1] = fRec209[0];
			fRec208[2] = fRec208[1];
			fRec208[1] = fRec208[0];
			fVec27[1] = fVec27[0];
			fRec207[1] = fRec207[0];
			fRec206[2] = fRec206[1];
			fRec206[1] = fRec206[0];
			fRec205[2] = fRec205[1];
			fRec205[1] = fRec205[0];
			fRec213[1] = fRec213[0];
			fRec212[2] = fRec212[1];
			fRec212[1] = fRec212[0];
			fVec28[1] = fVec28[0];
			fRec211[1] = fRec211[0];
			fRec210[2] = fRec210[1];
			fRec210[1] = fRec210[0];
			fRec215[1] = fRec215[0];
			fRec214[2] = fRec214[1];
			fRec214[1] = fRec214[0];
			fRec220[1] = fRec220[0];
			fRec219[2] = fRec219[1];
			fRec219[1] = fRec219[0];
			fRec218[2] = fRec218[1];
			fRec218[1] = fRec218[0];
			fRec217[2] = fRec217[1];
			fRec217[1] = fRec217[0];
			fRec216[2] = fRec216[1];
			fRec216[1] = fRec216[0];
			fRec226[1] = fRec226[0];
			fRec225[2] = fRec225[1];
			fRec225[1] = fRec225[0];
			fVec29[1] = fVec29[0];
			fRec224[1] = fRec224[0];
			fRec223[2] = fRec223[1];
			fRec223[1] = fRec223[0];
			fRec222[2] = fRec222[1];
			fRec222[1] = fRec222[0];
			fRec221[2] = fRec221[1];
			fRec221[1] = fRec221[0];
			fRec231[1] = fRec231[0];
			fRec230[2] = fRec230[1];
			fRec230[1] = fRec230[0];
			fVec30[1] = fVec30[0];
			fRec229[1] = fRec229[0];
			fRec228[2] = fRec228[1];
			fRec228[1] = fRec228[0];
			fRec227[2] = fRec227[1];
			fRec227[1] = fRec227[0];
			fRec235[1] = fRec235[0];
			fRec234[2] = fRec234[1];
			fRec234[1] = fRec234[0];
			fVec31[1] = fVec31[0];
			fRec233[1] = fRec233[0];
			fRec232[2] = fRec232[1];
			fRec232[1] = fRec232[0];
			fRec237[1] = fRec237[0];
			fRec236[2] = fRec236[1];
			fRec236[1] = fRec236[0];
			fRec242[1] = fRec242[0];
			fRec241[2] = fRec241[1];
			fRec241[1] = fRec241[0];
			fRec240[2] = fRec240[1];
			fRec240[1] = fRec240[0];
			fRec239[2] = fRec239[1];
			fRec239[1] = fRec239[0];
			fRec238[2] = fRec238[1];
			fRec238[1] = fRec238[0];
			fRec248[1] = fRec248[0];
			fRec247[2] = fRec247[1];
			fRec247[1] = fRec247[0];
			fVec32[1] = fVec32[0];
			fRec246[1] = fRec246[0];
			fRec245[2] = fRec245[1];
			fRec245[1] = fRec245[0];
			fRec244[2] = fRec244[1];
			fRec244[1] = fRec244[0];
			fRec243[2] = fRec243[1];
			fRec243[1] = fRec243[0];
			fRec253[1] = fRec253[0];
			fRec252[2] = fRec252[1];
			fRec252[1] = fRec252[0];
			fVec33[1] = fVec33[0];
			fRec251[1] = fRec251[0];
			fRec250[2] = fRec250[1];
			fRec250[1] = fRec250[0];
			fRec249[2] = fRec249[1];
			fRec249[1] = fRec249[0];
			fRec257[1] = fRec257[0];
			fRec256[2] = fRec256[1];
			fRec256[1] = fRec256[0];
			fVec34[1] = fVec34[0];
			fRec255[1] = fRec255[0];
			fRec254[2] = fRec254[1];
			fRec254[1] = fRec254[0];
			fRec259[1] = fRec259[0];
			fRec258[2] = fRec258[1];
			fRec258[1] = fRec258[0];
			fRec264[1] = fRec264[0];
			fRec263[2] = fRec263[1];
			fRec263[1] = fRec263[0];
			fRec262[2] = fRec262[1];
			fRec262[1] = fRec262[0];
			fRec261[2] = fRec261[1];
			fRec261[1] = fRec261[0];
			fRec260[2] = fRec260[1];
			fRec260[1] = fRec260[0];
			fRec270[1] = fRec270[0];
			fRec269[2] = fRec269[1];
			fRec269[1] = fRec269[0];
			fVec35[1] = fVec35[0];
			fRec268[1] = fRec268[0];
			fRec267[2] = fRec267[1];
			fRec267[1] = fRec267[0];
			fRec266[2] = fRec266[1];
			fRec266[1] = fRec266[0];
			fRec265[2] = fRec265[1];
			fRec265[1] = fRec265[0];
			fRec275[1] = fRec275[0];
			fRec274[2] = fRec274[1];
			fRec274[1] = fRec274[0];
			fVec36[1] = fVec36[0];
			fRec273[1] = fRec273[0];
			fRec272[2] = fRec272[1];
			fRec272[1] = fRec272[0];
			fRec271[2] = fRec271[1];
			fRec271[1] = fRec271[0];
			fRec279[1] = fRec279[0];
			fRec278[2] = fRec278[1];
			fRec278[1] = fRec278[0];
			fVec37[1] = fVec37[0];
			fRec277[1] = fRec277[0];
			fRec276[2] = fRec276[1];
			fRec276[1] = fRec276[0];
			fRec281[1] = fRec281[0];
			fRec280[2] = fRec280[1];
			fRec280[1] = fRec280[0];
			fRec286[1] = fRec286[0];
			fRec285[2] = fRec285[1];
			fRec285[1] = fRec285[0];
			fRec284[2] = fRec284[1];
			fRec284[1] = fRec284[0];
			fRec283[2] = fRec283[1];
			fRec283[1] = fRec283[0];
			fRec282[2] = fRec282[1];
			fRec282[1] = fRec282[0];
			fRec292[1] = fRec292[0];
			fRec291[2] = fRec291[1];
			fRec291[1] = fRec291[0];
			fVec38[1] = fVec38[0];
			fRec290[1] = fRec290[0];
			fRec289[2] = fRec289[1];
			fRec289[1] = fRec289[0];
			fRec288[2] = fRec288[1];
			fRec288[1] = fRec288[0];
			fRec287[2] = fRec287[1];
			fRec287[1] = fRec287[0];
			fRec297[1] = fRec297[0];
			fRec296[2] = fRec296[1];
			fRec296[1] = fRec296[0];
			fVec39[1] = fVec39[0];
			fRec295[1] = fRec295[0];
			fRec294[2] = fRec294[1];
			fRec294[1] = fRec294[0];
			fRec293[2] = fRec293[1];
			fRec293[1] = fRec293[0];
			fRec301[1] = fRec301[0];
			fRec300[2] = fRec300[1];
			fRec300[1] = fRec300[0];
			fVec40[1] = fVec40[0];
			fRec299[1] = fRec299[0];
			fRec298[2] = fRec298[1];
			fRec298[1] = fRec298[0];
			fRec303[1] = fRec303[0];
			fRec302[2] = fRec302[1];
			fRec302[1] = fRec302[0];
			fRec308[1] = fRec308[0];
			fRec307[2] = fRec307[1];
			fRec307[1] = fRec307[0];
			fRec306[2] = fRec306[1];
			fRec306[1] = fRec306[0];
			fRec305[2] = fRec305[1];
			fRec305[1] = fRec305[0];
			fRec304[2] = fRec304[1];
			fRec304[1] = fRec304[0];
			fRec314[1] = fRec314[0];
			fRec313[2] = fRec313[1];
			fRec313[1] = fRec313[0];
			fVec41[1] = fVec41[0];
			fRec312[1] = fRec312[0];
			fRec311[2] = fRec311[1];
			fRec311[1] = fRec311[0];
			fRec310[2] = fRec310[1];
			fRec310[1] = fRec310[0];
			fRec309[2] = fRec309[1];
			fRec309[1] = fRec309[0];
			fRec319[1] = fRec319[0];
			fRec318[2] = fRec318[1];
			fRec318[1] = fRec318[0];
			fVec42[1] = fVec42[0];
			fRec317[1] = fRec317[0];
			fRec316[2] = fRec316[1];
			fRec316[1] = fRec316[0];
			fRec315[2] = fRec315[1];
			fRec315[1] = fRec315[0];
			fRec323[1] = fRec323[0];
			fRec322[2] = fRec322[1];
			fRec322[1] = fRec322[0];
			fVec43[1] = fVec43[0];
			fRec321[1] = fRec321[0];
			fRec320[2] = fRec320[1];
			fRec320[1] = fRec320[0];
			fRec325[1] = fRec325[0];
			fRec324[2] = fRec324[1];
			fRec324[1] = fRec324[0];
			fRec330[1] = fRec330[0];
			fRec329[2] = fRec329[1];
			fRec329[1] = fRec329[0];
			fRec328[2] = fRec328[1];
			fRec328[1] = fRec328[0];
			fRec327[2] = fRec327[1];
			fRec327[1] = fRec327[0];
			fRec326[2] = fRec326[1];
			fRec326[1] = fRec326[0];
			fRec336[1] = fRec336[0];
			fRec335[2] = fRec335[1];
			fRec335[1] = fRec335[0];
			fVec44[1] = fVec44[0];
			fRec334[1] = fRec334[0];
			fRec333[2] = fRec333[1];
			fRec333[1] = fRec333[0];
			fRec332[2] = fRec332[1];
			fRec332[1] = fRec332[0];
			fRec331[2] = fRec331[1];
			fRec331[1] = fRec331[0];
			fRec341[1] = fRec341[0];
			fRec340[2] = fRec340[1];
			fRec340[1] = fRec340[0];
			fVec45[1] = fVec45[0];
			fRec339[1] = fRec339[0];
			fRec338[2] = fRec338[1];
			fRec338[1] = fRec338[0];
			fRec337[2] = fRec337[1];
			fRec337[1] = fRec337[0];
			fRec345[1] = fRec345[0];
			fRec344[2] = fRec344[1];
			fRec344[1] = fRec344[0];
			fVec46[1] = fVec46[0];
			fRec343[1] = fRec343[0];
			fRec342[2] = fRec342[1];
			fRec342[1] = fRec342[0];
			fRec347[1] = fRec347[0];
			fRec346[2] = fRec346[1];
			fRec346[1] = fRec346[0];
			fRec352[1] = fRec352[0];
			fRec351[2] = fRec351[1];
			fRec351[1] = fRec351[0];
			fRec350[2] = fRec350[1];
			fRec350[1] = fRec350[0];
			fRec349[2] = fRec349[1];
			fRec349[1] = fRec349[0];
			fRec348[2] = fRec348[1];
			fRec348[1] = fRec348[0];
			fRec358[1] = fRec358[0];
			fRec357[2] = fRec357[1];
			fRec357[1] = fRec357[0];
			fVec47[1] = fVec47[0];
			fRec356[1] = fRec356[0];
			fRec355[2] = fRec355[1];
			fRec355[1] = fRec355[0];
			fRec354[2] = fRec354[1];
			fRec354[1] = fRec354[0];
			fRec353[2] = fRec353[1];
			fRec353[1] = fRec353[0];
			fRec363[1] = fRec363[0];
			fRec362[2] = fRec362[1];
			fRec362[1] = fRec362[0];
			fVec48[1] = fVec48[0];
			fRec361[1] = fRec361[0];
			fRec360[2] = fRec360[1];
			fRec360[1] = fRec360[0];
			fRec359[2] = fRec359[1];
			fRec359[1] = fRec359[0];
			fRec367[1] = fRec367[0];
			fRec366[2] = fRec366[1];
			fRec366[1] = fRec366[0];
			fVec49[1] = fVec49[0];
			fRec365[1] = fRec365[0];
			fRec364[2] = fRec364[1];
			fRec364[1] = fRec364[0];
			fRec369[1] = fRec369[0];
			fRec368[2] = fRec368[1];
			fRec368[1] = fRec368[0];
			IOTA0 = IOTA0 + 1;
			fRec0[2] = fRec0[1];
			fRec0[1] = fRec0[0];
			fVec51[1] = fVec51[0];
			fRec1[2] = fRec1[1];
			fRec1[1] = fRec1[0];
			fRec2[2] = fRec2[1];
			fRec2[1] = fRec2[0];
			fRec3[2] = fRec3[1];
			fRec3[1] = fRec3[0];
			fRec4[2] = fRec4[1];
			fRec4[1] = fRec4[0];
			fRec5[2] = fRec5[1];
			fRec5[1] = fRec5[0];
			fRec6[2] = fRec6[1];
			fRec6[1] = fRec6[0];
			fRec7[2] = fRec7[1];
			fRec7[1] = fRec7[0];
			fRec8[2] = fRec8[1];
			fRec8[1] = fRec8[0];
			fRec9[2] = fRec9[1];
			fRec9[1] = fRec9[0];
			fRec10[2] = fRec10[1];
			fRec10[1] = fRec10[0];
			fRec11[2] = fRec11[1];
			fRec11[1] = fRec11[0];
			fRec12[2] = fRec12[1];
			fRec12[1] = fRec12[0];
			fRec13[2] = fRec13[1];
			fRec13[1] = fRec13[0];
			fRec14[2] = fRec14[1];
			fRec14[1] = fRec14[0];
			fRec15[2] = fRec15[1];
			fRec15[1] = fRec15[0];
		}
	}

};

#endif
