// Size = 916
ID_0 = vslider("[2] Level [unit:dB] [style:knob]    [tooltip: Output scale factor]/[5] Output/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",16.79f,-7e+01f,4e+01f,0.1f);
ID_1 = 0.05f*ID_0;
ID_2 = pow(1e+01f, ID_1);
ID_3 = 0.001f*ID_2;
ID_4 = W28;
ID_5 = proj0(ID_4);
ID_6 = ID_5';
ID_7 = 0.999f*ID_6;
ID_8 = ID_3+ID_7;
ID_9 = letrec(W28 = (ID_8));
ID_10 = proj0(ID_9);
ID_11 = ID_10@0;
ID_12 = vslider("[1] Dry/Wet Mix [style:knob]    [tooltip: -1 = dry, 1 = wet]/[5] Output/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",0.4492f,-1.0f,1.0f,0.01f);
ID_13 = 0.001f*ID_12;
ID_14 = W27;
ID_15 = proj0(ID_14);
ID_16 = ID_15';
ID_17 = 0.999f*ID_16;
ID_18 = ID_13+ID_17;
ID_19 = letrec(W27 = (ID_18));
ID_20 = proj0(ID_19);
ID_21 = ID_20@0;
ID_22 = (ID_21+1.0f);
ID_23 = float(fSamplingFreq);
ID_24 = max(1.0f, ID_23);
ID_25 = min(1.92e+05f, ID_24);
ID_26 = 6.2831855f/ID_25;
ID_27 = vslider("[1] Eq2 Freq [unit:Hz] [style:knob] [scale:log]    [tooltip: Center-frequency of second-order Regalia-Mitra peaking equalizer section 2]/[4] RM Peaking Equalizer 2/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",1.5e+03f,1.6e+02f,1e+04f,1.0f);
ID_28 = vslider("[2] Eq2 Level [unit:dB] [style:knob]    [tooltip: Peak level in dB of second-order Regalia-Mitra peaking equalizer section 2]/[4] RM Peaking Equalizer 2/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",0.0f,-15.0f,15.0f,0.1f);
ID_29 = 0.05f*ID_28;
ID_30 = pow(1e+01f, ID_29);
ID_31 = max(0.0f, ID_30);
ID_32 = sqrt(ID_31);
ID_33 = ID_27/ID_32;
ID_34 = ID_26*ID_33;
ID_35 = (1.0f-ID_34);
ID_36 = (ID_34+1.0f);
ID_37 = ID_35/ID_36;
ID_38 = vslider("[1] Eq1 Freq [unit:Hz] [style:knob] [scale:log]    [tooltip: Center-frequency of second-order Regalia-Mitra peaking equalizer section 1]/[3] RM Peaking Equalizer 1/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",315.0f,4e+01f,2.5e+03f,1.0f);
ID_39 = vslider("[2] Eq1 Level [unit:dB] [style:knob]    [tooltip: Peak level in dB of second-order Regalia-Mitra peaking equalizer section 1]/[3] RM Peaking Equalizer 1/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",0.0f,-15.0f,15.0f,0.1f);
ID_40 = 0.05f*ID_39;
ID_41 = pow(1e+01f, ID_40);
ID_42 = max(0.0f, ID_41);
ID_43 = sqrt(ID_42);
ID_44 = ID_38/ID_43;
ID_45 = ID_26*ID_44;
ID_46 = (1.0f-ID_45);
ID_47 = (ID_45+1.0f);
ID_48 = ID_46/ID_47;
ID_49 = W22;
ID_50 = proj0(ID_49);
ID_51 = ID_50';
ID_52 = 0.6f*ID_51;
ID_53 = vslider("[4] HF Damping [unit:Hz] [style:knob] [scale:log]    [tooltip: Frequency (Hz) at which the high-frequency T60 is half the middle-band's T60]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",6e+03f,1.5e+03f,2.352e+04f,1.0f);
ID_54 = ID_26*ID_53;
ID_55 = cos(ID_54);
ID_56 = 0.219991f*ID_25;
ID_57 = ID_56+0.5f;
ID_58 = floor(ID_57);
ID_59 = ID_58/ID_25;
ID_60 = 6.9077554f*ID_59;
ID_61 = vslider("[3] Mid RT60 [unit:s] [style:knob] [scale:log]     [tooltip: T60 = time (in seconds) to decay 60dB in middle band]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",2.0f,1.0f,8.0f,0.1f);
ID_62 = ID_60/ID_61;
ID_63 = -1.0f*ID_62;
ID_64 = exp(ID_63);
ID_65 = pow(ID_64, 2.0f);
ID_66 = ID_55*ID_65;
ID_67 = (1.0f-ID_66);
ID_68 = (1.0f-ID_65);
ID_69 = ID_67/ID_68;
ID_70 = pow(ID_67, 2.0f);
ID_71 = pow(ID_68, 2.0f);
ID_72 = ID_70/ID_71;
ID_73 = ID_72+-1.0f;
ID_74 = max(0.0f, ID_73);
ID_75 = sqrt(ID_74);
ID_76 = (ID_69-ID_75);
ID_77 = W23;
ID_78 = proj0(ID_77);
ID_79 = ID_78';
ID_80 = ID_76*ID_79;
ID_81 = 1.0f-ID_69;
ID_82 = (ID_75+ID_81);
ID_83 = ID_64*ID_82;
ID_84 = W0;
ID_85 = proj7(ID_84);
ID_86 = ID_85';
ID_87 = vslider("[2] Low RT60 [unit:s] [style:knob] [scale:log]     [style:knob] [tooltip: T60 = time (in seconds) to decay 60dB in low-frequency band]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",3.0f,1.0f,8.0f,0.1f);
ID_88 = ID_60/ID_87;
ID_89 = -1.0f*ID_88;
ID_90 = exp(ID_89);
ID_91 = ID_90/ID_64;
ID_92 = (ID_91+-1.0f);
ID_93 = 3.1415927f/ID_25;
ID_94 = vslider("[1] LF X [unit:Hz] [style:knob] [scale:log]    [tooltip: Crossover frequency (Hz) separating low and middle frequencies]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",2e+02f,5e+01f,1e+03f,1.0f);
ID_95 = ID_93*ID_94;
ID_96 = tan(ID_95);
ID_97 = 1.0f/ID_96;
ID_98 = (ID_97+1.0f);
ID_99 = 1.0f/ID_98;
ID_100 = (1.0f-ID_97);
ID_101 = W24;
ID_102 = proj0(ID_101);
ID_103 = ID_102';
ID_104 = ID_100*ID_103;
ID_105 = ID_85@2;
ID_106 = ID_86+ID_105;
ID_107 = (ID_104-ID_106);
ID_108 = ID_99*ID_107;
ID_109 = -1.0f*ID_108;
ID_110 = letrec(W24 = (ID_109));
ID_111 = proj0(ID_110);
ID_112 = ID_111@0;
ID_113 = ID_92*ID_112;
ID_114 = (ID_86+ID_113);
ID_115 = ID_83*ID_114;
ID_116 = ID_80+ID_115;
ID_117 = letrec(W23 = (ID_116));
ID_118 = proj0(ID_117);
ID_119 = ID_118@0;
ID_120 = 0.35355338f*ID_119;
ID_121 = (ID_120+1e-20f);
ID_122 = 0.019123f*ID_25;
ID_123 = ID_122+0.5f;
ID_124 = floor(ID_123);
ID_125 = ID_58-ID_124;
ID_126 = int(ID_125);
ID_127 = (ID_126&16383);
ID_128 = ID_121@ID_127;
ID_129 = ID_52+ID_128;
ID_130 = 0.001f*ID_25;
ID_131 = vslider("[1] In Delay [unit:ms] [style:knob]       [tooltip: Delay in ms before reverberation begins]/[1] Input/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",6e+01f,2e+01f,1e+02f,1.0f);
ID_132 = ID_130*ID_131;
ID_133 = int(ID_132);
ID_134 = (ID_133&8191);
ID_135 = IN[1]@ID_134;
ID_136 = 0.3f*ID_135;
ID_137 = (ID_129-ID_136);
ID_138 = ID_124+-1.0f;
ID_139 = int(ID_138);
ID_140 = (ID_139&1023);
ID_141 = ID_137@ID_140;
ID_142 = (ID_136-ID_129);
ID_143 = 0.6f*ID_142;
ID_144 = letrec(W22 = (ID_141, ID_143));
ID_145 = proj0(ID_144);
ID_146 = ID_145';
ID_147 = W19;
ID_148 = proj0(ID_147);
ID_149 = ID_148';
ID_150 = 0.6f*ID_149;
ID_151 = 0.256891f*ID_25;
ID_152 = ID_151+0.5f;
ID_153 = floor(ID_152);
ID_154 = ID_153/ID_25;
ID_155 = 6.9077554f*ID_154;
ID_156 = ID_155/ID_61;
ID_157 = -1.0f*ID_156;
ID_158 = exp(ID_157);
ID_159 = pow(ID_158, 2.0f);
ID_160 = ID_55*ID_159;
ID_161 = (1.0f-ID_160);
ID_162 = (1.0f-ID_159);
ID_163 = ID_161/ID_162;
ID_164 = pow(ID_161, 2.0f);
ID_165 = pow(ID_162, 2.0f);
ID_166 = ID_164/ID_165;
ID_167 = ID_166+-1.0f;
ID_168 = max(0.0f, ID_167);
ID_169 = sqrt(ID_168);
ID_170 = (ID_163-ID_169);
ID_171 = W20;
ID_172 = proj0(ID_171);
ID_173 = ID_172';
ID_174 = ID_170*ID_173;
ID_175 = 1.0f-ID_163;
ID_176 = (ID_169+ID_175);
ID_177 = ID_158*ID_176;
ID_178 = proj3(ID_84);
ID_179 = ID_178';
ID_180 = ID_155/ID_87;
ID_181 = -1.0f*ID_180;
ID_182 = exp(ID_181);
ID_183 = ID_182/ID_158;
ID_184 = (ID_183+-1.0f);
ID_185 = W21;
ID_186 = proj0(ID_185);
ID_187 = ID_186';
ID_188 = ID_100*ID_187;
ID_189 = ID_178@2;
ID_190 = ID_179+ID_189;
ID_191 = (ID_188-ID_190);
ID_192 = ID_99*ID_191;
ID_193 = -1.0f*ID_192;
ID_194 = letrec(W21 = (ID_193));
ID_195 = proj0(ID_194);
ID_196 = ID_195@0;
ID_197 = ID_184*ID_196;
ID_198 = (ID_179+ID_197);
ID_199 = ID_177*ID_198;
ID_200 = ID_174+ID_199;
ID_201 = letrec(W20 = (ID_200));
ID_202 = proj0(ID_201);
ID_203 = ID_202@0;
ID_204 = 0.35355338f*ID_203;
ID_205 = (ID_204+1e-20f);
ID_206 = 0.027333f*ID_25;
ID_207 = ID_206+0.5f;
ID_208 = floor(ID_207);
ID_209 = ID_153-ID_208;
ID_210 = int(ID_209);
ID_211 = (ID_210&16383);
ID_212 = ID_205@ID_211;
ID_213 = ID_150+ID_212;
ID_214 = (ID_213-ID_136);
ID_215 = ID_208+-1.0f;
ID_216 = int(ID_215);
ID_217 = (ID_216&2047);
ID_218 = ID_214@ID_217;
ID_219 = (ID_136-ID_213);
ID_220 = 0.6f*ID_219;
ID_221 = letrec(W19 = (ID_218, ID_220));
ID_222 = proj0(ID_221);
ID_223 = ID_222';
ID_224 = 0.192303f*ID_25;
ID_225 = ID_224+0.5f;
ID_226 = floor(ID_225);
ID_227 = ID_226/ID_25;
ID_228 = 6.9077554f*ID_227;
ID_229 = ID_228/ID_61;
ID_230 = -1.0f*ID_229;
ID_231 = exp(ID_230);
ID_232 = pow(ID_231, 2.0f);
ID_233 = ID_55*ID_232;
ID_234 = (1.0f-ID_233);
ID_235 = (1.0f-ID_232);
ID_236 = ID_234/ID_235;
ID_237 = pow(ID_234, 2.0f);
ID_238 = pow(ID_235, 2.0f);
ID_239 = ID_237/ID_238;
ID_240 = ID_239+-1.0f;
ID_241 = max(0.0f, ID_240);
ID_242 = sqrt(ID_241);
ID_243 = (ID_236-ID_242);
ID_244 = W17;
ID_245 = proj0(ID_244);
ID_246 = ID_245';
ID_247 = ID_243*ID_246;
ID_248 = 1.0f-ID_236;
ID_249 = (ID_242+ID_248);
ID_250 = ID_231*ID_249;
ID_251 = proj5(ID_84);
ID_252 = ID_251';
ID_253 = ID_228/ID_87;
ID_254 = -1.0f*ID_253;
ID_255 = exp(ID_254);
ID_256 = ID_255/ID_231;
ID_257 = (ID_256+-1.0f);
ID_258 = W18;
ID_259 = proj0(ID_258);
ID_260 = ID_259';
ID_261 = ID_100*ID_260;
ID_262 = ID_251@2;
ID_263 = ID_252+ID_262;
ID_264 = (ID_261-ID_263);
ID_265 = ID_99*ID_264;
ID_266 = -1.0f*ID_265;
ID_267 = letrec(W18 = (ID_266));
ID_268 = proj0(ID_267);
ID_269 = ID_268@0;
ID_270 = ID_257*ID_269;
ID_271 = (ID_252+ID_270);
ID_272 = ID_250*ID_271;
ID_273 = ID_247+ID_272;
ID_274 = letrec(W17 = (ID_273));
ID_275 = proj0(ID_274);
ID_276 = ID_275@0;
ID_277 = 0.35355338f*ID_276;
ID_278 = (ID_277+1e-20f);
ID_279 = 0.029291f*ID_25;
ID_280 = ID_279+0.5f;
ID_281 = floor(ID_280);
ID_282 = ID_226-ID_281;
ID_283 = int(ID_282);
ID_284 = (ID_283&8191);
ID_285 = ID_278@ID_284;
ID_286 = W16;
ID_287 = proj0(ID_286);
ID_288 = ID_287';
ID_289 = 0.6f*ID_288;
ID_290 = ID_136+ID_289;
ID_291 = (ID_285+ID_290);
ID_292 = ID_281+-1.0f;
ID_293 = int(ID_292);
ID_294 = (ID_293&2047);
ID_295 = ID_291@ID_294;
ID_296 = 0.6f*ID_291;
ID_297 = -1.0f*ID_296;
ID_298 = letrec(W16 = (ID_295, ID_297));
ID_299 = proj0(ID_298);
ID_300 = ID_299';
ID_301 = W13;
ID_302 = proj0(ID_301);
ID_303 = ID_302';
ID_304 = 0.6f*ID_303;
ID_305 = 0.210389f*ID_25;
ID_306 = ID_305+0.5f;
ID_307 = floor(ID_306);
ID_308 = ID_307/ID_25;
ID_309 = 6.9077554f*ID_308;
ID_310 = ID_309/ID_61;
ID_311 = -1.0f*ID_310;
ID_312 = exp(ID_311);
ID_313 = pow(ID_312, 2.0f);
ID_314 = ID_55*ID_313;
ID_315 = (1.0f-ID_314);
ID_316 = (1.0f-ID_313);
ID_317 = ID_315/ID_316;
ID_318 = pow(ID_315, 2.0f);
ID_319 = pow(ID_316, 2.0f);
ID_320 = ID_318/ID_319;
ID_321 = ID_320+-1.0f;
ID_322 = max(0.0f, ID_321);
ID_323 = sqrt(ID_322);
ID_324 = (ID_317-ID_323);
ID_325 = W14;
ID_326 = proj0(ID_325);
ID_327 = ID_326';
ID_328 = ID_324*ID_327;
ID_329 = 1.0f-ID_317;
ID_330 = (ID_323+ID_329);
ID_331 = ID_312*ID_330;
ID_332 = proj1(ID_84);
ID_333 = ID_332';
ID_334 = ID_309/ID_87;
ID_335 = -1.0f*ID_334;
ID_336 = exp(ID_335);
ID_337 = ID_336/ID_312;
ID_338 = (ID_337+-1.0f);
ID_339 = W15;
ID_340 = proj0(ID_339);
ID_341 = ID_340';
ID_342 = ID_100*ID_341;
ID_343 = ID_332@2;
ID_344 = ID_333+ID_343;
ID_345 = (ID_342-ID_344);
ID_346 = ID_99*ID_345;
ID_347 = -1.0f*ID_346;
ID_348 = letrec(W15 = (ID_347));
ID_349 = proj0(ID_348);
ID_350 = ID_349@0;
ID_351 = ID_338*ID_350;
ID_352 = (ID_333+ID_351);
ID_353 = ID_331*ID_352;
ID_354 = ID_328+ID_353;
ID_355 = letrec(W14 = (ID_354));
ID_356 = proj0(ID_355);
ID_357 = ID_356@0;
ID_358 = 0.35355338f*ID_357;
ID_359 = (ID_358+1e-20f);
ID_360 = 0.024421f*ID_25;
ID_361 = ID_360+0.5f;
ID_362 = floor(ID_361);
ID_363 = ID_307-ID_362;
ID_364 = int(ID_363);
ID_365 = (ID_364&16383);
ID_366 = ID_359@ID_365;
ID_367 = ID_304+ID_366;
ID_368 = (ID_136+ID_367);
ID_369 = ID_362+-1.0f;
ID_370 = int(ID_369);
ID_371 = (ID_370&2047);
ID_372 = ID_368@ID_371;
ID_373 = 0.6f*ID_368;
ID_374 = -1.0f*ID_373;
ID_375 = letrec(W13 = (ID_372, ID_374));
ID_376 = proj0(ID_375);
ID_377 = ID_376';
ID_378 = 0.125f*ID_25;
ID_379 = ID_378+0.5f;
ID_380 = floor(ID_379);
ID_381 = ID_380/ID_25;
ID_382 = 6.9077554f*ID_381;
ID_383 = ID_382/ID_61;
ID_384 = -1.0f*ID_383;
ID_385 = exp(ID_384);
ID_386 = pow(ID_385, 2.0f);
ID_387 = ID_55*ID_386;
ID_388 = (1.0f-ID_387);
ID_389 = (1.0f-ID_386);
ID_390 = ID_388/ID_389;
ID_391 = pow(ID_388, 2.0f);
ID_392 = pow(ID_389, 2.0f);
ID_393 = ID_391/ID_392;
ID_394 = ID_393+-1.0f;
ID_395 = max(0.0f, ID_394);
ID_396 = sqrt(ID_395);
ID_397 = (ID_390-ID_396);
ID_398 = W11;
ID_399 = proj0(ID_398);
ID_400 = ID_399';
ID_401 = ID_397*ID_400;
ID_402 = 1.0f-ID_390;
ID_403 = (ID_396+ID_402);
ID_404 = ID_385*ID_403;
ID_405 = proj6(ID_84);
ID_406 = ID_405';
ID_407 = ID_382/ID_87;
ID_408 = -1.0f*ID_407;
ID_409 = exp(ID_408);
ID_410 = ID_409/ID_385;
ID_411 = (ID_410+-1.0f);
ID_412 = W12;
ID_413 = proj0(ID_412);
ID_414 = ID_413';
ID_415 = ID_100*ID_414;
ID_416 = ID_405@2;
ID_417 = ID_406+ID_416;
ID_418 = (ID_415-ID_417);
ID_419 = ID_99*ID_418;
ID_420 = -1.0f*ID_419;
ID_421 = letrec(W12 = (ID_420));
ID_422 = proj0(ID_421);
ID_423 = ID_422@0;
ID_424 = ID_411*ID_423;
ID_425 = (ID_406+ID_424);
ID_426 = ID_404*ID_425;
ID_427 = ID_401+ID_426;
ID_428 = letrec(W11 = (ID_427));
ID_429 = proj0(ID_428);
ID_430 = ID_429@0;
ID_431 = 0.35355338f*ID_430;
ID_432 = (ID_431+1e-20f);
ID_433 = 0.013458f*ID_25;
ID_434 = ID_433+0.5f;
ID_435 = floor(ID_434);
ID_436 = ID_380-ID_435;
ID_437 = int(ID_436);
ID_438 = (ID_437&8191);
ID_439 = ID_432@ID_438;
ID_440 = IN[0]@ID_134;
ID_441 = 0.3f*ID_440;
ID_442 = W10;
ID_443 = proj0(ID_442);
ID_444 = ID_443';
ID_445 = 0.6f*ID_444;
ID_446 = ID_441+ID_445;
ID_447 = (ID_439-ID_446);
ID_448 = ID_435+-1.0f;
ID_449 = int(ID_448);
ID_450 = (ID_449&1023);
ID_451 = ID_447@ID_450;
ID_452 = 0.6f*ID_447;
ID_453 = letrec(W10 = (ID_451, ID_452));
ID_454 = proj0(ID_453);
ID_455 = ID_454';
ID_456 = 0.127837f*ID_25;
ID_457 = ID_456+0.5f;
ID_458 = floor(ID_457);
ID_459 = ID_458/ID_25;
ID_460 = 6.9077554f*ID_459;
ID_461 = ID_460/ID_61;
ID_462 = -1.0f*ID_461;
ID_463 = exp(ID_462);
ID_464 = pow(ID_463, 2.0f);
ID_465 = ID_55*ID_464;
ID_466 = (1.0f-ID_465);
ID_467 = (1.0f-ID_464);
ID_468 = ID_466/ID_467;
ID_469 = pow(ID_466, 2.0f);
ID_470 = pow(ID_467, 2.0f);
ID_471 = ID_469/ID_470;
ID_472 = ID_471+-1.0f;
ID_473 = max(0.0f, ID_472);
ID_474 = sqrt(ID_473);
ID_475 = (ID_468-ID_474);
ID_476 = W8;
ID_477 = proj0(ID_476);
ID_478 = ID_477';
ID_479 = ID_475*ID_478;
ID_480 = 1.0f-ID_468;
ID_481 = (ID_474+ID_480);
ID_482 = ID_463*ID_481;
ID_483 = proj2(ID_84);
ID_484 = ID_483';
ID_485 = ID_460/ID_87;
ID_486 = -1.0f*ID_485;
ID_487 = exp(ID_486);
ID_488 = ID_487/ID_463;
ID_489 = (ID_488+-1.0f);
ID_490 = W9;
ID_491 = proj0(ID_490);
ID_492 = ID_491';
ID_493 = ID_100*ID_492;
ID_494 = ID_483@2;
ID_495 = ID_484+ID_494;
ID_496 = (ID_493-ID_495);
ID_497 = ID_99*ID_496;
ID_498 = -1.0f*ID_497;
ID_499 = letrec(W9 = (ID_498));
ID_500 = proj0(ID_499);
ID_501 = ID_500@0;
ID_502 = ID_489*ID_501;
ID_503 = (ID_484+ID_502);
ID_504 = ID_482*ID_503;
ID_505 = ID_479+ID_504;
ID_506 = letrec(W8 = (ID_505));
ID_507 = proj0(ID_506);
ID_508 = ID_507@0;
ID_509 = 0.35355338f*ID_508;
ID_510 = (ID_509+1e-20f);
ID_511 = 0.031604f*ID_25;
ID_512 = ID_511+0.5f;
ID_513 = floor(ID_512);
ID_514 = ID_458-ID_513;
ID_515 = int(ID_514);
ID_516 = (ID_515&8191);
ID_517 = ID_510@ID_516;
ID_518 = W7;
ID_519 = proj0(ID_518);
ID_520 = ID_519';
ID_521 = 0.6f*ID_520;
ID_522 = ID_441+ID_521;
ID_523 = (ID_517-ID_522);
ID_524 = ID_513+-1.0f;
ID_525 = int(ID_524);
ID_526 = (ID_525&2047);
ID_527 = ID_523@ID_526;
ID_528 = 0.6f*ID_523;
ID_529 = letrec(W7 = (ID_527, ID_528));
ID_530 = proj0(ID_529);
ID_531 = ID_530';
ID_532 = 0.174713f*ID_25;
ID_533 = ID_532+0.5f;
ID_534 = floor(ID_533);
ID_535 = ID_534/ID_25;
ID_536 = 6.9077554f*ID_535;
ID_537 = ID_536/ID_61;
ID_538 = -1.0f*ID_537;
ID_539 = exp(ID_538);
ID_540 = pow(ID_539, 2.0f);
ID_541 = ID_55*ID_540;
ID_542 = (1.0f-ID_541);
ID_543 = (1.0f-ID_540);
ID_544 = ID_542/ID_543;
ID_545 = pow(ID_542, 2.0f);
ID_546 = pow(ID_543, 2.0f);
ID_547 = ID_545/ID_546;
ID_548 = ID_547+-1.0f;
ID_549 = max(0.0f, ID_548);
ID_550 = sqrt(ID_549);
ID_551 = (ID_544-ID_550);
ID_552 = W5;
ID_553 = proj0(ID_552);
ID_554 = ID_553';
ID_555 = ID_551*ID_554;
ID_556 = 1.0f-ID_544;
ID_557 = (ID_550+ID_556);
ID_558 = ID_539*ID_557;
ID_559 = proj4(ID_84);
ID_560 = ID_559';
ID_561 = ID_536/ID_87;
ID_562 = -1.0f*ID_561;
ID_563 = exp(ID_562);
ID_564 = ID_563/ID_539;
ID_565 = (ID_564+-1.0f);
ID_566 = W6;
ID_567 = proj0(ID_566);
ID_568 = ID_567';
ID_569 = ID_100*ID_568;
ID_570 = ID_559@2;
ID_571 = ID_560+ID_570;
ID_572 = (ID_569-ID_571);
ID_573 = ID_99*ID_572;
ID_574 = -1.0f*ID_573;
ID_575 = letrec(W6 = (ID_574));
ID_576 = proj0(ID_575);
ID_577 = ID_576@0;
ID_578 = ID_565*ID_577;
ID_579 = (ID_560+ID_578);
ID_580 = ID_558*ID_579;
ID_581 = ID_555+ID_580;
ID_582 = letrec(W5 = (ID_581));
ID_583 = proj0(ID_582);
ID_584 = ID_583@0;
ID_585 = 0.35355338f*ID_584;
ID_586 = (ID_585+1e-20f);
ID_587 = 0.022904f*ID_25;
ID_588 = ID_587+0.5f;
ID_589 = floor(ID_588);
ID_590 = ID_534-ID_589;
ID_591 = int(ID_590);
ID_592 = (ID_591&8191);
ID_593 = ID_586@ID_592;
ID_594 = ID_441+ID_593;
ID_595 = W4;
ID_596 = proj0(ID_595);
ID_597 = ID_596';
ID_598 = 0.6f*ID_597;
ID_599 = (ID_594-ID_598);
ID_600 = ID_589+-1.0f;
ID_601 = int(ID_600);
ID_602 = (ID_601&2047);
ID_603 = ID_599@ID_602;
ID_604 = 0.6f*ID_599;
ID_605 = letrec(W4 = (ID_603, ID_604));
ID_606 = proj0(ID_605);
ID_607 = ID_606';
ID_608 = 0.153129f*ID_25;
ID_609 = ID_608+0.5f;
ID_610 = floor(ID_609);
ID_611 = ID_610/ID_25;
ID_612 = 6.9077554f*ID_611;
ID_613 = ID_612/ID_61;
ID_614 = -1.0f*ID_613;
ID_615 = exp(ID_614);
ID_616 = pow(ID_615, 2.0f);
ID_617 = ID_616*ID_55;
ID_618 = (1.0f-ID_617);
ID_619 = (1.0f-ID_616);
ID_620 = ID_618/ID_619;
ID_621 = pow(ID_618, 2.0f);
ID_622 = pow(ID_619, 2.0f);
ID_623 = ID_621/ID_622;
ID_624 = ID_623+-1.0f;
ID_625 = max(0.0f, ID_624);
ID_626 = sqrt(ID_625);
ID_627 = (ID_620-ID_626);
ID_628 = W2;
ID_629 = proj0(ID_628);
ID_630 = ID_629';
ID_631 = ID_627*ID_630;
ID_632 = 1.0f-ID_620;
ID_633 = (ID_626+ID_632);
ID_634 = ID_615*ID_633;
ID_635 = proj0(ID_84);
ID_636 = ID_635';
ID_637 = ID_612/ID_87;
ID_638 = -1.0f*ID_637;
ID_639 = exp(ID_638);
ID_640 = ID_639/ID_615;
ID_641 = (ID_640+-1.0f);
ID_642 = W3;
ID_643 = proj0(ID_642);
ID_644 = ID_643';
ID_645 = ID_100*ID_644;
ID_646 = ID_635@2;
ID_647 = ID_636+ID_646;
ID_648 = (ID_645-ID_647);
ID_649 = ID_99*ID_648;
ID_650 = -1.0f*ID_649;
ID_651 = letrec(W3 = (ID_650));
ID_652 = proj0(ID_651);
ID_653 = ID_652@0;
ID_654 = ID_641*ID_653;
ID_655 = (ID_636+ID_654);
ID_656 = ID_634*ID_655;
ID_657 = ID_631+ID_656;
ID_658 = letrec(W2 = (ID_657));
ID_659 = proj0(ID_658);
ID_660 = ID_659@0;
ID_661 = 0.35355338f*ID_660;
ID_662 = (ID_661+1e-20f);
ID_663 = 0.020346f*ID_25;
ID_664 = ID_663+0.5f;
ID_665 = floor(ID_664);
ID_666 = ID_610-ID_665;
ID_667 = int(ID_666);
ID_668 = (ID_667&8191);
ID_669 = ID_662@ID_668;
ID_670 = ID_669+ID_441;
ID_671 = W1;
ID_672 = proj0(ID_671);
ID_673 = ID_672';
ID_674 = 0.6f*ID_673;
ID_675 = (ID_670-ID_674);
ID_676 = ID_665+-1.0f;
ID_677 = int(ID_676);
ID_678 = (ID_677&1023);
ID_679 = ID_675@ID_678;
ID_680 = 0.6f*ID_675;
ID_681 = letrec(W1 = (ID_679, ID_680));
ID_682 = proj0(ID_681);
ID_683 = ID_682';
ID_684 = proj1(ID_144);
ID_685 = ID_684@0;
ID_686 = proj1(ID_221);
ID_687 = ID_686@0;
ID_688 = proj1(ID_298);
ID_689 = ID_688@0;
ID_690 = proj1(ID_375);
ID_691 = ID_690@0;
ID_692 = proj1(ID_453);
ID_693 = ID_692@0;
ID_694 = proj1(ID_529);
ID_695 = ID_694@0;
ID_696 = proj1(ID_681);
ID_697 = ID_696@0;
ID_698 = proj1(ID_605);
ID_699 = ID_698@0;
ID_700 = ID_697+ID_699;
ID_701 = ID_695+ID_700;
ID_702 = ID_693+ID_701;
ID_703 = ID_691+ID_702;
ID_704 = ID_689+ID_703;
ID_705 = ID_687+ID_704;
ID_706 = ID_685+ID_705;
ID_707 = ID_683+ID_706;
ID_708 = ID_607+ID_707;
ID_709 = ID_531+ID_708;
ID_710 = ID_455+ID_709;
ID_711 = ID_377+ID_710;
ID_712 = ID_300+ID_711;
ID_713 = ID_223+ID_712;
ID_714 = ID_146+ID_713;
ID_715 = ID_683+ID_702;
ID_716 = ID_607+ID_715;
ID_717 = ID_531+ID_716;
ID_718 = ID_455+ID_717;
ID_719 = ID_691+ID_689;
ID_720 = ID_687+ID_719;
ID_721 = ID_685+ID_720;
ID_722 = ID_377+ID_721;
ID_723 = ID_300+ID_722;
ID_724 = ID_223+ID_723;
ID_725 = ID_146+ID_724;
ID_726 = ID_718-ID_725;
ID_727 = ID_691+ID_700;
ID_728 = ID_689+ID_727;
ID_729 = ID_683+ID_728;
ID_730 = ID_607+ID_729;
ID_731 = ID_377+ID_730;
ID_732 = ID_300+ID_731;
ID_733 = ID_695+ID_693;
ID_734 = ID_687+ID_733;
ID_735 = ID_685+ID_734;
ID_736 = ID_531+ID_735;
ID_737 = ID_455+ID_736;
ID_738 = ID_223+ID_737;
ID_739 = ID_146+ID_738;
ID_740 = ID_732-ID_739;
ID_741 = ID_687+ID_700;
ID_742 = ID_685+ID_741;
ID_743 = ID_683+ID_742;
ID_744 = ID_607+ID_743;
ID_745 = ID_223+ID_744;
ID_746 = ID_146+ID_745;
ID_747 = ID_691+ID_733;
ID_748 = ID_689+ID_747;
ID_749 = ID_531+ID_748;
ID_750 = ID_455+ID_749;
ID_751 = ID_377+ID_750;
ID_752 = ID_300+ID_751;
ID_753 = ID_746-ID_752;
ID_754 = ID_697+ID_695;
ID_755 = ID_691+ID_754;
ID_756 = ID_687+ID_755;
ID_757 = ID_683+ID_756;
ID_758 = ID_531+ID_757;
ID_759 = ID_377+ID_758;
ID_760 = ID_223+ID_759;
ID_761 = ID_699+ID_693;
ID_762 = ID_689+ID_761;
ID_763 = ID_685+ID_762;
ID_764 = ID_607+ID_763;
ID_765 = ID_455+ID_764;
ID_766 = ID_300+ID_765;
ID_767 = ID_146+ID_766;
ID_768 = ID_760-ID_767;
ID_769 = ID_689+ID_754;
ID_770 = ID_685+ID_769;
ID_771 = ID_683+ID_770;
ID_772 = ID_531+ID_771;
ID_773 = ID_300+ID_772;
ID_774 = ID_146+ID_773;
ID_775 = ID_691+ID_761;
ID_776 = ID_687+ID_775;
ID_777 = ID_607+ID_776;
ID_778 = ID_455+ID_777;
ID_779 = ID_377+ID_778;
ID_780 = ID_223+ID_779;
ID_781 = ID_774-ID_780;
ID_782 = ID_697+ID_693;
ID_783 = ID_691+ID_782;
ID_784 = ID_685+ID_783;
ID_785 = ID_683+ID_784;
ID_786 = ID_455+ID_785;
ID_787 = ID_377+ID_786;
ID_788 = ID_146+ID_787;
ID_789 = ID_699+ID_695;
ID_790 = ID_689+ID_789;
ID_791 = ID_687+ID_790;
ID_792 = ID_607+ID_791;
ID_793 = ID_531+ID_792;
ID_794 = ID_300+ID_793;
ID_795 = ID_223+ID_794;
ID_796 = ID_788-ID_795;
ID_797 = ID_689+ID_782;
ID_798 = ID_687+ID_797;
ID_799 = ID_683+ID_798;
ID_800 = ID_455+ID_799;
ID_801 = ID_300+ID_800;
ID_802 = ID_223+ID_801;
ID_803 = ID_691+ID_789;
ID_804 = ID_685+ID_803;
ID_805 = ID_607+ID_804;
ID_806 = ID_531+ID_805;
ID_807 = ID_377+ID_806;
ID_808 = ID_146+ID_807;
ID_809 = ID_802-ID_808;
ID_810 = letrec(W0 = (ID_714, ID_726, ID_740, ID_753, ID_768, ID_781, ID_796, ID_809));
ID_811 = proj1(ID_810);
ID_812 = ID_811@0;
ID_813 = ID_483@0;
ID_814 = (ID_812+ID_813);
ID_815 = 0.37f*ID_814;
ID_816 = ID_26*ID_38;
ID_817 = cos(ID_816);
ID_818 = (ID_48+1.0f);
ID_819 = ID_817*ID_818;
ID_820 = W25;
ID_821 = proj0(ID_820);
ID_822 = ID_821';
ID_823 = ID_819*ID_822;
ID_824 = ID_815+ID_823;
ID_825 = ID_821@2;
ID_826 = ID_48*ID_825;
ID_827 = ID_824-ID_826;
ID_828 = letrec(W25 = (ID_827));
ID_829 = proj0(ID_828);
ID_830 = ID_829@0;
ID_831 = ID_48*ID_830;
ID_832 = ID_815+ID_825;
ID_833 = ID_831+ID_832;
ID_834 = ID_833-ID_823;
ID_835 = ID_825+ID_831;
ID_836 = (ID_835-ID_824);
ID_837 = ID_41*ID_836;
ID_838 = (ID_834+ID_837);
ID_839 = 0.5f*ID_838;
ID_840 = ID_26*ID_27;
ID_841 = cos(ID_840);
ID_842 = (ID_37+1.0f);
ID_843 = ID_841*ID_842;
ID_844 = W26;
ID_845 = proj0(ID_844);
ID_846 = ID_845';
ID_847 = ID_843*ID_846;
ID_848 = ID_839+ID_847;
ID_849 = ID_845@2;
ID_850 = ID_37*ID_849;
ID_851 = ID_848-ID_850;
ID_852 = letrec(W26 = (ID_851));
ID_853 = proj0(ID_852);
ID_854 = ID_853@0;
ID_855 = ID_37*ID_854;
ID_856 = ID_839+ID_849;
ID_857 = ID_855+ID_856;
ID_858 = ID_857-ID_847;
ID_859 = ID_849+ID_855;
ID_860 = (ID_859-ID_848);
ID_861 = ID_30*ID_860;
ID_862 = (ID_858+ID_861);
ID_863 = ID_22*ID_862;
ID_864 = 0.25f*ID_863;
ID_865 = 0.5f*ID_22;
ID_866 = (1.0f-ID_865);
ID_867 = IN[0]*ID_866;
ID_868 = (ID_864+ID_867);
ID_869 = ID_11*ID_868;
ID_870 = (ID_812-ID_813);
ID_871 = 0.37f*ID_870;
ID_872 = W29;
ID_873 = proj0(ID_872);
ID_874 = ID_873';
ID_875 = ID_819*ID_874;
ID_876 = ID_871+ID_875;
ID_877 = ID_873@2;
ID_878 = ID_48*ID_877;
ID_879 = ID_876-ID_878;
ID_880 = letrec(W29 = (ID_879));
ID_881 = proj0(ID_880);
ID_882 = ID_881@0;
ID_883 = ID_48*ID_882;
ID_884 = ID_871+ID_877;
ID_885 = ID_883+ID_884;
ID_886 = ID_885-ID_875;
ID_887 = ID_877+ID_883;
ID_888 = (ID_887-ID_876);
ID_889 = ID_41*ID_888;
ID_890 = (ID_886+ID_889);
ID_891 = 0.5f*ID_890;
ID_892 = W30;
ID_893 = proj0(ID_892);
ID_894 = ID_893';
ID_895 = ID_843*ID_894;
ID_896 = ID_891+ID_895;
ID_897 = ID_893@2;
ID_898 = ID_37*ID_897;
ID_899 = ID_896-ID_898;
ID_900 = letrec(W30 = (ID_899));
ID_901 = proj0(ID_900);
ID_902 = ID_901@0;
ID_903 = ID_37*ID_902;
ID_904 = ID_891+ID_897;
ID_905 = ID_903+ID_904;
ID_906 = ID_905-ID_895;
ID_907 = ID_897+ID_903;
ID_908 = (ID_907-ID_896);
ID_909 = ID_30*ID_908;
ID_910 = (ID_906+ID_909);
ID_911 = ID_22*ID_910;
ID_912 = 0.25f*ID_911;
ID_913 = IN[1]*ID_866;
ID_914 = (ID_912+ID_913);
ID_915 = ID_11*ID_914;
SIG = (ID_869, ID_915);
