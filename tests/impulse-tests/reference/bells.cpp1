//----------------------------------------------------------
// name: "bells"
//
// Code generated with Faust 2.79.0 (https://faust.grame.fr)
// Compiler options: -lang ocpp -ct 1 -es 0 -mcl 4 -mcd 9 -mfs 1024 -huf 0 -irt 4 -fls 4 -udd 1 -mdd 1024 -mdy 90 -mca 8 -ss 0 -single -ftz 0 
//----------------------------------------------------------

/* link with  */
#include <algorithm>
#include <cmath>
#include <math.h>
#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif 


#ifndef FAUSTCLASS 
#define FAUSTCLASS mydsp
#endif

class mydsp : public dsp {
  private:
	FAUSTFLOAT 	fbutton0;
	float 	fVec0BEState; // Single Delay
	FAUSTFLOAT 	fbutton1;
	float 	fVec1BEState; // Single Delay
	FAUSTFLOAT 	fbutton2;
	float 	fVec2BEState; // Single Delay
	FAUSTFLOAT 	fbutton3;
	float 	fVec3BEState; // Single Delay
	FAUSTFLOAT 	fbutton4;
	float 	fVec4BEState; // Single Delay
	FAUSTFLOAT 	fbutton5;
	float 	fVec5BEState; // Single Delay
	FAUSTFLOAT 	fbutton6;
	float 	fVec6BEState; // Single Delay
	FAUSTFLOAT 	fbutton7;
	float 	fVec7BEState; // Single Delay
	FAUSTFLOAT 	fbutton8;
	float 	fVec8BEState; // Single Delay
	FAUSTFLOAT 	fbutton9;
	float 	fVec9BEState; // Single Delay
	float 	fConst0KI; // step: 27
	float 	fConst1KI; // step: 28
	FAUSTFLOAT 	fentry0;
	FAUSTFLOAT 	fentry1;
	int 	IOTA0;
	float 	fVec12SE[256]; // Ring Delay
	float 	fConst2KI; // step: 61
	float 	fConst3KI; // step: 71
	float 	fConst4KI; // step: 73
	float 	fConst5KI; // step: 75
	float 	fConst6KI; // step: 85
	// Recursion delay fVec14SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec14SEState; // Single Delay
	float 	fVec15SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry2;
	float 	fVec19SE[256]; // Ring Delay
	// Recursion delay fVec21SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec21SEState; // Single Delay
	float 	fVec22SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry3;
	float 	fVec26SE[256]; // Ring Delay
	// Recursion delay fVec28SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec28SEState; // Single Delay
	float 	fVec29SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry4;
	float 	fVec33SE[256]; // Ring Delay
	// Recursion delay fVec35SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec35SEState; // Single Delay
	float 	fVec36SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry5;
	float 	fVec40SE[256]; // Ring Delay
	// Recursion delay fVec42SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec42SEState; // Single Delay
	float 	fVec43SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry6;
	float 	fVec47SE[256]; // Ring Delay
	// Recursion delay fVec49SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec49SEState; // Single Delay
	float 	fVec50SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry7;
	float 	fVec54SE[256]; // Ring Delay
	// Recursion delay fVec56SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec56SEState; // Single Delay
	float 	fVec57SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry8;
	float 	fVec61SE[256]; // Ring Delay
	// Recursion delay fVec63SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec63SEState; // Single Delay
	float 	fVec64SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry9;
	float 	fVec68SE[256]; // Ring Delay
	// Recursion delay fVec70SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec70SEState; // Single Delay
	float 	fVec71SEState[2]; // Copy Delay
	FAUSTFLOAT 	fentry10;
	float 	fVec75SE[256]; // Ring Delay
	// Recursion delay fVec77SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec77SEState; // Single Delay
	float 	fVec78SEState[2]; // Copy Delay
	float 	fVec81SE[64]; // Ring Delay
	float 	fConst7KI; // step: 428
	float 	fConst8KI; // step: 436
	// Recursion delay fVec83SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec83SEState; // Single Delay
	float 	fVec84SEState[2]; // Copy Delay
	float 	fVec87SE[64]; // Ring Delay
	float 	fConst9KI; // step: 460
	float 	fConst10KI; // step: 468
	// Recursion delay fVec89SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec89SEState; // Single Delay
	float 	fVec90SEState[2]; // Copy Delay
	float 	fVec93SE[64]; // Ring Delay
	float 	fConst11KI; // step: 496
	float 	fConst12KI; // step: 504
	// Recursion delay fVec95SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec95SEState; // Single Delay
	float 	fVec96SEState[2]; // Copy Delay
	float 	fVec99SE[64]; // Ring Delay
	float 	fConst13KI; // step: 529
	float 	fConst14KI; // step: 537
	// Recursion delay fVec101SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec101SEState; // Single Delay
	float 	fVec102SEState[2]; // Copy Delay
	float 	fVec105SE[128]; // Ring Delay
	float 	fConst15KI; // step: 563
	float 	fConst16KI; // step: 571
	// Recursion delay fVec107SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec107SEState; // Single Delay
	float 	fVec108SEState[2]; // Copy Delay
	float 	fVec111SE[128]; // Ring Delay
	float 	fConst17KI; // step: 595
	float 	fConst18KI; // step: 603
	// Recursion delay fVec113SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec113SEState; // Single Delay
	float 	fVec114SEState[2]; // Copy Delay
	float 	fVec117SE[256]; // Ring Delay
	float 	fConst19KI; // step: 631
	float 	fConst20KI; // step: 639
	// Recursion delay fVec119SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec119SEState; // Single Delay
	float 	fVec120SEState[2]; // Copy Delay
	float 	fVec123SE[256]; // Ring Delay
	float 	fConst21KI; // step: 664
	float 	fConst22KI; // step: 672
	// Recursion delay fVec125SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec125SEState; // Single Delay
	float 	fVec126SEState[2]; // Copy Delay
	float 	fVec129SE[1024]; // Ring Delay
	float 	fConst23KI; // step: 700
	float 	fConst24KI; // step: 708
	// Recursion delay fVec131SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec131SEState; // Single Delay
	float 	fVec132SEState[2]; // Copy Delay
	float 	fVec135SE[1024]; // Ring Delay
	float 	fConst25KI; // step: 733
	float 	fConst26KI; // step: 741
	// Recursion delay fVec137SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec137SEState; // Single Delay
	float 	fVec138SEState[2]; // Copy Delay
	float 	fVec141SE[64]; // Ring Delay
	// Recursion delay fVec143SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec143SEState; // Single Delay
	float 	fVec144SEState[2]; // Copy Delay
	float 	fVec147SE[64]; // Ring Delay
	// Recursion delay fVec149SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec149SEState; // Single Delay
	float 	fVec150SEState[2]; // Copy Delay
	float 	fVec153SE[64]; // Ring Delay
	// Recursion delay fVec155SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec155SEState; // Single Delay
	float 	fVec156SEState[2]; // Copy Delay
	float 	fVec159SE[64]; // Ring Delay
	// Recursion delay fVec161SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec161SEState; // Single Delay
	float 	fVec162SEState[2]; // Copy Delay
	float 	fVec165SE[128]; // Ring Delay
	// Recursion delay fVec167SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec167SEState; // Single Delay
	float 	fVec168SEState[2]; // Copy Delay
	float 	fVec171SE[128]; // Ring Delay
	// Recursion delay fVec173SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec173SEState; // Single Delay
	float 	fVec174SEState[2]; // Copy Delay
	float 	fVec177SE[256]; // Ring Delay
	// Recursion delay fVec179SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec179SEState; // Single Delay
	float 	fVec180SEState[2]; // Copy Delay
	float 	fVec183SE[256]; // Ring Delay
	// Recursion delay fVec185SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec185SEState; // Single Delay
	float 	fVec186SEState[2]; // Copy Delay
	float 	fVec189SE[1024]; // Ring Delay
	// Recursion delay fVec191SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec191SEState; // Single Delay
	float 	fVec192SEState[2]; // Copy Delay
	float 	fVec195SE[1024]; // Ring Delay
	// Recursion delay fVec197SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec197SEState; // Single Delay
	float 	fVec198SEState[2]; // Copy Delay
	float 	fVec201SE[64]; // Ring Delay
	// Recursion delay fVec203SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec203SEState; // Single Delay
	float 	fVec204SEState[2]; // Copy Delay
	float 	fVec207SE[64]; // Ring Delay
	// Recursion delay fVec209SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec209SEState; // Single Delay
	float 	fVec210SEState[2]; // Copy Delay
	float 	fVec213SE[64]; // Ring Delay
	// Recursion delay fVec215SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec215SEState; // Single Delay
	float 	fVec216SEState[2]; // Copy Delay
	float 	fVec219SE[64]; // Ring Delay
	// Recursion delay fVec221SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec221SEState; // Single Delay
	float 	fVec222SEState[2]; // Copy Delay
	float 	fVec225SE[128]; // Ring Delay
	// Recursion delay fVec227SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec227SEState; // Single Delay
	float 	fVec228SEState[2]; // Copy Delay
	float 	fVec231SE[128]; // Ring Delay
	// Recursion delay fVec233SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec233SEState; // Single Delay
	float 	fVec234SEState[2]; // Copy Delay
	float 	fVec237SE[256]; // Ring Delay
	// Recursion delay fVec239SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec239SEState; // Single Delay
	float 	fVec240SEState[2]; // Copy Delay
	float 	fVec243SE[256]; // Ring Delay
	// Recursion delay fVec245SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec245SEState; // Single Delay
	float 	fVec246SEState[2]; // Copy Delay
	float 	fVec249SE[1024]; // Ring Delay
	// Recursion delay fVec251SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec251SEState; // Single Delay
	float 	fVec252SEState[2]; // Copy Delay
	float 	fVec255SE[1024]; // Ring Delay
	// Recursion delay fVec257SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec257SEState; // Single Delay
	float 	fVec258SEState[2]; // Copy Delay
	float 	fVec261SE[64]; // Ring Delay
	// Recursion delay fVec263SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec263SEState; // Single Delay
	float 	fVec264SEState[2]; // Copy Delay
	float 	fVec267SE[64]; // Ring Delay
	// Recursion delay fVec269SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec269SEState; // Single Delay
	float 	fVec270SEState[2]; // Copy Delay
	float 	fVec273SE[64]; // Ring Delay
	// Recursion delay fVec275SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec275SEState; // Single Delay
	float 	fVec276SEState[2]; // Copy Delay
	float 	fVec279SE[64]; // Ring Delay
	// Recursion delay fVec281SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec281SEState; // Single Delay
	float 	fVec282SEState[2]; // Copy Delay
	float 	fVec285SE[128]; // Ring Delay
	// Recursion delay fVec287SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec287SEState; // Single Delay
	float 	fVec288SEState[2]; // Copy Delay
	float 	fVec291SE[128]; // Ring Delay
	// Recursion delay fVec293SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec293SEState; // Single Delay
	float 	fVec294SEState[2]; // Copy Delay
	float 	fVec297SE[256]; // Ring Delay
	// Recursion delay fVec299SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec299SEState; // Single Delay
	float 	fVec300SEState[2]; // Copy Delay
	float 	fVec303SE[256]; // Ring Delay
	// Recursion delay fVec305SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec305SEState; // Single Delay
	float 	fVec306SEState[2]; // Copy Delay
	float 	fVec309SE[1024]; // Ring Delay
	// Recursion delay fVec311SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec311SEState; // Single Delay
	float 	fVec312SEState[2]; // Copy Delay
	float 	fVec315SE[1024]; // Ring Delay
	// Recursion delay fVec317SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec317SEState; // Single Delay
	float 	fVec318SEState[2]; // Copy Delay
	float 	fVec321SE[64]; // Ring Delay
	// Recursion delay fVec323SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec323SEState; // Single Delay
	float 	fVec324SEState[2]; // Copy Delay
	float 	fVec327SE[64]; // Ring Delay
	// Recursion delay fVec329SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec329SEState; // Single Delay
	float 	fVec330SEState[2]; // Copy Delay
	float 	fVec333SE[64]; // Ring Delay
	// Recursion delay fVec335SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec335SEState; // Single Delay
	float 	fVec336SEState[2]; // Copy Delay
	float 	fVec339SE[64]; // Ring Delay
	// Recursion delay fVec341SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec341SEState; // Single Delay
	float 	fVec342SEState[2]; // Copy Delay
	float 	fVec345SE[128]; // Ring Delay
	// Recursion delay fVec347SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec347SEState; // Single Delay
	float 	fVec348SEState[2]; // Copy Delay
	float 	fVec351SE[128]; // Ring Delay
	// Recursion delay fVec353SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec353SEState; // Single Delay
	float 	fVec354SEState[2]; // Copy Delay
	float 	fVec357SE[256]; // Ring Delay
	// Recursion delay fVec359SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec359SEState; // Single Delay
	float 	fVec360SEState[2]; // Copy Delay
	float 	fVec363SE[256]; // Ring Delay
	// Recursion delay fVec365SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec365SEState; // Single Delay
	float 	fVec366SEState[2]; // Copy Delay
	float 	fVec369SE[1024]; // Ring Delay
	// Recursion delay fVec371SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec371SEState; // Single Delay
	float 	fVec372SEState[2]; // Copy Delay
	float 	fVec375SE[1024]; // Ring Delay
	// Recursion delay fVec377SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec377SEState; // Single Delay
	float 	fVec378SEState[2]; // Copy Delay
	float 	fVec381SE[64]; // Ring Delay
	// Recursion delay fVec383SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec383SEState; // Single Delay
	float 	fVec384SEState[2]; // Copy Delay
	float 	fVec387SE[64]; // Ring Delay
	// Recursion delay fVec389SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec389SEState; // Single Delay
	float 	fVec390SEState[2]; // Copy Delay
	float 	fVec393SE[64]; // Ring Delay
	// Recursion delay fVec395SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec395SEState; // Single Delay
	float 	fVec396SEState[2]; // Copy Delay
	float 	fVec399SE[64]; // Ring Delay
	// Recursion delay fVec401SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec401SEState; // Single Delay
	float 	fVec402SEState[2]; // Copy Delay
	float 	fVec405SE[128]; // Ring Delay
	// Recursion delay fVec407SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec407SEState; // Single Delay
	float 	fVec408SEState[2]; // Copy Delay
	float 	fVec411SE[128]; // Ring Delay
	// Recursion delay fVec413SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec413SEState; // Single Delay
	float 	fVec414SEState[2]; // Copy Delay
	float 	fVec417SE[256]; // Ring Delay
	// Recursion delay fVec419SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec419SEState; // Single Delay
	float 	fVec420SEState[2]; // Copy Delay
	float 	fVec423SE[256]; // Ring Delay
	// Recursion delay fVec425SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec425SEState; // Single Delay
	float 	fVec426SEState[2]; // Copy Delay
	float 	fVec429SE[1024]; // Ring Delay
	// Recursion delay fVec431SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec431SEState; // Single Delay
	float 	fVec432SEState[2]; // Copy Delay
	float 	fVec435SE[1024]; // Ring Delay
	// Recursion delay fVec437SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec437SEState; // Single Delay
	float 	fVec438SEState[2]; // Copy Delay
	float 	fVec441SE[64]; // Ring Delay
	// Recursion delay fVec443SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec443SEState; // Single Delay
	float 	fVec444SEState[2]; // Copy Delay
	float 	fVec447SE[64]; // Ring Delay
	// Recursion delay fVec449SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec449SEState; // Single Delay
	float 	fVec450SEState[2]; // Copy Delay
	float 	fVec453SE[64]; // Ring Delay
	// Recursion delay fVec455SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec455SEState; // Single Delay
	float 	fVec456SEState[2]; // Copy Delay
	float 	fVec459SE[64]; // Ring Delay
	// Recursion delay fVec461SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec461SEState; // Single Delay
	float 	fVec462SEState[2]; // Copy Delay
	float 	fVec465SE[128]; // Ring Delay
	// Recursion delay fVec467SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec467SEState; // Single Delay
	float 	fVec468SEState[2]; // Copy Delay
	float 	fVec471SE[128]; // Ring Delay
	// Recursion delay fVec473SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec473SEState; // Single Delay
	float 	fVec474SEState[2]; // Copy Delay
	float 	fVec477SE[256]; // Ring Delay
	// Recursion delay fVec479SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec479SEState; // Single Delay
	float 	fVec480SEState[2]; // Copy Delay
	float 	fVec483SE[256]; // Ring Delay
	// Recursion delay fVec485SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec485SEState; // Single Delay
	float 	fVec486SEState[2]; // Copy Delay
	float 	fVec489SE[1024]; // Ring Delay
	// Recursion delay fVec491SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec491SEState; // Single Delay
	float 	fVec492SEState[2]; // Copy Delay
	float 	fVec495SE[1024]; // Ring Delay
	// Recursion delay fVec497SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec497SEState; // Single Delay
	float 	fVec498SEState[2]; // Copy Delay
	float 	fVec501SE[64]; // Ring Delay
	// Recursion delay fVec503SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec503SEState; // Single Delay
	float 	fVec504SEState[2]; // Copy Delay
	float 	fVec507SE[64]; // Ring Delay
	// Recursion delay fVec509SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec509SEState; // Single Delay
	float 	fVec510SEState[2]; // Copy Delay
	float 	fVec513SE[64]; // Ring Delay
	// Recursion delay fVec515SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec515SEState; // Single Delay
	float 	fVec516SEState[2]; // Copy Delay
	float 	fVec519SE[64]; // Ring Delay
	// Recursion delay fVec521SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec521SEState; // Single Delay
	float 	fVec522SEState[2]; // Copy Delay
	float 	fVec525SE[128]; // Ring Delay
	// Recursion delay fVec527SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec527SEState; // Single Delay
	float 	fVec528SEState[2]; // Copy Delay
	float 	fVec531SE[128]; // Ring Delay
	// Recursion delay fVec533SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec533SEState; // Single Delay
	float 	fVec534SEState[2]; // Copy Delay
	float 	fVec537SE[256]; // Ring Delay
	// Recursion delay fVec539SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec539SEState; // Single Delay
	float 	fVec540SEState[2]; // Copy Delay
	float 	fVec543SE[256]; // Ring Delay
	// Recursion delay fVec545SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec545SEState; // Single Delay
	float 	fVec546SEState[2]; // Copy Delay
	float 	fVec549SE[1024]; // Ring Delay
	// Recursion delay fVec551SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec551SEState; // Single Delay
	float 	fVec552SEState[2]; // Copy Delay
	float 	fVec555SE[1024]; // Ring Delay
	// Recursion delay fVec557SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec557SEState; // Single Delay
	float 	fVec558SEState[2]; // Copy Delay
	float 	fVec561SE[64]; // Ring Delay
	// Recursion delay fVec563SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec563SEState; // Single Delay
	float 	fVec564SEState[2]; // Copy Delay
	float 	fVec567SE[64]; // Ring Delay
	// Recursion delay fVec569SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec569SEState; // Single Delay
	float 	fVec570SEState[2]; // Copy Delay
	float 	fVec573SE[64]; // Ring Delay
	// Recursion delay fVec575SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec575SEState; // Single Delay
	float 	fVec576SEState[2]; // Copy Delay
	float 	fVec579SE[64]; // Ring Delay
	// Recursion delay fVec581SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec581SEState; // Single Delay
	float 	fVec582SEState[2]; // Copy Delay
	float 	fVec585SE[128]; // Ring Delay
	// Recursion delay fVec587SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec587SEState; // Single Delay
	float 	fVec588SEState[2]; // Copy Delay
	float 	fVec591SE[128]; // Ring Delay
	// Recursion delay fVec593SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec593SEState; // Single Delay
	float 	fVec594SEState[2]; // Copy Delay
	float 	fVec597SE[256]; // Ring Delay
	// Recursion delay fVec599SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec599SEState; // Single Delay
	float 	fVec600SEState[2]; // Copy Delay
	float 	fVec603SE[256]; // Ring Delay
	// Recursion delay fVec605SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec605SEState; // Single Delay
	float 	fVec606SEState[2]; // Copy Delay
	float 	fVec609SE[1024]; // Ring Delay
	// Recursion delay fVec611SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec611SEState; // Single Delay
	float 	fVec612SEState[2]; // Copy Delay
	float 	fVec615SE[1024]; // Ring Delay
	// Recursion delay fVec617SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec617SEState; // Single Delay
	float 	fVec618SEState[2]; // Copy Delay
	float 	fVec621SE[64]; // Ring Delay
	// Recursion delay fVec623SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec623SEState; // Single Delay
	float 	fVec624SEState[2]; // Copy Delay
	float 	fVec627SE[64]; // Ring Delay
	// Recursion delay fVec629SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec629SEState; // Single Delay
	float 	fVec630SEState[2]; // Copy Delay
	float 	fVec633SE[64]; // Ring Delay
	// Recursion delay fVec635SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec635SEState; // Single Delay
	float 	fVec636SEState[2]; // Copy Delay
	float 	fVec639SE[64]; // Ring Delay
	// Recursion delay fVec641SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec641SEState; // Single Delay
	float 	fVec642SEState[2]; // Copy Delay
	float 	fVec645SE[128]; // Ring Delay
	// Recursion delay fVec647SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec647SEState; // Single Delay
	float 	fVec648SEState[2]; // Copy Delay
	float 	fVec651SE[1024]; // Ring Delay
	// Recursion delay fVec653SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec653SEState; // Single Delay
	float 	fVec654SEState[2]; // Copy Delay
	float 	fVec657SE[1024]; // Ring Delay
	// Recursion delay fVec659SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec659SEState; // Single Delay
	float 	fVec660SEState[2]; // Copy Delay
	float 	fVec663SE[256]; // Ring Delay
	// Recursion delay fVec665SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec665SEState; // Single Delay
	float 	fVec666SEState[2]; // Copy Delay
	float 	fVec669SE[256]; // Ring Delay
	// Recursion delay fVec671SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec671SEState; // Single Delay
	float 	fVec672SEState[2]; // Copy Delay
	float 	fVec675SE[128]; // Ring Delay
	// Recursion delay fVec677SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec677SEState; // Single Delay
	float 	fVec678SEState[2]; // Copy Delay
	float 	fConst27KI; // step: 3287
	// Recursion delay fVec11SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec11SEState; // Single Delay
	// Recursion delay fVec18SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec18SEState; // Single Delay
	// Recursion delay fVec25SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec25SEState; // Single Delay
	// Recursion delay fVec32SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec32SEState; // Single Delay
	// Recursion delay fVec39SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec39SEState; // Single Delay
	// Recursion delay fVec46SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec46SEState; // Single Delay
	// Recursion delay fVec53SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec53SEState; // Single Delay
	// Recursion delay fVec60SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec60SEState; // Single Delay
	// Recursion delay fVec67SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec67SEState; // Single Delay
	// Recursion delay fVec74SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec74SEState; // Single Delay
	// Recursion delay fVec80SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec80SEState; // Single Delay
	// Recursion delay fVec86SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec86SEState; // Single Delay
	// Recursion delay fVec92SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec92SEState; // Single Delay
	// Recursion delay fVec98SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec98SEState; // Single Delay
	// Recursion delay fVec104SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec104SEState; // Single Delay
	// Recursion delay fVec110SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec110SEState; // Single Delay
	// Recursion delay fVec116SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec116SEState; // Single Delay
	// Recursion delay fVec122SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec122SEState; // Single Delay
	// Recursion delay fVec128SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec128SEState; // Single Delay
	// Recursion delay fVec134SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec134SEState; // Single Delay
	// Recursion delay fVec140SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec140SEState; // Single Delay
	// Recursion delay fVec146SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec146SEState; // Single Delay
	// Recursion delay fVec152SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec152SEState; // Single Delay
	// Recursion delay fVec158SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec158SEState; // Single Delay
	// Recursion delay fVec164SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec164SEState; // Single Delay
	// Recursion delay fVec170SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec170SEState; // Single Delay
	// Recursion delay fVec176SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec176SEState; // Single Delay
	// Recursion delay fVec182SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec182SEState; // Single Delay
	// Recursion delay fVec188SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec188SEState; // Single Delay
	// Recursion delay fVec194SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec194SEState; // Single Delay
	// Recursion delay fVec200SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec200SEState; // Single Delay
	// Recursion delay fVec206SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec206SEState; // Single Delay
	// Recursion delay fVec212SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec212SEState; // Single Delay
	// Recursion delay fVec218SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec218SEState; // Single Delay
	// Recursion delay fVec224SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec224SEState; // Single Delay
	// Recursion delay fVec230SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec230SEState; // Single Delay
	// Recursion delay fVec236SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec236SEState; // Single Delay
	// Recursion delay fVec242SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec242SEState; // Single Delay
	// Recursion delay fVec248SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec248SEState; // Single Delay
	// Recursion delay fVec254SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec254SEState; // Single Delay
	// Recursion delay fVec260SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec260SEState; // Single Delay
	// Recursion delay fVec266SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec266SEState; // Single Delay
	// Recursion delay fVec272SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec272SEState; // Single Delay
	// Recursion delay fVec278SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec278SEState; // Single Delay
	// Recursion delay fVec284SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec284SEState; // Single Delay
	// Recursion delay fVec290SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec290SEState; // Single Delay
	// Recursion delay fVec296SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec296SEState; // Single Delay
	// Recursion delay fVec302SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec302SEState; // Single Delay
	// Recursion delay fVec308SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec308SEState; // Single Delay
	// Recursion delay fVec314SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec314SEState; // Single Delay
	// Recursion delay fVec320SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec320SEState; // Single Delay
	// Recursion delay fVec326SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec326SEState; // Single Delay
	// Recursion delay fVec332SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec332SEState; // Single Delay
	// Recursion delay fVec338SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec338SEState; // Single Delay
	// Recursion delay fVec344SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec344SEState; // Single Delay
	// Recursion delay fVec350SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec350SEState; // Single Delay
	// Recursion delay fVec356SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec356SEState; // Single Delay
	// Recursion delay fVec362SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec362SEState; // Single Delay
	// Recursion delay fVec368SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec368SEState; // Single Delay
	// Recursion delay fVec374SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec374SEState; // Single Delay
	// Recursion delay fVec380SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec380SEState; // Single Delay
	// Recursion delay fVec386SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec386SEState; // Single Delay
	// Recursion delay fVec392SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec392SEState; // Single Delay
	// Recursion delay fVec398SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec398SEState; // Single Delay
	// Recursion delay fVec404SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec404SEState; // Single Delay
	// Recursion delay fVec410SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec410SEState; // Single Delay
	// Recursion delay fVec416SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec416SEState; // Single Delay
	// Recursion delay fVec422SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec422SEState; // Single Delay
	// Recursion delay fVec428SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec428SEState; // Single Delay
	// Recursion delay fVec434SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec434SEState; // Single Delay
	// Recursion delay fVec440SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec440SEState; // Single Delay
	// Recursion delay fVec446SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec446SEState; // Single Delay
	// Recursion delay fVec452SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec452SEState; // Single Delay
	// Recursion delay fVec458SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec458SEState; // Single Delay
	// Recursion delay fVec464SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec464SEState; // Single Delay
	// Recursion delay fVec470SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec470SEState; // Single Delay
	// Recursion delay fVec476SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec476SEState; // Single Delay
	// Recursion delay fVec482SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec482SEState; // Single Delay
	// Recursion delay fVec488SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec488SEState; // Single Delay
	// Recursion delay fVec494SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec494SEState; // Single Delay
	// Recursion delay fVec500SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec500SEState; // Single Delay
	// Recursion delay fVec506SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec506SEState; // Single Delay
	// Recursion delay fVec512SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec512SEState; // Single Delay
	// Recursion delay fVec518SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec518SEState; // Single Delay
	// Recursion delay fVec524SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec524SEState; // Single Delay
	// Recursion delay fVec530SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec530SEState; // Single Delay
	// Recursion delay fVec536SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec536SEState; // Single Delay
	// Recursion delay fVec542SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec542SEState; // Single Delay
	// Recursion delay fVec548SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec548SEState; // Single Delay
	// Recursion delay fVec554SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec554SEState; // Single Delay
	// Recursion delay fVec560SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec560SEState; // Single Delay
	// Recursion delay fVec566SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec566SEState; // Single Delay
	// Recursion delay fVec572SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec572SEState; // Single Delay
	// Recursion delay fVec578SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec578SEState; // Single Delay
	// Recursion delay fVec584SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec584SEState; // Single Delay
	// Recursion delay fVec590SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec590SEState; // Single Delay
	// Recursion delay fVec596SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec596SEState; // Single Delay
	// Recursion delay fVec602SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec602SEState; // Single Delay
	// Recursion delay fVec608SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec608SEState; // Single Delay
	// Recursion delay fVec614SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec614SEState; // Single Delay
	// Recursion delay fVec620SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec620SEState; // Single Delay
	// Recursion delay fVec626SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec626SEState; // Single Delay
	// Recursion delay fVec632SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec632SEState; // Single Delay
	// Recursion delay fVec638SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec638SEState; // Single Delay
	// Recursion delay fVec644SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec644SEState; // Single Delay
	// Recursion delay fVec650SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec650SEState; // Single Delay
	// Recursion delay fVec656SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec656SEState; // Single Delay
	// Recursion delay fVec662SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec662SEState; // Single Delay
	// Recursion delay fVec668SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec668SEState; // Single Delay
	// Recursion delay fVec674SE is of type kSingleDelay
	// While its definition is of type kZeroDelay
	float 	fVec674SEState; // Single Delay
	int fSampleRate;

  public:
	virtual void metadata(Meta* m) { 
		m->declare("compile_options", "-lang ocpp -ct 1 -es 0 -mcl 4 -mcd 9 -mfs 1024 -huf 0 -irt 4 -fls 4 -udd 1 -mdd 1024 -mdy 90 -mca 8 -ss 0 -single -ftz 0");
		m->declare("filename", "bells.dsp");
		m->declare("name", "bells");
	}

	virtual int getNumInputs() { return 0; }
	virtual int getNumOutputs() { return 1; }
	static void classInit(int sample_rate) {
	}
	virtual void instanceConstants(int sample_rate) {
		fSampleRate = sample_rate;
		fConst0KI = std::min(1.92e+05f, std::max(1.0f, float(fSampleRate))); // step: 27
		fConst1KI = (0.5f * fConst0KI); // step: 28
		IOTA0 = 0;
		fConst2KI = (0.0003984129f * fConst0KI); // step: 61
		fConst3KI = (100.53097f / fConst0KI); // step: 71
		fConst4KI = (2.0f * (fConst3KI + -1.0f /* Sum */)); // step: 73
		fConst5KI = (15770.537f / fConst0KI); // step: 75
		fConst6KI = powf((1.0f + -fConst3KI /* Sum */),2.0f); // step: 85
		fConst7KI = (0.000103418475f * fConst0KI); // step: 428
		fConst8KI = (60754.96f / fConst0KI); // step: 436
		fConst9KI = (0.0001315173f * fConst0KI); // step: 460
		fConst10KI = (47774.59f / fConst0KI); // step: 468
		fConst11KI = (0.00017745448f * fConst0KI); // step: 496
		fConst12KI = (35407.31f / fConst0KI); // step: 504
		fConst13KI = (0.00017709982f * fConst0KI); // step: 529
		fConst14KI = (35478.215f / fConst0KI); // step: 537
		fConst15KI = (0.00025209118f * fConst0KI); // step: 563
		fConst16KI = (24924.258f / fConst0KI); // step: 571
		fConst17KI = (0.00025257576f * fConst0KI); // step: 595
		fConst18KI = (24876.438f / fConst0KI); // step: 603
		fConst19KI = (0.0007592721f * fConst0KI); // step: 631
		fConst20KI = (8275.275f / fConst0KI); // step: 639
		fConst21KI = (0.0007628706f * fConst0KI); // step: 664
		fConst22KI = (8236.24f / fConst0KI); // step: 672
		fConst23KI = (0.002263917f * fConst0KI); // step: 700
		fConst24KI = (2775.3606f / fConst0KI); // step: 708
		fConst25KI = (0.0022816064f * fConst0KI); // step: 733
		fConst26KI = (2753.8428f / fConst0KI); // step: 741
		fConst27KI = (0.5f * (1.0f + -fConst6KI /* Sum */)); // step: 3287
	}
	virtual void instanceResetUserInterface() {
		fbutton0 = 0.0;
		fbutton1 = 0.0;
		fbutton2 = 0.0;
		fbutton3 = 0.0;
		fbutton4 = 0.0;
		fbutton5 = 0.0;
		fbutton6 = 0.0;
		fbutton7 = 0.0;
		fbutton8 = 0.0;
		fbutton9 = 0.0;
		fentry0 = 69.0f;
		fentry1 = 0.989f;
		fentry2 = 68.0f;
		fentry3 = 67.0f;
		fentry4 = 66.0f;
		fentry5 = 65.0f;
		fentry6 = 64.0f;
		fentry7 = 63.0f;
		fentry8 = 62.0f;
		fentry9 = 6e+01f;
		fentry10 = 61.0f;
	}
	virtual void instanceClear() {
		fVec0BEState = 0;
		fVec1BEState = 0;
		fVec2BEState = 0;
		fVec3BEState = 0;
		fVec4BEState = 0;
		fVec5BEState = 0;
		fVec6BEState = 0;
		fVec7BEState = 0;
		fVec8BEState = 0;
		fVec9BEState = 0;
		for (int i = 1; i < 256; i++) { fVec12SE[i] = 0; }
		fVec12SE[0] = -1;  // detect unintialized
		fVec14SEState = 0;
		for (int j = 0; j < 2; j++) { fVec15SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec19SE[i] = 0; }
		fVec19SE[0] = -1;  // detect unintialized
		fVec21SEState = 0;
		for (int j = 0; j < 2; j++) { fVec22SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec26SE[i] = 0; }
		fVec26SE[0] = -1;  // detect unintialized
		fVec28SEState = 0;
		for (int j = 0; j < 2; j++) { fVec29SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec33SE[i] = 0; }
		fVec33SE[0] = -1;  // detect unintialized
		fVec35SEState = 0;
		for (int j = 0; j < 2; j++) { fVec36SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec40SE[i] = 0; }
		fVec40SE[0] = -1;  // detect unintialized
		fVec42SEState = 0;
		for (int j = 0; j < 2; j++) { fVec43SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec47SE[i] = 0; }
		fVec47SE[0] = -1;  // detect unintialized
		fVec49SEState = 0;
		for (int j = 0; j < 2; j++) { fVec50SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec54SE[i] = 0; }
		fVec54SE[0] = -1;  // detect unintialized
		fVec56SEState = 0;
		for (int j = 0; j < 2; j++) { fVec57SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec61SE[i] = 0; }
		fVec61SE[0] = -1;  // detect unintialized
		fVec63SEState = 0;
		for (int j = 0; j < 2; j++) { fVec64SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec68SE[i] = 0; }
		fVec68SE[0] = -1;  // detect unintialized
		fVec70SEState = 0;
		for (int j = 0; j < 2; j++) { fVec71SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec75SE[i] = 0; }
		fVec75SE[0] = -1;  // detect unintialized
		fVec77SEState = 0;
		for (int j = 0; j < 2; j++) { fVec78SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec81SE[i] = 0; }
		fVec81SE[0] = -1;  // detect unintialized
		fVec83SEState = 0;
		for (int j = 0; j < 2; j++) { fVec84SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec87SE[i] = 0; }
		fVec87SE[0] = -1;  // detect unintialized
		fVec89SEState = 0;
		for (int j = 0; j < 2; j++) { fVec90SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec93SE[i] = 0; }
		fVec93SE[0] = -1;  // detect unintialized
		fVec95SEState = 0;
		for (int j = 0; j < 2; j++) { fVec96SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec99SE[i] = 0; }
		fVec99SE[0] = -1;  // detect unintialized
		fVec101SEState = 0;
		for (int j = 0; j < 2; j++) { fVec102SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec105SE[i] = 0; }
		fVec105SE[0] = -1;  // detect unintialized
		fVec107SEState = 0;
		for (int j = 0; j < 2; j++) { fVec108SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec111SE[i] = 0; }
		fVec111SE[0] = -1;  // detect unintialized
		fVec113SEState = 0;
		for (int j = 0; j < 2; j++) { fVec114SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec117SE[i] = 0; }
		fVec117SE[0] = -1;  // detect unintialized
		fVec119SEState = 0;
		for (int j = 0; j < 2; j++) { fVec120SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec123SE[i] = 0; }
		fVec123SE[0] = -1;  // detect unintialized
		fVec125SEState = 0;
		for (int j = 0; j < 2; j++) { fVec126SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec129SE[i] = 0; }
		fVec129SE[0] = -1;  // detect unintialized
		fVec131SEState = 0;
		for (int j = 0; j < 2; j++) { fVec132SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec135SE[i] = 0; }
		fVec135SE[0] = -1;  // detect unintialized
		fVec137SEState = 0;
		for (int j = 0; j < 2; j++) { fVec138SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec141SE[i] = 0; }
		fVec141SE[0] = -1;  // detect unintialized
		fVec143SEState = 0;
		for (int j = 0; j < 2; j++) { fVec144SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec147SE[i] = 0; }
		fVec147SE[0] = -1;  // detect unintialized
		fVec149SEState = 0;
		for (int j = 0; j < 2; j++) { fVec150SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec153SE[i] = 0; }
		fVec153SE[0] = -1;  // detect unintialized
		fVec155SEState = 0;
		for (int j = 0; j < 2; j++) { fVec156SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec159SE[i] = 0; }
		fVec159SE[0] = -1;  // detect unintialized
		fVec161SEState = 0;
		for (int j = 0; j < 2; j++) { fVec162SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec165SE[i] = 0; }
		fVec165SE[0] = -1;  // detect unintialized
		fVec167SEState = 0;
		for (int j = 0; j < 2; j++) { fVec168SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec171SE[i] = 0; }
		fVec171SE[0] = -1;  // detect unintialized
		fVec173SEState = 0;
		for (int j = 0; j < 2; j++) { fVec174SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec177SE[i] = 0; }
		fVec177SE[0] = -1;  // detect unintialized
		fVec179SEState = 0;
		for (int j = 0; j < 2; j++) { fVec180SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec183SE[i] = 0; }
		fVec183SE[0] = -1;  // detect unintialized
		fVec185SEState = 0;
		for (int j = 0; j < 2; j++) { fVec186SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec189SE[i] = 0; }
		fVec189SE[0] = -1;  // detect unintialized
		fVec191SEState = 0;
		for (int j = 0; j < 2; j++) { fVec192SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec195SE[i] = 0; }
		fVec195SE[0] = -1;  // detect unintialized
		fVec197SEState = 0;
		for (int j = 0; j < 2; j++) { fVec198SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec201SE[i] = 0; }
		fVec201SE[0] = -1;  // detect unintialized
		fVec203SEState = 0;
		for (int j = 0; j < 2; j++) { fVec204SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec207SE[i] = 0; }
		fVec207SE[0] = -1;  // detect unintialized
		fVec209SEState = 0;
		for (int j = 0; j < 2; j++) { fVec210SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec213SE[i] = 0; }
		fVec213SE[0] = -1;  // detect unintialized
		fVec215SEState = 0;
		for (int j = 0; j < 2; j++) { fVec216SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec219SE[i] = 0; }
		fVec219SE[0] = -1;  // detect unintialized
		fVec221SEState = 0;
		for (int j = 0; j < 2; j++) { fVec222SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec225SE[i] = 0; }
		fVec225SE[0] = -1;  // detect unintialized
		fVec227SEState = 0;
		for (int j = 0; j < 2; j++) { fVec228SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec231SE[i] = 0; }
		fVec231SE[0] = -1;  // detect unintialized
		fVec233SEState = 0;
		for (int j = 0; j < 2; j++) { fVec234SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec237SE[i] = 0; }
		fVec237SE[0] = -1;  // detect unintialized
		fVec239SEState = 0;
		for (int j = 0; j < 2; j++) { fVec240SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec243SE[i] = 0; }
		fVec243SE[0] = -1;  // detect unintialized
		fVec245SEState = 0;
		for (int j = 0; j < 2; j++) { fVec246SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec249SE[i] = 0; }
		fVec249SE[0] = -1;  // detect unintialized
		fVec251SEState = 0;
		for (int j = 0; j < 2; j++) { fVec252SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec255SE[i] = 0; }
		fVec255SE[0] = -1;  // detect unintialized
		fVec257SEState = 0;
		for (int j = 0; j < 2; j++) { fVec258SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec261SE[i] = 0; }
		fVec261SE[0] = -1;  // detect unintialized
		fVec263SEState = 0;
		for (int j = 0; j < 2; j++) { fVec264SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec267SE[i] = 0; }
		fVec267SE[0] = -1;  // detect unintialized
		fVec269SEState = 0;
		for (int j = 0; j < 2; j++) { fVec270SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec273SE[i] = 0; }
		fVec273SE[0] = -1;  // detect unintialized
		fVec275SEState = 0;
		for (int j = 0; j < 2; j++) { fVec276SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec279SE[i] = 0; }
		fVec279SE[0] = -1;  // detect unintialized
		fVec281SEState = 0;
		for (int j = 0; j < 2; j++) { fVec282SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec285SE[i] = 0; }
		fVec285SE[0] = -1;  // detect unintialized
		fVec287SEState = 0;
		for (int j = 0; j < 2; j++) { fVec288SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec291SE[i] = 0; }
		fVec291SE[0] = -1;  // detect unintialized
		fVec293SEState = 0;
		for (int j = 0; j < 2; j++) { fVec294SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec297SE[i] = 0; }
		fVec297SE[0] = -1;  // detect unintialized
		fVec299SEState = 0;
		for (int j = 0; j < 2; j++) { fVec300SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec303SE[i] = 0; }
		fVec303SE[0] = -1;  // detect unintialized
		fVec305SEState = 0;
		for (int j = 0; j < 2; j++) { fVec306SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec309SE[i] = 0; }
		fVec309SE[0] = -1;  // detect unintialized
		fVec311SEState = 0;
		for (int j = 0; j < 2; j++) { fVec312SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec315SE[i] = 0; }
		fVec315SE[0] = -1;  // detect unintialized
		fVec317SEState = 0;
		for (int j = 0; j < 2; j++) { fVec318SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec321SE[i] = 0; }
		fVec321SE[0] = -1;  // detect unintialized
		fVec323SEState = 0;
		for (int j = 0; j < 2; j++) { fVec324SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec327SE[i] = 0; }
		fVec327SE[0] = -1;  // detect unintialized
		fVec329SEState = 0;
		for (int j = 0; j < 2; j++) { fVec330SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec333SE[i] = 0; }
		fVec333SE[0] = -1;  // detect unintialized
		fVec335SEState = 0;
		for (int j = 0; j < 2; j++) { fVec336SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec339SE[i] = 0; }
		fVec339SE[0] = -1;  // detect unintialized
		fVec341SEState = 0;
		for (int j = 0; j < 2; j++) { fVec342SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec345SE[i] = 0; }
		fVec345SE[0] = -1;  // detect unintialized
		fVec347SEState = 0;
		for (int j = 0; j < 2; j++) { fVec348SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec351SE[i] = 0; }
		fVec351SE[0] = -1;  // detect unintialized
		fVec353SEState = 0;
		for (int j = 0; j < 2; j++) { fVec354SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec357SE[i] = 0; }
		fVec357SE[0] = -1;  // detect unintialized
		fVec359SEState = 0;
		for (int j = 0; j < 2; j++) { fVec360SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec363SE[i] = 0; }
		fVec363SE[0] = -1;  // detect unintialized
		fVec365SEState = 0;
		for (int j = 0; j < 2; j++) { fVec366SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec369SE[i] = 0; }
		fVec369SE[0] = -1;  // detect unintialized
		fVec371SEState = 0;
		for (int j = 0; j < 2; j++) { fVec372SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec375SE[i] = 0; }
		fVec375SE[0] = -1;  // detect unintialized
		fVec377SEState = 0;
		for (int j = 0; j < 2; j++) { fVec378SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec381SE[i] = 0; }
		fVec381SE[0] = -1;  // detect unintialized
		fVec383SEState = 0;
		for (int j = 0; j < 2; j++) { fVec384SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec387SE[i] = 0; }
		fVec387SE[0] = -1;  // detect unintialized
		fVec389SEState = 0;
		for (int j = 0; j < 2; j++) { fVec390SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec393SE[i] = 0; }
		fVec393SE[0] = -1;  // detect unintialized
		fVec395SEState = 0;
		for (int j = 0; j < 2; j++) { fVec396SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec399SE[i] = 0; }
		fVec399SE[0] = -1;  // detect unintialized
		fVec401SEState = 0;
		for (int j = 0; j < 2; j++) { fVec402SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec405SE[i] = 0; }
		fVec405SE[0] = -1;  // detect unintialized
		fVec407SEState = 0;
		for (int j = 0; j < 2; j++) { fVec408SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec411SE[i] = 0; }
		fVec411SE[0] = -1;  // detect unintialized
		fVec413SEState = 0;
		for (int j = 0; j < 2; j++) { fVec414SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec417SE[i] = 0; }
		fVec417SE[0] = -1;  // detect unintialized
		fVec419SEState = 0;
		for (int j = 0; j < 2; j++) { fVec420SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec423SE[i] = 0; }
		fVec423SE[0] = -1;  // detect unintialized
		fVec425SEState = 0;
		for (int j = 0; j < 2; j++) { fVec426SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec429SE[i] = 0; }
		fVec429SE[0] = -1;  // detect unintialized
		fVec431SEState = 0;
		for (int j = 0; j < 2; j++) { fVec432SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec435SE[i] = 0; }
		fVec435SE[0] = -1;  // detect unintialized
		fVec437SEState = 0;
		for (int j = 0; j < 2; j++) { fVec438SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec441SE[i] = 0; }
		fVec441SE[0] = -1;  // detect unintialized
		fVec443SEState = 0;
		for (int j = 0; j < 2; j++) { fVec444SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec447SE[i] = 0; }
		fVec447SE[0] = -1;  // detect unintialized
		fVec449SEState = 0;
		for (int j = 0; j < 2; j++) { fVec450SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec453SE[i] = 0; }
		fVec453SE[0] = -1;  // detect unintialized
		fVec455SEState = 0;
		for (int j = 0; j < 2; j++) { fVec456SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec459SE[i] = 0; }
		fVec459SE[0] = -1;  // detect unintialized
		fVec461SEState = 0;
		for (int j = 0; j < 2; j++) { fVec462SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec465SE[i] = 0; }
		fVec465SE[0] = -1;  // detect unintialized
		fVec467SEState = 0;
		for (int j = 0; j < 2; j++) { fVec468SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec471SE[i] = 0; }
		fVec471SE[0] = -1;  // detect unintialized
		fVec473SEState = 0;
		for (int j = 0; j < 2; j++) { fVec474SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec477SE[i] = 0; }
		fVec477SE[0] = -1;  // detect unintialized
		fVec479SEState = 0;
		for (int j = 0; j < 2; j++) { fVec480SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec483SE[i] = 0; }
		fVec483SE[0] = -1;  // detect unintialized
		fVec485SEState = 0;
		for (int j = 0; j < 2; j++) { fVec486SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec489SE[i] = 0; }
		fVec489SE[0] = -1;  // detect unintialized
		fVec491SEState = 0;
		for (int j = 0; j < 2; j++) { fVec492SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec495SE[i] = 0; }
		fVec495SE[0] = -1;  // detect unintialized
		fVec497SEState = 0;
		for (int j = 0; j < 2; j++) { fVec498SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec501SE[i] = 0; }
		fVec501SE[0] = -1;  // detect unintialized
		fVec503SEState = 0;
		for (int j = 0; j < 2; j++) { fVec504SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec507SE[i] = 0; }
		fVec507SE[0] = -1;  // detect unintialized
		fVec509SEState = 0;
		for (int j = 0; j < 2; j++) { fVec510SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec513SE[i] = 0; }
		fVec513SE[0] = -1;  // detect unintialized
		fVec515SEState = 0;
		for (int j = 0; j < 2; j++) { fVec516SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec519SE[i] = 0; }
		fVec519SE[0] = -1;  // detect unintialized
		fVec521SEState = 0;
		for (int j = 0; j < 2; j++) { fVec522SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec525SE[i] = 0; }
		fVec525SE[0] = -1;  // detect unintialized
		fVec527SEState = 0;
		for (int j = 0; j < 2; j++) { fVec528SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec531SE[i] = 0; }
		fVec531SE[0] = -1;  // detect unintialized
		fVec533SEState = 0;
		for (int j = 0; j < 2; j++) { fVec534SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec537SE[i] = 0; }
		fVec537SE[0] = -1;  // detect unintialized
		fVec539SEState = 0;
		for (int j = 0; j < 2; j++) { fVec540SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec543SE[i] = 0; }
		fVec543SE[0] = -1;  // detect unintialized
		fVec545SEState = 0;
		for (int j = 0; j < 2; j++) { fVec546SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec549SE[i] = 0; }
		fVec549SE[0] = -1;  // detect unintialized
		fVec551SEState = 0;
		for (int j = 0; j < 2; j++) { fVec552SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec555SE[i] = 0; }
		fVec555SE[0] = -1;  // detect unintialized
		fVec557SEState = 0;
		for (int j = 0; j < 2; j++) { fVec558SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec561SE[i] = 0; }
		fVec561SE[0] = -1;  // detect unintialized
		fVec563SEState = 0;
		for (int j = 0; j < 2; j++) { fVec564SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec567SE[i] = 0; }
		fVec567SE[0] = -1;  // detect unintialized
		fVec569SEState = 0;
		for (int j = 0; j < 2; j++) { fVec570SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec573SE[i] = 0; }
		fVec573SE[0] = -1;  // detect unintialized
		fVec575SEState = 0;
		for (int j = 0; j < 2; j++) { fVec576SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec579SE[i] = 0; }
		fVec579SE[0] = -1;  // detect unintialized
		fVec581SEState = 0;
		for (int j = 0; j < 2; j++) { fVec582SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec585SE[i] = 0; }
		fVec585SE[0] = -1;  // detect unintialized
		fVec587SEState = 0;
		for (int j = 0; j < 2; j++) { fVec588SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec591SE[i] = 0; }
		fVec591SE[0] = -1;  // detect unintialized
		fVec593SEState = 0;
		for (int j = 0; j < 2; j++) { fVec594SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec597SE[i] = 0; }
		fVec597SE[0] = -1;  // detect unintialized
		fVec599SEState = 0;
		for (int j = 0; j < 2; j++) { fVec600SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec603SE[i] = 0; }
		fVec603SE[0] = -1;  // detect unintialized
		fVec605SEState = 0;
		for (int j = 0; j < 2; j++) { fVec606SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec609SE[i] = 0; }
		fVec609SE[0] = -1;  // detect unintialized
		fVec611SEState = 0;
		for (int j = 0; j < 2; j++) { fVec612SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec615SE[i] = 0; }
		fVec615SE[0] = -1;  // detect unintialized
		fVec617SEState = 0;
		for (int j = 0; j < 2; j++) { fVec618SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec621SE[i] = 0; }
		fVec621SE[0] = -1;  // detect unintialized
		fVec623SEState = 0;
		for (int j = 0; j < 2; j++) { fVec624SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec627SE[i] = 0; }
		fVec627SE[0] = -1;  // detect unintialized
		fVec629SEState = 0;
		for (int j = 0; j < 2; j++) { fVec630SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec633SE[i] = 0; }
		fVec633SE[0] = -1;  // detect unintialized
		fVec635SEState = 0;
		for (int j = 0; j < 2; j++) { fVec636SEState[j] = 0; }
		for (int i = 1; i < 64; i++) { fVec639SE[i] = 0; }
		fVec639SE[0] = -1;  // detect unintialized
		fVec641SEState = 0;
		for (int j = 0; j < 2; j++) { fVec642SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec645SE[i] = 0; }
		fVec645SE[0] = -1;  // detect unintialized
		fVec647SEState = 0;
		for (int j = 0; j < 2; j++) { fVec648SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec651SE[i] = 0; }
		fVec651SE[0] = -1;  // detect unintialized
		fVec653SEState = 0;
		for (int j = 0; j < 2; j++) { fVec654SEState[j] = 0; }
		for (int i = 1; i < 1024; i++) { fVec657SE[i] = 0; }
		fVec657SE[0] = -1;  // detect unintialized
		fVec659SEState = 0;
		for (int j = 0; j < 2; j++) { fVec660SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec663SE[i] = 0; }
		fVec663SE[0] = -1;  // detect unintialized
		fVec665SEState = 0;
		for (int j = 0; j < 2; j++) { fVec666SEState[j] = 0; }
		for (int i = 1; i < 256; i++) { fVec669SE[i] = 0; }
		fVec669SE[0] = -1;  // detect unintialized
		fVec671SEState = 0;
		for (int j = 0; j < 2; j++) { fVec672SEState[j] = 0; }
		for (int i = 1; i < 128; i++) { fVec675SE[i] = 0; }
		fVec675SE[0] = -1;  // detect unintialized
		fVec677SEState = 0;
		for (int j = 0; j < 2; j++) { fVec678SEState[j] = 0; }
		fVec11SEState = 0;
		fVec18SEState = 0;
		fVec25SEState = 0;
		fVec32SEState = 0;
		fVec39SEState = 0;
		fVec46SEState = 0;
		fVec53SEState = 0;
		fVec60SEState = 0;
		fVec67SEState = 0;
		fVec74SEState = 0;
		fVec80SEState = 0;
		fVec86SEState = 0;
		fVec92SEState = 0;
		fVec98SEState = 0;
		fVec104SEState = 0;
		fVec110SEState = 0;
		fVec116SEState = 0;
		fVec122SEState = 0;
		fVec128SEState = 0;
		fVec134SEState = 0;
		fVec140SEState = 0;
		fVec146SEState = 0;
		fVec152SEState = 0;
		fVec158SEState = 0;
		fVec164SEState = 0;
		fVec170SEState = 0;
		fVec176SEState = 0;
		fVec182SEState = 0;
		fVec188SEState = 0;
		fVec194SEState = 0;
		fVec200SEState = 0;
		fVec206SEState = 0;
		fVec212SEState = 0;
		fVec218SEState = 0;
		fVec224SEState = 0;
		fVec230SEState = 0;
		fVec236SEState = 0;
		fVec242SEState = 0;
		fVec248SEState = 0;
		fVec254SEState = 0;
		fVec260SEState = 0;
		fVec266SEState = 0;
		fVec272SEState = 0;
		fVec278SEState = 0;
		fVec284SEState = 0;
		fVec290SEState = 0;
		fVec296SEState = 0;
		fVec302SEState = 0;
		fVec308SEState = 0;
		fVec314SEState = 0;
		fVec320SEState = 0;
		fVec326SEState = 0;
		fVec332SEState = 0;
		fVec338SEState = 0;
		fVec344SEState = 0;
		fVec350SEState = 0;
		fVec356SEState = 0;
		fVec362SEState = 0;
		fVec368SEState = 0;
		fVec374SEState = 0;
		fVec380SEState = 0;
		fVec386SEState = 0;
		fVec392SEState = 0;
		fVec398SEState = 0;
		fVec404SEState = 0;
		fVec410SEState = 0;
		fVec416SEState = 0;
		fVec422SEState = 0;
		fVec428SEState = 0;
		fVec434SEState = 0;
		fVec440SEState = 0;
		fVec446SEState = 0;
		fVec452SEState = 0;
		fVec458SEState = 0;
		fVec464SEState = 0;
		fVec470SEState = 0;
		fVec476SEState = 0;
		fVec482SEState = 0;
		fVec488SEState = 0;
		fVec494SEState = 0;
		fVec500SEState = 0;
		fVec506SEState = 0;
		fVec512SEState = 0;
		fVec518SEState = 0;
		fVec524SEState = 0;
		fVec530SEState = 0;
		fVec536SEState = 0;
		fVec542SEState = 0;
		fVec548SEState = 0;
		fVec554SEState = 0;
		fVec560SEState = 0;
		fVec566SEState = 0;
		fVec572SEState = 0;
		fVec578SEState = 0;
		fVec584SEState = 0;
		fVec590SEState = 0;
		fVec596SEState = 0;
		fVec602SEState = 0;
		fVec608SEState = 0;
		fVec614SEState = 0;
		fVec620SEState = 0;
		fVec626SEState = 0;
		fVec632SEState = 0;
		fVec638SEState = 0;
		fVec644SEState = 0;
		fVec650SEState = 0;
		fVec656SEState = 0;
		fVec662SEState = 0;
		fVec668SEState = 0;
		fVec674SEState = 0;
	}
	virtual void init(int sample_rate) {
		classInit(sample_rate);
		instanceInit(sample_rate);
	}
	virtual void instanceInit(int sample_rate) {
		instanceConstants(sample_rate);
		instanceResetUserInterface();
		instanceClear();
	}
	virtual mydsp* clone() {
		return new mydsp();
	}
	virtual int getSampleRate() {
		return fSampleRate;
	}
	virtual void buildUserInterface(UI* ui_interface) {
		ui_interface->openVerticalBox("bells");
		ui_interface->addNumEntry("feedback", &fentry1, 0.989f, 0.0f, 1.0f, 0.001f);
		ui_interface->addNumEntry("pitch0", &fentry9, 6e+01f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch1", &fentry10, 61.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch2", &fentry8, 62.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch3", &fentry7, 63.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch4", &fentry6, 64.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch5", &fentry5, 65.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch6", &fentry4, 66.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch7", &fentry3, 67.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch8", &fentry2, 68.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addNumEntry("pitch9", &fentry0, 69.0f, 6e+01f, 1.6e+02f, 0.01f);
		ui_interface->addButton("play0", &fbutton0);
		ui_interface->addButton("play1", &fbutton1);
		ui_interface->addButton("play2", &fbutton2);
		ui_interface->addButton("play3", &fbutton3);
		ui_interface->addButton("play4", &fbutton4);
		ui_interface->addButton("play5", &fbutton5);
		ui_interface->addButton("play6", &fbutton6);
		ui_interface->addButton("play7", &fbutton7);
		ui_interface->addButton("play8", &fbutton8);
		ui_interface->addButton("play9", &fbutton9);
		ui_interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		float 	fSlow0BE = float(fbutton0); // Zone 2, step: 1
		float 	fVec0BE[2];
		float 	fSlow1BE = float(fbutton1); // Zone 2, step: 3
		float 	fVec1BE[2];
		float 	fSlow2BE = float(fbutton2); // Zone 2, step: 5
		float 	fVec2BE[2];
		float 	fSlow3BE = float(fbutton3); // Zone 2, step: 7
		float 	fVec3BE[2];
		float 	fSlow4BE = float(fbutton4); // Zone 2, step: 9
		float 	fVec4BE[2];
		float 	fSlow5BE = float(fbutton5); // Zone 2, step: 11
		float 	fVec5BE[2];
		float 	fSlow6BE = float(fbutton6); // Zone 2, step: 13
		float 	fVec6BE[2];
		float 	fSlow7BE = float(fbutton7); // Zone 2, step: 15
		float 	fVec7BE[2];
		float 	fSlow8BE = float(fbutton8); // Zone 2, step: 17
		float 	fVec8BE[2];
		float 	fSlow9BE = float(fbutton9); // Zone 2, step: 19
		float 	fVec9BE[2];
		float 	fSlow10BE = powf(2.0f,(0.083333336f * (float(fentry0) + -69.0f /* Sum */))); // Zone 2, step: 40
		float 	fSlow11BE = float(((2509.959f * fSlow10BE) < fConst1KI)); // Zone 2, step: 43
		float 	fTemp0SE; // step: 48
		float 	fSlow12BE = float(fentry1); // Zone 2, step: 53
		int 	iSlow13BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow10BE)))); // Zone 2, step: 65
		float 	fSlow14BE = (fConst4KI * cosf((fConst5KI * fSlow10BE))); // Zone 2, step: 78
		float 	fTemp1SE; // step: 87
		float 	fVec14SE[2];
		float 	fVec15SE[3];
		float 	fSlow15BE = powf(2.0f,(0.083333336f * (float(fentry2) + -69.0f /* Sum */))); // Zone 2, step: 97
		float 	fSlow16BE = float(((2509.959f * fSlow15BE) < fConst1KI)); // Zone 2, step: 100
		float 	fTemp2SE; // step: 103
		int 	iSlow17BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow15BE)))); // Zone 2, step: 113
		float 	fSlow18BE = (fConst4KI * cosf((fConst5KI * fSlow15BE))); // Zone 2, step: 118
		float 	fTemp3SE; // step: 123
		float 	fVec21SE[2];
		float 	fVec22SE[3];
		float 	fSlow19BE = powf(2.0f,(0.083333336f * (float(fentry3) + -69.0f /* Sum */))); // Zone 2, step: 133
		float 	fSlow20BE = float(((2509.959f * fSlow19BE) < fConst1KI)); // Zone 2, step: 136
		float 	fTemp4SE; // step: 139
		int 	iSlow21BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow19BE)))); // Zone 2, step: 149
		float 	fSlow22BE = (fConst4KI * cosf((fConst5KI * fSlow19BE))); // Zone 2, step: 154
		float 	fTemp5SE; // step: 159
		float 	fVec28SE[2];
		float 	fVec29SE[3];
		float 	fSlow23BE = powf(2.0f,(0.083333336f * (float(fentry4) + -69.0f /* Sum */))); // Zone 2, step: 169
		float 	fSlow24BE = float(((2509.959f * fSlow23BE) < fConst1KI)); // Zone 2, step: 172
		float 	fTemp6SE; // step: 175
		int 	iSlow25BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow23BE)))); // Zone 2, step: 185
		float 	fSlow26BE = (fConst4KI * cosf((fConst5KI * fSlow23BE))); // Zone 2, step: 190
		float 	fTemp7SE; // step: 195
		float 	fVec35SE[2];
		float 	fVec36SE[3];
		float 	fSlow27BE = powf(2.0f,(0.083333336f * (float(fentry5) + -69.0f /* Sum */))); // Zone 2, step: 205
		float 	fSlow28BE = float(((2509.959f * fSlow27BE) < fConst1KI)); // Zone 2, step: 208
		float 	fTemp8SE; // step: 211
		int 	iSlow29BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow27BE)))); // Zone 2, step: 221
		float 	fSlow30BE = (fConst4KI * cosf((fConst5KI * fSlow27BE))); // Zone 2, step: 226
		float 	fTemp9SE; // step: 231
		float 	fVec42SE[2];
		float 	fVec43SE[3];
		float 	fSlow31BE = powf(2.0f,(0.083333336f * (float(fentry6) + -69.0f /* Sum */))); // Zone 2, step: 241
		float 	fSlow32BE = float(((2509.959f * fSlow31BE) < fConst1KI)); // Zone 2, step: 244
		float 	fTemp10SE; // step: 247
		int 	iSlow33BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow31BE)))); // Zone 2, step: 257
		float 	fSlow34BE = (fConst4KI * cosf((fConst5KI * fSlow31BE))); // Zone 2, step: 262
		float 	fTemp11SE; // step: 267
		float 	fVec49SE[2];
		float 	fVec50SE[3];
		float 	fSlow35BE = powf(2.0f,(0.083333336f * (float(fentry7) + -69.0f /* Sum */))); // Zone 2, step: 277
		float 	fSlow36BE = float(((2509.959f * fSlow35BE) < fConst1KI)); // Zone 2, step: 280
		float 	fTemp12SE; // step: 283
		int 	iSlow37BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow35BE)))); // Zone 2, step: 293
		float 	fSlow38BE = (fConst4KI * cosf((fConst5KI * fSlow35BE))); // Zone 2, step: 298
		float 	fTemp13SE; // step: 303
		float 	fVec56SE[2];
		float 	fVec57SE[3];
		float 	fSlow39BE = powf(2.0f,(0.083333336f * (float(fentry8) + -69.0f /* Sum */))); // Zone 2, step: 313
		float 	fSlow40BE = float(((2509.959f * fSlow39BE) < fConst1KI)); // Zone 2, step: 316
		float 	fTemp14SE; // step: 319
		int 	iSlow41BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow39BE)))); // Zone 2, step: 329
		float 	fSlow42BE = (fConst4KI * cosf((fConst5KI * fSlow39BE))); // Zone 2, step: 334
		float 	fTemp15SE; // step: 339
		float 	fVec63SE[2];
		float 	fVec64SE[3];
		float 	fSlow43BE = powf(2.0f,(0.083333336f * (float(fentry9) + -69.0f /* Sum */))); // Zone 2, step: 348
		float 	fSlow44BE = float(((2509.959f * fSlow43BE) < fConst1KI)); // Zone 2, step: 351
		float 	fTemp16SE; // step: 354
		int 	iSlow45BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow43BE)))); // Zone 2, step: 364
		float 	fSlow46BE = (fConst4KI * cosf((fConst5KI * fSlow43BE))); // Zone 2, step: 369
		float 	fTemp17SE; // step: 374
		float 	fVec70SE[2];
		float 	fVec71SE[3];
		float 	fSlow47BE = powf(2.0f,(0.083333336f * (float(fentry10) + -69.0f /* Sum */))); // Zone 2, step: 384
		float 	fSlow48BE = float(((2509.959f * fSlow47BE) < fConst1KI)); // Zone 2, step: 387
		float 	fTemp18SE; // step: 390
		int 	iSlow49BE = int(std::min(4096.0f, std::max(0.0f, (fConst2KI / fSlow47BE)))); // Zone 2, step: 400
		float 	fSlow50BE = (fConst4KI * cosf((fConst5KI * fSlow47BE))); // Zone 2, step: 405
		float 	fTemp19SE; // step: 410
		float 	fVec77SE[2];
		float 	fVec78SE[3];
		float 	fSlow51BE = float(((9669.452f * fSlow10BE) < fConst1KI)); // Zone 2, step: 419
		float 	fTemp20SE; // step: 421
		int 	iSlow52BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow10BE)))); // Zone 2, step: 432
		float 	fSlow53BE = (fConst4KI * cosf((fConst8KI * fSlow10BE))); // Zone 2, step: 439
		float 	fTemp21SE; // step: 444
		float 	fVec83SE[2];
		float 	fVec84SE[3];
		float 	fSlow54BE = float(((7603.562f * fSlow10BE) < fConst1KI)); // Zone 2, step: 453
		int 	iSlow55BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow10BE)))); // Zone 2, step: 464
		float 	fSlow56BE = (fConst4KI * cosf((fConst10KI * fSlow10BE))); // Zone 2, step: 471
		float 	fTemp22SE; // step: 476
		float 	fVec89SE[2];
		float 	fVec90SE[3];
		float 	fSlow57BE = (0.9999655f * float(((5635.248f * fSlow10BE) < fConst1KI))); // Zone 2, step: 487
		float 	fTemp23SE; // step: 489
		int 	iSlow58BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow10BE)))); // Zone 2, step: 500
		float 	fSlow59BE = (fConst4KI * cosf((fConst12KI * fSlow10BE))); // Zone 2, step: 507
		float 	fTemp24SE; // step: 512
		float 	fVec95SE[2];
		float 	fVec96SE[3];
		float 	fSlow60BE = (0.9999655f * float(((5646.533f * fSlow10BE) < fConst1KI))); // Zone 2, step: 522
		int 	iSlow61BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow10BE)))); // Zone 2, step: 533
		float 	fSlow62BE = (fConst4KI * cosf((fConst14KI * fSlow10BE))); // Zone 2, step: 540
		float 	fTemp25SE; // step: 545
		float 	fVec101SE[2];
		float 	fVec102SE[3];
		float 	fSlow63BE = float(((3966.8186f * fSlow10BE) < fConst1KI)); // Zone 2, step: 554
		float 	fTemp26SE; // step: 556
		int 	iSlow64BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow10BE)))); // Zone 2, step: 567
		float 	fSlow65BE = (fConst4KI * cosf((fConst16KI * fSlow10BE))); // Zone 2, step: 574
		float 	fTemp27SE; // step: 579
		float 	fVec107SE[2];
		float 	fVec108SE[3];
		float 	fSlow66BE = float(((3959.208f * fSlow10BE) < fConst1KI)); // Zone 2, step: 588
		int 	iSlow67BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow10BE)))); // Zone 2, step: 599
		float 	fSlow68BE = (fConst4KI * cosf((fConst18KI * fSlow10BE))); // Zone 2, step: 606
		float 	fTemp28SE; // step: 611
		float 	fVec113SE[2];
		float 	fVec114SE[3];
		float 	fSlow69BE = (0.9999828f * float(((1317.0509f * fSlow10BE) < fConst1KI))); // Zone 2, step: 622
		float 	fTemp29SE; // step: 624
		int 	iSlow70BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow10BE)))); // Zone 2, step: 635
		float 	fSlow71BE = (fConst4KI * cosf((fConst20KI * fSlow10BE))); // Zone 2, step: 642
		float 	fTemp30SE; // step: 647
		float 	fVec119SE[2];
		float 	fVec120SE[3];
		float 	fSlow72BE = (0.9999828f * float(((1310.8384f * fSlow10BE) < fConst1KI))); // Zone 2, step: 657
		int 	iSlow73BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow10BE)))); // Zone 2, step: 668
		float 	fSlow74BE = (fConst4KI * cosf((fConst22KI * fSlow10BE))); // Zone 2, step: 675
		float 	fTemp31SE; // step: 680
		float 	fVec125SE[2];
		float 	fVec126SE[3];
		float 	fSlow75BE = (0.999926f * float(((441.71234f * fSlow10BE) < fConst1KI))); // Zone 2, step: 691
		float 	fTemp32SE; // step: 693
		int 	iSlow76BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow10BE)))); // Zone 2, step: 704
		float 	fSlow77BE = (fConst4KI * cosf((fConst24KI * fSlow10BE))); // Zone 2, step: 711
		float 	fTemp33SE; // step: 716
		float 	fVec131SE[2];
		float 	fVec132SE[3];
		float 	fSlow78BE = (0.999926f * float(((438.2877f * fSlow10BE) < fConst1KI))); // Zone 2, step: 726
		int 	iSlow79BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow10BE)))); // Zone 2, step: 737
		float 	fSlow80BE = (fConst4KI * cosf((fConst26KI * fSlow10BE))); // Zone 2, step: 744
		float 	fTemp34SE; // step: 749
		float 	fVec137SE[2];
		float 	fVec138SE[3];
		float 	fSlow81BE = float(((9669.452f * fSlow15BE) < fConst1KI)); // Zone 2, step: 757
		float 	fTemp35SE; // step: 758
		int 	iSlow82BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow15BE)))); // Zone 2, step: 767
		float 	fSlow83BE = (fConst4KI * cosf((fConst8KI * fSlow15BE))); // Zone 2, step: 772
		float 	fTemp36SE; // step: 777
		float 	fVec143SE[2];
		float 	fVec144SE[3];
		float 	fSlow84BE = float(((7603.562f * fSlow15BE) < fConst1KI)); // Zone 2, step: 785
		int 	iSlow85BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow15BE)))); // Zone 2, step: 794
		float 	fSlow86BE = (fConst4KI * cosf((fConst10KI * fSlow15BE))); // Zone 2, step: 799
		float 	fTemp37SE; // step: 804
		float 	fVec149SE[2];
		float 	fVec150SE[3];
		float 	fSlow87BE = (0.9999655f * float(((5635.248f * fSlow15BE) < fConst1KI))); // Zone 2, step: 813
		float 	fTemp38SE; // step: 814
		int 	iSlow88BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow15BE)))); // Zone 2, step: 823
		float 	fSlow89BE = (fConst4KI * cosf((fConst12KI * fSlow15BE))); // Zone 2, step: 828
		float 	fTemp39SE; // step: 833
		float 	fVec155SE[2];
		float 	fVec156SE[3];
		float 	fSlow90BE = (0.9999655f * float(((5646.533f * fSlow15BE) < fConst1KI))); // Zone 2, step: 842
		int 	iSlow91BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow15BE)))); // Zone 2, step: 851
		float 	fSlow92BE = (fConst4KI * cosf((fConst14KI * fSlow15BE))); // Zone 2, step: 856
		float 	fTemp40SE; // step: 861
		float 	fVec161SE[2];
		float 	fVec162SE[3];
		float 	fSlow93BE = float(((3966.8186f * fSlow15BE) < fConst1KI)); // Zone 2, step: 869
		float 	fTemp41SE; // step: 870
		int 	iSlow94BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow15BE)))); // Zone 2, step: 879
		float 	fSlow95BE = (fConst4KI * cosf((fConst16KI * fSlow15BE))); // Zone 2, step: 884
		float 	fTemp42SE; // step: 889
		float 	fVec167SE[2];
		float 	fVec168SE[3];
		float 	fSlow96BE = float(((3959.208f * fSlow15BE) < fConst1KI)); // Zone 2, step: 897
		int 	iSlow97BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow15BE)))); // Zone 2, step: 906
		float 	fSlow98BE = (fConst4KI * cosf((fConst18KI * fSlow15BE))); // Zone 2, step: 911
		float 	fTemp43SE; // step: 916
		float 	fVec173SE[2];
		float 	fVec174SE[3];
		float 	fSlow99BE = (0.9999828f * float(((1317.0509f * fSlow15BE) < fConst1KI))); // Zone 2, step: 925
		float 	fTemp44SE; // step: 926
		int 	iSlow100BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow15BE)))); // Zone 2, step: 935
		float 	fSlow101BE = (fConst4KI * cosf((fConst20KI * fSlow15BE))); // Zone 2, step: 940
		float 	fTemp45SE; // step: 945
		float 	fVec179SE[2];
		float 	fVec180SE[3];
		float 	fSlow102BE = (0.9999828f * float(((1310.8384f * fSlow15BE) < fConst1KI))); // Zone 2, step: 954
		int 	iSlow103BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow15BE)))); // Zone 2, step: 963
		float 	fSlow104BE = (fConst4KI * cosf((fConst22KI * fSlow15BE))); // Zone 2, step: 968
		float 	fTemp46SE; // step: 973
		float 	fVec185SE[2];
		float 	fVec186SE[3];
		float 	fSlow105BE = (0.999926f * float(((441.71234f * fSlow15BE) < fConst1KI))); // Zone 2, step: 982
		float 	fTemp47SE; // step: 983
		int 	iSlow106BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow15BE)))); // Zone 2, step: 992
		float 	fSlow107BE = (fConst4KI * cosf((fConst24KI * fSlow15BE))); // Zone 2, step: 997
		float 	fTemp48SE; // step: 1002
		float 	fVec191SE[2];
		float 	fVec192SE[3];
		float 	fSlow108BE = (0.999926f * float(((438.2877f * fSlow15BE) < fConst1KI))); // Zone 2, step: 1011
		int 	iSlow109BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow15BE)))); // Zone 2, step: 1020
		float 	fSlow110BE = (fConst4KI * cosf((fConst26KI * fSlow15BE))); // Zone 2, step: 1025
		float 	fTemp49SE; // step: 1030
		float 	fVec197SE[2];
		float 	fVec198SE[3];
		float 	fSlow111BE = float(((9669.452f * fSlow19BE) < fConst1KI)); // Zone 2, step: 1038
		float 	fTemp50SE; // step: 1039
		int 	iSlow112BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow19BE)))); // Zone 2, step: 1048
		float 	fSlow113BE = (fConst4KI * cosf((fConst8KI * fSlow19BE))); // Zone 2, step: 1053
		float 	fTemp51SE; // step: 1058
		float 	fVec203SE[2];
		float 	fVec204SE[3];
		float 	fSlow114BE = float(((7603.562f * fSlow19BE) < fConst1KI)); // Zone 2, step: 1066
		int 	iSlow115BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow19BE)))); // Zone 2, step: 1075
		float 	fSlow116BE = (fConst4KI * cosf((fConst10KI * fSlow19BE))); // Zone 2, step: 1080
		float 	fTemp52SE; // step: 1085
		float 	fVec209SE[2];
		float 	fVec210SE[3];
		float 	fSlow117BE = (0.9999655f * float(((5635.248f * fSlow19BE) < fConst1KI))); // Zone 2, step: 1094
		float 	fTemp53SE; // step: 1095
		int 	iSlow118BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow19BE)))); // Zone 2, step: 1104
		float 	fSlow119BE = (fConst4KI * cosf((fConst12KI * fSlow19BE))); // Zone 2, step: 1109
		float 	fTemp54SE; // step: 1114
		float 	fVec215SE[2];
		float 	fVec216SE[3];
		float 	fSlow120BE = (0.9999655f * float(((5646.533f * fSlow19BE) < fConst1KI))); // Zone 2, step: 1123
		int 	iSlow121BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow19BE)))); // Zone 2, step: 1132
		float 	fSlow122BE = (fConst4KI * cosf((fConst14KI * fSlow19BE))); // Zone 2, step: 1137
		float 	fTemp55SE; // step: 1142
		float 	fVec221SE[2];
		float 	fVec222SE[3];
		float 	fSlow123BE = float(((3966.8186f * fSlow19BE) < fConst1KI)); // Zone 2, step: 1150
		float 	fTemp56SE; // step: 1151
		int 	iSlow124BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow19BE)))); // Zone 2, step: 1160
		float 	fSlow125BE = (fConst4KI * cosf((fConst16KI * fSlow19BE))); // Zone 2, step: 1165
		float 	fTemp57SE; // step: 1170
		float 	fVec227SE[2];
		float 	fVec228SE[3];
		float 	fSlow126BE = float(((3959.208f * fSlow19BE) < fConst1KI)); // Zone 2, step: 1178
		int 	iSlow127BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow19BE)))); // Zone 2, step: 1187
		float 	fSlow128BE = (fConst4KI * cosf((fConst18KI * fSlow19BE))); // Zone 2, step: 1192
		float 	fTemp58SE; // step: 1197
		float 	fVec233SE[2];
		float 	fVec234SE[3];
		float 	fSlow129BE = (0.9999828f * float(((1317.0509f * fSlow19BE) < fConst1KI))); // Zone 2, step: 1206
		float 	fTemp59SE; // step: 1207
		int 	iSlow130BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow19BE)))); // Zone 2, step: 1216
		float 	fSlow131BE = (fConst4KI * cosf((fConst20KI * fSlow19BE))); // Zone 2, step: 1221
		float 	fTemp60SE; // step: 1226
		float 	fVec239SE[2];
		float 	fVec240SE[3];
		float 	fSlow132BE = (0.9999828f * float(((1310.8384f * fSlow19BE) < fConst1KI))); // Zone 2, step: 1235
		int 	iSlow133BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow19BE)))); // Zone 2, step: 1244
		float 	fSlow134BE = (fConst4KI * cosf((fConst22KI * fSlow19BE))); // Zone 2, step: 1249
		float 	fTemp61SE; // step: 1254
		float 	fVec245SE[2];
		float 	fVec246SE[3];
		float 	fSlow135BE = (0.999926f * float(((441.71234f * fSlow19BE) < fConst1KI))); // Zone 2, step: 1263
		float 	fTemp62SE; // step: 1264
		int 	iSlow136BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow19BE)))); // Zone 2, step: 1273
		float 	fSlow137BE = (fConst4KI * cosf((fConst24KI * fSlow19BE))); // Zone 2, step: 1278
		float 	fTemp63SE; // step: 1283
		float 	fVec251SE[2];
		float 	fVec252SE[3];
		float 	fSlow138BE = (0.999926f * float(((438.2877f * fSlow19BE) < fConst1KI))); // Zone 2, step: 1292
		int 	iSlow139BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow19BE)))); // Zone 2, step: 1301
		float 	fSlow140BE = (fConst4KI * cosf((fConst26KI * fSlow19BE))); // Zone 2, step: 1306
		float 	fTemp64SE; // step: 1311
		float 	fVec257SE[2];
		float 	fVec258SE[3];
		float 	fSlow141BE = float(((9669.452f * fSlow23BE) < fConst1KI)); // Zone 2, step: 1319
		float 	fTemp65SE; // step: 1320
		int 	iSlow142BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow23BE)))); // Zone 2, step: 1329
		float 	fSlow143BE = (fConst4KI * cosf((fConst8KI * fSlow23BE))); // Zone 2, step: 1334
		float 	fTemp66SE; // step: 1339
		float 	fVec263SE[2];
		float 	fVec264SE[3];
		float 	fSlow144BE = float(((7603.562f * fSlow23BE) < fConst1KI)); // Zone 2, step: 1347
		int 	iSlow145BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow23BE)))); // Zone 2, step: 1356
		float 	fSlow146BE = (fConst4KI * cosf((fConst10KI * fSlow23BE))); // Zone 2, step: 1361
		float 	fTemp67SE; // step: 1366
		float 	fVec269SE[2];
		float 	fVec270SE[3];
		float 	fSlow147BE = (0.9999655f * float(((5635.248f * fSlow23BE) < fConst1KI))); // Zone 2, step: 1375
		float 	fTemp68SE; // step: 1376
		int 	iSlow148BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow23BE)))); // Zone 2, step: 1385
		float 	fSlow149BE = (fConst4KI * cosf((fConst12KI * fSlow23BE))); // Zone 2, step: 1390
		float 	fTemp69SE; // step: 1395
		float 	fVec275SE[2];
		float 	fVec276SE[3];
		float 	fSlow150BE = (0.9999655f * float(((5646.533f * fSlow23BE) < fConst1KI))); // Zone 2, step: 1404
		int 	iSlow151BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow23BE)))); // Zone 2, step: 1413
		float 	fSlow152BE = (fConst4KI * cosf((fConst14KI * fSlow23BE))); // Zone 2, step: 1418
		float 	fTemp70SE; // step: 1423
		float 	fVec281SE[2];
		float 	fVec282SE[3];
		float 	fSlow153BE = float(((3966.8186f * fSlow23BE) < fConst1KI)); // Zone 2, step: 1431
		float 	fTemp71SE; // step: 1432
		int 	iSlow154BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow23BE)))); // Zone 2, step: 1441
		float 	fSlow155BE = (fConst4KI * cosf((fConst16KI * fSlow23BE))); // Zone 2, step: 1446
		float 	fTemp72SE; // step: 1451
		float 	fVec287SE[2];
		float 	fVec288SE[3];
		float 	fSlow156BE = float(((3959.208f * fSlow23BE) < fConst1KI)); // Zone 2, step: 1459
		int 	iSlow157BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow23BE)))); // Zone 2, step: 1468
		float 	fSlow158BE = (fConst4KI * cosf((fConst18KI * fSlow23BE))); // Zone 2, step: 1473
		float 	fTemp73SE; // step: 1478
		float 	fVec293SE[2];
		float 	fVec294SE[3];
		float 	fSlow159BE = (0.9999828f * float(((1317.0509f * fSlow23BE) < fConst1KI))); // Zone 2, step: 1487
		float 	fTemp74SE; // step: 1488
		int 	iSlow160BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow23BE)))); // Zone 2, step: 1497
		float 	fSlow161BE = (fConst4KI * cosf((fConst20KI * fSlow23BE))); // Zone 2, step: 1502
		float 	fTemp75SE; // step: 1507
		float 	fVec299SE[2];
		float 	fVec300SE[3];
		float 	fSlow162BE = (0.9999828f * float(((1310.8384f * fSlow23BE) < fConst1KI))); // Zone 2, step: 1516
		int 	iSlow163BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow23BE)))); // Zone 2, step: 1525
		float 	fSlow164BE = (fConst4KI * cosf((fConst22KI * fSlow23BE))); // Zone 2, step: 1530
		float 	fTemp76SE; // step: 1535
		float 	fVec305SE[2];
		float 	fVec306SE[3];
		float 	fSlow165BE = (0.999926f * float(((441.71234f * fSlow23BE) < fConst1KI))); // Zone 2, step: 1544
		float 	fTemp77SE; // step: 1545
		int 	iSlow166BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow23BE)))); // Zone 2, step: 1554
		float 	fSlow167BE = (fConst4KI * cosf((fConst24KI * fSlow23BE))); // Zone 2, step: 1559
		float 	fTemp78SE; // step: 1564
		float 	fVec311SE[2];
		float 	fVec312SE[3];
		float 	fSlow168BE = (0.999926f * float(((438.2877f * fSlow23BE) < fConst1KI))); // Zone 2, step: 1573
		int 	iSlow169BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow23BE)))); // Zone 2, step: 1582
		float 	fSlow170BE = (fConst4KI * cosf((fConst26KI * fSlow23BE))); // Zone 2, step: 1587
		float 	fTemp79SE; // step: 1592
		float 	fVec317SE[2];
		float 	fVec318SE[3];
		float 	fSlow171BE = float(((9669.452f * fSlow27BE) < fConst1KI)); // Zone 2, step: 1600
		float 	fTemp80SE; // step: 1601
		int 	iSlow172BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow27BE)))); // Zone 2, step: 1610
		float 	fSlow173BE = (fConst4KI * cosf((fConst8KI * fSlow27BE))); // Zone 2, step: 1615
		float 	fTemp81SE; // step: 1620
		float 	fVec323SE[2];
		float 	fVec324SE[3];
		float 	fSlow174BE = float(((7603.562f * fSlow27BE) < fConst1KI)); // Zone 2, step: 1628
		int 	iSlow175BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow27BE)))); // Zone 2, step: 1637
		float 	fSlow176BE = (fConst4KI * cosf((fConst10KI * fSlow27BE))); // Zone 2, step: 1642
		float 	fTemp82SE; // step: 1647
		float 	fVec329SE[2];
		float 	fVec330SE[3];
		float 	fSlow177BE = (0.9999655f * float(((5635.248f * fSlow27BE) < fConst1KI))); // Zone 2, step: 1656
		float 	fTemp83SE; // step: 1657
		int 	iSlow178BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow27BE)))); // Zone 2, step: 1666
		float 	fSlow179BE = (fConst4KI * cosf((fConst12KI * fSlow27BE))); // Zone 2, step: 1671
		float 	fTemp84SE; // step: 1676
		float 	fVec335SE[2];
		float 	fVec336SE[3];
		float 	fSlow180BE = (0.9999655f * float(((5646.533f * fSlow27BE) < fConst1KI))); // Zone 2, step: 1685
		int 	iSlow181BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow27BE)))); // Zone 2, step: 1694
		float 	fSlow182BE = (fConst4KI * cosf((fConst14KI * fSlow27BE))); // Zone 2, step: 1699
		float 	fTemp85SE; // step: 1704
		float 	fVec341SE[2];
		float 	fVec342SE[3];
		float 	fSlow183BE = float(((3966.8186f * fSlow27BE) < fConst1KI)); // Zone 2, step: 1712
		float 	fTemp86SE; // step: 1713
		int 	iSlow184BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow27BE)))); // Zone 2, step: 1722
		float 	fSlow185BE = (fConst4KI * cosf((fConst16KI * fSlow27BE))); // Zone 2, step: 1727
		float 	fTemp87SE; // step: 1732
		float 	fVec347SE[2];
		float 	fVec348SE[3];
		float 	fSlow186BE = float(((3959.208f * fSlow27BE) < fConst1KI)); // Zone 2, step: 1740
		int 	iSlow187BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow27BE)))); // Zone 2, step: 1749
		float 	fSlow188BE = (fConst4KI * cosf((fConst18KI * fSlow27BE))); // Zone 2, step: 1754
		float 	fTemp88SE; // step: 1759
		float 	fVec353SE[2];
		float 	fVec354SE[3];
		float 	fSlow189BE = (0.9999828f * float(((1317.0509f * fSlow27BE) < fConst1KI))); // Zone 2, step: 1768
		float 	fTemp89SE; // step: 1769
		int 	iSlow190BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow27BE)))); // Zone 2, step: 1778
		float 	fSlow191BE = (fConst4KI * cosf((fConst20KI * fSlow27BE))); // Zone 2, step: 1783
		float 	fTemp90SE; // step: 1788
		float 	fVec359SE[2];
		float 	fVec360SE[3];
		float 	fSlow192BE = (0.9999828f * float(((1310.8384f * fSlow27BE) < fConst1KI))); // Zone 2, step: 1797
		int 	iSlow193BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow27BE)))); // Zone 2, step: 1806
		float 	fSlow194BE = (fConst4KI * cosf((fConst22KI * fSlow27BE))); // Zone 2, step: 1811
		float 	fTemp91SE; // step: 1816
		float 	fVec365SE[2];
		float 	fVec366SE[3];
		float 	fSlow195BE = (0.999926f * float(((441.71234f * fSlow27BE) < fConst1KI))); // Zone 2, step: 1825
		float 	fTemp92SE; // step: 1826
		int 	iSlow196BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow27BE)))); // Zone 2, step: 1835
		float 	fSlow197BE = (fConst4KI * cosf((fConst24KI * fSlow27BE))); // Zone 2, step: 1840
		float 	fTemp93SE; // step: 1845
		float 	fVec371SE[2];
		float 	fVec372SE[3];
		float 	fSlow198BE = (0.999926f * float(((438.2877f * fSlow27BE) < fConst1KI))); // Zone 2, step: 1854
		int 	iSlow199BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow27BE)))); // Zone 2, step: 1863
		float 	fSlow200BE = (fConst4KI * cosf((fConst26KI * fSlow27BE))); // Zone 2, step: 1868
		float 	fTemp94SE; // step: 1873
		float 	fVec377SE[2];
		float 	fVec378SE[3];
		float 	fSlow201BE = float(((9669.452f * fSlow31BE) < fConst1KI)); // Zone 2, step: 1881
		float 	fTemp95SE; // step: 1882
		int 	iSlow202BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow31BE)))); // Zone 2, step: 1891
		float 	fSlow203BE = (fConst4KI * cosf((fConst8KI * fSlow31BE))); // Zone 2, step: 1896
		float 	fTemp96SE; // step: 1901
		float 	fVec383SE[2];
		float 	fVec384SE[3];
		float 	fSlow204BE = float(((7603.562f * fSlow31BE) < fConst1KI)); // Zone 2, step: 1909
		int 	iSlow205BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow31BE)))); // Zone 2, step: 1918
		float 	fSlow206BE = (fConst4KI * cosf((fConst10KI * fSlow31BE))); // Zone 2, step: 1923
		float 	fTemp97SE; // step: 1928
		float 	fVec389SE[2];
		float 	fVec390SE[3];
		float 	fSlow207BE = (0.9999655f * float(((5635.248f * fSlow31BE) < fConst1KI))); // Zone 2, step: 1937
		float 	fTemp98SE; // step: 1938
		int 	iSlow208BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow31BE)))); // Zone 2, step: 1947
		float 	fSlow209BE = (fConst4KI * cosf((fConst12KI * fSlow31BE))); // Zone 2, step: 1952
		float 	fTemp99SE; // step: 1957
		float 	fVec395SE[2];
		float 	fVec396SE[3];
		float 	fSlow210BE = (0.9999655f * float(((5646.533f * fSlow31BE) < fConst1KI))); // Zone 2, step: 1966
		int 	iSlow211BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow31BE)))); // Zone 2, step: 1975
		float 	fSlow212BE = (fConst4KI * cosf((fConst14KI * fSlow31BE))); // Zone 2, step: 1980
		float 	fTemp100SE; // step: 1985
		float 	fVec401SE[2];
		float 	fVec402SE[3];
		float 	fSlow213BE = float(((3966.8186f * fSlow31BE) < fConst1KI)); // Zone 2, step: 1993
		float 	fTemp101SE; // step: 1994
		int 	iSlow214BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow31BE)))); // Zone 2, step: 2003
		float 	fSlow215BE = (fConst4KI * cosf((fConst16KI * fSlow31BE))); // Zone 2, step: 2008
		float 	fTemp102SE; // step: 2013
		float 	fVec407SE[2];
		float 	fVec408SE[3];
		float 	fSlow216BE = float(((3959.208f * fSlow31BE) < fConst1KI)); // Zone 2, step: 2021
		int 	iSlow217BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow31BE)))); // Zone 2, step: 2030
		float 	fSlow218BE = (fConst4KI * cosf((fConst18KI * fSlow31BE))); // Zone 2, step: 2035
		float 	fTemp103SE; // step: 2040
		float 	fVec413SE[2];
		float 	fVec414SE[3];
		float 	fSlow219BE = (0.9999828f * float(((1317.0509f * fSlow31BE) < fConst1KI))); // Zone 2, step: 2049
		float 	fTemp104SE; // step: 2050
		int 	iSlow220BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow31BE)))); // Zone 2, step: 2059
		float 	fSlow221BE = (fConst4KI * cosf((fConst20KI * fSlow31BE))); // Zone 2, step: 2064
		float 	fTemp105SE; // step: 2069
		float 	fVec419SE[2];
		float 	fVec420SE[3];
		float 	fSlow222BE = (0.9999828f * float(((1310.8384f * fSlow31BE) < fConst1KI))); // Zone 2, step: 2078
		int 	iSlow223BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow31BE)))); // Zone 2, step: 2087
		float 	fSlow224BE = (fConst4KI * cosf((fConst22KI * fSlow31BE))); // Zone 2, step: 2092
		float 	fTemp106SE; // step: 2097
		float 	fVec425SE[2];
		float 	fVec426SE[3];
		float 	fSlow225BE = (0.999926f * float(((441.71234f * fSlow31BE) < fConst1KI))); // Zone 2, step: 2106
		float 	fTemp107SE; // step: 2107
		int 	iSlow226BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow31BE)))); // Zone 2, step: 2116
		float 	fSlow227BE = (fConst4KI * cosf((fConst24KI * fSlow31BE))); // Zone 2, step: 2121
		float 	fTemp108SE; // step: 2126
		float 	fVec431SE[2];
		float 	fVec432SE[3];
		float 	fSlow228BE = (0.999926f * float(((438.2877f * fSlow31BE) < fConst1KI))); // Zone 2, step: 2135
		int 	iSlow229BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow31BE)))); // Zone 2, step: 2144
		float 	fSlow230BE = (fConst4KI * cosf((fConst26KI * fSlow31BE))); // Zone 2, step: 2149
		float 	fTemp109SE; // step: 2154
		float 	fVec437SE[2];
		float 	fVec438SE[3];
		float 	fSlow231BE = float(((9669.452f * fSlow35BE) < fConst1KI)); // Zone 2, step: 2162
		float 	fTemp110SE; // step: 2163
		int 	iSlow232BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow35BE)))); // Zone 2, step: 2172
		float 	fSlow233BE = (fConst4KI * cosf((fConst8KI * fSlow35BE))); // Zone 2, step: 2177
		float 	fTemp111SE; // step: 2182
		float 	fVec443SE[2];
		float 	fVec444SE[3];
		float 	fSlow234BE = float(((7603.562f * fSlow35BE) < fConst1KI)); // Zone 2, step: 2190
		int 	iSlow235BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow35BE)))); // Zone 2, step: 2199
		float 	fSlow236BE = (fConst4KI * cosf((fConst10KI * fSlow35BE))); // Zone 2, step: 2204
		float 	fTemp112SE; // step: 2209
		float 	fVec449SE[2];
		float 	fVec450SE[3];
		float 	fSlow237BE = (0.9999655f * float(((5635.248f * fSlow35BE) < fConst1KI))); // Zone 2, step: 2218
		float 	fTemp113SE; // step: 2219
		int 	iSlow238BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow35BE)))); // Zone 2, step: 2228
		float 	fSlow239BE = (fConst4KI * cosf((fConst12KI * fSlow35BE))); // Zone 2, step: 2233
		float 	fTemp114SE; // step: 2238
		float 	fVec455SE[2];
		float 	fVec456SE[3];
		float 	fSlow240BE = (0.9999655f * float(((5646.533f * fSlow35BE) < fConst1KI))); // Zone 2, step: 2247
		int 	iSlow241BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow35BE)))); // Zone 2, step: 2256
		float 	fSlow242BE = (fConst4KI * cosf((fConst14KI * fSlow35BE))); // Zone 2, step: 2261
		float 	fTemp115SE; // step: 2266
		float 	fVec461SE[2];
		float 	fVec462SE[3];
		float 	fSlow243BE = float(((3966.8186f * fSlow35BE) < fConst1KI)); // Zone 2, step: 2274
		float 	fTemp116SE; // step: 2275
		int 	iSlow244BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow35BE)))); // Zone 2, step: 2284
		float 	fSlow245BE = (fConst4KI * cosf((fConst16KI * fSlow35BE))); // Zone 2, step: 2289
		float 	fTemp117SE; // step: 2294
		float 	fVec467SE[2];
		float 	fVec468SE[3];
		float 	fSlow246BE = float(((3959.208f * fSlow35BE) < fConst1KI)); // Zone 2, step: 2302
		int 	iSlow247BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow35BE)))); // Zone 2, step: 2311
		float 	fSlow248BE = (fConst4KI * cosf((fConst18KI * fSlow35BE))); // Zone 2, step: 2316
		float 	fTemp118SE; // step: 2321
		float 	fVec473SE[2];
		float 	fVec474SE[3];
		float 	fSlow249BE = (0.9999828f * float(((1317.0509f * fSlow35BE) < fConst1KI))); // Zone 2, step: 2330
		float 	fTemp119SE; // step: 2331
		int 	iSlow250BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow35BE)))); // Zone 2, step: 2340
		float 	fSlow251BE = (fConst4KI * cosf((fConst20KI * fSlow35BE))); // Zone 2, step: 2345
		float 	fTemp120SE; // step: 2350
		float 	fVec479SE[2];
		float 	fVec480SE[3];
		float 	fSlow252BE = (0.9999828f * float(((1310.8384f * fSlow35BE) < fConst1KI))); // Zone 2, step: 2359
		int 	iSlow253BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow35BE)))); // Zone 2, step: 2368
		float 	fSlow254BE = (fConst4KI * cosf((fConst22KI * fSlow35BE))); // Zone 2, step: 2373
		float 	fTemp121SE; // step: 2378
		float 	fVec485SE[2];
		float 	fVec486SE[3];
		float 	fSlow255BE = (0.999926f * float(((441.71234f * fSlow35BE) < fConst1KI))); // Zone 2, step: 2387
		float 	fTemp122SE; // step: 2388
		int 	iSlow256BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow35BE)))); // Zone 2, step: 2397
		float 	fSlow257BE = (fConst4KI * cosf((fConst24KI * fSlow35BE))); // Zone 2, step: 2402
		float 	fTemp123SE; // step: 2407
		float 	fVec491SE[2];
		float 	fVec492SE[3];
		float 	fSlow258BE = (0.999926f * float(((438.2877f * fSlow35BE) < fConst1KI))); // Zone 2, step: 2416
		int 	iSlow259BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow35BE)))); // Zone 2, step: 2425
		float 	fSlow260BE = (fConst4KI * cosf((fConst26KI * fSlow35BE))); // Zone 2, step: 2430
		float 	fTemp124SE; // step: 2435
		float 	fVec497SE[2];
		float 	fVec498SE[3];
		float 	fSlow261BE = float(((9669.452f * fSlow39BE) < fConst1KI)); // Zone 2, step: 2443
		float 	fTemp125SE; // step: 2444
		int 	iSlow262BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow39BE)))); // Zone 2, step: 2453
		float 	fSlow263BE = (fConst4KI * cosf((fConst8KI * fSlow39BE))); // Zone 2, step: 2458
		float 	fTemp126SE; // step: 2463
		float 	fVec503SE[2];
		float 	fVec504SE[3];
		float 	fSlow264BE = float(((7603.562f * fSlow39BE) < fConst1KI)); // Zone 2, step: 2471
		int 	iSlow265BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow39BE)))); // Zone 2, step: 2480
		float 	fSlow266BE = (fConst4KI * cosf((fConst10KI * fSlow39BE))); // Zone 2, step: 2485
		float 	fTemp127SE; // step: 2490
		float 	fVec509SE[2];
		float 	fVec510SE[3];
		float 	fSlow267BE = (0.9999655f * float(((5635.248f * fSlow39BE) < fConst1KI))); // Zone 2, step: 2499
		float 	fTemp128SE; // step: 2500
		int 	iSlow268BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow39BE)))); // Zone 2, step: 2509
		float 	fSlow269BE = (fConst4KI * cosf((fConst12KI * fSlow39BE))); // Zone 2, step: 2514
		float 	fTemp129SE; // step: 2519
		float 	fVec515SE[2];
		float 	fVec516SE[3];
		float 	fSlow270BE = (0.9999655f * float(((5646.533f * fSlow39BE) < fConst1KI))); // Zone 2, step: 2528
		int 	iSlow271BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow39BE)))); // Zone 2, step: 2537
		float 	fSlow272BE = (fConst4KI * cosf((fConst14KI * fSlow39BE))); // Zone 2, step: 2542
		float 	fTemp130SE; // step: 2547
		float 	fVec521SE[2];
		float 	fVec522SE[3];
		float 	fSlow273BE = float(((3966.8186f * fSlow39BE) < fConst1KI)); // Zone 2, step: 2555
		float 	fTemp131SE; // step: 2556
		int 	iSlow274BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow39BE)))); // Zone 2, step: 2565
		float 	fSlow275BE = (fConst4KI * cosf((fConst16KI * fSlow39BE))); // Zone 2, step: 2570
		float 	fTemp132SE; // step: 2575
		float 	fVec527SE[2];
		float 	fVec528SE[3];
		float 	fSlow276BE = float(((3959.208f * fSlow39BE) < fConst1KI)); // Zone 2, step: 2583
		int 	iSlow277BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow39BE)))); // Zone 2, step: 2592
		float 	fSlow278BE = (fConst4KI * cosf((fConst18KI * fSlow39BE))); // Zone 2, step: 2597
		float 	fTemp133SE; // step: 2602
		float 	fVec533SE[2];
		float 	fVec534SE[3];
		float 	fSlow279BE = (0.9999828f * float(((1317.0509f * fSlow39BE) < fConst1KI))); // Zone 2, step: 2611
		float 	fTemp134SE; // step: 2612
		int 	iSlow280BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow39BE)))); // Zone 2, step: 2621
		float 	fSlow281BE = (fConst4KI * cosf((fConst20KI * fSlow39BE))); // Zone 2, step: 2626
		float 	fTemp135SE; // step: 2631
		float 	fVec539SE[2];
		float 	fVec540SE[3];
		float 	fSlow282BE = (0.9999828f * float(((1310.8384f * fSlow39BE) < fConst1KI))); // Zone 2, step: 2640
		int 	iSlow283BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow39BE)))); // Zone 2, step: 2649
		float 	fSlow284BE = (fConst4KI * cosf((fConst22KI * fSlow39BE))); // Zone 2, step: 2654
		float 	fTemp136SE; // step: 2659
		float 	fVec545SE[2];
		float 	fVec546SE[3];
		float 	fSlow285BE = (0.999926f * float(((441.71234f * fSlow39BE) < fConst1KI))); // Zone 2, step: 2668
		float 	fTemp137SE; // step: 2669
		int 	iSlow286BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow39BE)))); // Zone 2, step: 2678
		float 	fSlow287BE = (fConst4KI * cosf((fConst24KI * fSlow39BE))); // Zone 2, step: 2683
		float 	fTemp138SE; // step: 2688
		float 	fVec551SE[2];
		float 	fVec552SE[3];
		float 	fSlow288BE = (0.999926f * float(((438.2877f * fSlow39BE) < fConst1KI))); // Zone 2, step: 2697
		int 	iSlow289BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow39BE)))); // Zone 2, step: 2706
		float 	fSlow290BE = (fConst4KI * cosf((fConst26KI * fSlow39BE))); // Zone 2, step: 2711
		float 	fTemp139SE; // step: 2716
		float 	fVec557SE[2];
		float 	fVec558SE[3];
		float 	fSlow291BE = float(((9669.452f * fSlow47BE) < fConst1KI)); // Zone 2, step: 2724
		float 	fTemp140SE; // step: 2725
		int 	iSlow292BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow47BE)))); // Zone 2, step: 2734
		float 	fSlow293BE = (fConst4KI * cosf((fConst8KI * fSlow47BE))); // Zone 2, step: 2739
		float 	fTemp141SE; // step: 2744
		float 	fVec563SE[2];
		float 	fVec564SE[3];
		float 	fSlow294BE = float(((7603.562f * fSlow47BE) < fConst1KI)); // Zone 2, step: 2752
		int 	iSlow295BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow47BE)))); // Zone 2, step: 2761
		float 	fSlow296BE = (fConst4KI * cosf((fConst10KI * fSlow47BE))); // Zone 2, step: 2766
		float 	fTemp142SE; // step: 2771
		float 	fVec569SE[2];
		float 	fVec570SE[3];
		float 	fSlow297BE = (0.9999655f * float(((5635.248f * fSlow47BE) < fConst1KI))); // Zone 2, step: 2780
		float 	fTemp143SE; // step: 2781
		int 	iSlow298BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow47BE)))); // Zone 2, step: 2790
		float 	fSlow299BE = (fConst4KI * cosf((fConst12KI * fSlow47BE))); // Zone 2, step: 2795
		float 	fTemp144SE; // step: 2800
		float 	fVec575SE[2];
		float 	fVec576SE[3];
		float 	fSlow300BE = (0.9999655f * float(((5646.533f * fSlow47BE) < fConst1KI))); // Zone 2, step: 2809
		int 	iSlow301BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow47BE)))); // Zone 2, step: 2818
		float 	fSlow302BE = (fConst4KI * cosf((fConst14KI * fSlow47BE))); // Zone 2, step: 2823
		float 	fTemp145SE; // step: 2828
		float 	fVec581SE[2];
		float 	fVec582SE[3];
		float 	fSlow303BE = float(((3966.8186f * fSlow47BE) < fConst1KI)); // Zone 2, step: 2836
		float 	fTemp146SE; // step: 2837
		int 	iSlow304BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow47BE)))); // Zone 2, step: 2846
		float 	fSlow305BE = (fConst4KI * cosf((fConst16KI * fSlow47BE))); // Zone 2, step: 2851
		float 	fTemp147SE; // step: 2856
		float 	fVec587SE[2];
		float 	fVec588SE[3];
		float 	fSlow306BE = float(((3959.208f * fSlow47BE) < fConst1KI)); // Zone 2, step: 2864
		int 	iSlow307BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow47BE)))); // Zone 2, step: 2873
		float 	fSlow308BE = (fConst4KI * cosf((fConst18KI * fSlow47BE))); // Zone 2, step: 2878
		float 	fTemp148SE; // step: 2883
		float 	fVec593SE[2];
		float 	fVec594SE[3];
		float 	fSlow309BE = (0.9999828f * float(((1317.0509f * fSlow47BE) < fConst1KI))); // Zone 2, step: 2892
		float 	fTemp149SE; // step: 2893
		int 	iSlow310BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow47BE)))); // Zone 2, step: 2902
		float 	fSlow311BE = (fConst4KI * cosf((fConst20KI * fSlow47BE))); // Zone 2, step: 2907
		float 	fTemp150SE; // step: 2912
		float 	fVec599SE[2];
		float 	fVec600SE[3];
		float 	fSlow312BE = (0.9999828f * float(((1310.8384f * fSlow47BE) < fConst1KI))); // Zone 2, step: 2921
		int 	iSlow313BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow47BE)))); // Zone 2, step: 2930
		float 	fSlow314BE = (fConst4KI * cosf((fConst22KI * fSlow47BE))); // Zone 2, step: 2935
		float 	fTemp151SE; // step: 2940
		float 	fVec605SE[2];
		float 	fVec606SE[3];
		float 	fSlow315BE = (0.999926f * float(((441.71234f * fSlow47BE) < fConst1KI))); // Zone 2, step: 2949
		float 	fTemp152SE; // step: 2950
		int 	iSlow316BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow47BE)))); // Zone 2, step: 2959
		float 	fSlow317BE = (fConst4KI * cosf((fConst24KI * fSlow47BE))); // Zone 2, step: 2964
		float 	fTemp153SE; // step: 2969
		float 	fVec611SE[2];
		float 	fVec612SE[3];
		float 	fSlow318BE = (0.999926f * float(((438.2877f * fSlow47BE) < fConst1KI))); // Zone 2, step: 2978
		int 	iSlow319BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow47BE)))); // Zone 2, step: 2987
		float 	fSlow320BE = (fConst4KI * cosf((fConst26KI * fSlow47BE))); // Zone 2, step: 2992
		float 	fTemp154SE; // step: 2997
		float 	fVec617SE[2];
		float 	fVec618SE[3];
		float 	fSlow321BE = float(((9669.452f * fSlow43BE) < fConst1KI)); // Zone 2, step: 3005
		float 	fTemp155SE; // step: 3006
		int 	iSlow322BE = int(std::min(4096.0f, std::max(0.0f, (fConst7KI / fSlow43BE)))); // Zone 2, step: 3015
		float 	fSlow323BE = (fConst4KI * cosf((fConst8KI * fSlow43BE))); // Zone 2, step: 3020
		float 	fTemp156SE; // step: 3025
		float 	fVec623SE[2];
		float 	fVec624SE[3];
		float 	fSlow324BE = float(((7603.562f * fSlow43BE) < fConst1KI)); // Zone 2, step: 3033
		int 	iSlow325BE = int(std::min(4096.0f, std::max(0.0f, (fConst9KI / fSlow43BE)))); // Zone 2, step: 3042
		float 	fSlow326BE = (fConst4KI * cosf((fConst10KI * fSlow43BE))); // Zone 2, step: 3047
		float 	fTemp157SE; // step: 3052
		float 	fVec629SE[2];
		float 	fVec630SE[3];
		float 	fSlow327BE = (0.9999655f * float(((5635.248f * fSlow43BE) < fConst1KI))); // Zone 2, step: 3061
		float 	fTemp158SE; // step: 3062
		int 	iSlow328BE = int(std::min(4096.0f, std::max(0.0f, (fConst11KI / fSlow43BE)))); // Zone 2, step: 3071
		float 	fSlow329BE = (fConst4KI * cosf((fConst12KI * fSlow43BE))); // Zone 2, step: 3076
		float 	fTemp159SE; // step: 3081
		float 	fVec635SE[2];
		float 	fVec636SE[3];
		float 	fSlow330BE = (0.9999655f * float(((5646.533f * fSlow43BE) < fConst1KI))); // Zone 2, step: 3090
		int 	iSlow331BE = int(std::min(4096.0f, std::max(0.0f, (fConst13KI / fSlow43BE)))); // Zone 2, step: 3099
		float 	fSlow332BE = (fConst4KI * cosf((fConst14KI * fSlow43BE))); // Zone 2, step: 3104
		float 	fTemp160SE; // step: 3109
		float 	fVec641SE[2];
		float 	fVec642SE[3];
		float 	fSlow333BE = float(((3966.8186f * fSlow43BE) < fConst1KI)); // Zone 2, step: 3117
		float 	fTemp161SE; // step: 3118
		int 	iSlow334BE = int(std::min(4096.0f, std::max(0.0f, (fConst15KI / fSlow43BE)))); // Zone 2, step: 3127
		float 	fSlow335BE = (fConst4KI * cosf((fConst16KI * fSlow43BE))); // Zone 2, step: 3132
		float 	fTemp162SE; // step: 3137
		float 	fVec647SE[2];
		float 	fVec648SE[3];
		float 	fSlow336BE = (0.999926f * float(((438.2877f * fSlow43BE) < fConst1KI))); // Zone 2, step: 3146
		float 	fTemp163SE; // step: 3147
		int 	iSlow337BE = int(std::min(4096.0f, std::max(0.0f, (fConst25KI / fSlow43BE)))); // Zone 2, step: 3156
		float 	fSlow338BE = (fConst4KI * cosf((fConst26KI * fSlow43BE))); // Zone 2, step: 3161
		float 	fTemp164SE; // step: 3166
		float 	fVec653SE[2];
		float 	fVec654SE[3];
		float 	fSlow339BE = (0.999926f * float(((441.71234f * fSlow43BE) < fConst1KI))); // Zone 2, step: 3175
		int 	iSlow340BE = int(std::min(4096.0f, std::max(0.0f, (fConst23KI / fSlow43BE)))); // Zone 2, step: 3184
		float 	fSlow341BE = (fConst4KI * cosf((fConst24KI * fSlow43BE))); // Zone 2, step: 3189
		float 	fTemp165SE; // step: 3194
		float 	fVec659SE[2];
		float 	fVec660SE[3];
		float 	fSlow342BE = (0.9999828f * float(((1310.8384f * fSlow43BE) < fConst1KI))); // Zone 2, step: 3203
		float 	fTemp166SE; // step: 3204
		int 	iSlow343BE = int(std::min(4096.0f, std::max(0.0f, (fConst21KI / fSlow43BE)))); // Zone 2, step: 3213
		float 	fSlow344BE = (fConst4KI * cosf((fConst22KI * fSlow43BE))); // Zone 2, step: 3218
		float 	fTemp167SE; // step: 3223
		float 	fVec665SE[2];
		float 	fVec666SE[3];
		float 	fSlow345BE = (0.9999828f * float(((1317.0509f * fSlow43BE) < fConst1KI))); // Zone 2, step: 3232
		int 	iSlow346BE = int(std::min(4096.0f, std::max(0.0f, (fConst19KI / fSlow43BE)))); // Zone 2, step: 3241
		float 	fSlow347BE = (fConst4KI * cosf((fConst20KI * fSlow43BE))); // Zone 2, step: 3246
		float 	fTemp168SE; // step: 3251
		float 	fVec671SE[2];
		float 	fVec672SE[3];
		float 	fSlow348BE = float(((3959.208f * fSlow43BE) < fConst1KI)); // Zone 2, step: 3259
		int 	iSlow349BE = int(std::min(4096.0f, std::max(0.0f, (fConst17KI / fSlow43BE)))); // Zone 2, step: 3268
		float 	fSlow350BE = (fConst4KI * cosf((fConst18KI * fSlow43BE))); // Zone 2, step: 3273
		float 	fTemp169SE; // step: 3278
		float 	fVec677SE[2];
		float 	fVec678SE[3];
		float 	fVec11SE[2];
		float 	fVec18SE[2];
		float 	fVec25SE[2];
		float 	fVec32SE[2];
		float 	fVec39SE[2];
		float 	fVec46SE[2];
		float 	fVec53SE[2];
		float 	fVec60SE[2];
		float 	fVec67SE[2];
		float 	fVec74SE[2];
		float 	fVec80SE[2];
		float 	fVec86SE[2];
		float 	fVec92SE[2];
		float 	fVec98SE[2];
		float 	fVec104SE[2];
		float 	fVec110SE[2];
		float 	fVec116SE[2];
		float 	fVec122SE[2];
		float 	fVec128SE[2];
		float 	fVec134SE[2];
		float 	fVec140SE[2];
		float 	fVec146SE[2];
		float 	fVec152SE[2];
		float 	fVec158SE[2];
		float 	fVec164SE[2];
		float 	fVec170SE[2];
		float 	fVec176SE[2];
		float 	fVec182SE[2];
		float 	fVec188SE[2];
		float 	fVec194SE[2];
		float 	fVec200SE[2];
		float 	fVec206SE[2];
		float 	fVec212SE[2];
		float 	fVec218SE[2];
		float 	fVec224SE[2];
		float 	fVec230SE[2];
		float 	fVec236SE[2];
		float 	fVec242SE[2];
		float 	fVec248SE[2];
		float 	fVec254SE[2];
		float 	fVec260SE[2];
		float 	fVec266SE[2];
		float 	fVec272SE[2];
		float 	fVec278SE[2];
		float 	fVec284SE[2];
		float 	fVec290SE[2];
		float 	fVec296SE[2];
		float 	fVec302SE[2];
		float 	fVec308SE[2];
		float 	fVec314SE[2];
		float 	fVec320SE[2];
		float 	fVec326SE[2];
		float 	fVec332SE[2];
		float 	fVec338SE[2];
		float 	fVec344SE[2];
		float 	fVec350SE[2];
		float 	fVec356SE[2];
		float 	fVec362SE[2];
		float 	fVec368SE[2];
		float 	fVec374SE[2];
		float 	fVec380SE[2];
		float 	fVec386SE[2];
		float 	fVec392SE[2];
		float 	fVec398SE[2];
		float 	fVec404SE[2];
		float 	fVec410SE[2];
		float 	fVec416SE[2];
		float 	fVec422SE[2];
		float 	fVec428SE[2];
		float 	fVec434SE[2];
		float 	fVec440SE[2];
		float 	fVec446SE[2];
		float 	fVec452SE[2];
		float 	fVec458SE[2];
		float 	fVec464SE[2];
		float 	fVec470SE[2];
		float 	fVec476SE[2];
		float 	fVec482SE[2];
		float 	fVec488SE[2];
		float 	fVec494SE[2];
		float 	fVec500SE[2];
		float 	fVec506SE[2];
		float 	fVec512SE[2];
		float 	fVec518SE[2];
		float 	fVec524SE[2];
		float 	fVec530SE[2];
		float 	fVec536SE[2];
		float 	fVec542SE[2];
		float 	fVec548SE[2];
		float 	fVec554SE[2];
		float 	fVec560SE[2];
		float 	fVec566SE[2];
		float 	fVec572SE[2];
		float 	fVec578SE[2];
		float 	fVec584SE[2];
		float 	fVec590SE[2];
		float 	fVec596SE[2];
		float 	fVec602SE[2];
		float 	fVec608SE[2];
		float 	fVec614SE[2];
		float 	fVec620SE[2];
		float 	fVec626SE[2];
		float 	fVec632SE[2];
		float 	fVec638SE[2];
		float 	fVec644SE[2];
		float 	fVec650SE[2];
		float 	fVec656SE[2];
		float 	fVec662SE[2];
		float 	fVec668SE[2];
		float 	fVec674SE[2];
		FAUSTFLOAT* output0 = output[0]; // Zone 3
		fVec0BE[1] = fVec0BEState;
		fVec1BE[1] = fVec1BEState;
		fVec2BE[1] = fVec2BEState;
		fVec3BE[1] = fVec3BEState;
		fVec4BE[1] = fVec4BEState;
		fVec5BE[1] = fVec5BEState;
		fVec6BE[1] = fVec6BEState;
		fVec7BE[1] = fVec7BEState;
		fVec8BE[1] = fVec8BEState;
		fVec9BE[1] = fVec9BEState;
		fVec14SE[1] = fVec14SEState;
		fVec15SE[1] = fVec15SEState[0];
		fVec15SE[2] = fVec15SEState[1];
		fVec21SE[1] = fVec21SEState;
		fVec22SE[1] = fVec22SEState[0];
		fVec22SE[2] = fVec22SEState[1];
		fVec28SE[1] = fVec28SEState;
		fVec29SE[1] = fVec29SEState[0];
		fVec29SE[2] = fVec29SEState[1];
		fVec35SE[1] = fVec35SEState;
		fVec36SE[1] = fVec36SEState[0];
		fVec36SE[2] = fVec36SEState[1];
		fVec42SE[1] = fVec42SEState;
		fVec43SE[1] = fVec43SEState[0];
		fVec43SE[2] = fVec43SEState[1];
		fVec49SE[1] = fVec49SEState;
		fVec50SE[1] = fVec50SEState[0];
		fVec50SE[2] = fVec50SEState[1];
		fVec56SE[1] = fVec56SEState;
		fVec57SE[1] = fVec57SEState[0];
		fVec57SE[2] = fVec57SEState[1];
		fVec63SE[1] = fVec63SEState;
		fVec64SE[1] = fVec64SEState[0];
		fVec64SE[2] = fVec64SEState[1];
		fVec70SE[1] = fVec70SEState;
		fVec71SE[1] = fVec71SEState[0];
		fVec71SE[2] = fVec71SEState[1];
		fVec77SE[1] = fVec77SEState;
		fVec78SE[1] = fVec78SEState[0];
		fVec78SE[2] = fVec78SEState[1];
		fVec83SE[1] = fVec83SEState;
		fVec84SE[1] = fVec84SEState[0];
		fVec84SE[2] = fVec84SEState[1];
		fVec89SE[1] = fVec89SEState;
		fVec90SE[1] = fVec90SEState[0];
		fVec90SE[2] = fVec90SEState[1];
		fVec95SE[1] = fVec95SEState;
		fVec96SE[1] = fVec96SEState[0];
		fVec96SE[2] = fVec96SEState[1];
		fVec101SE[1] = fVec101SEState;
		fVec102SE[1] = fVec102SEState[0];
		fVec102SE[2] = fVec102SEState[1];
		fVec107SE[1] = fVec107SEState;
		fVec108SE[1] = fVec108SEState[0];
		fVec108SE[2] = fVec108SEState[1];
		fVec113SE[1] = fVec113SEState;
		fVec114SE[1] = fVec114SEState[0];
		fVec114SE[2] = fVec114SEState[1];
		fVec119SE[1] = fVec119SEState;
		fVec120SE[1] = fVec120SEState[0];
		fVec120SE[2] = fVec120SEState[1];
		fVec125SE[1] = fVec125SEState;
		fVec126SE[1] = fVec126SEState[0];
		fVec126SE[2] = fVec126SEState[1];
		fVec131SE[1] = fVec131SEState;
		fVec132SE[1] = fVec132SEState[0];
		fVec132SE[2] = fVec132SEState[1];
		fVec137SE[1] = fVec137SEState;
		fVec138SE[1] = fVec138SEState[0];
		fVec138SE[2] = fVec138SEState[1];
		fVec143SE[1] = fVec143SEState;
		fVec144SE[1] = fVec144SEState[0];
		fVec144SE[2] = fVec144SEState[1];
		fVec149SE[1] = fVec149SEState;
		fVec150SE[1] = fVec150SEState[0];
		fVec150SE[2] = fVec150SEState[1];
		fVec155SE[1] = fVec155SEState;
		fVec156SE[1] = fVec156SEState[0];
		fVec156SE[2] = fVec156SEState[1];
		fVec161SE[1] = fVec161SEState;
		fVec162SE[1] = fVec162SEState[0];
		fVec162SE[2] = fVec162SEState[1];
		fVec167SE[1] = fVec167SEState;
		fVec168SE[1] = fVec168SEState[0];
		fVec168SE[2] = fVec168SEState[1];
		fVec173SE[1] = fVec173SEState;
		fVec174SE[1] = fVec174SEState[0];
		fVec174SE[2] = fVec174SEState[1];
		fVec179SE[1] = fVec179SEState;
		fVec180SE[1] = fVec180SEState[0];
		fVec180SE[2] = fVec180SEState[1];
		fVec185SE[1] = fVec185SEState;
		fVec186SE[1] = fVec186SEState[0];
		fVec186SE[2] = fVec186SEState[1];
		fVec191SE[1] = fVec191SEState;
		fVec192SE[1] = fVec192SEState[0];
		fVec192SE[2] = fVec192SEState[1];
		fVec197SE[1] = fVec197SEState;
		fVec198SE[1] = fVec198SEState[0];
		fVec198SE[2] = fVec198SEState[1];
		fVec203SE[1] = fVec203SEState;
		fVec204SE[1] = fVec204SEState[0];
		fVec204SE[2] = fVec204SEState[1];
		fVec209SE[1] = fVec209SEState;
		fVec210SE[1] = fVec210SEState[0];
		fVec210SE[2] = fVec210SEState[1];
		fVec215SE[1] = fVec215SEState;
		fVec216SE[1] = fVec216SEState[0];
		fVec216SE[2] = fVec216SEState[1];
		fVec221SE[1] = fVec221SEState;
		fVec222SE[1] = fVec222SEState[0];
		fVec222SE[2] = fVec222SEState[1];
		fVec227SE[1] = fVec227SEState;
		fVec228SE[1] = fVec228SEState[0];
		fVec228SE[2] = fVec228SEState[1];
		fVec233SE[1] = fVec233SEState;
		fVec234SE[1] = fVec234SEState[0];
		fVec234SE[2] = fVec234SEState[1];
		fVec239SE[1] = fVec239SEState;
		fVec240SE[1] = fVec240SEState[0];
		fVec240SE[2] = fVec240SEState[1];
		fVec245SE[1] = fVec245SEState;
		fVec246SE[1] = fVec246SEState[0];
		fVec246SE[2] = fVec246SEState[1];
		fVec251SE[1] = fVec251SEState;
		fVec252SE[1] = fVec252SEState[0];
		fVec252SE[2] = fVec252SEState[1];
		fVec257SE[1] = fVec257SEState;
		fVec258SE[1] = fVec258SEState[0];
		fVec258SE[2] = fVec258SEState[1];
		fVec263SE[1] = fVec263SEState;
		fVec264SE[1] = fVec264SEState[0];
		fVec264SE[2] = fVec264SEState[1];
		fVec269SE[1] = fVec269SEState;
		fVec270SE[1] = fVec270SEState[0];
		fVec270SE[2] = fVec270SEState[1];
		fVec275SE[1] = fVec275SEState;
		fVec276SE[1] = fVec276SEState[0];
		fVec276SE[2] = fVec276SEState[1];
		fVec281SE[1] = fVec281SEState;
		fVec282SE[1] = fVec282SEState[0];
		fVec282SE[2] = fVec282SEState[1];
		fVec287SE[1] = fVec287SEState;
		fVec288SE[1] = fVec288SEState[0];
		fVec288SE[2] = fVec288SEState[1];
		fVec293SE[1] = fVec293SEState;
		fVec294SE[1] = fVec294SEState[0];
		fVec294SE[2] = fVec294SEState[1];
		fVec299SE[1] = fVec299SEState;
		fVec300SE[1] = fVec300SEState[0];
		fVec300SE[2] = fVec300SEState[1];
		fVec305SE[1] = fVec305SEState;
		fVec306SE[1] = fVec306SEState[0];
		fVec306SE[2] = fVec306SEState[1];
		fVec311SE[1] = fVec311SEState;
		fVec312SE[1] = fVec312SEState[0];
		fVec312SE[2] = fVec312SEState[1];
		fVec317SE[1] = fVec317SEState;
		fVec318SE[1] = fVec318SEState[0];
		fVec318SE[2] = fVec318SEState[1];
		fVec323SE[1] = fVec323SEState;
		fVec324SE[1] = fVec324SEState[0];
		fVec324SE[2] = fVec324SEState[1];
		fVec329SE[1] = fVec329SEState;
		fVec330SE[1] = fVec330SEState[0];
		fVec330SE[2] = fVec330SEState[1];
		fVec335SE[1] = fVec335SEState;
		fVec336SE[1] = fVec336SEState[0];
		fVec336SE[2] = fVec336SEState[1];
		fVec341SE[1] = fVec341SEState;
		fVec342SE[1] = fVec342SEState[0];
		fVec342SE[2] = fVec342SEState[1];
		fVec347SE[1] = fVec347SEState;
		fVec348SE[1] = fVec348SEState[0];
		fVec348SE[2] = fVec348SEState[1];
		fVec353SE[1] = fVec353SEState;
		fVec354SE[1] = fVec354SEState[0];
		fVec354SE[2] = fVec354SEState[1];
		fVec359SE[1] = fVec359SEState;
		fVec360SE[1] = fVec360SEState[0];
		fVec360SE[2] = fVec360SEState[1];
		fVec365SE[1] = fVec365SEState;
		fVec366SE[1] = fVec366SEState[0];
		fVec366SE[2] = fVec366SEState[1];
		fVec371SE[1] = fVec371SEState;
		fVec372SE[1] = fVec372SEState[0];
		fVec372SE[2] = fVec372SEState[1];
		fVec377SE[1] = fVec377SEState;
		fVec378SE[1] = fVec378SEState[0];
		fVec378SE[2] = fVec378SEState[1];
		fVec383SE[1] = fVec383SEState;
		fVec384SE[1] = fVec384SEState[0];
		fVec384SE[2] = fVec384SEState[1];
		fVec389SE[1] = fVec389SEState;
		fVec390SE[1] = fVec390SEState[0];
		fVec390SE[2] = fVec390SEState[1];
		fVec395SE[1] = fVec395SEState;
		fVec396SE[1] = fVec396SEState[0];
		fVec396SE[2] = fVec396SEState[1];
		fVec401SE[1] = fVec401SEState;
		fVec402SE[1] = fVec402SEState[0];
		fVec402SE[2] = fVec402SEState[1];
		fVec407SE[1] = fVec407SEState;
		fVec408SE[1] = fVec408SEState[0];
		fVec408SE[2] = fVec408SEState[1];
		fVec413SE[1] = fVec413SEState;
		fVec414SE[1] = fVec414SEState[0];
		fVec414SE[2] = fVec414SEState[1];
		fVec419SE[1] = fVec419SEState;
		fVec420SE[1] = fVec420SEState[0];
		fVec420SE[2] = fVec420SEState[1];
		fVec425SE[1] = fVec425SEState;
		fVec426SE[1] = fVec426SEState[0];
		fVec426SE[2] = fVec426SEState[1];
		fVec431SE[1] = fVec431SEState;
		fVec432SE[1] = fVec432SEState[0];
		fVec432SE[2] = fVec432SEState[1];
		fVec437SE[1] = fVec437SEState;
		fVec438SE[1] = fVec438SEState[0];
		fVec438SE[2] = fVec438SEState[1];
		fVec443SE[1] = fVec443SEState;
		fVec444SE[1] = fVec444SEState[0];
		fVec444SE[2] = fVec444SEState[1];
		fVec449SE[1] = fVec449SEState;
		fVec450SE[1] = fVec450SEState[0];
		fVec450SE[2] = fVec450SEState[1];
		fVec455SE[1] = fVec455SEState;
		fVec456SE[1] = fVec456SEState[0];
		fVec456SE[2] = fVec456SEState[1];
		fVec461SE[1] = fVec461SEState;
		fVec462SE[1] = fVec462SEState[0];
		fVec462SE[2] = fVec462SEState[1];
		fVec467SE[1] = fVec467SEState;
		fVec468SE[1] = fVec468SEState[0];
		fVec468SE[2] = fVec468SEState[1];
		fVec473SE[1] = fVec473SEState;
		fVec474SE[1] = fVec474SEState[0];
		fVec474SE[2] = fVec474SEState[1];
		fVec479SE[1] = fVec479SEState;
		fVec480SE[1] = fVec480SEState[0];
		fVec480SE[2] = fVec480SEState[1];
		fVec485SE[1] = fVec485SEState;
		fVec486SE[1] = fVec486SEState[0];
		fVec486SE[2] = fVec486SEState[1];
		fVec491SE[1] = fVec491SEState;
		fVec492SE[1] = fVec492SEState[0];
		fVec492SE[2] = fVec492SEState[1];
		fVec497SE[1] = fVec497SEState;
		fVec498SE[1] = fVec498SEState[0];
		fVec498SE[2] = fVec498SEState[1];
		fVec503SE[1] = fVec503SEState;
		fVec504SE[1] = fVec504SEState[0];
		fVec504SE[2] = fVec504SEState[1];
		fVec509SE[1] = fVec509SEState;
		fVec510SE[1] = fVec510SEState[0];
		fVec510SE[2] = fVec510SEState[1];
		fVec515SE[1] = fVec515SEState;
		fVec516SE[1] = fVec516SEState[0];
		fVec516SE[2] = fVec516SEState[1];
		fVec521SE[1] = fVec521SEState;
		fVec522SE[1] = fVec522SEState[0];
		fVec522SE[2] = fVec522SEState[1];
		fVec527SE[1] = fVec527SEState;
		fVec528SE[1] = fVec528SEState[0];
		fVec528SE[2] = fVec528SEState[1];
		fVec533SE[1] = fVec533SEState;
		fVec534SE[1] = fVec534SEState[0];
		fVec534SE[2] = fVec534SEState[1];
		fVec539SE[1] = fVec539SEState;
		fVec540SE[1] = fVec540SEState[0];
		fVec540SE[2] = fVec540SEState[1];
		fVec545SE[1] = fVec545SEState;
		fVec546SE[1] = fVec546SEState[0];
		fVec546SE[2] = fVec546SEState[1];
		fVec551SE[1] = fVec551SEState;
		fVec552SE[1] = fVec552SEState[0];
		fVec552SE[2] = fVec552SEState[1];
		fVec557SE[1] = fVec557SEState;
		fVec558SE[1] = fVec558SEState[0];
		fVec558SE[2] = fVec558SEState[1];
		fVec563SE[1] = fVec563SEState;
		fVec564SE[1] = fVec564SEState[0];
		fVec564SE[2] = fVec564SEState[1];
		fVec569SE[1] = fVec569SEState;
		fVec570SE[1] = fVec570SEState[0];
		fVec570SE[2] = fVec570SEState[1];
		fVec575SE[1] = fVec575SEState;
		fVec576SE[1] = fVec576SEState[0];
		fVec576SE[2] = fVec576SEState[1];
		fVec581SE[1] = fVec581SEState;
		fVec582SE[1] = fVec582SEState[0];
		fVec582SE[2] = fVec582SEState[1];
		fVec587SE[1] = fVec587SEState;
		fVec588SE[1] = fVec588SEState[0];
		fVec588SE[2] = fVec588SEState[1];
		fVec593SE[1] = fVec593SEState;
		fVec594SE[1] = fVec594SEState[0];
		fVec594SE[2] = fVec594SEState[1];
		fVec599SE[1] = fVec599SEState;
		fVec600SE[1] = fVec600SEState[0];
		fVec600SE[2] = fVec600SEState[1];
		fVec605SE[1] = fVec605SEState;
		fVec606SE[1] = fVec606SEState[0];
		fVec606SE[2] = fVec606SEState[1];
		fVec611SE[1] = fVec611SEState;
		fVec612SE[1] = fVec612SEState[0];
		fVec612SE[2] = fVec612SEState[1];
		fVec617SE[1] = fVec617SEState;
		fVec618SE[1] = fVec618SEState[0];
		fVec618SE[2] = fVec618SEState[1];
		fVec623SE[1] = fVec623SEState;
		fVec624SE[1] = fVec624SEState[0];
		fVec624SE[2] = fVec624SEState[1];
		fVec629SE[1] = fVec629SEState;
		fVec630SE[1] = fVec630SEState[0];
		fVec630SE[2] = fVec630SEState[1];
		fVec635SE[1] = fVec635SEState;
		fVec636SE[1] = fVec636SEState[0];
		fVec636SE[2] = fVec636SEState[1];
		fVec641SE[1] = fVec641SEState;
		fVec642SE[1] = fVec642SEState[0];
		fVec642SE[2] = fVec642SEState[1];
		fVec647SE[1] = fVec647SEState;
		fVec648SE[1] = fVec648SEState[0];
		fVec648SE[2] = fVec648SEState[1];
		fVec653SE[1] = fVec653SEState;
		fVec654SE[1] = fVec654SEState[0];
		fVec654SE[2] = fVec654SEState[1];
		fVec659SE[1] = fVec659SEState;
		fVec660SE[1] = fVec660SEState[0];
		fVec660SE[2] = fVec660SEState[1];
		fVec665SE[1] = fVec665SEState;
		fVec666SE[1] = fVec666SEState[0];
		fVec666SE[2] = fVec666SEState[1];
		fVec671SE[1] = fVec671SEState;
		fVec672SE[1] = fVec672SEState[0];
		fVec672SE[2] = fVec672SEState[1];
		fVec677SE[1] = fVec677SEState;
		fVec678SE[1] = fVec678SEState[0];
		fVec678SE[2] = fVec678SEState[1];
		fVec11SE[1] = fVec11SEState;
		fVec18SE[1] = fVec18SEState;
		fVec25SE[1] = fVec25SEState;
		fVec32SE[1] = fVec32SEState;
		fVec39SE[1] = fVec39SEState;
		fVec46SE[1] = fVec46SEState;
		fVec53SE[1] = fVec53SEState;
		fVec60SE[1] = fVec60SEState;
		fVec67SE[1] = fVec67SEState;
		fVec74SE[1] = fVec74SEState;
		fVec80SE[1] = fVec80SEState;
		fVec86SE[1] = fVec86SEState;
		fVec92SE[1] = fVec92SEState;
		fVec98SE[1] = fVec98SEState;
		fVec104SE[1] = fVec104SEState;
		fVec110SE[1] = fVec110SEState;
		fVec116SE[1] = fVec116SEState;
		fVec122SE[1] = fVec122SEState;
		fVec128SE[1] = fVec128SEState;
		fVec134SE[1] = fVec134SEState;
		fVec140SE[1] = fVec140SEState;
		fVec146SE[1] = fVec146SEState;
		fVec152SE[1] = fVec152SEState;
		fVec158SE[1] = fVec158SEState;
		fVec164SE[1] = fVec164SEState;
		fVec170SE[1] = fVec170SEState;
		fVec176SE[1] = fVec176SEState;
		fVec182SE[1] = fVec182SEState;
		fVec188SE[1] = fVec188SEState;
		fVec194SE[1] = fVec194SEState;
		fVec200SE[1] = fVec200SEState;
		fVec206SE[1] = fVec206SEState;
		fVec212SE[1] = fVec212SEState;
		fVec218SE[1] = fVec218SEState;
		fVec224SE[1] = fVec224SEState;
		fVec230SE[1] = fVec230SEState;
		fVec236SE[1] = fVec236SEState;
		fVec242SE[1] = fVec242SEState;
		fVec248SE[1] = fVec248SEState;
		fVec254SE[1] = fVec254SEState;
		fVec260SE[1] = fVec260SEState;
		fVec266SE[1] = fVec266SEState;
		fVec272SE[1] = fVec272SEState;
		fVec278SE[1] = fVec278SEState;
		fVec284SE[1] = fVec284SEState;
		fVec290SE[1] = fVec290SEState;
		fVec296SE[1] = fVec296SEState;
		fVec302SE[1] = fVec302SEState;
		fVec308SE[1] = fVec308SEState;
		fVec314SE[1] = fVec314SEState;
		fVec320SE[1] = fVec320SEState;
		fVec326SE[1] = fVec326SEState;
		fVec332SE[1] = fVec332SEState;
		fVec338SE[1] = fVec338SEState;
		fVec344SE[1] = fVec344SEState;
		fVec350SE[1] = fVec350SEState;
		fVec356SE[1] = fVec356SEState;
		fVec362SE[1] = fVec362SEState;
		fVec368SE[1] = fVec368SEState;
		fVec374SE[1] = fVec374SEState;
		fVec380SE[1] = fVec380SEState;
		fVec386SE[1] = fVec386SEState;
		fVec392SE[1] = fVec392SEState;
		fVec398SE[1] = fVec398SEState;
		fVec404SE[1] = fVec404SEState;
		fVec410SE[1] = fVec410SEState;
		fVec416SE[1] = fVec416SEState;
		fVec422SE[1] = fVec422SEState;
		fVec428SE[1] = fVec428SEState;
		fVec434SE[1] = fVec434SEState;
		fVec440SE[1] = fVec440SEState;
		fVec446SE[1] = fVec446SEState;
		fVec452SE[1] = fVec452SEState;
		fVec458SE[1] = fVec458SEState;
		fVec464SE[1] = fVec464SEState;
		fVec470SE[1] = fVec470SEState;
		fVec476SE[1] = fVec476SEState;
		fVec482SE[1] = fVec482SEState;
		fVec488SE[1] = fVec488SEState;
		fVec494SE[1] = fVec494SEState;
		fVec500SE[1] = fVec500SEState;
		fVec506SE[1] = fVec506SEState;
		fVec512SE[1] = fVec512SEState;
		fVec518SE[1] = fVec518SEState;
		fVec524SE[1] = fVec524SEState;
		fVec530SE[1] = fVec530SEState;
		fVec536SE[1] = fVec536SEState;
		fVec542SE[1] = fVec542SEState;
		fVec548SE[1] = fVec548SEState;
		fVec554SE[1] = fVec554SEState;
		fVec560SE[1] = fVec560SEState;
		fVec566SE[1] = fVec566SEState;
		fVec572SE[1] = fVec572SEState;
		fVec578SE[1] = fVec578SEState;
		fVec584SE[1] = fVec584SEState;
		fVec590SE[1] = fVec590SEState;
		fVec596SE[1] = fVec596SEState;
		fVec602SE[1] = fVec602SEState;
		fVec608SE[1] = fVec608SEState;
		fVec614SE[1] = fVec614SEState;
		fVec620SE[1] = fVec620SEState;
		fVec626SE[1] = fVec626SEState;
		fVec632SE[1] = fVec632SEState;
		fVec638SE[1] = fVec638SEState;
		fVec644SE[1] = fVec644SEState;
		fVec650SE[1] = fVec650SEState;
		fVec656SE[1] = fVec656SEState;
		fVec662SE[1] = fVec662SEState;
		fVec668SE[1] = fVec668SEState;
		fVec674SE[1] = fVec674SEState;
		for (int i=0; i<count; i++) {
			fVec0BE[0] = fSlow0BE;
			fVec1BE[0] = fSlow1BE;
			fVec2BE[0] = fSlow2BE;
			fVec3BE[0] = fSlow3BE;
			fVec4BE[0] = fSlow4BE;
			fVec5BE[0] = fSlow5BE;
			fVec6BE[0] = fSlow6BE;
			fVec7BE[0] = fSlow7BE;
			fVec8BE[0] = fSlow8BE;
			fVec9BE[0] = fSlow9BE;
			fTemp0SE = float((fSlow9BE > fVec9BE[1])); // step: 48
			fVec12SE[IOTA0&255] = ((fSlow12BE * fVec11SE[1]) + (5.2995043f * fTemp0SE) /* Sum */);
			fTemp1SE = fVec15SE[2]; // step: 87
			fVec14SE[0] = ((fSlow11BE * fVec12SE[(IOTA0-iSlow13BE)&255]) + -(fSlow14BE * fVec14SE[1]) + -(fConst6KI * fTemp1SE) /* Sum */);
			fVec15SE[0] = fVec14SE[0];
			fTemp2SE = float((fSlow8BE > fVec8BE[1])); // step: 103
			fVec19SE[IOTA0&255] = ((fSlow12BE * fVec18SE[1]) + (5.2995043f * fTemp2SE) /* Sum */);
			fTemp3SE = fVec22SE[2]; // step: 123
			fVec21SE[0] = ((fSlow16BE * fVec19SE[(IOTA0-iSlow17BE)&255]) + -(fSlow18BE * fVec21SE[1]) + -(fConst6KI * fTemp3SE) /* Sum */);
			fVec22SE[0] = fVec21SE[0];
			fTemp4SE = float((fSlow7BE > fVec7BE[1])); // step: 139
			fVec26SE[IOTA0&255] = ((fSlow12BE * fVec25SE[1]) + (5.2995043f * fTemp4SE) /* Sum */);
			fTemp5SE = fVec29SE[2]; // step: 159
			fVec28SE[0] = ((fSlow20BE * fVec26SE[(IOTA0-iSlow21BE)&255]) + -(fSlow22BE * fVec28SE[1]) + -(fConst6KI * fTemp5SE) /* Sum */);
			fVec29SE[0] = fVec28SE[0];
			fTemp6SE = float((fSlow6BE > fVec6BE[1])); // step: 175
			fVec33SE[IOTA0&255] = ((fSlow12BE * fVec32SE[1]) + (5.2995043f * fTemp6SE) /* Sum */);
			fTemp7SE = fVec36SE[2]; // step: 195
			fVec35SE[0] = ((fSlow24BE * fVec33SE[(IOTA0-iSlow25BE)&255]) + -(fSlow26BE * fVec35SE[1]) + -(fConst6KI * fTemp7SE) /* Sum */);
			fVec36SE[0] = fVec35SE[0];
			fTemp8SE = float((fSlow5BE > fVec5BE[1])); // step: 211
			fVec40SE[IOTA0&255] = ((fSlow12BE * fVec39SE[1]) + (5.2995043f * fTemp8SE) /* Sum */);
			fTemp9SE = fVec43SE[2]; // step: 231
			fVec42SE[0] = ((fSlow28BE * fVec40SE[(IOTA0-iSlow29BE)&255]) + -(fSlow30BE * fVec42SE[1]) + -(fConst6KI * fTemp9SE) /* Sum */);
			fVec43SE[0] = fVec42SE[0];
			fTemp10SE = float((fSlow4BE > fVec4BE[1])); // step: 247
			fVec47SE[IOTA0&255] = ((fSlow12BE * fVec46SE[1]) + (5.2995043f * fTemp10SE) /* Sum */);
			fTemp11SE = fVec50SE[2]; // step: 267
			fVec49SE[0] = ((fSlow32BE * fVec47SE[(IOTA0-iSlow33BE)&255]) + -(fSlow34BE * fVec49SE[1]) + -(fConst6KI * fTemp11SE) /* Sum */);
			fVec50SE[0] = fVec49SE[0];
			fTemp12SE = float((fSlow3BE > fVec3BE[1])); // step: 283
			fVec54SE[IOTA0&255] = ((fSlow12BE * fVec53SE[1]) + (5.2995043f * fTemp12SE) /* Sum */);
			fTemp13SE = fVec57SE[2]; // step: 303
			fVec56SE[0] = ((fSlow36BE * fVec54SE[(IOTA0-iSlow37BE)&255]) + -(fSlow38BE * fVec56SE[1]) + -(fConst6KI * fTemp13SE) /* Sum */);
			fVec57SE[0] = fVec56SE[0];
			fTemp14SE = float((fSlow2BE > fVec2BE[1])); // step: 319
			fVec61SE[IOTA0&255] = ((fSlow12BE * fVec60SE[1]) + (5.2995043f * fTemp14SE) /* Sum */);
			fTemp15SE = fVec64SE[2]; // step: 339
			fVec63SE[0] = ((fSlow40BE * fVec61SE[(IOTA0-iSlow41BE)&255]) + -(fSlow42BE * fVec63SE[1]) + -(fConst6KI * fTemp15SE) /* Sum */);
			fVec64SE[0] = fVec63SE[0];
			fTemp16SE = float((fSlow0BE > fVec0BE[1])); // step: 354
			fVec68SE[IOTA0&255] = ((fSlow12BE * fVec67SE[1]) + (5.2995043f * fTemp16SE) /* Sum */);
			fTemp17SE = fVec71SE[2]; // step: 374
			fVec70SE[0] = ((fSlow44BE * fVec68SE[(IOTA0-iSlow45BE)&255]) + -(fSlow46BE * fVec70SE[1]) + -(fConst6KI * fTemp17SE) /* Sum */);
			fVec71SE[0] = fVec70SE[0];
			fTemp18SE = float((fSlow1BE > fVec1BE[1])); // step: 390
			fVec75SE[IOTA0&255] = ((fSlow12BE * fVec74SE[1]) + (5.2995043f * fTemp18SE) /* Sum */);
			fTemp19SE = fVec78SE[2]; // step: 410
			fVec77SE[0] = ((fSlow48BE * fVec75SE[(IOTA0-iSlow49BE)&255]) + -(fSlow50BE * fVec77SE[1]) + -(fConst6KI * fTemp19SE) /* Sum */);
			fVec78SE[0] = fVec77SE[0];
			fTemp20SE = (6.7063036f * fTemp0SE); // step: 421
			fVec81SE[IOTA0&63] = (fTemp20SE + (fSlow12BE * fVec80SE[1]) /* Sum */);
			fTemp21SE = fVec84SE[2]; // step: 444
			fVec83SE[0] = ((fSlow51BE * fVec81SE[(IOTA0-iSlow52BE)&63]) + -(fSlow53BE * fVec83SE[1]) + -(fConst6KI * fTemp21SE) /* Sum */);
			fVec84SE[0] = fVec83SE[0];
			fVec87SE[IOTA0&63] = ((fSlow12BE * fVec86SE[1]) + fTemp20SE /* Sum */);
			fTemp22SE = fVec90SE[2]; // step: 476
			fVec89SE[0] = ((fSlow54BE * fVec87SE[(IOTA0-iSlow55BE)&63]) + -(fSlow56BE * fVec89SE[1]) + -(fConst6KI * fTemp22SE) /* Sum */);
			fVec90SE[0] = fVec89SE[0];
			fTemp23SE = (1.7063034f * fTemp0SE); // step: 489
			fVec93SE[IOTA0&63] = (fTemp23SE + (fSlow12BE * fVec92SE[1]) /* Sum */);
			fTemp24SE = fVec96SE[2]; // step: 512
			fVec95SE[0] = ((fSlow57BE * fVec93SE[(IOTA0-iSlow58BE)&63]) + -(fSlow59BE * fVec95SE[1]) + -(fConst6KI * fTemp24SE) /* Sum */);
			fVec96SE[0] = fVec95SE[0];
			fVec99SE[IOTA0&63] = ((fSlow12BE * fVec98SE[1]) + fTemp23SE /* Sum */);
			fTemp25SE = fVec102SE[2]; // step: 545
			fVec101SE[0] = ((fSlow60BE * fVec99SE[(IOTA0-iSlow61BE)&63]) + -(fSlow62BE * fVec101SE[1]) + -(fConst6KI * fTemp25SE) /* Sum */);
			fVec102SE[0] = fVec101SE[0];
			fTemp26SE = (5.0063033f * fTemp0SE); // step: 556
			fVec105SE[IOTA0&127] = (fTemp26SE + (fSlow12BE * fVec104SE[1]) /* Sum */);
			fTemp27SE = fVec108SE[2]; // step: 579
			fVec107SE[0] = ((fSlow63BE * fVec105SE[(IOTA0-iSlow64BE)&127]) + -(fSlow65BE * fVec107SE[1]) + -(fConst6KI * fTemp27SE) /* Sum */);
			fVec108SE[0] = fVec107SE[0];
			fVec111SE[IOTA0&127] = ((fSlow12BE * fVec110SE[1]) + fTemp26SE /* Sum */);
			fTemp28SE = fVec114SE[2]; // step: 611
			fVec113SE[0] = ((fSlow66BE * fVec111SE[(IOTA0-iSlow67BE)&127]) + -(fSlow68BE * fVec113SE[1]) + -(fConst6KI * fTemp28SE) /* Sum */);
			fVec114SE[0] = fVec113SE[0];
			fTemp29SE = (2.0914886f * fTemp0SE); // step: 624
			fVec117SE[IOTA0&255] = (fTemp29SE + (fSlow12BE * fVec116SE[1]) /* Sum */);
			fTemp30SE = fVec120SE[2]; // step: 647
			fVec119SE[0] = ((fSlow69BE * fVec117SE[(IOTA0-iSlow70BE)&255]) + -(fSlow71BE * fVec119SE[1]) + -(fConst6KI * fTemp30SE) /* Sum */);
			fVec120SE[0] = fVec119SE[0];
			fVec123SE[IOTA0&255] = ((fSlow12BE * fVec122SE[1]) + fTemp29SE /* Sum */);
			fTemp31SE = fVec126SE[2]; // step: 680
			fVec125SE[0] = ((fSlow72BE * fVec123SE[(IOTA0-iSlow73BE)&255]) + -(fSlow74BE * fVec125SE[1]) + -(fConst6KI * fTemp31SE) /* Sum */);
			fVec126SE[0] = fVec125SE[0];
			fTemp32SE = (2.1900356f * fTemp0SE); // step: 693
			fVec129SE[IOTA0&1023] = (fTemp32SE + (fSlow12BE * fVec128SE[1]) /* Sum */);
			fTemp33SE = fVec132SE[2]; // step: 716
			fVec131SE[0] = ((fSlow75BE * fVec129SE[(IOTA0-iSlow76BE)&1023]) + -(fSlow77BE * fVec131SE[1]) + -(fConst6KI * fTemp33SE) /* Sum */);
			fVec132SE[0] = fVec131SE[0];
			fVec135SE[IOTA0&1023] = ((fSlow12BE * fVec134SE[1]) + fTemp32SE /* Sum */);
			fTemp34SE = fVec138SE[2]; // step: 749
			fVec137SE[0] = ((fSlow78BE * fVec135SE[(IOTA0-iSlow79BE)&1023]) + -(fSlow80BE * fVec137SE[1]) + -(fConst6KI * fTemp34SE) /* Sum */);
			fVec138SE[0] = fVec137SE[0];
			fTemp35SE = (6.7063036f * fTemp2SE); // step: 758
			fVec141SE[IOTA0&63] = (fTemp35SE + (fSlow12BE * fVec140SE[1]) /* Sum */);
			fTemp36SE = fVec144SE[2]; // step: 777
			fVec143SE[0] = ((fSlow81BE * fVec141SE[(IOTA0-iSlow82BE)&63]) + -(fSlow83BE * fVec143SE[1]) + -(fConst6KI * fTemp36SE) /* Sum */);
			fVec144SE[0] = fVec143SE[0];
			fVec147SE[IOTA0&63] = ((fSlow12BE * fVec146SE[1]) + fTemp35SE /* Sum */);
			fTemp37SE = fVec150SE[2]; // step: 804
			fVec149SE[0] = ((fSlow84BE * fVec147SE[(IOTA0-iSlow85BE)&63]) + -(fSlow86BE * fVec149SE[1]) + -(fConst6KI * fTemp37SE) /* Sum */);
			fVec150SE[0] = fVec149SE[0];
			fTemp38SE = (1.7063034f * fTemp2SE); // step: 814
			fVec153SE[IOTA0&63] = (fTemp38SE + (fSlow12BE * fVec152SE[1]) /* Sum */);
			fTemp39SE = fVec156SE[2]; // step: 833
			fVec155SE[0] = ((fSlow87BE * fVec153SE[(IOTA0-iSlow88BE)&63]) + -(fSlow89BE * fVec155SE[1]) + -(fConst6KI * fTemp39SE) /* Sum */);
			fVec156SE[0] = fVec155SE[0];
			fVec159SE[IOTA0&63] = ((fSlow12BE * fVec158SE[1]) + fTemp38SE /* Sum */);
			fTemp40SE = fVec162SE[2]; // step: 861
			fVec161SE[0] = ((fSlow90BE * fVec159SE[(IOTA0-iSlow91BE)&63]) + -(fSlow92BE * fVec161SE[1]) + -(fConst6KI * fTemp40SE) /* Sum */);
			fVec162SE[0] = fVec161SE[0];
			fTemp41SE = (5.0063033f * fTemp2SE); // step: 870
			fVec165SE[IOTA0&127] = (fTemp41SE + (fSlow12BE * fVec164SE[1]) /* Sum */);
			fTemp42SE = fVec168SE[2]; // step: 889
			fVec167SE[0] = ((fSlow93BE * fVec165SE[(IOTA0-iSlow94BE)&127]) + -(fSlow95BE * fVec167SE[1]) + -(fConst6KI * fTemp42SE) /* Sum */);
			fVec168SE[0] = fVec167SE[0];
			fVec171SE[IOTA0&127] = ((fSlow12BE * fVec170SE[1]) + fTemp41SE /* Sum */);
			fTemp43SE = fVec174SE[2]; // step: 916
			fVec173SE[0] = ((fSlow96BE * fVec171SE[(IOTA0-iSlow97BE)&127]) + -(fSlow98BE * fVec173SE[1]) + -(fConst6KI * fTemp43SE) /* Sum */);
			fVec174SE[0] = fVec173SE[0];
			fTemp44SE = (2.0914886f * fTemp2SE); // step: 926
			fVec177SE[IOTA0&255] = (fTemp44SE + (fSlow12BE * fVec176SE[1]) /* Sum */);
			fTemp45SE = fVec180SE[2]; // step: 945
			fVec179SE[0] = ((fSlow99BE * fVec177SE[(IOTA0-iSlow100BE)&255]) + -(fSlow101BE * fVec179SE[1]) + -(fConst6KI * fTemp45SE) /* Sum */);
			fVec180SE[0] = fVec179SE[0];
			fVec183SE[IOTA0&255] = ((fSlow12BE * fVec182SE[1]) + fTemp44SE /* Sum */);
			fTemp46SE = fVec186SE[2]; // step: 973
			fVec185SE[0] = ((fSlow102BE * fVec183SE[(IOTA0-iSlow103BE)&255]) + -(fSlow104BE * fVec185SE[1]) + -(fConst6KI * fTemp46SE) /* Sum */);
			fVec186SE[0] = fVec185SE[0];
			fTemp47SE = (2.1900356f * fTemp2SE); // step: 983
			fVec189SE[IOTA0&1023] = (fTemp47SE + (fSlow12BE * fVec188SE[1]) /* Sum */);
			fTemp48SE = fVec192SE[2]; // step: 1002
			fVec191SE[0] = ((fSlow105BE * fVec189SE[(IOTA0-iSlow106BE)&1023]) + -(fSlow107BE * fVec191SE[1]) + -(fConst6KI * fTemp48SE) /* Sum */);
			fVec192SE[0] = fVec191SE[0];
			fVec195SE[IOTA0&1023] = ((fSlow12BE * fVec194SE[1]) + fTemp47SE /* Sum */);
			fTemp49SE = fVec198SE[2]; // step: 1030
			fVec197SE[0] = ((fSlow108BE * fVec195SE[(IOTA0-iSlow109BE)&1023]) + -(fSlow110BE * fVec197SE[1]) + -(fConst6KI * fTemp49SE) /* Sum */);
			fVec198SE[0] = fVec197SE[0];
			fTemp50SE = (6.7063036f * fTemp4SE); // step: 1039
			fVec201SE[IOTA0&63] = (fTemp50SE + (fSlow12BE * fVec200SE[1]) /* Sum */);
			fTemp51SE = fVec204SE[2]; // step: 1058
			fVec203SE[0] = ((fSlow111BE * fVec201SE[(IOTA0-iSlow112BE)&63]) + -(fSlow113BE * fVec203SE[1]) + -(fConst6KI * fTemp51SE) /* Sum */);
			fVec204SE[0] = fVec203SE[0];
			fVec207SE[IOTA0&63] = ((fSlow12BE * fVec206SE[1]) + fTemp50SE /* Sum */);
			fTemp52SE = fVec210SE[2]; // step: 1085
			fVec209SE[0] = ((fSlow114BE * fVec207SE[(IOTA0-iSlow115BE)&63]) + -(fSlow116BE * fVec209SE[1]) + -(fConst6KI * fTemp52SE) /* Sum */);
			fVec210SE[0] = fVec209SE[0];
			fTemp53SE = (1.7063034f * fTemp4SE); // step: 1095
			fVec213SE[IOTA0&63] = (fTemp53SE + (fSlow12BE * fVec212SE[1]) /* Sum */);
			fTemp54SE = fVec216SE[2]; // step: 1114
			fVec215SE[0] = ((fSlow117BE * fVec213SE[(IOTA0-iSlow118BE)&63]) + -(fSlow119BE * fVec215SE[1]) + -(fConst6KI * fTemp54SE) /* Sum */);
			fVec216SE[0] = fVec215SE[0];
			fVec219SE[IOTA0&63] = ((fSlow12BE * fVec218SE[1]) + fTemp53SE /* Sum */);
			fTemp55SE = fVec222SE[2]; // step: 1142
			fVec221SE[0] = ((fSlow120BE * fVec219SE[(IOTA0-iSlow121BE)&63]) + -(fSlow122BE * fVec221SE[1]) + -(fConst6KI * fTemp55SE) /* Sum */);
			fVec222SE[0] = fVec221SE[0];
			fTemp56SE = (5.0063033f * fTemp4SE); // step: 1151
			fVec225SE[IOTA0&127] = (fTemp56SE + (fSlow12BE * fVec224SE[1]) /* Sum */);
			fTemp57SE = fVec228SE[2]; // step: 1170
			fVec227SE[0] = ((fSlow123BE * fVec225SE[(IOTA0-iSlow124BE)&127]) + -(fSlow125BE * fVec227SE[1]) + -(fConst6KI * fTemp57SE) /* Sum */);
			fVec228SE[0] = fVec227SE[0];
			fVec231SE[IOTA0&127] = ((fSlow12BE * fVec230SE[1]) + fTemp56SE /* Sum */);
			fTemp58SE = fVec234SE[2]; // step: 1197
			fVec233SE[0] = ((fSlow126BE * fVec231SE[(IOTA0-iSlow127BE)&127]) + -(fSlow128BE * fVec233SE[1]) + -(fConst6KI * fTemp58SE) /* Sum */);
			fVec234SE[0] = fVec233SE[0];
			fTemp59SE = (2.0914886f * fTemp4SE); // step: 1207
			fVec237SE[IOTA0&255] = (fTemp59SE + (fSlow12BE * fVec236SE[1]) /* Sum */);
			fTemp60SE = fVec240SE[2]; // step: 1226
			fVec239SE[0] = ((fSlow129BE * fVec237SE[(IOTA0-iSlow130BE)&255]) + -(fSlow131BE * fVec239SE[1]) + -(fConst6KI * fTemp60SE) /* Sum */);
			fVec240SE[0] = fVec239SE[0];
			fVec243SE[IOTA0&255] = ((fSlow12BE * fVec242SE[1]) + fTemp59SE /* Sum */);
			fTemp61SE = fVec246SE[2]; // step: 1254
			fVec245SE[0] = ((fSlow132BE * fVec243SE[(IOTA0-iSlow133BE)&255]) + -(fSlow134BE * fVec245SE[1]) + -(fConst6KI * fTemp61SE) /* Sum */);
			fVec246SE[0] = fVec245SE[0];
			fTemp62SE = (2.1900356f * fTemp4SE); // step: 1264
			fVec249SE[IOTA0&1023] = (fTemp62SE + (fSlow12BE * fVec248SE[1]) /* Sum */);
			fTemp63SE = fVec252SE[2]; // step: 1283
			fVec251SE[0] = ((fSlow135BE * fVec249SE[(IOTA0-iSlow136BE)&1023]) + -(fSlow137BE * fVec251SE[1]) + -(fConst6KI * fTemp63SE) /* Sum */);
			fVec252SE[0] = fVec251SE[0];
			fVec255SE[IOTA0&1023] = ((fSlow12BE * fVec254SE[1]) + fTemp62SE /* Sum */);
			fTemp64SE = fVec258SE[2]; // step: 1311
			fVec257SE[0] = ((fSlow138BE * fVec255SE[(IOTA0-iSlow139BE)&1023]) + -(fSlow140BE * fVec257SE[1]) + -(fConst6KI * fTemp64SE) /* Sum */);
			fVec258SE[0] = fVec257SE[0];
			fTemp65SE = (6.7063036f * fTemp6SE); // step: 1320
			fVec261SE[IOTA0&63] = (fTemp65SE + (fSlow12BE * fVec260SE[1]) /* Sum */);
			fTemp66SE = fVec264SE[2]; // step: 1339
			fVec263SE[0] = ((fSlow141BE * fVec261SE[(IOTA0-iSlow142BE)&63]) + -(fSlow143BE * fVec263SE[1]) + -(fConst6KI * fTemp66SE) /* Sum */);
			fVec264SE[0] = fVec263SE[0];
			fVec267SE[IOTA0&63] = ((fSlow12BE * fVec266SE[1]) + fTemp65SE /* Sum */);
			fTemp67SE = fVec270SE[2]; // step: 1366
			fVec269SE[0] = ((fSlow144BE * fVec267SE[(IOTA0-iSlow145BE)&63]) + -(fSlow146BE * fVec269SE[1]) + -(fConst6KI * fTemp67SE) /* Sum */);
			fVec270SE[0] = fVec269SE[0];
			fTemp68SE = (1.7063034f * fTemp6SE); // step: 1376
			fVec273SE[IOTA0&63] = (fTemp68SE + (fSlow12BE * fVec272SE[1]) /* Sum */);
			fTemp69SE = fVec276SE[2]; // step: 1395
			fVec275SE[0] = ((fSlow147BE * fVec273SE[(IOTA0-iSlow148BE)&63]) + -(fSlow149BE * fVec275SE[1]) + -(fConst6KI * fTemp69SE) /* Sum */);
			fVec276SE[0] = fVec275SE[0];
			fVec279SE[IOTA0&63] = ((fSlow12BE * fVec278SE[1]) + fTemp68SE /* Sum */);
			fTemp70SE = fVec282SE[2]; // step: 1423
			fVec281SE[0] = ((fSlow150BE * fVec279SE[(IOTA0-iSlow151BE)&63]) + -(fSlow152BE * fVec281SE[1]) + -(fConst6KI * fTemp70SE) /* Sum */);
			fVec282SE[0] = fVec281SE[0];
			fTemp71SE = (5.0063033f * fTemp6SE); // step: 1432
			fVec285SE[IOTA0&127] = (fTemp71SE + (fSlow12BE * fVec284SE[1]) /* Sum */);
			fTemp72SE = fVec288SE[2]; // step: 1451
			fVec287SE[0] = ((fSlow153BE * fVec285SE[(IOTA0-iSlow154BE)&127]) + -(fSlow155BE * fVec287SE[1]) + -(fConst6KI * fTemp72SE) /* Sum */);
			fVec288SE[0] = fVec287SE[0];
			fVec291SE[IOTA0&127] = ((fSlow12BE * fVec290SE[1]) + fTemp71SE /* Sum */);
			fTemp73SE = fVec294SE[2]; // step: 1478
			fVec293SE[0] = ((fSlow156BE * fVec291SE[(IOTA0-iSlow157BE)&127]) + -(fSlow158BE * fVec293SE[1]) + -(fConst6KI * fTemp73SE) /* Sum */);
			fVec294SE[0] = fVec293SE[0];
			fTemp74SE = (2.0914886f * fTemp6SE); // step: 1488
			fVec297SE[IOTA0&255] = (fTemp74SE + (fSlow12BE * fVec296SE[1]) /* Sum */);
			fTemp75SE = fVec300SE[2]; // step: 1507
			fVec299SE[0] = ((fSlow159BE * fVec297SE[(IOTA0-iSlow160BE)&255]) + -(fSlow161BE * fVec299SE[1]) + -(fConst6KI * fTemp75SE) /* Sum */);
			fVec300SE[0] = fVec299SE[0];
			fVec303SE[IOTA0&255] = ((fSlow12BE * fVec302SE[1]) + fTemp74SE /* Sum */);
			fTemp76SE = fVec306SE[2]; // step: 1535
			fVec305SE[0] = ((fSlow162BE * fVec303SE[(IOTA0-iSlow163BE)&255]) + -(fSlow164BE * fVec305SE[1]) + -(fConst6KI * fTemp76SE) /* Sum */);
			fVec306SE[0] = fVec305SE[0];
			fTemp77SE = (2.1900356f * fTemp6SE); // step: 1545
			fVec309SE[IOTA0&1023] = (fTemp77SE + (fSlow12BE * fVec308SE[1]) /* Sum */);
			fTemp78SE = fVec312SE[2]; // step: 1564
			fVec311SE[0] = ((fSlow165BE * fVec309SE[(IOTA0-iSlow166BE)&1023]) + -(fSlow167BE * fVec311SE[1]) + -(fConst6KI * fTemp78SE) /* Sum */);
			fVec312SE[0] = fVec311SE[0];
			fVec315SE[IOTA0&1023] = ((fSlow12BE * fVec314SE[1]) + fTemp77SE /* Sum */);
			fTemp79SE = fVec318SE[2]; // step: 1592
			fVec317SE[0] = ((fSlow168BE * fVec315SE[(IOTA0-iSlow169BE)&1023]) + -(fSlow170BE * fVec317SE[1]) + -(fConst6KI * fTemp79SE) /* Sum */);
			fVec318SE[0] = fVec317SE[0];
			fTemp80SE = (6.7063036f * fTemp8SE); // step: 1601
			fVec321SE[IOTA0&63] = (fTemp80SE + (fSlow12BE * fVec320SE[1]) /* Sum */);
			fTemp81SE = fVec324SE[2]; // step: 1620
			fVec323SE[0] = ((fSlow171BE * fVec321SE[(IOTA0-iSlow172BE)&63]) + -(fSlow173BE * fVec323SE[1]) + -(fConst6KI * fTemp81SE) /* Sum */);
			fVec324SE[0] = fVec323SE[0];
			fVec327SE[IOTA0&63] = ((fSlow12BE * fVec326SE[1]) + fTemp80SE /* Sum */);
			fTemp82SE = fVec330SE[2]; // step: 1647
			fVec329SE[0] = ((fSlow174BE * fVec327SE[(IOTA0-iSlow175BE)&63]) + -(fSlow176BE * fVec329SE[1]) + -(fConst6KI * fTemp82SE) /* Sum */);
			fVec330SE[0] = fVec329SE[0];
			fTemp83SE = (1.7063034f * fTemp8SE); // step: 1657
			fVec333SE[IOTA0&63] = (fTemp83SE + (fSlow12BE * fVec332SE[1]) /* Sum */);
			fTemp84SE = fVec336SE[2]; // step: 1676
			fVec335SE[0] = ((fSlow177BE * fVec333SE[(IOTA0-iSlow178BE)&63]) + -(fSlow179BE * fVec335SE[1]) + -(fConst6KI * fTemp84SE) /* Sum */);
			fVec336SE[0] = fVec335SE[0];
			fVec339SE[IOTA0&63] = ((fSlow12BE * fVec338SE[1]) + fTemp83SE /* Sum */);
			fTemp85SE = fVec342SE[2]; // step: 1704
			fVec341SE[0] = ((fSlow180BE * fVec339SE[(IOTA0-iSlow181BE)&63]) + -(fSlow182BE * fVec341SE[1]) + -(fConst6KI * fTemp85SE) /* Sum */);
			fVec342SE[0] = fVec341SE[0];
			fTemp86SE = (5.0063033f * fTemp8SE); // step: 1713
			fVec345SE[IOTA0&127] = (fTemp86SE + (fSlow12BE * fVec344SE[1]) /* Sum */);
			fTemp87SE = fVec348SE[2]; // step: 1732
			fVec347SE[0] = ((fSlow183BE * fVec345SE[(IOTA0-iSlow184BE)&127]) + -(fSlow185BE * fVec347SE[1]) + -(fConst6KI * fTemp87SE) /* Sum */);
			fVec348SE[0] = fVec347SE[0];
			fVec351SE[IOTA0&127] = ((fSlow12BE * fVec350SE[1]) + fTemp86SE /* Sum */);
			fTemp88SE = fVec354SE[2]; // step: 1759
			fVec353SE[0] = ((fSlow186BE * fVec351SE[(IOTA0-iSlow187BE)&127]) + -(fSlow188BE * fVec353SE[1]) + -(fConst6KI * fTemp88SE) /* Sum */);
			fVec354SE[0] = fVec353SE[0];
			fTemp89SE = (2.0914886f * fTemp8SE); // step: 1769
			fVec357SE[IOTA0&255] = (fTemp89SE + (fSlow12BE * fVec356SE[1]) /* Sum */);
			fTemp90SE = fVec360SE[2]; // step: 1788
			fVec359SE[0] = ((fSlow189BE * fVec357SE[(IOTA0-iSlow190BE)&255]) + -(fSlow191BE * fVec359SE[1]) + -(fConst6KI * fTemp90SE) /* Sum */);
			fVec360SE[0] = fVec359SE[0];
			fVec363SE[IOTA0&255] = ((fSlow12BE * fVec362SE[1]) + fTemp89SE /* Sum */);
			fTemp91SE = fVec366SE[2]; // step: 1816
			fVec365SE[0] = ((fSlow192BE * fVec363SE[(IOTA0-iSlow193BE)&255]) + -(fSlow194BE * fVec365SE[1]) + -(fConst6KI * fTemp91SE) /* Sum */);
			fVec366SE[0] = fVec365SE[0];
			fTemp92SE = (2.1900356f * fTemp8SE); // step: 1826
			fVec369SE[IOTA0&1023] = (fTemp92SE + (fSlow12BE * fVec368SE[1]) /* Sum */);
			fTemp93SE = fVec372SE[2]; // step: 1845
			fVec371SE[0] = ((fSlow195BE * fVec369SE[(IOTA0-iSlow196BE)&1023]) + -(fSlow197BE * fVec371SE[1]) + -(fConst6KI * fTemp93SE) /* Sum */);
			fVec372SE[0] = fVec371SE[0];
			fVec375SE[IOTA0&1023] = ((fSlow12BE * fVec374SE[1]) + fTemp92SE /* Sum */);
			fTemp94SE = fVec378SE[2]; // step: 1873
			fVec377SE[0] = ((fSlow198BE * fVec375SE[(IOTA0-iSlow199BE)&1023]) + -(fSlow200BE * fVec377SE[1]) + -(fConst6KI * fTemp94SE) /* Sum */);
			fVec378SE[0] = fVec377SE[0];
			fTemp95SE = (6.7063036f * fTemp10SE); // step: 1882
			fVec381SE[IOTA0&63] = (fTemp95SE + (fSlow12BE * fVec380SE[1]) /* Sum */);
			fTemp96SE = fVec384SE[2]; // step: 1901
			fVec383SE[0] = ((fSlow201BE * fVec381SE[(IOTA0-iSlow202BE)&63]) + -(fSlow203BE * fVec383SE[1]) + -(fConst6KI * fTemp96SE) /* Sum */);
			fVec384SE[0] = fVec383SE[0];
			fVec387SE[IOTA0&63] = ((fSlow12BE * fVec386SE[1]) + fTemp95SE /* Sum */);
			fTemp97SE = fVec390SE[2]; // step: 1928
			fVec389SE[0] = ((fSlow204BE * fVec387SE[(IOTA0-iSlow205BE)&63]) + -(fSlow206BE * fVec389SE[1]) + -(fConst6KI * fTemp97SE) /* Sum */);
			fVec390SE[0] = fVec389SE[0];
			fTemp98SE = (1.7063034f * fTemp10SE); // step: 1938
			fVec393SE[IOTA0&63] = (fTemp98SE + (fSlow12BE * fVec392SE[1]) /* Sum */);
			fTemp99SE = fVec396SE[2]; // step: 1957
			fVec395SE[0] = ((fSlow207BE * fVec393SE[(IOTA0-iSlow208BE)&63]) + -(fSlow209BE * fVec395SE[1]) + -(fConst6KI * fTemp99SE) /* Sum */);
			fVec396SE[0] = fVec395SE[0];
			fVec399SE[IOTA0&63] = ((fSlow12BE * fVec398SE[1]) + fTemp98SE /* Sum */);
			fTemp100SE = fVec402SE[2]; // step: 1985
			fVec401SE[0] = ((fSlow210BE * fVec399SE[(IOTA0-iSlow211BE)&63]) + -(fSlow212BE * fVec401SE[1]) + -(fConst6KI * fTemp100SE) /* Sum */);
			fVec402SE[0] = fVec401SE[0];
			fTemp101SE = (5.0063033f * fTemp10SE); // step: 1994
			fVec405SE[IOTA0&127] = (fTemp101SE + (fSlow12BE * fVec404SE[1]) /* Sum */);
			fTemp102SE = fVec408SE[2]; // step: 2013
			fVec407SE[0] = ((fSlow213BE * fVec405SE[(IOTA0-iSlow214BE)&127]) + -(fSlow215BE * fVec407SE[1]) + -(fConst6KI * fTemp102SE) /* Sum */);
			fVec408SE[0] = fVec407SE[0];
			fVec411SE[IOTA0&127] = ((fSlow12BE * fVec410SE[1]) + fTemp101SE /* Sum */);
			fTemp103SE = fVec414SE[2]; // step: 2040
			fVec413SE[0] = ((fSlow216BE * fVec411SE[(IOTA0-iSlow217BE)&127]) + -(fSlow218BE * fVec413SE[1]) + -(fConst6KI * fTemp103SE) /* Sum */);
			fVec414SE[0] = fVec413SE[0];
			fTemp104SE = (2.0914886f * fTemp10SE); // step: 2050
			fVec417SE[IOTA0&255] = (fTemp104SE + (fSlow12BE * fVec416SE[1]) /* Sum */);
			fTemp105SE = fVec420SE[2]; // step: 2069
			fVec419SE[0] = ((fSlow219BE * fVec417SE[(IOTA0-iSlow220BE)&255]) + -(fSlow221BE * fVec419SE[1]) + -(fConst6KI * fTemp105SE) /* Sum */);
			fVec420SE[0] = fVec419SE[0];
			fVec423SE[IOTA0&255] = ((fSlow12BE * fVec422SE[1]) + fTemp104SE /* Sum */);
			fTemp106SE = fVec426SE[2]; // step: 2097
			fVec425SE[0] = ((fSlow222BE * fVec423SE[(IOTA0-iSlow223BE)&255]) + -(fSlow224BE * fVec425SE[1]) + -(fConst6KI * fTemp106SE) /* Sum */);
			fVec426SE[0] = fVec425SE[0];
			fTemp107SE = (2.1900356f * fTemp10SE); // step: 2107
			fVec429SE[IOTA0&1023] = (fTemp107SE + (fSlow12BE * fVec428SE[1]) /* Sum */);
			fTemp108SE = fVec432SE[2]; // step: 2126
			fVec431SE[0] = ((fSlow225BE * fVec429SE[(IOTA0-iSlow226BE)&1023]) + -(fSlow227BE * fVec431SE[1]) + -(fConst6KI * fTemp108SE) /* Sum */);
			fVec432SE[0] = fVec431SE[0];
			fVec435SE[IOTA0&1023] = ((fSlow12BE * fVec434SE[1]) + fTemp107SE /* Sum */);
			fTemp109SE = fVec438SE[2]; // step: 2154
			fVec437SE[0] = ((fSlow228BE * fVec435SE[(IOTA0-iSlow229BE)&1023]) + -(fSlow230BE * fVec437SE[1]) + -(fConst6KI * fTemp109SE) /* Sum */);
			fVec438SE[0] = fVec437SE[0];
			fTemp110SE = (6.7063036f * fTemp12SE); // step: 2163
			fVec441SE[IOTA0&63] = (fTemp110SE + (fSlow12BE * fVec440SE[1]) /* Sum */);
			fTemp111SE = fVec444SE[2]; // step: 2182
			fVec443SE[0] = ((fSlow231BE * fVec441SE[(IOTA0-iSlow232BE)&63]) + -(fSlow233BE * fVec443SE[1]) + -(fConst6KI * fTemp111SE) /* Sum */);
			fVec444SE[0] = fVec443SE[0];
			fVec447SE[IOTA0&63] = ((fSlow12BE * fVec446SE[1]) + fTemp110SE /* Sum */);
			fTemp112SE = fVec450SE[2]; // step: 2209
			fVec449SE[0] = ((fSlow234BE * fVec447SE[(IOTA0-iSlow235BE)&63]) + -(fSlow236BE * fVec449SE[1]) + -(fConst6KI * fTemp112SE) /* Sum */);
			fVec450SE[0] = fVec449SE[0];
			fTemp113SE = (1.7063034f * fTemp12SE); // step: 2219
			fVec453SE[IOTA0&63] = (fTemp113SE + (fSlow12BE * fVec452SE[1]) /* Sum */);
			fTemp114SE = fVec456SE[2]; // step: 2238
			fVec455SE[0] = ((fSlow237BE * fVec453SE[(IOTA0-iSlow238BE)&63]) + -(fSlow239BE * fVec455SE[1]) + -(fConst6KI * fTemp114SE) /* Sum */);
			fVec456SE[0] = fVec455SE[0];
			fVec459SE[IOTA0&63] = ((fSlow12BE * fVec458SE[1]) + fTemp113SE /* Sum */);
			fTemp115SE = fVec462SE[2]; // step: 2266
			fVec461SE[0] = ((fSlow240BE * fVec459SE[(IOTA0-iSlow241BE)&63]) + -(fSlow242BE * fVec461SE[1]) + -(fConst6KI * fTemp115SE) /* Sum */);
			fVec462SE[0] = fVec461SE[0];
			fTemp116SE = (5.0063033f * fTemp12SE); // step: 2275
			fVec465SE[IOTA0&127] = (fTemp116SE + (fSlow12BE * fVec464SE[1]) /* Sum */);
			fTemp117SE = fVec468SE[2]; // step: 2294
			fVec467SE[0] = ((fSlow243BE * fVec465SE[(IOTA0-iSlow244BE)&127]) + -(fSlow245BE * fVec467SE[1]) + -(fConst6KI * fTemp117SE) /* Sum */);
			fVec468SE[0] = fVec467SE[0];
			fVec471SE[IOTA0&127] = ((fSlow12BE * fVec470SE[1]) + fTemp116SE /* Sum */);
			fTemp118SE = fVec474SE[2]; // step: 2321
			fVec473SE[0] = ((fSlow246BE * fVec471SE[(IOTA0-iSlow247BE)&127]) + -(fSlow248BE * fVec473SE[1]) + -(fConst6KI * fTemp118SE) /* Sum */);
			fVec474SE[0] = fVec473SE[0];
			fTemp119SE = (2.0914886f * fTemp12SE); // step: 2331
			fVec477SE[IOTA0&255] = (fTemp119SE + (fSlow12BE * fVec476SE[1]) /* Sum */);
			fTemp120SE = fVec480SE[2]; // step: 2350
			fVec479SE[0] = ((fSlow249BE * fVec477SE[(IOTA0-iSlow250BE)&255]) + -(fSlow251BE * fVec479SE[1]) + -(fConst6KI * fTemp120SE) /* Sum */);
			fVec480SE[0] = fVec479SE[0];
			fVec483SE[IOTA0&255] = ((fSlow12BE * fVec482SE[1]) + fTemp119SE /* Sum */);
			fTemp121SE = fVec486SE[2]; // step: 2378
			fVec485SE[0] = ((fSlow252BE * fVec483SE[(IOTA0-iSlow253BE)&255]) + -(fSlow254BE * fVec485SE[1]) + -(fConst6KI * fTemp121SE) /* Sum */);
			fVec486SE[0] = fVec485SE[0];
			fTemp122SE = (2.1900356f * fTemp12SE); // step: 2388
			fVec489SE[IOTA0&1023] = (fTemp122SE + (fSlow12BE * fVec488SE[1]) /* Sum */);
			fTemp123SE = fVec492SE[2]; // step: 2407
			fVec491SE[0] = ((fSlow255BE * fVec489SE[(IOTA0-iSlow256BE)&1023]) + -(fSlow257BE * fVec491SE[1]) + -(fConst6KI * fTemp123SE) /* Sum */);
			fVec492SE[0] = fVec491SE[0];
			fVec495SE[IOTA0&1023] = ((fSlow12BE * fVec494SE[1]) + fTemp122SE /* Sum */);
			fTemp124SE = fVec498SE[2]; // step: 2435
			fVec497SE[0] = ((fSlow258BE * fVec495SE[(IOTA0-iSlow259BE)&1023]) + -(fSlow260BE * fVec497SE[1]) + -(fConst6KI * fTemp124SE) /* Sum */);
			fVec498SE[0] = fVec497SE[0];
			fTemp125SE = (6.7063036f * fTemp14SE); // step: 2444
			fVec501SE[IOTA0&63] = (fTemp125SE + (fSlow12BE * fVec500SE[1]) /* Sum */);
			fTemp126SE = fVec504SE[2]; // step: 2463
			fVec503SE[0] = ((fSlow261BE * fVec501SE[(IOTA0-iSlow262BE)&63]) + -(fSlow263BE * fVec503SE[1]) + -(fConst6KI * fTemp126SE) /* Sum */);
			fVec504SE[0] = fVec503SE[0];
			fVec507SE[IOTA0&63] = ((fSlow12BE * fVec506SE[1]) + fTemp125SE /* Sum */);
			fTemp127SE = fVec510SE[2]; // step: 2490
			fVec509SE[0] = ((fSlow264BE * fVec507SE[(IOTA0-iSlow265BE)&63]) + -(fSlow266BE * fVec509SE[1]) + -(fConst6KI * fTemp127SE) /* Sum */);
			fVec510SE[0] = fVec509SE[0];
			fTemp128SE = (1.7063034f * fTemp14SE); // step: 2500
			fVec513SE[IOTA0&63] = (fTemp128SE + (fSlow12BE * fVec512SE[1]) /* Sum */);
			fTemp129SE = fVec516SE[2]; // step: 2519
			fVec515SE[0] = ((fSlow267BE * fVec513SE[(IOTA0-iSlow268BE)&63]) + -(fSlow269BE * fVec515SE[1]) + -(fConst6KI * fTemp129SE) /* Sum */);
			fVec516SE[0] = fVec515SE[0];
			fVec519SE[IOTA0&63] = ((fSlow12BE * fVec518SE[1]) + fTemp128SE /* Sum */);
			fTemp130SE = fVec522SE[2]; // step: 2547
			fVec521SE[0] = ((fSlow270BE * fVec519SE[(IOTA0-iSlow271BE)&63]) + -(fSlow272BE * fVec521SE[1]) + -(fConst6KI * fTemp130SE) /* Sum */);
			fVec522SE[0] = fVec521SE[0];
			fTemp131SE = (5.0063033f * fTemp14SE); // step: 2556
			fVec525SE[IOTA0&127] = (fTemp131SE + (fSlow12BE * fVec524SE[1]) /* Sum */);
			fTemp132SE = fVec528SE[2]; // step: 2575
			fVec527SE[0] = ((fSlow273BE * fVec525SE[(IOTA0-iSlow274BE)&127]) + -(fSlow275BE * fVec527SE[1]) + -(fConst6KI * fTemp132SE) /* Sum */);
			fVec528SE[0] = fVec527SE[0];
			fVec531SE[IOTA0&127] = ((fSlow12BE * fVec530SE[1]) + fTemp131SE /* Sum */);
			fTemp133SE = fVec534SE[2]; // step: 2602
			fVec533SE[0] = ((fSlow276BE * fVec531SE[(IOTA0-iSlow277BE)&127]) + -(fSlow278BE * fVec533SE[1]) + -(fConst6KI * fTemp133SE) /* Sum */);
			fVec534SE[0] = fVec533SE[0];
			fTemp134SE = (2.0914886f * fTemp14SE); // step: 2612
			fVec537SE[IOTA0&255] = (fTemp134SE + (fSlow12BE * fVec536SE[1]) /* Sum */);
			fTemp135SE = fVec540SE[2]; // step: 2631
			fVec539SE[0] = ((fSlow279BE * fVec537SE[(IOTA0-iSlow280BE)&255]) + -(fSlow281BE * fVec539SE[1]) + -(fConst6KI * fTemp135SE) /* Sum */);
			fVec540SE[0] = fVec539SE[0];
			fVec543SE[IOTA0&255] = ((fSlow12BE * fVec542SE[1]) + fTemp134SE /* Sum */);
			fTemp136SE = fVec546SE[2]; // step: 2659
			fVec545SE[0] = ((fSlow282BE * fVec543SE[(IOTA0-iSlow283BE)&255]) + -(fSlow284BE * fVec545SE[1]) + -(fConst6KI * fTemp136SE) /* Sum */);
			fVec546SE[0] = fVec545SE[0];
			fTemp137SE = (2.1900356f * fTemp14SE); // step: 2669
			fVec549SE[IOTA0&1023] = (fTemp137SE + (fSlow12BE * fVec548SE[1]) /* Sum */);
			fTemp138SE = fVec552SE[2]; // step: 2688
			fVec551SE[0] = ((fSlow285BE * fVec549SE[(IOTA0-iSlow286BE)&1023]) + -(fSlow287BE * fVec551SE[1]) + -(fConst6KI * fTemp138SE) /* Sum */);
			fVec552SE[0] = fVec551SE[0];
			fVec555SE[IOTA0&1023] = ((fSlow12BE * fVec554SE[1]) + fTemp137SE /* Sum */);
			fTemp139SE = fVec558SE[2]; // step: 2716
			fVec557SE[0] = ((fSlow288BE * fVec555SE[(IOTA0-iSlow289BE)&1023]) + -(fSlow290BE * fVec557SE[1]) + -(fConst6KI * fTemp139SE) /* Sum */);
			fVec558SE[0] = fVec557SE[0];
			fTemp140SE = (6.7063036f * fTemp18SE); // step: 2725
			fVec561SE[IOTA0&63] = (fTemp140SE + (fSlow12BE * fVec560SE[1]) /* Sum */);
			fTemp141SE = fVec564SE[2]; // step: 2744
			fVec563SE[0] = ((fSlow291BE * fVec561SE[(IOTA0-iSlow292BE)&63]) + -(fSlow293BE * fVec563SE[1]) + -(fConst6KI * fTemp141SE) /* Sum */);
			fVec564SE[0] = fVec563SE[0];
			fVec567SE[IOTA0&63] = ((fSlow12BE * fVec566SE[1]) + fTemp140SE /* Sum */);
			fTemp142SE = fVec570SE[2]; // step: 2771
			fVec569SE[0] = ((fSlow294BE * fVec567SE[(IOTA0-iSlow295BE)&63]) + -(fSlow296BE * fVec569SE[1]) + -(fConst6KI * fTemp142SE) /* Sum */);
			fVec570SE[0] = fVec569SE[0];
			fTemp143SE = (1.7063034f * fTemp18SE); // step: 2781
			fVec573SE[IOTA0&63] = (fTemp143SE + (fSlow12BE * fVec572SE[1]) /* Sum */);
			fTemp144SE = fVec576SE[2]; // step: 2800
			fVec575SE[0] = ((fSlow297BE * fVec573SE[(IOTA0-iSlow298BE)&63]) + -(fSlow299BE * fVec575SE[1]) + -(fConst6KI * fTemp144SE) /* Sum */);
			fVec576SE[0] = fVec575SE[0];
			fVec579SE[IOTA0&63] = ((fSlow12BE * fVec578SE[1]) + fTemp143SE /* Sum */);
			fTemp145SE = fVec582SE[2]; // step: 2828
			fVec581SE[0] = ((fSlow300BE * fVec579SE[(IOTA0-iSlow301BE)&63]) + -(fSlow302BE * fVec581SE[1]) + -(fConst6KI * fTemp145SE) /* Sum */);
			fVec582SE[0] = fVec581SE[0];
			fTemp146SE = (5.0063033f * fTemp18SE); // step: 2837
			fVec585SE[IOTA0&127] = (fTemp146SE + (fSlow12BE * fVec584SE[1]) /* Sum */);
			fTemp147SE = fVec588SE[2]; // step: 2856
			fVec587SE[0] = ((fSlow303BE * fVec585SE[(IOTA0-iSlow304BE)&127]) + -(fSlow305BE * fVec587SE[1]) + -(fConst6KI * fTemp147SE) /* Sum */);
			fVec588SE[0] = fVec587SE[0];
			fVec591SE[IOTA0&127] = ((fSlow12BE * fVec590SE[1]) + fTemp146SE /* Sum */);
			fTemp148SE = fVec594SE[2]; // step: 2883
			fVec593SE[0] = ((fSlow306BE * fVec591SE[(IOTA0-iSlow307BE)&127]) + -(fSlow308BE * fVec593SE[1]) + -(fConst6KI * fTemp148SE) /* Sum */);
			fVec594SE[0] = fVec593SE[0];
			fTemp149SE = (2.0914886f * fTemp18SE); // step: 2893
			fVec597SE[IOTA0&255] = (fTemp149SE + (fSlow12BE * fVec596SE[1]) /* Sum */);
			fTemp150SE = fVec600SE[2]; // step: 2912
			fVec599SE[0] = ((fSlow309BE * fVec597SE[(IOTA0-iSlow310BE)&255]) + -(fSlow311BE * fVec599SE[1]) + -(fConst6KI * fTemp150SE) /* Sum */);
			fVec600SE[0] = fVec599SE[0];
			fVec603SE[IOTA0&255] = ((fSlow12BE * fVec602SE[1]) + fTemp149SE /* Sum */);
			fTemp151SE = fVec606SE[2]; // step: 2940
			fVec605SE[0] = ((fSlow312BE * fVec603SE[(IOTA0-iSlow313BE)&255]) + -(fSlow314BE * fVec605SE[1]) + -(fConst6KI * fTemp151SE) /* Sum */);
			fVec606SE[0] = fVec605SE[0];
			fTemp152SE = (2.1900356f * fTemp18SE); // step: 2950
			fVec609SE[IOTA0&1023] = (fTemp152SE + (fSlow12BE * fVec608SE[1]) /* Sum */);
			fTemp153SE = fVec612SE[2]; // step: 2969
			fVec611SE[0] = ((fSlow315BE * fVec609SE[(IOTA0-iSlow316BE)&1023]) + -(fSlow317BE * fVec611SE[1]) + -(fConst6KI * fTemp153SE) /* Sum */);
			fVec612SE[0] = fVec611SE[0];
			fVec615SE[IOTA0&1023] = ((fSlow12BE * fVec614SE[1]) + fTemp152SE /* Sum */);
			fTemp154SE = fVec618SE[2]; // step: 2997
			fVec617SE[0] = ((fSlow318BE * fVec615SE[(IOTA0-iSlow319BE)&1023]) + -(fSlow320BE * fVec617SE[1]) + -(fConst6KI * fTemp154SE) /* Sum */);
			fVec618SE[0] = fVec617SE[0];
			fTemp155SE = (6.7063036f * fTemp16SE); // step: 3006
			fVec621SE[IOTA0&63] = (fTemp155SE + (fSlow12BE * fVec620SE[1]) /* Sum */);
			fTemp156SE = fVec624SE[2]; // step: 3025
			fVec623SE[0] = ((fSlow321BE * fVec621SE[(IOTA0-iSlow322BE)&63]) + -(fSlow323BE * fVec623SE[1]) + -(fConst6KI * fTemp156SE) /* Sum */);
			fVec624SE[0] = fVec623SE[0];
			fVec627SE[IOTA0&63] = ((fSlow12BE * fVec626SE[1]) + fTemp155SE /* Sum */);
			fTemp157SE = fVec630SE[2]; // step: 3052
			fVec629SE[0] = ((fSlow324BE * fVec627SE[(IOTA0-iSlow325BE)&63]) + -(fSlow326BE * fVec629SE[1]) + -(fConst6KI * fTemp157SE) /* Sum */);
			fVec630SE[0] = fVec629SE[0];
			fTemp158SE = (1.7063034f * fTemp16SE); // step: 3062
			fVec633SE[IOTA0&63] = (fTemp158SE + (fSlow12BE * fVec632SE[1]) /* Sum */);
			fTemp159SE = fVec636SE[2]; // step: 3081
			fVec635SE[0] = ((fSlow327BE * fVec633SE[(IOTA0-iSlow328BE)&63]) + -(fSlow329BE * fVec635SE[1]) + -(fConst6KI * fTemp159SE) /* Sum */);
			fVec636SE[0] = fVec635SE[0];
			fVec639SE[IOTA0&63] = ((fSlow12BE * fVec638SE[1]) + fTemp158SE /* Sum */);
			fTemp160SE = fVec642SE[2]; // step: 3109
			fVec641SE[0] = ((fSlow330BE * fVec639SE[(IOTA0-iSlow331BE)&63]) + -(fSlow332BE * fVec641SE[1]) + -(fConst6KI * fTemp160SE) /* Sum */);
			fVec642SE[0] = fVec641SE[0];
			fTemp161SE = (5.0063033f * fTemp16SE); // step: 3118
			fVec645SE[IOTA0&127] = (fTemp161SE + (fSlow12BE * fVec644SE[1]) /* Sum */);
			fTemp162SE = fVec648SE[2]; // step: 3137
			fVec647SE[0] = ((fSlow333BE * fVec645SE[(IOTA0-iSlow334BE)&127]) + -(fSlow335BE * fVec647SE[1]) + -(fConst6KI * fTemp162SE) /* Sum */);
			fVec648SE[0] = fVec647SE[0];
			fTemp163SE = (2.1900356f * fTemp16SE); // step: 3147
			fVec651SE[IOTA0&1023] = ((fSlow12BE * fVec650SE[1]) + fTemp163SE /* Sum */);
			fTemp164SE = fVec654SE[2]; // step: 3166
			fVec653SE[0] = ((fSlow336BE * fVec651SE[(IOTA0-iSlow337BE)&1023]) + -(fSlow338BE * fVec653SE[1]) + -(fConst6KI * fTemp164SE) /* Sum */);
			fVec654SE[0] = fVec653SE[0];
			fVec657SE[IOTA0&1023] = (fTemp163SE + (fSlow12BE * fVec656SE[1]) /* Sum */);
			fTemp165SE = fVec660SE[2]; // step: 3194
			fVec659SE[0] = ((fSlow339BE * fVec657SE[(IOTA0-iSlow340BE)&1023]) + -(fSlow341BE * fVec659SE[1]) + -(fConst6KI * fTemp165SE) /* Sum */);
			fVec660SE[0] = fVec659SE[0];
			fTemp166SE = (2.0914886f * fTemp16SE); // step: 3204
			fVec663SE[IOTA0&255] = ((fSlow12BE * fVec662SE[1]) + fTemp166SE /* Sum */);
			fTemp167SE = fVec666SE[2]; // step: 3223
			fVec665SE[0] = ((fSlow342BE * fVec663SE[(IOTA0-iSlow343BE)&255]) + -(fSlow344BE * fVec665SE[1]) + -(fConst6KI * fTemp167SE) /* Sum */);
			fVec666SE[0] = fVec665SE[0];
			fVec669SE[IOTA0&255] = (fTemp166SE + (fSlow12BE * fVec668SE[1]) /* Sum */);
			fTemp168SE = fVec672SE[2]; // step: 3251
			fVec671SE[0] = ((fSlow345BE * fVec669SE[(IOTA0-iSlow346BE)&255]) + -(fSlow347BE * fVec671SE[1]) + -(fConst6KI * fTemp168SE) /* Sum */);
			fVec672SE[0] = fVec671SE[0];
			fVec675SE[IOTA0&127] = ((fSlow12BE * fVec674SE[1]) + fTemp161SE /* Sum */);
			fTemp169SE = fVec678SE[2]; // step: 3278
			fVec677SE[0] = ((fSlow348BE * fVec675SE[(IOTA0-iSlow349BE)&127]) + -(fSlow350BE * fVec677SE[1]) + -(fConst6KI * fTemp169SE) /* Sum */);
			fVec678SE[0] = fVec677SE[0];
			fVec11SE[0] = (fConst27KI * (fVec14SE[0] + -fTemp1SE /* Sum */));
			fVec18SE[0] = (fConst27KI * (fVec21SE[0] + -fTemp3SE /* Sum */));
			fVec25SE[0] = (fConst27KI * (fVec28SE[0] + -fTemp5SE /* Sum */));
			fVec32SE[0] = (fConst27KI * (fVec35SE[0] + -fTemp7SE /* Sum */));
			fVec39SE[0] = (fConst27KI * (fVec42SE[0] + -fTemp9SE /* Sum */));
			fVec46SE[0] = (fConst27KI * (fVec49SE[0] + -fTemp11SE /* Sum */));
			fVec53SE[0] = (fConst27KI * (fVec56SE[0] + -fTemp13SE /* Sum */));
			fVec60SE[0] = (fConst27KI * (fVec63SE[0] + -fTemp15SE /* Sum */));
			fVec67SE[0] = (fConst27KI * (fVec70SE[0] + -fTemp17SE /* Sum */));
			fVec74SE[0] = (fConst27KI * (fVec77SE[0] + -fTemp19SE /* Sum */));
			fVec80SE[0] = (fConst27KI * (fVec83SE[0] + -fTemp21SE /* Sum */));
			fVec86SE[0] = (fConst27KI * (fVec89SE[0] + -fTemp22SE /* Sum */));
			fVec92SE[0] = (fConst27KI * (fVec95SE[0] + -fTemp24SE /* Sum */));
			fVec98SE[0] = (fConst27KI * (fVec101SE[0] + -fTemp25SE /* Sum */));
			fVec104SE[0] = (fConst27KI * (fVec107SE[0] + -fTemp27SE /* Sum */));
			fVec110SE[0] = (fConst27KI * (fVec113SE[0] + -fTemp28SE /* Sum */));
			fVec116SE[0] = (fConst27KI * (fVec119SE[0] + -fTemp30SE /* Sum */));
			fVec122SE[0] = (fConst27KI * (fVec125SE[0] + -fTemp31SE /* Sum */));
			fVec128SE[0] = (fConst27KI * (fVec131SE[0] + -fTemp33SE /* Sum */));
			fVec134SE[0] = (fConst27KI * (fVec137SE[0] + -fTemp34SE /* Sum */));
			fVec140SE[0] = (fConst27KI * (fVec143SE[0] + -fTemp36SE /* Sum */));
			fVec146SE[0] = (fConst27KI * (fVec149SE[0] + -fTemp37SE /* Sum */));
			fVec152SE[0] = (fConst27KI * (fVec155SE[0] + -fTemp39SE /* Sum */));
			fVec158SE[0] = (fConst27KI * (fVec161SE[0] + -fTemp40SE /* Sum */));
			fVec164SE[0] = (fConst27KI * (fVec167SE[0] + -fTemp42SE /* Sum */));
			fVec170SE[0] = (fConst27KI * (fVec173SE[0] + -fTemp43SE /* Sum */));
			fVec176SE[0] = (fConst27KI * (fVec179SE[0] + -fTemp45SE /* Sum */));
			fVec182SE[0] = (fConst27KI * (fVec185SE[0] + -fTemp46SE /* Sum */));
			fVec188SE[0] = (fConst27KI * (fVec191SE[0] + -fTemp48SE /* Sum */));
			fVec194SE[0] = (fConst27KI * (fVec197SE[0] + -fTemp49SE /* Sum */));
			fVec200SE[0] = (fConst27KI * (fVec203SE[0] + -fTemp51SE /* Sum */));
			fVec206SE[0] = (fConst27KI * (fVec209SE[0] + -fTemp52SE /* Sum */));
			fVec212SE[0] = (fConst27KI * (fVec215SE[0] + -fTemp54SE /* Sum */));
			fVec218SE[0] = (fConst27KI * (fVec221SE[0] + -fTemp55SE /* Sum */));
			fVec224SE[0] = (fConst27KI * (fVec227SE[0] + -fTemp57SE /* Sum */));
			fVec230SE[0] = (fConst27KI * (fVec233SE[0] + -fTemp58SE /* Sum */));
			fVec236SE[0] = (fConst27KI * (fVec239SE[0] + -fTemp60SE /* Sum */));
			fVec242SE[0] = (fConst27KI * (fVec245SE[0] + -fTemp61SE /* Sum */));
			fVec248SE[0] = (fConst27KI * (fVec251SE[0] + -fTemp63SE /* Sum */));
			fVec254SE[0] = (fConst27KI * (fVec257SE[0] + -fTemp64SE /* Sum */));
			fVec260SE[0] = (fConst27KI * (fVec263SE[0] + -fTemp66SE /* Sum */));
			fVec266SE[0] = (fConst27KI * (fVec269SE[0] + -fTemp67SE /* Sum */));
			fVec272SE[0] = (fConst27KI * (fVec275SE[0] + -fTemp69SE /* Sum */));
			fVec278SE[0] = (fConst27KI * (fVec281SE[0] + -fTemp70SE /* Sum */));
			fVec284SE[0] = (fConst27KI * (fVec287SE[0] + -fTemp72SE /* Sum */));
			fVec290SE[0] = (fConst27KI * (fVec293SE[0] + -fTemp73SE /* Sum */));
			fVec296SE[0] = (fConst27KI * (fVec299SE[0] + -fTemp75SE /* Sum */));
			fVec302SE[0] = (fConst27KI * (fVec305SE[0] + -fTemp76SE /* Sum */));
			fVec308SE[0] = (fConst27KI * (fVec311SE[0] + -fTemp78SE /* Sum */));
			fVec314SE[0] = (fConst27KI * (fVec317SE[0] + -fTemp79SE /* Sum */));
			fVec320SE[0] = (fConst27KI * (fVec323SE[0] + -fTemp81SE /* Sum */));
			fVec326SE[0] = (fConst27KI * (fVec329SE[0] + -fTemp82SE /* Sum */));
			fVec332SE[0] = (fConst27KI * (fVec335SE[0] + -fTemp84SE /* Sum */));
			fVec338SE[0] = (fConst27KI * (fVec341SE[0] + -fTemp85SE /* Sum */));
			fVec344SE[0] = (fConst27KI * (fVec347SE[0] + -fTemp87SE /* Sum */));
			fVec350SE[0] = (fConst27KI * (fVec353SE[0] + -fTemp88SE /* Sum */));
			fVec356SE[0] = (fConst27KI * (fVec359SE[0] + -fTemp90SE /* Sum */));
			fVec362SE[0] = (fConst27KI * (fVec365SE[0] + -fTemp91SE /* Sum */));
			fVec368SE[0] = (fConst27KI * (fVec371SE[0] + -fTemp93SE /* Sum */));
			fVec374SE[0] = (fConst27KI * (fVec377SE[0] + -fTemp94SE /* Sum */));
			fVec380SE[0] = (fConst27KI * (fVec383SE[0] + -fTemp96SE /* Sum */));
			fVec386SE[0] = (fConst27KI * (fVec389SE[0] + -fTemp97SE /* Sum */));
			fVec392SE[0] = (fConst27KI * (fVec395SE[0] + -fTemp99SE /* Sum */));
			fVec398SE[0] = (fConst27KI * (fVec401SE[0] + -fTemp100SE /* Sum */));
			fVec404SE[0] = (fConst27KI * (fVec407SE[0] + -fTemp102SE /* Sum */));
			fVec410SE[0] = (fConst27KI * (fVec413SE[0] + -fTemp103SE /* Sum */));
			fVec416SE[0] = (fConst27KI * (fVec419SE[0] + -fTemp105SE /* Sum */));
			fVec422SE[0] = (fConst27KI * (fVec425SE[0] + -fTemp106SE /* Sum */));
			fVec428SE[0] = (fConst27KI * (fVec431SE[0] + -fTemp108SE /* Sum */));
			fVec434SE[0] = (fConst27KI * (fVec437SE[0] + -fTemp109SE /* Sum */));
			fVec440SE[0] = (fConst27KI * (fVec443SE[0] + -fTemp111SE /* Sum */));
			fVec446SE[0] = (fConst27KI * (fVec449SE[0] + -fTemp112SE /* Sum */));
			fVec452SE[0] = (fConst27KI * (fVec455SE[0] + -fTemp114SE /* Sum */));
			fVec458SE[0] = (fConst27KI * (fVec461SE[0] + -fTemp115SE /* Sum */));
			fVec464SE[0] = (fConst27KI * (fVec467SE[0] + -fTemp117SE /* Sum */));
			fVec470SE[0] = (fConst27KI * (fVec473SE[0] + -fTemp118SE /* Sum */));
			fVec476SE[0] = (fConst27KI * (fVec479SE[0] + -fTemp120SE /* Sum */));
			fVec482SE[0] = (fConst27KI * (fVec485SE[0] + -fTemp121SE /* Sum */));
			fVec488SE[0] = (fConst27KI * (fVec491SE[0] + -fTemp123SE /* Sum */));
			fVec494SE[0] = (fConst27KI * (fVec497SE[0] + -fTemp124SE /* Sum */));
			fVec500SE[0] = (fConst27KI * (fVec503SE[0] + -fTemp126SE /* Sum */));
			fVec506SE[0] = (fConst27KI * (fVec509SE[0] + -fTemp127SE /* Sum */));
			fVec512SE[0] = (fConst27KI * (fVec515SE[0] + -fTemp129SE /* Sum */));
			fVec518SE[0] = (fConst27KI * (fVec521SE[0] + -fTemp130SE /* Sum */));
			fVec524SE[0] = (fConst27KI * (fVec527SE[0] + -fTemp132SE /* Sum */));
			fVec530SE[0] = (fConst27KI * (fVec533SE[0] + -fTemp133SE /* Sum */));
			fVec536SE[0] = (fConst27KI * (fVec539SE[0] + -fTemp135SE /* Sum */));
			fVec542SE[0] = (fConst27KI * (fVec545SE[0] + -fTemp136SE /* Sum */));
			fVec548SE[0] = (fConst27KI * (fVec551SE[0] + -fTemp138SE /* Sum */));
			fVec554SE[0] = (fConst27KI * (fVec557SE[0] + -fTemp139SE /* Sum */));
			fVec560SE[0] = (fConst27KI * (fVec563SE[0] + -fTemp141SE /* Sum */));
			fVec566SE[0] = (fConst27KI * (fVec569SE[0] + -fTemp142SE /* Sum */));
			fVec572SE[0] = (fConst27KI * (fVec575SE[0] + -fTemp144SE /* Sum */));
			fVec578SE[0] = (fConst27KI * (fVec581SE[0] + -fTemp145SE /* Sum */));
			fVec584SE[0] = (fConst27KI * (fVec587SE[0] + -fTemp147SE /* Sum */));
			fVec590SE[0] = (fConst27KI * (fVec593SE[0] + -fTemp148SE /* Sum */));
			fVec596SE[0] = (fConst27KI * (fVec599SE[0] + -fTemp150SE /* Sum */));
			fVec602SE[0] = (fConst27KI * (fVec605SE[0] + -fTemp151SE /* Sum */));
			fVec608SE[0] = (fConst27KI * (fVec611SE[0] + -fTemp153SE /* Sum */));
			fVec614SE[0] = (fConst27KI * (fVec617SE[0] + -fTemp154SE /* Sum */));
			fVec620SE[0] = (fConst27KI * (fVec623SE[0] + -fTemp156SE /* Sum */));
			fVec626SE[0] = (fConst27KI * (fVec629SE[0] + -fTemp157SE /* Sum */));
			fVec632SE[0] = (fConst27KI * (fVec635SE[0] + -fTemp159SE /* Sum */));
			fVec638SE[0] = (fConst27KI * (fVec641SE[0] + -fTemp160SE /* Sum */));
			fVec644SE[0] = (fConst27KI * (fVec647SE[0] + -fTemp162SE /* Sum */));
			fVec650SE[0] = (fConst27KI * (fVec653SE[0] + -fTemp164SE /* Sum */));
			fVec656SE[0] = (fConst27KI * (fVec659SE[0] + -fTemp165SE /* Sum */));
			fVec662SE[0] = (fConst27KI * (fVec665SE[0] + -fTemp167SE /* Sum */));
			fVec668SE[0] = (fConst27KI * (fVec671SE[0] + -fTemp168SE /* Sum */));
			fVec674SE[0] = (fConst27KI * (fVec677SE[0] + -fTemp169SE /* Sum */));
			output0[i] = (FAUSTFLOAT)(((2.0f * (fVec11SE[0] + fVec18SE[0] + fVec25SE[0] + fVec32SE[0] + fVec39SE[0] + fVec46SE[0] + fVec53SE[0] + fVec60SE[0] + fVec67SE[0] + fVec74SE[0] /* Sum */)) + fVec80SE[0] + fVec86SE[0] + fVec92SE[0] + fVec98SE[0] + fVec104SE[0] + fVec110SE[0] + fVec116SE[0] + fVec122SE[0] + fVec128SE[0] + fVec134SE[0] + fVec140SE[0] + fVec146SE[0] + fVec152SE[0] + fVec158SE[0] + fVec164SE[0] + fVec170SE[0] + fVec176SE[0] + fVec182SE[0] + fVec188SE[0] + fVec194SE[0] + fVec200SE[0] + fVec206SE[0] + fVec212SE[0] + fVec218SE[0] + fVec224SE[0] + fVec230SE[0] + fVec236SE[0] + fVec242SE[0] + fVec248SE[0] + fVec254SE[0] + fVec260SE[0] + fVec266SE[0] + fVec272SE[0] + fVec278SE[0] + fVec284SE[0] + fVec290SE[0] + fVec296SE[0] + fVec302SE[0] + fVec308SE[0] + fVec314SE[0] + fVec320SE[0] + fVec326SE[0] + fVec332SE[0] + fVec338SE[0] + fVec344SE[0] + fVec350SE[0] + fVec356SE[0] + fVec362SE[0] + fVec368SE[0] + fVec374SE[0] + fVec380SE[0] + fVec386SE[0] + fVec392SE[0] + fVec398SE[0] + fVec404SE[0] + fVec410SE[0] + fVec416SE[0] + fVec422SE[0] + fVec428SE[0] + fVec434SE[0] + fVec440SE[0] + fVec446SE[0] + fVec452SE[0] + fVec458SE[0] + fVec464SE[0] + fVec470SE[0] + fVec476SE[0] + fVec482SE[0] + fVec488SE[0] + fVec494SE[0] + fVec500SE[0] + fVec506SE[0] + fVec512SE[0] + fVec518SE[0] + fVec524SE[0] + fVec530SE[0] + fVec536SE[0] + fVec542SE[0] + fVec548SE[0] + fVec554SE[0] + fVec560SE[0] + fVec566SE[0] + fVec572SE[0] + fVec578SE[0] + fVec584SE[0] + fVec590SE[0] + fVec596SE[0] + fVec602SE[0] + fVec608SE[0] + fVec614SE[0] + fVec620SE[0] + fVec626SE[0] + fVec632SE[0] + fVec638SE[0] + fVec644SE[0] + fVec650SE[0] + fVec656SE[0] + fVec662SE[0] + fVec668SE[0] + fVec674SE[0] /* Sum */));  // Zone Exec Code
			// post processing
			fVec674SE[1] = fVec674SE[0];
			fVec668SE[1] = fVec668SE[0];
			fVec662SE[1] = fVec662SE[0];
			fVec656SE[1] = fVec656SE[0];
			fVec650SE[1] = fVec650SE[0];
			fVec644SE[1] = fVec644SE[0];
			fVec638SE[1] = fVec638SE[0];
			fVec632SE[1] = fVec632SE[0];
			fVec626SE[1] = fVec626SE[0];
			fVec620SE[1] = fVec620SE[0];
			fVec614SE[1] = fVec614SE[0];
			fVec608SE[1] = fVec608SE[0];
			fVec602SE[1] = fVec602SE[0];
			fVec596SE[1] = fVec596SE[0];
			fVec590SE[1] = fVec590SE[0];
			fVec584SE[1] = fVec584SE[0];
			fVec578SE[1] = fVec578SE[0];
			fVec572SE[1] = fVec572SE[0];
			fVec566SE[1] = fVec566SE[0];
			fVec560SE[1] = fVec560SE[0];
			fVec554SE[1] = fVec554SE[0];
			fVec548SE[1] = fVec548SE[0];
			fVec542SE[1] = fVec542SE[0];
			fVec536SE[1] = fVec536SE[0];
			fVec530SE[1] = fVec530SE[0];
			fVec524SE[1] = fVec524SE[0];
			fVec518SE[1] = fVec518SE[0];
			fVec512SE[1] = fVec512SE[0];
			fVec506SE[1] = fVec506SE[0];
			fVec500SE[1] = fVec500SE[0];
			fVec494SE[1] = fVec494SE[0];
			fVec488SE[1] = fVec488SE[0];
			fVec482SE[1] = fVec482SE[0];
			fVec476SE[1] = fVec476SE[0];
			fVec470SE[1] = fVec470SE[0];
			fVec464SE[1] = fVec464SE[0];
			fVec458SE[1] = fVec458SE[0];
			fVec452SE[1] = fVec452SE[0];
			fVec446SE[1] = fVec446SE[0];
			fVec440SE[1] = fVec440SE[0];
			fVec434SE[1] = fVec434SE[0];
			fVec428SE[1] = fVec428SE[0];
			fVec422SE[1] = fVec422SE[0];
			fVec416SE[1] = fVec416SE[0];
			fVec410SE[1] = fVec410SE[0];
			fVec404SE[1] = fVec404SE[0];
			fVec398SE[1] = fVec398SE[0];
			fVec392SE[1] = fVec392SE[0];
			fVec386SE[1] = fVec386SE[0];
			fVec380SE[1] = fVec380SE[0];
			fVec374SE[1] = fVec374SE[0];
			fVec368SE[1] = fVec368SE[0];
			fVec362SE[1] = fVec362SE[0];
			fVec356SE[1] = fVec356SE[0];
			fVec350SE[1] = fVec350SE[0];
			fVec344SE[1] = fVec344SE[0];
			fVec338SE[1] = fVec338SE[0];
			fVec332SE[1] = fVec332SE[0];
			fVec326SE[1] = fVec326SE[0];
			fVec320SE[1] = fVec320SE[0];
			fVec314SE[1] = fVec314SE[0];
			fVec308SE[1] = fVec308SE[0];
			fVec302SE[1] = fVec302SE[0];
			fVec296SE[1] = fVec296SE[0];
			fVec290SE[1] = fVec290SE[0];
			fVec284SE[1] = fVec284SE[0];
			fVec278SE[1] = fVec278SE[0];
			fVec272SE[1] = fVec272SE[0];
			fVec266SE[1] = fVec266SE[0];
			fVec260SE[1] = fVec260SE[0];
			fVec254SE[1] = fVec254SE[0];
			fVec248SE[1] = fVec248SE[0];
			fVec242SE[1] = fVec242SE[0];
			fVec236SE[1] = fVec236SE[0];
			fVec230SE[1] = fVec230SE[0];
			fVec224SE[1] = fVec224SE[0];
			fVec218SE[1] = fVec218SE[0];
			fVec212SE[1] = fVec212SE[0];
			fVec206SE[1] = fVec206SE[0];
			fVec200SE[1] = fVec200SE[0];
			fVec194SE[1] = fVec194SE[0];
			fVec188SE[1] = fVec188SE[0];
			fVec182SE[1] = fVec182SE[0];
			fVec176SE[1] = fVec176SE[0];
			fVec170SE[1] = fVec170SE[0];
			fVec164SE[1] = fVec164SE[0];
			fVec158SE[1] = fVec158SE[0];
			fVec152SE[1] = fVec152SE[0];
			fVec146SE[1] = fVec146SE[0];
			fVec140SE[1] = fVec140SE[0];
			fVec134SE[1] = fVec134SE[0];
			fVec128SE[1] = fVec128SE[0];
			fVec122SE[1] = fVec122SE[0];
			fVec116SE[1] = fVec116SE[0];
			fVec110SE[1] = fVec110SE[0];
			fVec104SE[1] = fVec104SE[0];
			fVec98SE[1] = fVec98SE[0];
			fVec92SE[1] = fVec92SE[0];
			fVec86SE[1] = fVec86SE[0];
			fVec80SE[1] = fVec80SE[0];
			fVec74SE[1] = fVec74SE[0];
			fVec67SE[1] = fVec67SE[0];
			fVec60SE[1] = fVec60SE[0];
			fVec53SE[1] = fVec53SE[0];
			fVec46SE[1] = fVec46SE[0];
			fVec39SE[1] = fVec39SE[0];
			fVec32SE[1] = fVec32SE[0];
			fVec25SE[1] = fVec25SE[0];
			fVec18SE[1] = fVec18SE[0];
			fVec11SE[1] = fVec11SE[0];
			fVec678SE[2] = fVec678SE[1];
			fVec678SE[1] = fVec678SE[0];
			fVec677SE[1] = fVec677SE[0];
			fVec672SE[2] = fVec672SE[1];
			fVec672SE[1] = fVec672SE[0];
			fVec671SE[1] = fVec671SE[0];
			fVec666SE[2] = fVec666SE[1];
			fVec666SE[1] = fVec666SE[0];
			fVec665SE[1] = fVec665SE[0];
			fVec660SE[2] = fVec660SE[1];
			fVec660SE[1] = fVec660SE[0];
			fVec659SE[1] = fVec659SE[0];
			fVec654SE[2] = fVec654SE[1];
			fVec654SE[1] = fVec654SE[0];
			fVec653SE[1] = fVec653SE[0];
			fVec648SE[2] = fVec648SE[1];
			fVec648SE[1] = fVec648SE[0];
			fVec647SE[1] = fVec647SE[0];
			fVec642SE[2] = fVec642SE[1];
			fVec642SE[1] = fVec642SE[0];
			fVec641SE[1] = fVec641SE[0];
			fVec636SE[2] = fVec636SE[1];
			fVec636SE[1] = fVec636SE[0];
			fVec635SE[1] = fVec635SE[0];
			fVec630SE[2] = fVec630SE[1];
			fVec630SE[1] = fVec630SE[0];
			fVec629SE[1] = fVec629SE[0];
			fVec624SE[2] = fVec624SE[1];
			fVec624SE[1] = fVec624SE[0];
			fVec623SE[1] = fVec623SE[0];
			fVec618SE[2] = fVec618SE[1];
			fVec618SE[1] = fVec618SE[0];
			fVec617SE[1] = fVec617SE[0];
			fVec612SE[2] = fVec612SE[1];
			fVec612SE[1] = fVec612SE[0];
			fVec611SE[1] = fVec611SE[0];
			fVec606SE[2] = fVec606SE[1];
			fVec606SE[1] = fVec606SE[0];
			fVec605SE[1] = fVec605SE[0];
			fVec600SE[2] = fVec600SE[1];
			fVec600SE[1] = fVec600SE[0];
			fVec599SE[1] = fVec599SE[0];
			fVec594SE[2] = fVec594SE[1];
			fVec594SE[1] = fVec594SE[0];
			fVec593SE[1] = fVec593SE[0];
			fVec588SE[2] = fVec588SE[1];
			fVec588SE[1] = fVec588SE[0];
			fVec587SE[1] = fVec587SE[0];
			fVec582SE[2] = fVec582SE[1];
			fVec582SE[1] = fVec582SE[0];
			fVec581SE[1] = fVec581SE[0];
			fVec576SE[2] = fVec576SE[1];
			fVec576SE[1] = fVec576SE[0];
			fVec575SE[1] = fVec575SE[0];
			fVec570SE[2] = fVec570SE[1];
			fVec570SE[1] = fVec570SE[0];
			fVec569SE[1] = fVec569SE[0];
			fVec564SE[2] = fVec564SE[1];
			fVec564SE[1] = fVec564SE[0];
			fVec563SE[1] = fVec563SE[0];
			fVec558SE[2] = fVec558SE[1];
			fVec558SE[1] = fVec558SE[0];
			fVec557SE[1] = fVec557SE[0];
			fVec552SE[2] = fVec552SE[1];
			fVec552SE[1] = fVec552SE[0];
			fVec551SE[1] = fVec551SE[0];
			fVec546SE[2] = fVec546SE[1];
			fVec546SE[1] = fVec546SE[0];
			fVec545SE[1] = fVec545SE[0];
			fVec540SE[2] = fVec540SE[1];
			fVec540SE[1] = fVec540SE[0];
			fVec539SE[1] = fVec539SE[0];
			fVec534SE[2] = fVec534SE[1];
			fVec534SE[1] = fVec534SE[0];
			fVec533SE[1] = fVec533SE[0];
			fVec528SE[2] = fVec528SE[1];
			fVec528SE[1] = fVec528SE[0];
			fVec527SE[1] = fVec527SE[0];
			fVec522SE[2] = fVec522SE[1];
			fVec522SE[1] = fVec522SE[0];
			fVec521SE[1] = fVec521SE[0];
			fVec516SE[2] = fVec516SE[1];
			fVec516SE[1] = fVec516SE[0];
			fVec515SE[1] = fVec515SE[0];
			fVec510SE[2] = fVec510SE[1];
			fVec510SE[1] = fVec510SE[0];
			fVec509SE[1] = fVec509SE[0];
			fVec504SE[2] = fVec504SE[1];
			fVec504SE[1] = fVec504SE[0];
			fVec503SE[1] = fVec503SE[0];
			fVec498SE[2] = fVec498SE[1];
			fVec498SE[1] = fVec498SE[0];
			fVec497SE[1] = fVec497SE[0];
			fVec492SE[2] = fVec492SE[1];
			fVec492SE[1] = fVec492SE[0];
			fVec491SE[1] = fVec491SE[0];
			fVec486SE[2] = fVec486SE[1];
			fVec486SE[1] = fVec486SE[0];
			fVec485SE[1] = fVec485SE[0];
			fVec480SE[2] = fVec480SE[1];
			fVec480SE[1] = fVec480SE[0];
			fVec479SE[1] = fVec479SE[0];
			fVec474SE[2] = fVec474SE[1];
			fVec474SE[1] = fVec474SE[0];
			fVec473SE[1] = fVec473SE[0];
			fVec468SE[2] = fVec468SE[1];
			fVec468SE[1] = fVec468SE[0];
			fVec467SE[1] = fVec467SE[0];
			fVec462SE[2] = fVec462SE[1];
			fVec462SE[1] = fVec462SE[0];
			fVec461SE[1] = fVec461SE[0];
			fVec456SE[2] = fVec456SE[1];
			fVec456SE[1] = fVec456SE[0];
			fVec455SE[1] = fVec455SE[0];
			fVec450SE[2] = fVec450SE[1];
			fVec450SE[1] = fVec450SE[0];
			fVec449SE[1] = fVec449SE[0];
			fVec444SE[2] = fVec444SE[1];
			fVec444SE[1] = fVec444SE[0];
			fVec443SE[1] = fVec443SE[0];
			fVec438SE[2] = fVec438SE[1];
			fVec438SE[1] = fVec438SE[0];
			fVec437SE[1] = fVec437SE[0];
			fVec432SE[2] = fVec432SE[1];
			fVec432SE[1] = fVec432SE[0];
			fVec431SE[1] = fVec431SE[0];
			fVec426SE[2] = fVec426SE[1];
			fVec426SE[1] = fVec426SE[0];
			fVec425SE[1] = fVec425SE[0];
			fVec420SE[2] = fVec420SE[1];
			fVec420SE[1] = fVec420SE[0];
			fVec419SE[1] = fVec419SE[0];
			fVec414SE[2] = fVec414SE[1];
			fVec414SE[1] = fVec414SE[0];
			fVec413SE[1] = fVec413SE[0];
			fVec408SE[2] = fVec408SE[1];
			fVec408SE[1] = fVec408SE[0];
			fVec407SE[1] = fVec407SE[0];
			fVec402SE[2] = fVec402SE[1];
			fVec402SE[1] = fVec402SE[0];
			fVec401SE[1] = fVec401SE[0];
			fVec396SE[2] = fVec396SE[1];
			fVec396SE[1] = fVec396SE[0];
			fVec395SE[1] = fVec395SE[0];
			fVec390SE[2] = fVec390SE[1];
			fVec390SE[1] = fVec390SE[0];
			fVec389SE[1] = fVec389SE[0];
			fVec384SE[2] = fVec384SE[1];
			fVec384SE[1] = fVec384SE[0];
			fVec383SE[1] = fVec383SE[0];
			fVec378SE[2] = fVec378SE[1];
			fVec378SE[1] = fVec378SE[0];
			fVec377SE[1] = fVec377SE[0];
			fVec372SE[2] = fVec372SE[1];
			fVec372SE[1] = fVec372SE[0];
			fVec371SE[1] = fVec371SE[0];
			fVec366SE[2] = fVec366SE[1];
			fVec366SE[1] = fVec366SE[0];
			fVec365SE[1] = fVec365SE[0];
			fVec360SE[2] = fVec360SE[1];
			fVec360SE[1] = fVec360SE[0];
			fVec359SE[1] = fVec359SE[0];
			fVec354SE[2] = fVec354SE[1];
			fVec354SE[1] = fVec354SE[0];
			fVec353SE[1] = fVec353SE[0];
			fVec348SE[2] = fVec348SE[1];
			fVec348SE[1] = fVec348SE[0];
			fVec347SE[1] = fVec347SE[0];
			fVec342SE[2] = fVec342SE[1];
			fVec342SE[1] = fVec342SE[0];
			fVec341SE[1] = fVec341SE[0];
			fVec336SE[2] = fVec336SE[1];
			fVec336SE[1] = fVec336SE[0];
			fVec335SE[1] = fVec335SE[0];
			fVec330SE[2] = fVec330SE[1];
			fVec330SE[1] = fVec330SE[0];
			fVec329SE[1] = fVec329SE[0];
			fVec324SE[2] = fVec324SE[1];
			fVec324SE[1] = fVec324SE[0];
			fVec323SE[1] = fVec323SE[0];
			fVec318SE[2] = fVec318SE[1];
			fVec318SE[1] = fVec318SE[0];
			fVec317SE[1] = fVec317SE[0];
			fVec312SE[2] = fVec312SE[1];
			fVec312SE[1] = fVec312SE[0];
			fVec311SE[1] = fVec311SE[0];
			fVec306SE[2] = fVec306SE[1];
			fVec306SE[1] = fVec306SE[0];
			fVec305SE[1] = fVec305SE[0];
			fVec300SE[2] = fVec300SE[1];
			fVec300SE[1] = fVec300SE[0];
			fVec299SE[1] = fVec299SE[0];
			fVec294SE[2] = fVec294SE[1];
			fVec294SE[1] = fVec294SE[0];
			fVec293SE[1] = fVec293SE[0];
			fVec288SE[2] = fVec288SE[1];
			fVec288SE[1] = fVec288SE[0];
			fVec287SE[1] = fVec287SE[0];
			fVec282SE[2] = fVec282SE[1];
			fVec282SE[1] = fVec282SE[0];
			fVec281SE[1] = fVec281SE[0];
			fVec276SE[2] = fVec276SE[1];
			fVec276SE[1] = fVec276SE[0];
			fVec275SE[1] = fVec275SE[0];
			fVec270SE[2] = fVec270SE[1];
			fVec270SE[1] = fVec270SE[0];
			fVec269SE[1] = fVec269SE[0];
			fVec264SE[2] = fVec264SE[1];
			fVec264SE[1] = fVec264SE[0];
			fVec263SE[1] = fVec263SE[0];
			fVec258SE[2] = fVec258SE[1];
			fVec258SE[1] = fVec258SE[0];
			fVec257SE[1] = fVec257SE[0];
			fVec252SE[2] = fVec252SE[1];
			fVec252SE[1] = fVec252SE[0];
			fVec251SE[1] = fVec251SE[0];
			fVec246SE[2] = fVec246SE[1];
			fVec246SE[1] = fVec246SE[0];
			fVec245SE[1] = fVec245SE[0];
			fVec240SE[2] = fVec240SE[1];
			fVec240SE[1] = fVec240SE[0];
			fVec239SE[1] = fVec239SE[0];
			fVec234SE[2] = fVec234SE[1];
			fVec234SE[1] = fVec234SE[0];
			fVec233SE[1] = fVec233SE[0];
			fVec228SE[2] = fVec228SE[1];
			fVec228SE[1] = fVec228SE[0];
			fVec227SE[1] = fVec227SE[0];
			fVec222SE[2] = fVec222SE[1];
			fVec222SE[1] = fVec222SE[0];
			fVec221SE[1] = fVec221SE[0];
			fVec216SE[2] = fVec216SE[1];
			fVec216SE[1] = fVec216SE[0];
			fVec215SE[1] = fVec215SE[0];
			fVec210SE[2] = fVec210SE[1];
			fVec210SE[1] = fVec210SE[0];
			fVec209SE[1] = fVec209SE[0];
			fVec204SE[2] = fVec204SE[1];
			fVec204SE[1] = fVec204SE[0];
			fVec203SE[1] = fVec203SE[0];
			fVec198SE[2] = fVec198SE[1];
			fVec198SE[1] = fVec198SE[0];
			fVec197SE[1] = fVec197SE[0];
			fVec192SE[2] = fVec192SE[1];
			fVec192SE[1] = fVec192SE[0];
			fVec191SE[1] = fVec191SE[0];
			fVec186SE[2] = fVec186SE[1];
			fVec186SE[1] = fVec186SE[0];
			fVec185SE[1] = fVec185SE[0];
			fVec180SE[2] = fVec180SE[1];
			fVec180SE[1] = fVec180SE[0];
			fVec179SE[1] = fVec179SE[0];
			fVec174SE[2] = fVec174SE[1];
			fVec174SE[1] = fVec174SE[0];
			fVec173SE[1] = fVec173SE[0];
			fVec168SE[2] = fVec168SE[1];
			fVec168SE[1] = fVec168SE[0];
			fVec167SE[1] = fVec167SE[0];
			fVec162SE[2] = fVec162SE[1];
			fVec162SE[1] = fVec162SE[0];
			fVec161SE[1] = fVec161SE[0];
			fVec156SE[2] = fVec156SE[1];
			fVec156SE[1] = fVec156SE[0];
			fVec155SE[1] = fVec155SE[0];
			fVec150SE[2] = fVec150SE[1];
			fVec150SE[1] = fVec150SE[0];
			fVec149SE[1] = fVec149SE[0];
			fVec144SE[2] = fVec144SE[1];
			fVec144SE[1] = fVec144SE[0];
			fVec143SE[1] = fVec143SE[0];
			fVec138SE[2] = fVec138SE[1];
			fVec138SE[1] = fVec138SE[0];
			fVec137SE[1] = fVec137SE[0];
			fVec132SE[2] = fVec132SE[1];
			fVec132SE[1] = fVec132SE[0];
			fVec131SE[1] = fVec131SE[0];
			fVec126SE[2] = fVec126SE[1];
			fVec126SE[1] = fVec126SE[0];
			fVec125SE[1] = fVec125SE[0];
			fVec120SE[2] = fVec120SE[1];
			fVec120SE[1] = fVec120SE[0];
			fVec119SE[1] = fVec119SE[0];
			fVec114SE[2] = fVec114SE[1];
			fVec114SE[1] = fVec114SE[0];
			fVec113SE[1] = fVec113SE[0];
			fVec108SE[2] = fVec108SE[1];
			fVec108SE[1] = fVec108SE[0];
			fVec107SE[1] = fVec107SE[0];
			fVec102SE[2] = fVec102SE[1];
			fVec102SE[1] = fVec102SE[0];
			fVec101SE[1] = fVec101SE[0];
			fVec96SE[2] = fVec96SE[1];
			fVec96SE[1] = fVec96SE[0];
			fVec95SE[1] = fVec95SE[0];
			fVec90SE[2] = fVec90SE[1];
			fVec90SE[1] = fVec90SE[0];
			fVec89SE[1] = fVec89SE[0];
			fVec84SE[2] = fVec84SE[1];
			fVec84SE[1] = fVec84SE[0];
			fVec83SE[1] = fVec83SE[0];
			fVec78SE[2] = fVec78SE[1];
			fVec78SE[1] = fVec78SE[0];
			fVec77SE[1] = fVec77SE[0];
			fVec71SE[2] = fVec71SE[1];
			fVec71SE[1] = fVec71SE[0];
			fVec70SE[1] = fVec70SE[0];
			fVec64SE[2] = fVec64SE[1];
			fVec64SE[1] = fVec64SE[0];
			fVec63SE[1] = fVec63SE[0];
			fVec57SE[2] = fVec57SE[1];
			fVec57SE[1] = fVec57SE[0];
			fVec56SE[1] = fVec56SE[0];
			fVec50SE[2] = fVec50SE[1];
			fVec50SE[1] = fVec50SE[0];
			fVec49SE[1] = fVec49SE[0];
			fVec43SE[2] = fVec43SE[1];
			fVec43SE[1] = fVec43SE[0];
			fVec42SE[1] = fVec42SE[0];
			fVec36SE[2] = fVec36SE[1];
			fVec36SE[1] = fVec36SE[0];
			fVec35SE[1] = fVec35SE[0];
			fVec29SE[2] = fVec29SE[1];
			fVec29SE[1] = fVec29SE[0];
			fVec28SE[1] = fVec28SE[0];
			fVec22SE[2] = fVec22SE[1];
			fVec22SE[1] = fVec22SE[0];
			fVec21SE[1] = fVec21SE[0];
			fVec15SE[2] = fVec15SE[1];
			fVec15SE[1] = fVec15SE[0];
			fVec14SE[1] = fVec14SE[0];
			++IOTA0;
			fVec9BE[1] = fVec9BE[0];
			fVec8BE[1] = fVec8BE[0];
			fVec7BE[1] = fVec7BE[0];
			fVec6BE[1] = fVec6BE[0];
			fVec5BE[1] = fVec5BE[0];
			fVec4BE[1] = fVec4BE[0];
			fVec3BE[1] = fVec3BE[0];
			fVec2BE[1] = fVec2BE[0];
			fVec1BE[1] = fVec1BE[0];
			fVec0BE[1] = fVec0BE[0];
		}
		fVec0BEState = fVec0BE[1];
		fVec1BEState = fVec1BE[1];
		fVec2BEState = fVec2BE[1];
		fVec3BEState = fVec3BE[1];
		fVec4BEState = fVec4BE[1];
		fVec5BEState = fVec5BE[1];
		fVec6BEState = fVec6BE[1];
		fVec7BEState = fVec7BE[1];
		fVec8BEState = fVec8BE[1];
		fVec9BEState = fVec9BE[1];
		fVec14SEState = fVec14SE[1];
		fVec15SEState[0] = fVec15SE[1];
		fVec15SEState[1] = fVec15SE[2];
		fVec21SEState = fVec21SE[1];
		fVec22SEState[0] = fVec22SE[1];
		fVec22SEState[1] = fVec22SE[2];
		fVec28SEState = fVec28SE[1];
		fVec29SEState[0] = fVec29SE[1];
		fVec29SEState[1] = fVec29SE[2];
		fVec35SEState = fVec35SE[1];
		fVec36SEState[0] = fVec36SE[1];
		fVec36SEState[1] = fVec36SE[2];
		fVec42SEState = fVec42SE[1];
		fVec43SEState[0] = fVec43SE[1];
		fVec43SEState[1] = fVec43SE[2];
		fVec49SEState = fVec49SE[1];
		fVec50SEState[0] = fVec50SE[1];
		fVec50SEState[1] = fVec50SE[2];
		fVec56SEState = fVec56SE[1];
		fVec57SEState[0] = fVec57SE[1];
		fVec57SEState[1] = fVec57SE[2];
		fVec63SEState = fVec63SE[1];
		fVec64SEState[0] = fVec64SE[1];
		fVec64SEState[1] = fVec64SE[2];
		fVec70SEState = fVec70SE[1];
		fVec71SEState[0] = fVec71SE[1];
		fVec71SEState[1] = fVec71SE[2];
		fVec77SEState = fVec77SE[1];
		fVec78SEState[0] = fVec78SE[1];
		fVec78SEState[1] = fVec78SE[2];
		fVec83SEState = fVec83SE[1];
		fVec84SEState[0] = fVec84SE[1];
		fVec84SEState[1] = fVec84SE[2];
		fVec89SEState = fVec89SE[1];
		fVec90SEState[0] = fVec90SE[1];
		fVec90SEState[1] = fVec90SE[2];
		fVec95SEState = fVec95SE[1];
		fVec96SEState[0] = fVec96SE[1];
		fVec96SEState[1] = fVec96SE[2];
		fVec101SEState = fVec101SE[1];
		fVec102SEState[0] = fVec102SE[1];
		fVec102SEState[1] = fVec102SE[2];
		fVec107SEState = fVec107SE[1];
		fVec108SEState[0] = fVec108SE[1];
		fVec108SEState[1] = fVec108SE[2];
		fVec113SEState = fVec113SE[1];
		fVec114SEState[0] = fVec114SE[1];
		fVec114SEState[1] = fVec114SE[2];
		fVec119SEState = fVec119SE[1];
		fVec120SEState[0] = fVec120SE[1];
		fVec120SEState[1] = fVec120SE[2];
		fVec125SEState = fVec125SE[1];
		fVec126SEState[0] = fVec126SE[1];
		fVec126SEState[1] = fVec126SE[2];
		fVec131SEState = fVec131SE[1];
		fVec132SEState[0] = fVec132SE[1];
		fVec132SEState[1] = fVec132SE[2];
		fVec137SEState = fVec137SE[1];
		fVec138SEState[0] = fVec138SE[1];
		fVec138SEState[1] = fVec138SE[2];
		fVec143SEState = fVec143SE[1];
		fVec144SEState[0] = fVec144SE[1];
		fVec144SEState[1] = fVec144SE[2];
		fVec149SEState = fVec149SE[1];
		fVec150SEState[0] = fVec150SE[1];
		fVec150SEState[1] = fVec150SE[2];
		fVec155SEState = fVec155SE[1];
		fVec156SEState[0] = fVec156SE[1];
		fVec156SEState[1] = fVec156SE[2];
		fVec161SEState = fVec161SE[1];
		fVec162SEState[0] = fVec162SE[1];
		fVec162SEState[1] = fVec162SE[2];
		fVec167SEState = fVec167SE[1];
		fVec168SEState[0] = fVec168SE[1];
		fVec168SEState[1] = fVec168SE[2];
		fVec173SEState = fVec173SE[1];
		fVec174SEState[0] = fVec174SE[1];
		fVec174SEState[1] = fVec174SE[2];
		fVec179SEState = fVec179SE[1];
		fVec180SEState[0] = fVec180SE[1];
		fVec180SEState[1] = fVec180SE[2];
		fVec185SEState = fVec185SE[1];
		fVec186SEState[0] = fVec186SE[1];
		fVec186SEState[1] = fVec186SE[2];
		fVec191SEState = fVec191SE[1];
		fVec192SEState[0] = fVec192SE[1];
		fVec192SEState[1] = fVec192SE[2];
		fVec197SEState = fVec197SE[1];
		fVec198SEState[0] = fVec198SE[1];
		fVec198SEState[1] = fVec198SE[2];
		fVec203SEState = fVec203SE[1];
		fVec204SEState[0] = fVec204SE[1];
		fVec204SEState[1] = fVec204SE[2];
		fVec209SEState = fVec209SE[1];
		fVec210SEState[0] = fVec210SE[1];
		fVec210SEState[1] = fVec210SE[2];
		fVec215SEState = fVec215SE[1];
		fVec216SEState[0] = fVec216SE[1];
		fVec216SEState[1] = fVec216SE[2];
		fVec221SEState = fVec221SE[1];
		fVec222SEState[0] = fVec222SE[1];
		fVec222SEState[1] = fVec222SE[2];
		fVec227SEState = fVec227SE[1];
		fVec228SEState[0] = fVec228SE[1];
		fVec228SEState[1] = fVec228SE[2];
		fVec233SEState = fVec233SE[1];
		fVec234SEState[0] = fVec234SE[1];
		fVec234SEState[1] = fVec234SE[2];
		fVec239SEState = fVec239SE[1];
		fVec240SEState[0] = fVec240SE[1];
		fVec240SEState[1] = fVec240SE[2];
		fVec245SEState = fVec245SE[1];
		fVec246SEState[0] = fVec246SE[1];
		fVec246SEState[1] = fVec246SE[2];
		fVec251SEState = fVec251SE[1];
		fVec252SEState[0] = fVec252SE[1];
		fVec252SEState[1] = fVec252SE[2];
		fVec257SEState = fVec257SE[1];
		fVec258SEState[0] = fVec258SE[1];
		fVec258SEState[1] = fVec258SE[2];
		fVec263SEState = fVec263SE[1];
		fVec264SEState[0] = fVec264SE[1];
		fVec264SEState[1] = fVec264SE[2];
		fVec269SEState = fVec269SE[1];
		fVec270SEState[0] = fVec270SE[1];
		fVec270SEState[1] = fVec270SE[2];
		fVec275SEState = fVec275SE[1];
		fVec276SEState[0] = fVec276SE[1];
		fVec276SEState[1] = fVec276SE[2];
		fVec281SEState = fVec281SE[1];
		fVec282SEState[0] = fVec282SE[1];
		fVec282SEState[1] = fVec282SE[2];
		fVec287SEState = fVec287SE[1];
		fVec288SEState[0] = fVec288SE[1];
		fVec288SEState[1] = fVec288SE[2];
		fVec293SEState = fVec293SE[1];
		fVec294SEState[0] = fVec294SE[1];
		fVec294SEState[1] = fVec294SE[2];
		fVec299SEState = fVec299SE[1];
		fVec300SEState[0] = fVec300SE[1];
		fVec300SEState[1] = fVec300SE[2];
		fVec305SEState = fVec305SE[1];
		fVec306SEState[0] = fVec306SE[1];
		fVec306SEState[1] = fVec306SE[2];
		fVec311SEState = fVec311SE[1];
		fVec312SEState[0] = fVec312SE[1];
		fVec312SEState[1] = fVec312SE[2];
		fVec317SEState = fVec317SE[1];
		fVec318SEState[0] = fVec318SE[1];
		fVec318SEState[1] = fVec318SE[2];
		fVec323SEState = fVec323SE[1];
		fVec324SEState[0] = fVec324SE[1];
		fVec324SEState[1] = fVec324SE[2];
		fVec329SEState = fVec329SE[1];
		fVec330SEState[0] = fVec330SE[1];
		fVec330SEState[1] = fVec330SE[2];
		fVec335SEState = fVec335SE[1];
		fVec336SEState[0] = fVec336SE[1];
		fVec336SEState[1] = fVec336SE[2];
		fVec341SEState = fVec341SE[1];
		fVec342SEState[0] = fVec342SE[1];
		fVec342SEState[1] = fVec342SE[2];
		fVec347SEState = fVec347SE[1];
		fVec348SEState[0] = fVec348SE[1];
		fVec348SEState[1] = fVec348SE[2];
		fVec353SEState = fVec353SE[1];
		fVec354SEState[0] = fVec354SE[1];
		fVec354SEState[1] = fVec354SE[2];
		fVec359SEState = fVec359SE[1];
		fVec360SEState[0] = fVec360SE[1];
		fVec360SEState[1] = fVec360SE[2];
		fVec365SEState = fVec365SE[1];
		fVec366SEState[0] = fVec366SE[1];
		fVec366SEState[1] = fVec366SE[2];
		fVec371SEState = fVec371SE[1];
		fVec372SEState[0] = fVec372SE[1];
		fVec372SEState[1] = fVec372SE[2];
		fVec377SEState = fVec377SE[1];
		fVec378SEState[0] = fVec378SE[1];
		fVec378SEState[1] = fVec378SE[2];
		fVec383SEState = fVec383SE[1];
		fVec384SEState[0] = fVec384SE[1];
		fVec384SEState[1] = fVec384SE[2];
		fVec389SEState = fVec389SE[1];
		fVec390SEState[0] = fVec390SE[1];
		fVec390SEState[1] = fVec390SE[2];
		fVec395SEState = fVec395SE[1];
		fVec396SEState[0] = fVec396SE[1];
		fVec396SEState[1] = fVec396SE[2];
		fVec401SEState = fVec401SE[1];
		fVec402SEState[0] = fVec402SE[1];
		fVec402SEState[1] = fVec402SE[2];
		fVec407SEState = fVec407SE[1];
		fVec408SEState[0] = fVec408SE[1];
		fVec408SEState[1] = fVec408SE[2];
		fVec413SEState = fVec413SE[1];
		fVec414SEState[0] = fVec414SE[1];
		fVec414SEState[1] = fVec414SE[2];
		fVec419SEState = fVec419SE[1];
		fVec420SEState[0] = fVec420SE[1];
		fVec420SEState[1] = fVec420SE[2];
		fVec425SEState = fVec425SE[1];
		fVec426SEState[0] = fVec426SE[1];
		fVec426SEState[1] = fVec426SE[2];
		fVec431SEState = fVec431SE[1];
		fVec432SEState[0] = fVec432SE[1];
		fVec432SEState[1] = fVec432SE[2];
		fVec437SEState = fVec437SE[1];
		fVec438SEState[0] = fVec438SE[1];
		fVec438SEState[1] = fVec438SE[2];
		fVec443SEState = fVec443SE[1];
		fVec444SEState[0] = fVec444SE[1];
		fVec444SEState[1] = fVec444SE[2];
		fVec449SEState = fVec449SE[1];
		fVec450SEState[0] = fVec450SE[1];
		fVec450SEState[1] = fVec450SE[2];
		fVec455SEState = fVec455SE[1];
		fVec456SEState[0] = fVec456SE[1];
		fVec456SEState[1] = fVec456SE[2];
		fVec461SEState = fVec461SE[1];
		fVec462SEState[0] = fVec462SE[1];
		fVec462SEState[1] = fVec462SE[2];
		fVec467SEState = fVec467SE[1];
		fVec468SEState[0] = fVec468SE[1];
		fVec468SEState[1] = fVec468SE[2];
		fVec473SEState = fVec473SE[1];
		fVec474SEState[0] = fVec474SE[1];
		fVec474SEState[1] = fVec474SE[2];
		fVec479SEState = fVec479SE[1];
		fVec480SEState[0] = fVec480SE[1];
		fVec480SEState[1] = fVec480SE[2];
		fVec485SEState = fVec485SE[1];
		fVec486SEState[0] = fVec486SE[1];
		fVec486SEState[1] = fVec486SE[2];
		fVec491SEState = fVec491SE[1];
		fVec492SEState[0] = fVec492SE[1];
		fVec492SEState[1] = fVec492SE[2];
		fVec497SEState = fVec497SE[1];
		fVec498SEState[0] = fVec498SE[1];
		fVec498SEState[1] = fVec498SE[2];
		fVec503SEState = fVec503SE[1];
		fVec504SEState[0] = fVec504SE[1];
		fVec504SEState[1] = fVec504SE[2];
		fVec509SEState = fVec509SE[1];
		fVec510SEState[0] = fVec510SE[1];
		fVec510SEState[1] = fVec510SE[2];
		fVec515SEState = fVec515SE[1];
		fVec516SEState[0] = fVec516SE[1];
		fVec516SEState[1] = fVec516SE[2];
		fVec521SEState = fVec521SE[1];
		fVec522SEState[0] = fVec522SE[1];
		fVec522SEState[1] = fVec522SE[2];
		fVec527SEState = fVec527SE[1];
		fVec528SEState[0] = fVec528SE[1];
		fVec528SEState[1] = fVec528SE[2];
		fVec533SEState = fVec533SE[1];
		fVec534SEState[0] = fVec534SE[1];
		fVec534SEState[1] = fVec534SE[2];
		fVec539SEState = fVec539SE[1];
		fVec540SEState[0] = fVec540SE[1];
		fVec540SEState[1] = fVec540SE[2];
		fVec545SEState = fVec545SE[1];
		fVec546SEState[0] = fVec546SE[1];
		fVec546SEState[1] = fVec546SE[2];
		fVec551SEState = fVec551SE[1];
		fVec552SEState[0] = fVec552SE[1];
		fVec552SEState[1] = fVec552SE[2];
		fVec557SEState = fVec557SE[1];
		fVec558SEState[0] = fVec558SE[1];
		fVec558SEState[1] = fVec558SE[2];
		fVec563SEState = fVec563SE[1];
		fVec564SEState[0] = fVec564SE[1];
		fVec564SEState[1] = fVec564SE[2];
		fVec569SEState = fVec569SE[1];
		fVec570SEState[0] = fVec570SE[1];
		fVec570SEState[1] = fVec570SE[2];
		fVec575SEState = fVec575SE[1];
		fVec576SEState[0] = fVec576SE[1];
		fVec576SEState[1] = fVec576SE[2];
		fVec581SEState = fVec581SE[1];
		fVec582SEState[0] = fVec582SE[1];
		fVec582SEState[1] = fVec582SE[2];
		fVec587SEState = fVec587SE[1];
		fVec588SEState[0] = fVec588SE[1];
		fVec588SEState[1] = fVec588SE[2];
		fVec593SEState = fVec593SE[1];
		fVec594SEState[0] = fVec594SE[1];
		fVec594SEState[1] = fVec594SE[2];
		fVec599SEState = fVec599SE[1];
		fVec600SEState[0] = fVec600SE[1];
		fVec600SEState[1] = fVec600SE[2];
		fVec605SEState = fVec605SE[1];
		fVec606SEState[0] = fVec606SE[1];
		fVec606SEState[1] = fVec606SE[2];
		fVec611SEState = fVec611SE[1];
		fVec612SEState[0] = fVec612SE[1];
		fVec612SEState[1] = fVec612SE[2];
		fVec617SEState = fVec617SE[1];
		fVec618SEState[0] = fVec618SE[1];
		fVec618SEState[1] = fVec618SE[2];
		fVec623SEState = fVec623SE[1];
		fVec624SEState[0] = fVec624SE[1];
		fVec624SEState[1] = fVec624SE[2];
		fVec629SEState = fVec629SE[1];
		fVec630SEState[0] = fVec630SE[1];
		fVec630SEState[1] = fVec630SE[2];
		fVec635SEState = fVec635SE[1];
		fVec636SEState[0] = fVec636SE[1];
		fVec636SEState[1] = fVec636SE[2];
		fVec641SEState = fVec641SE[1];
		fVec642SEState[0] = fVec642SE[1];
		fVec642SEState[1] = fVec642SE[2];
		fVec647SEState = fVec647SE[1];
		fVec648SEState[0] = fVec648SE[1];
		fVec648SEState[1] = fVec648SE[2];
		fVec653SEState = fVec653SE[1];
		fVec654SEState[0] = fVec654SE[1];
		fVec654SEState[1] = fVec654SE[2];
		fVec659SEState = fVec659SE[1];
		fVec660SEState[0] = fVec660SE[1];
		fVec660SEState[1] = fVec660SE[2];
		fVec665SEState = fVec665SE[1];
		fVec666SEState[0] = fVec666SE[1];
		fVec666SEState[1] = fVec666SE[2];
		fVec671SEState = fVec671SE[1];
		fVec672SEState[0] = fVec672SE[1];
		fVec672SEState[1] = fVec672SE[2];
		fVec677SEState = fVec677SE[1];
		fVec678SEState[0] = fVec678SE[1];
		fVec678SEState[1] = fVec678SE[2];
		fVec11SEState = fVec11SE[1];
		fVec18SEState = fVec18SE[1];
		fVec25SEState = fVec25SE[1];
		fVec32SEState = fVec32SE[1];
		fVec39SEState = fVec39SE[1];
		fVec46SEState = fVec46SE[1];
		fVec53SEState = fVec53SE[1];
		fVec60SEState = fVec60SE[1];
		fVec67SEState = fVec67SE[1];
		fVec74SEState = fVec74SE[1];
		fVec80SEState = fVec80SE[1];
		fVec86SEState = fVec86SE[1];
		fVec92SEState = fVec92SE[1];
		fVec98SEState = fVec98SE[1];
		fVec104SEState = fVec104SE[1];
		fVec110SEState = fVec110SE[1];
		fVec116SEState = fVec116SE[1];
		fVec122SEState = fVec122SE[1];
		fVec128SEState = fVec128SE[1];
		fVec134SEState = fVec134SE[1];
		fVec140SEState = fVec140SE[1];
		fVec146SEState = fVec146SE[1];
		fVec152SEState = fVec152SE[1];
		fVec158SEState = fVec158SE[1];
		fVec164SEState = fVec164SE[1];
		fVec170SEState = fVec170SE[1];
		fVec176SEState = fVec176SE[1];
		fVec182SEState = fVec182SE[1];
		fVec188SEState = fVec188SE[1];
		fVec194SEState = fVec194SE[1];
		fVec200SEState = fVec200SE[1];
		fVec206SEState = fVec206SE[1];
		fVec212SEState = fVec212SE[1];
		fVec218SEState = fVec218SE[1];
		fVec224SEState = fVec224SE[1];
		fVec230SEState = fVec230SE[1];
		fVec236SEState = fVec236SE[1];
		fVec242SEState = fVec242SE[1];
		fVec248SEState = fVec248SE[1];
		fVec254SEState = fVec254SE[1];
		fVec260SEState = fVec260SE[1];
		fVec266SEState = fVec266SE[1];
		fVec272SEState = fVec272SE[1];
		fVec278SEState = fVec278SE[1];
		fVec284SEState = fVec284SE[1];
		fVec290SEState = fVec290SE[1];
		fVec296SEState = fVec296SE[1];
		fVec302SEState = fVec302SE[1];
		fVec308SEState = fVec308SE[1];
		fVec314SEState = fVec314SE[1];
		fVec320SEState = fVec320SE[1];
		fVec326SEState = fVec326SE[1];
		fVec332SEState = fVec332SE[1];
		fVec338SEState = fVec338SE[1];
		fVec344SEState = fVec344SE[1];
		fVec350SEState = fVec350SE[1];
		fVec356SEState = fVec356SE[1];
		fVec362SEState = fVec362SE[1];
		fVec368SEState = fVec368SE[1];
		fVec374SEState = fVec374SE[1];
		fVec380SEState = fVec380SE[1];
		fVec386SEState = fVec386SE[1];
		fVec392SEState = fVec392SE[1];
		fVec398SEState = fVec398SE[1];
		fVec404SEState = fVec404SE[1];
		fVec410SEState = fVec410SE[1];
		fVec416SEState = fVec416SE[1];
		fVec422SEState = fVec422SE[1];
		fVec428SEState = fVec428SE[1];
		fVec434SEState = fVec434SE[1];
		fVec440SEState = fVec440SE[1];
		fVec446SEState = fVec446SE[1];
		fVec452SEState = fVec452SE[1];
		fVec458SEState = fVec458SE[1];
		fVec464SEState = fVec464SE[1];
		fVec470SEState = fVec470SE[1];
		fVec476SEState = fVec476SE[1];
		fVec482SEState = fVec482SE[1];
		fVec488SEState = fVec488SE[1];
		fVec494SEState = fVec494SE[1];
		fVec500SEState = fVec500SE[1];
		fVec506SEState = fVec506SE[1];
		fVec512SEState = fVec512SE[1];
		fVec518SEState = fVec518SE[1];
		fVec524SEState = fVec524SE[1];
		fVec530SEState = fVec530SE[1];
		fVec536SEState = fVec536SE[1];
		fVec542SEState = fVec542SE[1];
		fVec548SEState = fVec548SE[1];
		fVec554SEState = fVec554SE[1];
		fVec560SEState = fVec560SE[1];
		fVec566SEState = fVec566SE[1];
		fVec572SEState = fVec572SE[1];
		fVec578SEState = fVec578SE[1];
		fVec584SEState = fVec584SE[1];
		fVec590SEState = fVec590SE[1];
		fVec596SEState = fVec596SE[1];
		fVec602SEState = fVec602SE[1];
		fVec608SEState = fVec608SE[1];
		fVec614SEState = fVec614SE[1];
		fVec620SEState = fVec620SE[1];
		fVec626SEState = fVec626SE[1];
		fVec632SEState = fVec632SE[1];
		fVec638SEState = fVec638SE[1];
		fVec644SEState = fVec644SE[1];
		fVec650SEState = fVec650SE[1];
		fVec656SEState = fVec656SE[1];
		fVec662SEState = fVec662SE[1];
		fVec668SEState = fVec668SE[1];
		fVec674SEState = fVec674SE[1];
	}
};


