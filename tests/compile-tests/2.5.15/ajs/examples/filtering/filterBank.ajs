/* ------------------------------------------------------------
name: "filterBank"
Code generated with Faust 2.5.15 (https://faust.grame.fr)
Compilation options: ajs, -scal -ftz 0
------------------------------------------------------------ */


function mydspModule(global, foreign, buffer) {
	
	'use asm';
	
	var HEAP32 = new global.Int32Array(buffer);
	var HEAPF = new global.Float32Array(buffer);
	
	var imul = foreign.imul;
	var log = foreign.log;
	var round = foreign.round;
	
	var max_f = foreign.max;
	var min_f = foreign.min;
	var powf = foreign.pow;
	var tanf = foreign.tan;
	function fmodf(x, y) { x = +x; y = +y; return +(x % y); }
	function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }
	function remainderf(x, y) { x = +x; y = +y; return +(x - +round(x/y) * y); }
	
	function getNumInputs(dsp) {
		dsp = dsp | 0;
		return 1;
	}
	
	function getNumOutputs(dsp) {
		dsp = dsp | 0;
		return 1;
	}
	
	function classInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		
	}
	
	function instanceConstants(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAP32[dsp + 4 >> 2] = (samplingFreq | 0);
		HEAPF[dsp + 8 >> 2] = +(min_f(192000., +(max_f(1., +((HEAP32[dsp + 4 >> 2] | 0))))));
		HEAPF[dsp + 12 >> 2] = +(tanf(+(31415.9258 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 16 >> 2] = +(1. / +(HEAPF[dsp + 12 >> 2]));
		HEAPF[dsp + 20 >> 2] = +(+(+(+(HEAPF[dsp + 16 >> 2]) + 0.618034005) / +(HEAPF[dsp + 12 >> 2])) + 1.);
		HEAPF[dsp + 24 >> 2] = +(1. / +(HEAPF[dsp + 20 >> 2]));
		HEAPF[dsp + 28 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 12 >> 2]), 2.)));
		HEAPF[dsp + 32 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 28 >> 2])));
		HEAPF[dsp + 36 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 16 >> 2]) + 1.61803401) / +(HEAPF[dsp + 12 >> 2])) + 1.));
		HEAPF[dsp + 40 >> 2] = +(+(HEAPF[dsp + 16 >> 2]) + 1.);
		HEAPF[dsp + 44 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 16 >> 2])) / +(HEAPF[dsp + 40 >> 2])));
		HEAPF[dsp + 48 >> 2] = +(1. / +(HEAPF[dsp + 40 >> 2]));
		HEAPF[dsp + 60 >> 2] = +(0. - +(HEAPF[dsp + 16 >> 2]));
		HEAPF[dsp + 72 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 28 >> 2])));
		HEAPF[dsp + 76 >> 2] = +(+(+(+(HEAPF[dsp + 16 >> 2]) + -1.61803401) / +(HEAPF[dsp + 12 >> 2])) + 1.);
		HEAPF[dsp + 92 >> 2] = +(+(+(+(HEAPF[dsp + 16 >> 2]) + -0.618034005) / +(HEAPF[dsp + 12 >> 2])) + 1.);
		HEAPF[dsp + 108 >> 2] = +(tanf(+(122.71846 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 112 >> 2] = +(1. / +(HEAPF[dsp + 108 >> 2]));
		HEAPF[dsp + 116 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 112 >> 2]) + 1.61803401) / +(HEAPF[dsp + 108 >> 2])) + 1.));
		HEAPF[dsp + 120 >> 2] = +(+(+(+(HEAPF[dsp + 112 >> 2]) + -1.61803401) / +(HEAPF[dsp + 108 >> 2])) + 1.);
		HEAPF[dsp + 124 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 108 >> 2]), 2.)));
		HEAPF[dsp + 128 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 124 >> 2])));
		HEAPF[dsp + 144 >> 2] = +(tanf(+(245.43692 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 148 >> 2] = +(1. / +(HEAPF[dsp + 144 >> 2]));
		HEAPF[dsp + 152 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 148 >> 2]) + 1.61803401) / +(HEAPF[dsp + 144 >> 2])) + 1.));
		HEAPF[dsp + 156 >> 2] = +(+(+(+(HEAPF[dsp + 148 >> 2]) + -1.61803401) / +(HEAPF[dsp + 144 >> 2])) + 1.);
		HEAPF[dsp + 160 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 144 >> 2]), 2.)));
		HEAPF[dsp + 164 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 160 >> 2])));
		HEAPF[dsp + 180 >> 2] = +(tanf(+(490.87384 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 184 >> 2] = +(1. / +(HEAPF[dsp + 180 >> 2]));
		HEAPF[dsp + 188 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 184 >> 2]) + 1.61803401) / +(HEAPF[dsp + 180 >> 2])) + 1.));
		HEAPF[dsp + 192 >> 2] = +(+(+(+(HEAPF[dsp + 184 >> 2]) + -1.61803401) / +(HEAPF[dsp + 180 >> 2])) + 1.);
		HEAPF[dsp + 196 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 180 >> 2]), 2.)));
		HEAPF[dsp + 200 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 196 >> 2])));
		HEAPF[dsp + 216 >> 2] = +(tanf(+(981.747681 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 220 >> 2] = +(1. / +(HEAPF[dsp + 216 >> 2]));
		HEAPF[dsp + 224 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 220 >> 2]) + 1.61803401) / +(HEAPF[dsp + 216 >> 2])) + 1.));
		HEAPF[dsp + 228 >> 2] = +(+(+(+(HEAPF[dsp + 220 >> 2]) + -1.61803401) / +(HEAPF[dsp + 216 >> 2])) + 1.);
		HEAPF[dsp + 232 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 216 >> 2]), 2.)));
		HEAPF[dsp + 236 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 232 >> 2])));
		HEAPF[dsp + 252 >> 2] = +(tanf(+(1963.49536 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 256 >> 2] = +(1. / +(HEAPF[dsp + 252 >> 2]));
		HEAPF[dsp + 260 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 256 >> 2]) + 1.61803401) / +(HEAPF[dsp + 252 >> 2])) + 1.));
		HEAPF[dsp + 264 >> 2] = +(+(+(+(HEAPF[dsp + 256 >> 2]) + -1.61803401) / +(HEAPF[dsp + 252 >> 2])) + 1.);
		HEAPF[dsp + 268 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 252 >> 2]), 2.)));
		HEAPF[dsp + 272 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 268 >> 2])));
		HEAPF[dsp + 288 >> 2] = +(tanf(+(3926.99072 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 292 >> 2] = +(1. / +(HEAPF[dsp + 288 >> 2]));
		HEAPF[dsp + 296 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 292 >> 2]) + 1.61803401) / +(HEAPF[dsp + 288 >> 2])) + 1.));
		HEAPF[dsp + 300 >> 2] = +(+(+(+(HEAPF[dsp + 292 >> 2]) + -1.61803401) / +(HEAPF[dsp + 288 >> 2])) + 1.);
		HEAPF[dsp + 304 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 288 >> 2]), 2.)));
		HEAPF[dsp + 308 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 304 >> 2])));
		HEAPF[dsp + 324 >> 2] = +(tanf(+(7853.98145 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 328 >> 2] = +(1. / +(HEAPF[dsp + 324 >> 2]));
		HEAPF[dsp + 332 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 328 >> 2]) + 1.61803401) / +(HEAPF[dsp + 324 >> 2])) + 1.));
		HEAPF[dsp + 336 >> 2] = +(+(+(+(HEAPF[dsp + 328 >> 2]) + -1.61803401) / +(HEAPF[dsp + 324 >> 2])) + 1.);
		HEAPF[dsp + 340 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 324 >> 2]), 2.)));
		HEAPF[dsp + 344 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 340 >> 2])));
		HEAPF[dsp + 360 >> 2] = +(tanf(+(15707.9629 / +(HEAPF[dsp + 8 >> 2]))));
		HEAPF[dsp + 364 >> 2] = +(1. / +(HEAPF[dsp + 360 >> 2]));
		HEAPF[dsp + 368 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 364 >> 2]) + 1.61803401) / +(HEAPF[dsp + 360 >> 2])) + 1.));
		HEAPF[dsp + 372 >> 2] = +(+(+(+(HEAPF[dsp + 364 >> 2]) + -1.61803401) / +(HEAPF[dsp + 360 >> 2])) + 1.);
		HEAPF[dsp + 376 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 360 >> 2]), 2.)));
		HEAPF[dsp + 380 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 376 >> 2])));
		HEAPF[dsp + 408 >> 2] = +(+(+(+(HEAPF[dsp + 364 >> 2]) + 0.618034005) / +(HEAPF[dsp + 360 >> 2])) + 1.);
		HEAPF[dsp + 412 >> 2] = +(1. / +(HEAPF[dsp + 408 >> 2]));
		HEAPF[dsp + 416 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 376 >> 2])));
		HEAPF[dsp + 420 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 364 >> 2]) + 1.61803401) / +(HEAPF[dsp + 360 >> 2])) + 1.));
		HEAPF[dsp + 424 >> 2] = +(+(HEAPF[dsp + 364 >> 2]) + 1.);
		HEAPF[dsp + 428 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 364 >> 2])) / +(HEAPF[dsp + 424 >> 2])));
		HEAPF[dsp + 432 >> 2] = +(1. / +(+(HEAPF[dsp + 424 >> 2]) * +(HEAPF[dsp + 20 >> 2])));
		HEAPF[dsp + 476 >> 2] = +(0. - +(HEAPF[dsp + 364 >> 2]));
		HEAPF[dsp + 488 >> 2] = +(+(+(+(HEAPF[dsp + 364 >> 2]) + -1.61803401) / +(HEAPF[dsp + 360 >> 2])) + 1.);
		HEAPF[dsp + 504 >> 2] = +(+(+(+(HEAPF[dsp + 364 >> 2]) + -0.618034005) / +(HEAPF[dsp + 360 >> 2])) + 1.);
		HEAPF[dsp + 616 >> 2] = +(+(+(+(HEAPF[dsp + 328 >> 2]) + 0.618034005) / +(HEAPF[dsp + 324 >> 2])) + 1.);
		HEAPF[dsp + 620 >> 2] = +(1. / +(HEAPF[dsp + 616 >> 2]));
		HEAPF[dsp + 624 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 340 >> 2])));
		HEAPF[dsp + 628 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 328 >> 2]) + 1.61803401) / +(HEAPF[dsp + 324 >> 2])) + 1.));
		HEAPF[dsp + 632 >> 2] = +(+(HEAPF[dsp + 328 >> 2]) + 1.);
		HEAPF[dsp + 636 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 328 >> 2])) / +(HEAPF[dsp + 632 >> 2])));
		HEAPF[dsp + 640 >> 2] = +(1. / +(+(HEAPF[dsp + 408 >> 2]) * +(HEAPF[dsp + 632 >> 2])));
		HEAPF[dsp + 684 >> 2] = +(0. - +(HEAPF[dsp + 328 >> 2]));
		HEAPF[dsp + 696 >> 2] = +(+(+(+(HEAPF[dsp + 328 >> 2]) + -1.61803401) / +(HEAPF[dsp + 324 >> 2])) + 1.);
		HEAPF[dsp + 712 >> 2] = +(+(+(+(HEAPF[dsp + 328 >> 2]) + -0.618034005) / +(HEAPF[dsp + 324 >> 2])) + 1.);
		HEAPF[dsp + 812 >> 2] = +(+(+(+(HEAPF[dsp + 292 >> 2]) + 0.618034005) / +(HEAPF[dsp + 288 >> 2])) + 1.);
		HEAPF[dsp + 816 >> 2] = +(1. / +(HEAPF[dsp + 812 >> 2]));
		HEAPF[dsp + 820 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 304 >> 2])));
		HEAPF[dsp + 824 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 292 >> 2]) + 1.61803401) / +(HEAPF[dsp + 288 >> 2])) + 1.));
		HEAPF[dsp + 828 >> 2] = +(+(HEAPF[dsp + 292 >> 2]) + 1.);
		HEAPF[dsp + 832 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 292 >> 2])) / +(HEAPF[dsp + 828 >> 2])));
		HEAPF[dsp + 836 >> 2] = +(1. / +(+(HEAPF[dsp + 616 >> 2]) * +(HEAPF[dsp + 828 >> 2])));
		HEAPF[dsp + 880 >> 2] = +(0. - +(HEAPF[dsp + 292 >> 2]));
		HEAPF[dsp + 892 >> 2] = +(+(+(+(HEAPF[dsp + 292 >> 2]) + -1.61803401) / +(HEAPF[dsp + 288 >> 2])) + 1.);
		HEAPF[dsp + 908 >> 2] = +(+(+(+(HEAPF[dsp + 292 >> 2]) + -0.618034005) / +(HEAPF[dsp + 288 >> 2])) + 1.);
		HEAPF[dsp + 996 >> 2] = +(+(+(+(HEAPF[dsp + 256 >> 2]) + 0.618034005) / +(HEAPF[dsp + 252 >> 2])) + 1.);
		HEAPF[dsp + 1000 >> 2] = +(1. / +(HEAPF[dsp + 996 >> 2]));
		HEAPF[dsp + 1004 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 268 >> 2])));
		HEAPF[dsp + 1008 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 256 >> 2]) + 1.61803401) / +(HEAPF[dsp + 252 >> 2])) + 1.));
		HEAPF[dsp + 1012 >> 2] = +(+(HEAPF[dsp + 256 >> 2]) + 1.);
		HEAPF[dsp + 1016 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 256 >> 2])) / +(HEAPF[dsp + 1012 >> 2])));
		HEAPF[dsp + 1020 >> 2] = +(1. / +(+(HEAPF[dsp + 812 >> 2]) * +(HEAPF[dsp + 1012 >> 2])));
		HEAPF[dsp + 1064 >> 2] = +(0. - +(HEAPF[dsp + 256 >> 2]));
		HEAPF[dsp + 1076 >> 2] = +(+(+(+(HEAPF[dsp + 256 >> 2]) + -1.61803401) / +(HEAPF[dsp + 252 >> 2])) + 1.);
		HEAPF[dsp + 1092 >> 2] = +(+(+(+(HEAPF[dsp + 256 >> 2]) + -0.618034005) / +(HEAPF[dsp + 252 >> 2])) + 1.);
		HEAPF[dsp + 1168 >> 2] = +(+(+(+(HEAPF[dsp + 220 >> 2]) + 0.618034005) / +(HEAPF[dsp + 216 >> 2])) + 1.);
		HEAPF[dsp + 1172 >> 2] = +(1. / +(HEAPF[dsp + 1168 >> 2]));
		HEAPF[dsp + 1176 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 232 >> 2])));
		HEAPF[dsp + 1180 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 220 >> 2]) + 1.61803401) / +(HEAPF[dsp + 216 >> 2])) + 1.));
		HEAPF[dsp + 1184 >> 2] = +(+(HEAPF[dsp + 220 >> 2]) + 1.);
		HEAPF[dsp + 1188 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 220 >> 2])) / +(HEAPF[dsp + 1184 >> 2])));
		HEAPF[dsp + 1192 >> 2] = +(1. / +(+(HEAPF[dsp + 996 >> 2]) * +(HEAPF[dsp + 1184 >> 2])));
		HEAPF[dsp + 1236 >> 2] = +(0. - +(HEAPF[dsp + 220 >> 2]));
		HEAPF[dsp + 1248 >> 2] = +(+(+(+(HEAPF[dsp + 220 >> 2]) + -1.61803401) / +(HEAPF[dsp + 216 >> 2])) + 1.);
		HEAPF[dsp + 1264 >> 2] = +(+(+(+(HEAPF[dsp + 220 >> 2]) + -0.618034005) / +(HEAPF[dsp + 216 >> 2])) + 1.);
		HEAPF[dsp + 1328 >> 2] = +(+(+(+(HEAPF[dsp + 184 >> 2]) + 0.618034005) / +(HEAPF[dsp + 180 >> 2])) + 1.);
		HEAPF[dsp + 1332 >> 2] = +(1. / +(HEAPF[dsp + 1328 >> 2]));
		HEAPF[dsp + 1336 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 196 >> 2])));
		HEAPF[dsp + 1340 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 184 >> 2]) + 1.61803401) / +(HEAPF[dsp + 180 >> 2])) + 1.));
		HEAPF[dsp + 1344 >> 2] = +(+(HEAPF[dsp + 184 >> 2]) + 1.);
		HEAPF[dsp + 1348 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 184 >> 2])) / +(HEAPF[dsp + 1344 >> 2])));
		HEAPF[dsp + 1352 >> 2] = +(1. / +(+(HEAPF[dsp + 1168 >> 2]) * +(HEAPF[dsp + 1344 >> 2])));
		HEAPF[dsp + 1396 >> 2] = +(0. - +(HEAPF[dsp + 184 >> 2]));
		HEAPF[dsp + 1408 >> 2] = +(+(+(+(HEAPF[dsp + 184 >> 2]) + -1.61803401) / +(HEAPF[dsp + 180 >> 2])) + 1.);
		HEAPF[dsp + 1424 >> 2] = +(+(+(+(HEAPF[dsp + 184 >> 2]) + -0.618034005) / +(HEAPF[dsp + 180 >> 2])) + 1.);
		HEAPF[dsp + 1476 >> 2] = +(+(+(+(HEAPF[dsp + 148 >> 2]) + 0.618034005) / +(HEAPF[dsp + 144 >> 2])) + 1.);
		HEAPF[dsp + 1480 >> 2] = +(1. / +(HEAPF[dsp + 1476 >> 2]));
		HEAPF[dsp + 1484 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 160 >> 2])));
		HEAPF[dsp + 1488 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 148 >> 2]) + 1.61803401) / +(HEAPF[dsp + 144 >> 2])) + 1.));
		HEAPF[dsp + 1492 >> 2] = +(+(HEAPF[dsp + 148 >> 2]) + 1.);
		HEAPF[dsp + 1496 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 148 >> 2])) / +(HEAPF[dsp + 1492 >> 2])));
		HEAPF[dsp + 1500 >> 2] = +(1. / +(+(HEAPF[dsp + 1328 >> 2]) * +(HEAPF[dsp + 1492 >> 2])));
		HEAPF[dsp + 1544 >> 2] = +(0. - +(HEAPF[dsp + 148 >> 2]));
		HEAPF[dsp + 1556 >> 2] = +(+(+(+(HEAPF[dsp + 148 >> 2]) + -1.61803401) / +(HEAPF[dsp + 144 >> 2])) + 1.);
		HEAPF[dsp + 1572 >> 2] = +(+(+(+(HEAPF[dsp + 148 >> 2]) + -0.618034005) / +(HEAPF[dsp + 144 >> 2])) + 1.);
		HEAPF[dsp + 1612 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 112 >> 2]) + 0.618034005) / +(HEAPF[dsp + 108 >> 2])) + 1.));
		HEAPF[dsp + 1616 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 124 >> 2])));
		HEAPF[dsp + 1620 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 112 >> 2]) + 1.61803401) / +(HEAPF[dsp + 108 >> 2])) + 1.));
		HEAPF[dsp + 1624 >> 2] = +(+(HEAPF[dsp + 112 >> 2]) + 1.);
		HEAPF[dsp + 1628 >> 2] = +(0. - +(+(1. - +(HEAPF[dsp + 112 >> 2])) / +(HEAPF[dsp + 1624 >> 2])));
		HEAPF[dsp + 1632 >> 2] = +(1. / +(+(HEAPF[dsp + 1476 >> 2]) * +(HEAPF[dsp + 1624 >> 2])));
		HEAPF[dsp + 1676 >> 2] = +(0. - +(HEAPF[dsp + 112 >> 2]));
		HEAPF[dsp + 1688 >> 2] = +(+(+(+(HEAPF[dsp + 112 >> 2]) + -1.61803401) / +(HEAPF[dsp + 108 >> 2])) + 1.);
		HEAPF[dsp + 1704 >> 2] = +(+(+(+(HEAPF[dsp + 112 >> 2]) + -0.618034005) / +(HEAPF[dsp + 108 >> 2])) + 1.);
		
	}
	
	function instanceResetUserInterface(dsp) {
		dsp = dsp | 0;
		HEAPF[dsp + 0 >> 2] = 0.;
		HEAPF[dsp + 396 >> 2] = -10.;
		HEAPF[dsp + 604 >> 2] = -10.;
		HEAPF[dsp + 800 >> 2] = -10.;
		HEAPF[dsp + 984 >> 2] = -10.;
		HEAPF[dsp + 1156 >> 2] = -10.;
		HEAPF[dsp + 1316 >> 2] = -10.;
		HEAPF[dsp + 1464 >> 2] = -10.;
		HEAPF[dsp + 1600 >> 2] = -10.;
		HEAPF[dsp + 1720 >> 2] = -10.;
		HEAPF[dsp + 1764 >> 2] = -10.;
		
	}
	
	function instanceClear(dsp) {
		dsp = dsp | 0;
		var l0 = 0;
		var l1 = 0;
		var l2 = 0;
		var l3 = 0;
		var l4 = 0;
		var l5 = 0;
		var l6 = 0;
		var l7 = 0;
		var l8 = 0;
		var l9 = 0;
		var l10 = 0;
		var l11 = 0;
		var l12 = 0;
		var l13 = 0;
		var l14 = 0;
		var l15 = 0;
		var l16 = 0;
		var l17 = 0;
		var l18 = 0;
		var l19 = 0;
		var l20 = 0;
		var l21 = 0;
		var l22 = 0;
		var l23 = 0;
		var l24 = 0;
		var l25 = 0;
		var l26 = 0;
		var l27 = 0;
		var l28 = 0;
		var l29 = 0;
		var l30 = 0;
		var l31 = 0;
		var l32 = 0;
		var l33 = 0;
		var l34 = 0;
		var l35 = 0;
		var l36 = 0;
		var l37 = 0;
		var l38 = 0;
		var l39 = 0;
		var l40 = 0;
		var l41 = 0;
		var l42 = 0;
		var l43 = 0;
		var l44 = 0;
		var l45 = 0;
		var l46 = 0;
		var l47 = 0;
		var l48 = 0;
		var l49 = 0;
		var l50 = 0;
		var l51 = 0;
		var l52 = 0;
		var l53 = 0;
		var l54 = 0;
		var l55 = 0;
		var l56 = 0;
		var l57 = 0;
		var l58 = 0;
		var l59 = 0;
		var l60 = 0;
		var l61 = 0;
		var l62 = 0;
		var l63 = 0;
		var l64 = 0;
		var l65 = 0;
		var l66 = 0;
		var l67 = 0;
		var l68 = 0;
		var l69 = 0;
		var l70 = 0;
		var l71 = 0;
		var l72 = 0;
		var l73 = 0;
		var l74 = 0;
		var l75 = 0;
		var l76 = 0;
		var l77 = 0;
		var l78 = 0;
		var l79 = 0;
		var l80 = 0;
		var l81 = 0;
		var l82 = 0;
		var l83 = 0;
		var l84 = 0;
		var l85 = 0;
		var l86 = 0;
		var l87 = 0;
		var l88 = 0;
		var l89 = 0;
		var l90 = 0;
		var l91 = 0;
		var l92 = 0;
		var l93 = 0;
		var l94 = 0;
		var l95 = 0;
		var l96 = 0;
		var l97 = 0;
		var l98 = 0;
		var l99 = 0;
		var l100 = 0;
		var l101 = 0;
		var l102 = 0;
		var l103 = 0;
		var l104 = 0;
		var l105 = 0;
		var l106 = 0;
		var l107 = 0;
		var l108 = 0;
		for (l0 = 0; (((l0 | 0) < 2) | 0); l0 = (((l0 | 0) + 1) | 0)) {
			HEAPF[dsp + 52 + ((l0 | 0) << 2) >> 2] = 0.;
			
		}
		for (l1 = 0; (((l1 | 0) < 2) | 0); l1 = (((l1 | 0) + 1) | 0)) {
			HEAPF[dsp + 64 + ((l1 | 0) << 2) >> 2] = 0.;
			
		}
		for (l2 = 0; (((l2 | 0) < 3) | 0); l2 = (((l2 | 0) + 1) | 0)) {
			HEAPF[dsp + 80 + ((l2 | 0) << 2) >> 2] = 0.;
			
		}
		for (l3 = 0; (((l3 | 0) < 3) | 0); l3 = (((l3 | 0) + 1) | 0)) {
			HEAPF[dsp + 96 + ((l3 | 0) << 2) >> 2] = 0.;
			
		}
		for (l4 = 0; (((l4 | 0) < 3) | 0); l4 = (((l4 | 0) + 1) | 0)) {
			HEAPF[dsp + 132 + ((l4 | 0) << 2) >> 2] = 0.;
			
		}
		for (l5 = 0; (((l5 | 0) < 3) | 0); l5 = (((l5 | 0) + 1) | 0)) {
			HEAPF[dsp + 168 + ((l5 | 0) << 2) >> 2] = 0.;
			
		}
		for (l6 = 0; (((l6 | 0) < 3) | 0); l6 = (((l6 | 0) + 1) | 0)) {
			HEAPF[dsp + 204 + ((l6 | 0) << 2) >> 2] = 0.;
			
		}
		for (l7 = 0; (((l7 | 0) < 3) | 0); l7 = (((l7 | 0) + 1) | 0)) {
			HEAPF[dsp + 240 + ((l7 | 0) << 2) >> 2] = 0.;
			
		}
		for (l8 = 0; (((l8 | 0) < 3) | 0); l8 = (((l8 | 0) + 1) | 0)) {
			HEAPF[dsp + 276 + ((l8 | 0) << 2) >> 2] = 0.;
			
		}
		for (l9 = 0; (((l9 | 0) < 3) | 0); l9 = (((l9 | 0) + 1) | 0)) {
			HEAPF[dsp + 312 + ((l9 | 0) << 2) >> 2] = 0.;
			
		}
		for (l10 = 0; (((l10 | 0) < 3) | 0); l10 = (((l10 | 0) + 1) | 0)) {
			HEAPF[dsp + 348 + ((l10 | 0) << 2) >> 2] = 0.;
			
		}
		for (l11 = 0; (((l11 | 0) < 3) | 0); l11 = (((l11 | 0) + 1) | 0)) {
			HEAPF[dsp + 384 + ((l11 | 0) << 2) >> 2] = 0.;
			
		}
		for (l12 = 0; (((l12 | 0) < 2) | 0); l12 = (((l12 | 0) + 1) | 0)) {
			HEAPF[dsp + 400 + ((l12 | 0) << 2) >> 2] = 0.;
			
		}
		for (l13 = 0; (((l13 | 0) < 2) | 0); l13 = (((l13 | 0) + 1) | 0)) {
			HEAPF[dsp + 436 + ((l13 | 0) << 2) >> 2] = 0.;
			
		}
		for (l14 = 0; (((l14 | 0) < 3) | 0); l14 = (((l14 | 0) + 1) | 0)) {
			HEAPF[dsp + 444 + ((l14 | 0) << 2) >> 2] = 0.;
			
		}
		for (l15 = 0; (((l15 | 0) < 3) | 0); l15 = (((l15 | 0) + 1) | 0)) {
			HEAPF[dsp + 456 + ((l15 | 0) << 2) >> 2] = 0.;
			
		}
		for (l16 = 0; (((l16 | 0) < 2) | 0); l16 = (((l16 | 0) + 1) | 0)) {
			HEAPF[dsp + 468 + ((l16 | 0) << 2) >> 2] = 0.;
			
		}
		for (l17 = 0; (((l17 | 0) < 2) | 0); l17 = (((l17 | 0) + 1) | 0)) {
			HEAPF[dsp + 480 + ((l17 | 0) << 2) >> 2] = 0.;
			
		}
		for (l18 = 0; (((l18 | 0) < 3) | 0); l18 = (((l18 | 0) + 1) | 0)) {
			HEAPF[dsp + 492 + ((l18 | 0) << 2) >> 2] = 0.;
			
		}
		for (l19 = 0; (((l19 | 0) < 3) | 0); l19 = (((l19 | 0) + 1) | 0)) {
			HEAPF[dsp + 508 + ((l19 | 0) << 2) >> 2] = 0.;
			
		}
		for (l20 = 0; (((l20 | 0) < 3) | 0); l20 = (((l20 | 0) + 1) | 0)) {
			HEAPF[dsp + 520 + ((l20 | 0) << 2) >> 2] = 0.;
			
		}
		for (l21 = 0; (((l21 | 0) < 3) | 0); l21 = (((l21 | 0) + 1) | 0)) {
			HEAPF[dsp + 532 + ((l21 | 0) << 2) >> 2] = 0.;
			
		}
		for (l22 = 0; (((l22 | 0) < 3) | 0); l22 = (((l22 | 0) + 1) | 0)) {
			HEAPF[dsp + 544 + ((l22 | 0) << 2) >> 2] = 0.;
			
		}
		for (l23 = 0; (((l23 | 0) < 3) | 0); l23 = (((l23 | 0) + 1) | 0)) {
			HEAPF[dsp + 556 + ((l23 | 0) << 2) >> 2] = 0.;
			
		}
		for (l24 = 0; (((l24 | 0) < 3) | 0); l24 = (((l24 | 0) + 1) | 0)) {
			HEAPF[dsp + 568 + ((l24 | 0) << 2) >> 2] = 0.;
			
		}
		for (l25 = 0; (((l25 | 0) < 3) | 0); l25 = (((l25 | 0) + 1) | 0)) {
			HEAPF[dsp + 580 + ((l25 | 0) << 2) >> 2] = 0.;
			
		}
		for (l26 = 0; (((l26 | 0) < 3) | 0); l26 = (((l26 | 0) + 1) | 0)) {
			HEAPF[dsp + 592 + ((l26 | 0) << 2) >> 2] = 0.;
			
		}
		for (l27 = 0; (((l27 | 0) < 2) | 0); l27 = (((l27 | 0) + 1) | 0)) {
			HEAPF[dsp + 608 + ((l27 | 0) << 2) >> 2] = 0.;
			
		}
		for (l28 = 0; (((l28 | 0) < 2) | 0); l28 = (((l28 | 0) + 1) | 0)) {
			HEAPF[dsp + 644 + ((l28 | 0) << 2) >> 2] = 0.;
			
		}
		for (l29 = 0; (((l29 | 0) < 3) | 0); l29 = (((l29 | 0) + 1) | 0)) {
			HEAPF[dsp + 652 + ((l29 | 0) << 2) >> 2] = 0.;
			
		}
		for (l30 = 0; (((l30 | 0) < 3) | 0); l30 = (((l30 | 0) + 1) | 0)) {
			HEAPF[dsp + 664 + ((l30 | 0) << 2) >> 2] = 0.;
			
		}
		for (l31 = 0; (((l31 | 0) < 2) | 0); l31 = (((l31 | 0) + 1) | 0)) {
			HEAPF[dsp + 676 + ((l31 | 0) << 2) >> 2] = 0.;
			
		}
		for (l32 = 0; (((l32 | 0) < 2) | 0); l32 = (((l32 | 0) + 1) | 0)) {
			HEAPF[dsp + 688 + ((l32 | 0) << 2) >> 2] = 0.;
			
		}
		for (l33 = 0; (((l33 | 0) < 3) | 0); l33 = (((l33 | 0) + 1) | 0)) {
			HEAPF[dsp + 700 + ((l33 | 0) << 2) >> 2] = 0.;
			
		}
		for (l34 = 0; (((l34 | 0) < 3) | 0); l34 = (((l34 | 0) + 1) | 0)) {
			HEAPF[dsp + 716 + ((l34 | 0) << 2) >> 2] = 0.;
			
		}
		for (l35 = 0; (((l35 | 0) < 3) | 0); l35 = (((l35 | 0) + 1) | 0)) {
			HEAPF[dsp + 728 + ((l35 | 0) << 2) >> 2] = 0.;
			
		}
		for (l36 = 0; (((l36 | 0) < 3) | 0); l36 = (((l36 | 0) + 1) | 0)) {
			HEAPF[dsp + 740 + ((l36 | 0) << 2) >> 2] = 0.;
			
		}
		for (l37 = 0; (((l37 | 0) < 3) | 0); l37 = (((l37 | 0) + 1) | 0)) {
			HEAPF[dsp + 752 + ((l37 | 0) << 2) >> 2] = 0.;
			
		}
		for (l38 = 0; (((l38 | 0) < 3) | 0); l38 = (((l38 | 0) + 1) | 0)) {
			HEAPF[dsp + 764 + ((l38 | 0) << 2) >> 2] = 0.;
			
		}
		for (l39 = 0; (((l39 | 0) < 3) | 0); l39 = (((l39 | 0) + 1) | 0)) {
			HEAPF[dsp + 776 + ((l39 | 0) << 2) >> 2] = 0.;
			
		}
		for (l40 = 0; (((l40 | 0) < 3) | 0); l40 = (((l40 | 0) + 1) | 0)) {
			HEAPF[dsp + 788 + ((l40 | 0) << 2) >> 2] = 0.;
			
		}
		for (l41 = 0; (((l41 | 0) < 2) | 0); l41 = (((l41 | 0) + 1) | 0)) {
			HEAPF[dsp + 804 + ((l41 | 0) << 2) >> 2] = 0.;
			
		}
		for (l42 = 0; (((l42 | 0) < 2) | 0); l42 = (((l42 | 0) + 1) | 0)) {
			HEAPF[dsp + 840 + ((l42 | 0) << 2) >> 2] = 0.;
			
		}
		for (l43 = 0; (((l43 | 0) < 3) | 0); l43 = (((l43 | 0) + 1) | 0)) {
			HEAPF[dsp + 848 + ((l43 | 0) << 2) >> 2] = 0.;
			
		}
		for (l44 = 0; (((l44 | 0) < 3) | 0); l44 = (((l44 | 0) + 1) | 0)) {
			HEAPF[dsp + 860 + ((l44 | 0) << 2) >> 2] = 0.;
			
		}
		for (l45 = 0; (((l45 | 0) < 2) | 0); l45 = (((l45 | 0) + 1) | 0)) {
			HEAPF[dsp + 872 + ((l45 | 0) << 2) >> 2] = 0.;
			
		}
		for (l46 = 0; (((l46 | 0) < 2) | 0); l46 = (((l46 | 0) + 1) | 0)) {
			HEAPF[dsp + 884 + ((l46 | 0) << 2) >> 2] = 0.;
			
		}
		for (l47 = 0; (((l47 | 0) < 3) | 0); l47 = (((l47 | 0) + 1) | 0)) {
			HEAPF[dsp + 896 + ((l47 | 0) << 2) >> 2] = 0.;
			
		}
		for (l48 = 0; (((l48 | 0) < 3) | 0); l48 = (((l48 | 0) + 1) | 0)) {
			HEAPF[dsp + 912 + ((l48 | 0) << 2) >> 2] = 0.;
			
		}
		for (l49 = 0; (((l49 | 0) < 3) | 0); l49 = (((l49 | 0) + 1) | 0)) {
			HEAPF[dsp + 924 + ((l49 | 0) << 2) >> 2] = 0.;
			
		}
		for (l50 = 0; (((l50 | 0) < 3) | 0); l50 = (((l50 | 0) + 1) | 0)) {
			HEAPF[dsp + 936 + ((l50 | 0) << 2) >> 2] = 0.;
			
		}
		for (l51 = 0; (((l51 | 0) < 3) | 0); l51 = (((l51 | 0) + 1) | 0)) {
			HEAPF[dsp + 948 + ((l51 | 0) << 2) >> 2] = 0.;
			
		}
		for (l52 = 0; (((l52 | 0) < 3) | 0); l52 = (((l52 | 0) + 1) | 0)) {
			HEAPF[dsp + 960 + ((l52 | 0) << 2) >> 2] = 0.;
			
		}
		for (l53 = 0; (((l53 | 0) < 3) | 0); l53 = (((l53 | 0) + 1) | 0)) {
			HEAPF[dsp + 972 + ((l53 | 0) << 2) >> 2] = 0.;
			
		}
		for (l54 = 0; (((l54 | 0) < 2) | 0); l54 = (((l54 | 0) + 1) | 0)) {
			HEAPF[dsp + 988 + ((l54 | 0) << 2) >> 2] = 0.;
			
		}
		for (l55 = 0; (((l55 | 0) < 2) | 0); l55 = (((l55 | 0) + 1) | 0)) {
			HEAPF[dsp + 1024 + ((l55 | 0) << 2) >> 2] = 0.;
			
		}
		for (l56 = 0; (((l56 | 0) < 3) | 0); l56 = (((l56 | 0) + 1) | 0)) {
			HEAPF[dsp + 1032 + ((l56 | 0) << 2) >> 2] = 0.;
			
		}
		for (l57 = 0; (((l57 | 0) < 3) | 0); l57 = (((l57 | 0) + 1) | 0)) {
			HEAPF[dsp + 1044 + ((l57 | 0) << 2) >> 2] = 0.;
			
		}
		for (l58 = 0; (((l58 | 0) < 2) | 0); l58 = (((l58 | 0) + 1) | 0)) {
			HEAPF[dsp + 1056 + ((l58 | 0) << 2) >> 2] = 0.;
			
		}
		for (l59 = 0; (((l59 | 0) < 2) | 0); l59 = (((l59 | 0) + 1) | 0)) {
			HEAPF[dsp + 1068 + ((l59 | 0) << 2) >> 2] = 0.;
			
		}
		for (l60 = 0; (((l60 | 0) < 3) | 0); l60 = (((l60 | 0) + 1) | 0)) {
			HEAPF[dsp + 1080 + ((l60 | 0) << 2) >> 2] = 0.;
			
		}
		for (l61 = 0; (((l61 | 0) < 3) | 0); l61 = (((l61 | 0) + 1) | 0)) {
			HEAPF[dsp + 1096 + ((l61 | 0) << 2) >> 2] = 0.;
			
		}
		for (l62 = 0; (((l62 | 0) < 3) | 0); l62 = (((l62 | 0) + 1) | 0)) {
			HEAPF[dsp + 1108 + ((l62 | 0) << 2) >> 2] = 0.;
			
		}
		for (l63 = 0; (((l63 | 0) < 3) | 0); l63 = (((l63 | 0) + 1) | 0)) {
			HEAPF[dsp + 1120 + ((l63 | 0) << 2) >> 2] = 0.;
			
		}
		for (l64 = 0; (((l64 | 0) < 3) | 0); l64 = (((l64 | 0) + 1) | 0)) {
			HEAPF[dsp + 1132 + ((l64 | 0) << 2) >> 2] = 0.;
			
		}
		for (l65 = 0; (((l65 | 0) < 3) | 0); l65 = (((l65 | 0) + 1) | 0)) {
			HEAPF[dsp + 1144 + ((l65 | 0) << 2) >> 2] = 0.;
			
		}
		for (l66 = 0; (((l66 | 0) < 2) | 0); l66 = (((l66 | 0) + 1) | 0)) {
			HEAPF[dsp + 1160 + ((l66 | 0) << 2) >> 2] = 0.;
			
		}
		for (l67 = 0; (((l67 | 0) < 2) | 0); l67 = (((l67 | 0) + 1) | 0)) {
			HEAPF[dsp + 1196 + ((l67 | 0) << 2) >> 2] = 0.;
			
		}
		for (l68 = 0; (((l68 | 0) < 3) | 0); l68 = (((l68 | 0) + 1) | 0)) {
			HEAPF[dsp + 1204 + ((l68 | 0) << 2) >> 2] = 0.;
			
		}
		for (l69 = 0; (((l69 | 0) < 3) | 0); l69 = (((l69 | 0) + 1) | 0)) {
			HEAPF[dsp + 1216 + ((l69 | 0) << 2) >> 2] = 0.;
			
		}
		for (l70 = 0; (((l70 | 0) < 2) | 0); l70 = (((l70 | 0) + 1) | 0)) {
			HEAPF[dsp + 1228 + ((l70 | 0) << 2) >> 2] = 0.;
			
		}
		for (l71 = 0; (((l71 | 0) < 2) | 0); l71 = (((l71 | 0) + 1) | 0)) {
			HEAPF[dsp + 1240 + ((l71 | 0) << 2) >> 2] = 0.;
			
		}
		for (l72 = 0; (((l72 | 0) < 3) | 0); l72 = (((l72 | 0) + 1) | 0)) {
			HEAPF[dsp + 1252 + ((l72 | 0) << 2) >> 2] = 0.;
			
		}
		for (l73 = 0; (((l73 | 0) < 3) | 0); l73 = (((l73 | 0) + 1) | 0)) {
			HEAPF[dsp + 1268 + ((l73 | 0) << 2) >> 2] = 0.;
			
		}
		for (l74 = 0; (((l74 | 0) < 3) | 0); l74 = (((l74 | 0) + 1) | 0)) {
			HEAPF[dsp + 1280 + ((l74 | 0) << 2) >> 2] = 0.;
			
		}
		for (l75 = 0; (((l75 | 0) < 3) | 0); l75 = (((l75 | 0) + 1) | 0)) {
			HEAPF[dsp + 1292 + ((l75 | 0) << 2) >> 2] = 0.;
			
		}
		for (l76 = 0; (((l76 | 0) < 3) | 0); l76 = (((l76 | 0) + 1) | 0)) {
			HEAPF[dsp + 1304 + ((l76 | 0) << 2) >> 2] = 0.;
			
		}
		for (l77 = 0; (((l77 | 0) < 2) | 0); l77 = (((l77 | 0) + 1) | 0)) {
			HEAPF[dsp + 1320 + ((l77 | 0) << 2) >> 2] = 0.;
			
		}
		for (l78 = 0; (((l78 | 0) < 2) | 0); l78 = (((l78 | 0) + 1) | 0)) {
			HEAPF[dsp + 1356 + ((l78 | 0) << 2) >> 2] = 0.;
			
		}
		for (l79 = 0; (((l79 | 0) < 3) | 0); l79 = (((l79 | 0) + 1) | 0)) {
			HEAPF[dsp + 1364 + ((l79 | 0) << 2) >> 2] = 0.;
			
		}
		for (l80 = 0; (((l80 | 0) < 3) | 0); l80 = (((l80 | 0) + 1) | 0)) {
			HEAPF[dsp + 1376 + ((l80 | 0) << 2) >> 2] = 0.;
			
		}
		for (l81 = 0; (((l81 | 0) < 2) | 0); l81 = (((l81 | 0) + 1) | 0)) {
			HEAPF[dsp + 1388 + ((l81 | 0) << 2) >> 2] = 0.;
			
		}
		for (l82 = 0; (((l82 | 0) < 2) | 0); l82 = (((l82 | 0) + 1) | 0)) {
			HEAPF[dsp + 1400 + ((l82 | 0) << 2) >> 2] = 0.;
			
		}
		for (l83 = 0; (((l83 | 0) < 3) | 0); l83 = (((l83 | 0) + 1) | 0)) {
			HEAPF[dsp + 1412 + ((l83 | 0) << 2) >> 2] = 0.;
			
		}
		for (l84 = 0; (((l84 | 0) < 3) | 0); l84 = (((l84 | 0) + 1) | 0)) {
			HEAPF[dsp + 1428 + ((l84 | 0) << 2) >> 2] = 0.;
			
		}
		for (l85 = 0; (((l85 | 0) < 3) | 0); l85 = (((l85 | 0) + 1) | 0)) {
			HEAPF[dsp + 1440 + ((l85 | 0) << 2) >> 2] = 0.;
			
		}
		for (l86 = 0; (((l86 | 0) < 3) | 0); l86 = (((l86 | 0) + 1) | 0)) {
			HEAPF[dsp + 1452 + ((l86 | 0) << 2) >> 2] = 0.;
			
		}
		for (l87 = 0; (((l87 | 0) < 2) | 0); l87 = (((l87 | 0) + 1) | 0)) {
			HEAPF[dsp + 1468 + ((l87 | 0) << 2) >> 2] = 0.;
			
		}
		for (l88 = 0; (((l88 | 0) < 2) | 0); l88 = (((l88 | 0) + 1) | 0)) {
			HEAPF[dsp + 1504 + ((l88 | 0) << 2) >> 2] = 0.;
			
		}
		for (l89 = 0; (((l89 | 0) < 3) | 0); l89 = (((l89 | 0) + 1) | 0)) {
			HEAPF[dsp + 1512 + ((l89 | 0) << 2) >> 2] = 0.;
			
		}
		for (l90 = 0; (((l90 | 0) < 3) | 0); l90 = (((l90 | 0) + 1) | 0)) {
			HEAPF[dsp + 1524 + ((l90 | 0) << 2) >> 2] = 0.;
			
		}
		for (l91 = 0; (((l91 | 0) < 2) | 0); l91 = (((l91 | 0) + 1) | 0)) {
			HEAPF[dsp + 1536 + ((l91 | 0) << 2) >> 2] = 0.;
			
		}
		for (l92 = 0; (((l92 | 0) < 2) | 0); l92 = (((l92 | 0) + 1) | 0)) {
			HEAPF[dsp + 1548 + ((l92 | 0) << 2) >> 2] = 0.;
			
		}
		for (l93 = 0; (((l93 | 0) < 3) | 0); l93 = (((l93 | 0) + 1) | 0)) {
			HEAPF[dsp + 1560 + ((l93 | 0) << 2) >> 2] = 0.;
			
		}
		for (l94 = 0; (((l94 | 0) < 3) | 0); l94 = (((l94 | 0) + 1) | 0)) {
			HEAPF[dsp + 1576 + ((l94 | 0) << 2) >> 2] = 0.;
			
		}
		for (l95 = 0; (((l95 | 0) < 3) | 0); l95 = (((l95 | 0) + 1) | 0)) {
			HEAPF[dsp + 1588 + ((l95 | 0) << 2) >> 2] = 0.;
			
		}
		for (l96 = 0; (((l96 | 0) < 2) | 0); l96 = (((l96 | 0) + 1) | 0)) {
			HEAPF[dsp + 1604 + ((l96 | 0) << 2) >> 2] = 0.;
			
		}
		for (l97 = 0; (((l97 | 0) < 2) | 0); l97 = (((l97 | 0) + 1) | 0)) {
			HEAPF[dsp + 1636 + ((l97 | 0) << 2) >> 2] = 0.;
			
		}
		for (l98 = 0; (((l98 | 0) < 3) | 0); l98 = (((l98 | 0) + 1) | 0)) {
			HEAPF[dsp + 1644 + ((l98 | 0) << 2) >> 2] = 0.;
			
		}
		for (l99 = 0; (((l99 | 0) < 3) | 0); l99 = (((l99 | 0) + 1) | 0)) {
			HEAPF[dsp + 1656 + ((l99 | 0) << 2) >> 2] = 0.;
			
		}
		for (l100 = 0; (((l100 | 0) < 2) | 0); l100 = (((l100 | 0) + 1) | 0)) {
			HEAPF[dsp + 1668 + ((l100 | 0) << 2) >> 2] = 0.;
			
		}
		for (l101 = 0; (((l101 | 0) < 2) | 0); l101 = (((l101 | 0) + 1) | 0)) {
			HEAPF[dsp + 1680 + ((l101 | 0) << 2) >> 2] = 0.;
			
		}
		for (l102 = 0; (((l102 | 0) < 3) | 0); l102 = (((l102 | 0) + 1) | 0)) {
			HEAPF[dsp + 1692 + ((l102 | 0) << 2) >> 2] = 0.;
			
		}
		for (l103 = 0; (((l103 | 0) < 3) | 0); l103 = (((l103 | 0) + 1) | 0)) {
			HEAPF[dsp + 1708 + ((l103 | 0) << 2) >> 2] = 0.;
			
		}
		for (l104 = 0; (((l104 | 0) < 2) | 0); l104 = (((l104 | 0) + 1) | 0)) {
			HEAPF[dsp + 1724 + ((l104 | 0) << 2) >> 2] = 0.;
			
		}
		for (l105 = 0; (((l105 | 0) < 2) | 0); l105 = (((l105 | 0) + 1) | 0)) {
			HEAPF[dsp + 1732 + ((l105 | 0) << 2) >> 2] = 0.;
			
		}
		for (l106 = 0; (((l106 | 0) < 3) | 0); l106 = (((l106 | 0) + 1) | 0)) {
			HEAPF[dsp + 1740 + ((l106 | 0) << 2) >> 2] = 0.;
			
		}
		for (l107 = 0; (((l107 | 0) < 3) | 0); l107 = (((l107 | 0) + 1) | 0)) {
			HEAPF[dsp + 1752 + ((l107 | 0) << 2) >> 2] = 0.;
			
		}
		for (l108 = 0; (((l108 | 0) < 2) | 0); l108 = (((l108 | 0) + 1) | 0)) {
			HEAPF[dsp + 1768 + ((l108 | 0) << 2) >> 2] = 0.;
			
		}
		
	}
	
	function init(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		classInit(dsp, samplingFreq);
		instanceInit(dsp, samplingFreq);
	}
	
	function instanceInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceConstants(dsp, samplingFreq);
		instanceResetUserInterface(dsp);
		instanceClear(dsp);
	}
	
	function getSampleRate(dsp) {
		dsp = dsp | 0;
		return HEAP32[dsp + 4 >> 2] | 0;
	}
	
	function setParamValue(dsp, offset, value) {
		dsp = dsp | 0;
		offset = offset | 0;
		value = +value;
		HEAPF[dsp + offset >> 2] = value;
	}
	
	function getParamValue(dsp, offset) {
		dsp = dsp | 0;
		offset = offset | 0;
		return +(HEAPF[dsp + offset >> 2]);
	}
	
	function compute(dsp, count, inputs, outputs) {
		dsp = dsp | 0;
		count = count | 0;
		inputs = inputs | 0;
		outputs = outputs | 0;
		var input0 = 0;
		var output0 = 0;
		var iSlow0 = 0;
		var fSlow1 = 0.;
		var fSlow2 = 0.;
		var fSlow3 = 0.;
		var fSlow4 = 0.;
		var fSlow5 = 0.;
		var fSlow6 = 0.;
		var fSlow7 = 0.;
		var fSlow8 = 0.;
		var fSlow9 = 0.;
		var fSlow10 = 0.;
		var i = 0;
		var fTemp0 = 0.;
		var fTemp1 = 0.;
		var fTemp2 = 0.;
		var fTemp3 = 0.;
		var fTemp4 = 0.;
		var fTemp5 = 0.;
		var fTemp6 = 0.;
		var fTemp7 = 0.;
		var fTemp8 = 0.;
		var fTemp9 = 0.;
		var fTemp10 = 0.;
		var fTemp11 = 0.;
		var fTemp12 = 0.;
		var fTemp13 = 0.;
		var fTemp14 = 0.;
		var fTemp15 = 0.;
		var fTemp16 = 0.;
		var fTemp17 = 0.;
		var fTemp18 = 0.;
		var fTemp19 = 0.;
		var fTemp20 = 0.;
		var fTemp21 = 0.;
		var fTemp22 = 0.;
		var fTemp23 = 0.;
		var fTemp24 = 0.;
		var fTemp25 = 0.;
		var fTemp26 = 0.;
		var fTemp27 = 0.;
		var fTemp28 = 0.;
		var fTemp29 = 0.;
		var fTemp30 = 0.;
		var fTemp31 = 0.;
		var fTemp32 = 0.;
		var fTemp33 = 0.;
		var fTemp34 = 0.;
		var fTemp35 = 0.;
		var fTemp36 = 0.;
		var fTemp37 = 0.;
		var fTemp38 = 0.;
		var fTemp39 = 0.;
		var fTemp40 = 0.;
		var fTemp41 = 0.;
		var fTemp42 = 0.;
		var fTemp43 = 0.;
		var fTemp44 = 0.;
		var fTemp45 = 0.;
		input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);
		output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);
		iSlow0 = ~~(+(+(HEAPF[dsp + 0 >> 2])));
		fSlow1 = +(0.00100000005 * +(+(HEAPF[dsp + 396 >> 2])));
		fSlow2 = +(0.00100000005 * +(+(HEAPF[dsp + 604 >> 2])));
		fSlow3 = +(0.00100000005 * +(+(HEAPF[dsp + 800 >> 2])));
		fSlow4 = +(0.00100000005 * +(+(HEAPF[dsp + 984 >> 2])));
		fSlow5 = +(0.00100000005 * +(+(HEAPF[dsp + 1156 >> 2])));
		fSlow6 = +(0.00100000005 * +(+(HEAPF[dsp + 1316 >> 2])));
		fSlow7 = +(0.00100000005 * +(+(HEAPF[dsp + 1464 >> 2])));
		fSlow8 = +(0.00100000005 * +(+(HEAPF[dsp + 1600 >> 2])));
		fSlow9 = +(0.00100000005 * +(+(HEAPF[dsp + 1720 >> 2])));
		fSlow10 = +(0.00100000005 * +(+(HEAPF[dsp + 1764 >> 2])));
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			fTemp0 = +(+(HEAPF[input0 + ((i | 0) << 2) >> 2]));
			fTemp1 = +((iSlow0 | 0)?0.:+(fTemp0));
			HEAPF[dsp + 52 + (0 << 2) >> 2] = +(fTemp1);
			HEAPF[dsp + 64 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 44 >> 2]) * +(HEAPF[dsp + 64 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 48 >> 2]) * +(+(+(HEAPF[dsp + 16 >> 2]) * +(fTemp1)) + +(+(HEAPF[dsp + 60 >> 2]) * +(HEAPF[dsp + 52 + (1 << 2) >> 2])))));
			HEAPF[dsp + 80 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 64 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 36 >> 2]) * +(+(+(HEAPF[dsp + 72 >> 2]) * +(HEAPF[dsp + 80 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 76 >> 2]) * +(HEAPF[dsp + 80 + (2 << 2) >> 2])))));
			HEAPF[dsp + 96 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 36 >> 2]) * +(+(+(+(HEAPF[dsp + 28 >> 2]) * +(HEAPF[dsp + 80 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 32 >> 2]) * +(HEAPF[dsp + 80 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 28 >> 2]) * +(HEAPF[dsp + 80 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 24 >> 2]) * +(+(+(HEAPF[dsp + 72 >> 2]) * +(HEAPF[dsp + 96 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 92 >> 2]) * +(HEAPF[dsp + 96 + (2 << 2) >> 2])))));
			fTemp2 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 132 + (1 << 2) >> 2]));
			HEAPF[dsp + 132 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 24 >> 2]) * +(+(+(+(HEAPF[dsp + 32 >> 2]) * +(HEAPF[dsp + 96 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 28 >> 2]) * +(HEAPF[dsp + 96 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 28 >> 2]) * +(HEAPF[dsp + 96 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 132 + (2 << 2) >> 2])) + +(fTemp2))));
			fTemp3 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 168 + (1 << 2) >> 2]));
			HEAPF[dsp + 168 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 132 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp2) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 132 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 168 + (2 << 2) >> 2])) + +(fTemp3))));
			fTemp4 = +(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 204 + (1 << 2) >> 2]));
			HEAPF[dsp + 204 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 168 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp3) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 168 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 188 >> 2]) * +(+(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 204 + (2 << 2) >> 2])) + +(fTemp4))));
			fTemp5 = +(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 240 + (1 << 2) >> 2]));
			HEAPF[dsp + 240 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 204 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp4) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 204 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 224 >> 2]) * +(+(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 240 + (2 << 2) >> 2])) + +(fTemp5))));
			fTemp6 = +(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 276 + (1 << 2) >> 2]));
			HEAPF[dsp + 276 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 240 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp5) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 240 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 260 >> 2]) * +(+(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 276 + (2 << 2) >> 2])) + +(fTemp6))));
			fTemp7 = +(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 312 + (1 << 2) >> 2]));
			HEAPF[dsp + 312 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 276 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp6) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 276 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 296 >> 2]) * +(+(+(HEAPF[dsp + 300 >> 2]) * +(HEAPF[dsp + 312 + (2 << 2) >> 2])) + +(fTemp7))));
			fTemp8 = +(+(HEAPF[dsp + 344 >> 2]) * +(HEAPF[dsp + 348 + (1 << 2) >> 2]));
			HEAPF[dsp + 348 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 312 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 296 >> 2]) * +(+(fTemp7) + +(+(HEAPF[dsp + 300 >> 2]) * +(HEAPF[dsp + 312 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 332 >> 2]) * +(+(+(HEAPF[dsp + 336 >> 2]) * +(HEAPF[dsp + 348 + (2 << 2) >> 2])) + +(fTemp8))));
			fTemp9 = +(+(HEAPF[dsp + 380 >> 2]) * +(HEAPF[dsp + 384 + (1 << 2) >> 2]));
			HEAPF[dsp + 384 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 348 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 332 >> 2]) * +(+(fTemp8) + +(+(HEAPF[dsp + 336 >> 2]) * +(HEAPF[dsp + 348 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 368 >> 2]) * +(+(+(HEAPF[dsp + 372 >> 2]) * +(HEAPF[dsp + 384 + (2 << 2) >> 2])) + +(fTemp9))));
			HEAPF[dsp + 400 + (0 << 2) >> 2] = +(+(fSlow1) + +(0.999000013 * +(HEAPF[dsp + 400 + (1 << 2) >> 2])));
			HEAPF[dsp + 436 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 44 >> 2]) * +(HEAPF[dsp + 436 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 48 >> 2]) * +(+(fTemp1) + +(HEAPF[dsp + 52 + (1 << 2) >> 2]))));
			HEAPF[dsp + 444 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 436 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 36 >> 2]) * +(+(+(HEAPF[dsp + 72 >> 2]) * +(HEAPF[dsp + 444 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 76 >> 2]) * +(HEAPF[dsp + 444 + (2 << 2) >> 2])))));
			HEAPF[dsp + 456 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 36 >> 2]) * +(+(HEAPF[dsp + 444 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 444 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 444 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 24 >> 2]) * +(+(+(HEAPF[dsp + 72 >> 2]) * +(HEAPF[dsp + 456 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 92 >> 2]) * +(HEAPF[dsp + 456 + (2 << 2) >> 2])))));
			fTemp10 = +(+(HEAPF[dsp + 456 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 456 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 456 + (1 << 2) >> 2]))));
			HEAPF[dsp + 468 + (0 << 2) >> 2] = +(fTemp10);
			HEAPF[dsp + 480 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 428 >> 2]) * +(HEAPF[dsp + 480 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 432 >> 2]) * +(+(+(HEAPF[dsp + 364 >> 2]) * +(fTemp10)) + +(+(HEAPF[dsp + 476 >> 2]) * +(HEAPF[dsp + 468 + (1 << 2) >> 2])))));
			HEAPF[dsp + 492 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 480 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 420 >> 2]) * +(+(+(HEAPF[dsp + 380 >> 2]) * +(HEAPF[dsp + 492 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 488 >> 2]) * +(HEAPF[dsp + 492 + (2 << 2) >> 2])))));
			HEAPF[dsp + 508 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 420 >> 2]) * +(+(+(+(HEAPF[dsp + 376 >> 2]) * +(HEAPF[dsp + 492 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 416 >> 2]) * +(HEAPF[dsp + 492 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 376 >> 2]) * +(HEAPF[dsp + 492 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 412 >> 2]) * +(+(+(HEAPF[dsp + 380 >> 2]) * +(HEAPF[dsp + 508 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 504 >> 2]) * +(HEAPF[dsp + 508 + (2 << 2) >> 2])))));
			fTemp11 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 520 + (1 << 2) >> 2]));
			HEAPF[dsp + 520 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 412 >> 2]) * +(+(+(+(HEAPF[dsp + 416 >> 2]) * +(HEAPF[dsp + 508 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 376 >> 2]) * +(HEAPF[dsp + 508 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 376 >> 2]) * +(HEAPF[dsp + 508 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp11) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 520 + (2 << 2) >> 2])))));
			fTemp12 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 532 + (1 << 2) >> 2]));
			HEAPF[dsp + 532 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 520 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp11) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 520 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp12) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 532 + (2 << 2) >> 2])))));
			fTemp13 = +(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 544 + (1 << 2) >> 2]));
			HEAPF[dsp + 544 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 532 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp12) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 532 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp13) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 544 + (2 << 2) >> 2])))));
			fTemp14 = +(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 556 + (1 << 2) >> 2]));
			HEAPF[dsp + 556 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 544 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp13) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 544 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp14) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 556 + (2 << 2) >> 2])))));
			fTemp15 = +(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 568 + (1 << 2) >> 2]));
			HEAPF[dsp + 568 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 556 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp14) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 556 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp15) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 568 + (2 << 2) >> 2])))));
			fTemp16 = +(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 580 + (1 << 2) >> 2]));
			HEAPF[dsp + 580 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 568 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp15) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 568 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 296 >> 2]) * +(+(fTemp16) + +(+(HEAPF[dsp + 300 >> 2]) * +(HEAPF[dsp + 580 + (2 << 2) >> 2])))));
			fTemp17 = +(+(HEAPF[dsp + 344 >> 2]) * +(HEAPF[dsp + 592 + (1 << 2) >> 2]));
			HEAPF[dsp + 592 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 580 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 296 >> 2]) * +(+(fTemp16) + +(+(HEAPF[dsp + 300 >> 2]) * +(HEAPF[dsp + 580 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 332 >> 2]) * +(+(fTemp17) + +(+(HEAPF[dsp + 336 >> 2]) * +(HEAPF[dsp + 592 + (2 << 2) >> 2])))));
			HEAPF[dsp + 608 + (0 << 2) >> 2] = +(+(fSlow2) + +(0.999000013 * +(HEAPF[dsp + 608 + (1 << 2) >> 2])));
			HEAPF[dsp + 644 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 428 >> 2]) * +(HEAPF[dsp + 644 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 432 >> 2]) * +(+(fTemp10) + +(HEAPF[dsp + 468 + (1 << 2) >> 2]))));
			HEAPF[dsp + 652 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 644 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 420 >> 2]) * +(+(+(HEAPF[dsp + 380 >> 2]) * +(HEAPF[dsp + 652 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 488 >> 2]) * +(HEAPF[dsp + 652 + (2 << 2) >> 2])))));
			HEAPF[dsp + 664 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 420 >> 2]) * +(+(HEAPF[dsp + 652 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 652 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 652 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 412 >> 2]) * +(+(+(HEAPF[dsp + 380 >> 2]) * +(HEAPF[dsp + 664 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 504 >> 2]) * +(HEAPF[dsp + 664 + (2 << 2) >> 2])))));
			fTemp18 = +(+(HEAPF[dsp + 664 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 664 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 664 + (1 << 2) >> 2]))));
			HEAPF[dsp + 676 + (0 << 2) >> 2] = +(fTemp18);
			HEAPF[dsp + 688 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 636 >> 2]) * +(HEAPF[dsp + 688 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 640 >> 2]) * +(+(+(HEAPF[dsp + 328 >> 2]) * +(fTemp18)) + +(+(HEAPF[dsp + 684 >> 2]) * +(HEAPF[dsp + 676 + (1 << 2) >> 2])))));
			HEAPF[dsp + 700 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 688 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 628 >> 2]) * +(+(+(HEAPF[dsp + 344 >> 2]) * +(HEAPF[dsp + 700 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 696 >> 2]) * +(HEAPF[dsp + 700 + (2 << 2) >> 2])))));
			HEAPF[dsp + 716 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 628 >> 2]) * +(+(+(+(HEAPF[dsp + 340 >> 2]) * +(HEAPF[dsp + 700 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 624 >> 2]) * +(HEAPF[dsp + 700 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 340 >> 2]) * +(HEAPF[dsp + 700 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 620 >> 2]) * +(+(+(HEAPF[dsp + 344 >> 2]) * +(HEAPF[dsp + 716 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 712 >> 2]) * +(HEAPF[dsp + 716 + (2 << 2) >> 2])))));
			fTemp19 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 728 + (1 << 2) >> 2]));
			HEAPF[dsp + 728 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 620 >> 2]) * +(+(+(+(HEAPF[dsp + 624 >> 2]) * +(HEAPF[dsp + 716 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 340 >> 2]) * +(HEAPF[dsp + 716 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 340 >> 2]) * +(HEAPF[dsp + 716 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp19) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 728 + (2 << 2) >> 2])))));
			fTemp20 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 740 + (1 << 2) >> 2]));
			HEAPF[dsp + 740 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 728 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp19) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 728 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp20) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 740 + (2 << 2) >> 2])))));
			fTemp21 = +(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 752 + (1 << 2) >> 2]));
			HEAPF[dsp + 752 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 740 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp20) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 740 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp21) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 752 + (2 << 2) >> 2])))));
			fTemp22 = +(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 764 + (1 << 2) >> 2]));
			HEAPF[dsp + 764 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 752 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp21) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 752 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp22) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 764 + (2 << 2) >> 2])))));
			fTemp23 = +(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 776 + (1 << 2) >> 2]));
			HEAPF[dsp + 776 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 764 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp22) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 764 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp23) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 776 + (2 << 2) >> 2])))));
			fTemp24 = +(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 788 + (1 << 2) >> 2]));
			HEAPF[dsp + 788 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 776 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp23) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 776 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 296 >> 2]) * +(+(fTemp24) + +(+(HEAPF[dsp + 300 >> 2]) * +(HEAPF[dsp + 788 + (2 << 2) >> 2])))));
			HEAPF[dsp + 804 + (0 << 2) >> 2] = +(+(fSlow3) + +(0.999000013 * +(HEAPF[dsp + 804 + (1 << 2) >> 2])));
			HEAPF[dsp + 840 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 636 >> 2]) * +(HEAPF[dsp + 840 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 640 >> 2]) * +(+(fTemp18) + +(HEAPF[dsp + 676 + (1 << 2) >> 2]))));
			HEAPF[dsp + 848 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 840 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 628 >> 2]) * +(+(+(HEAPF[dsp + 344 >> 2]) * +(HEAPF[dsp + 848 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 696 >> 2]) * +(HEAPF[dsp + 848 + (2 << 2) >> 2])))));
			HEAPF[dsp + 860 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 628 >> 2]) * +(+(HEAPF[dsp + 848 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 848 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 848 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 620 >> 2]) * +(+(+(HEAPF[dsp + 344 >> 2]) * +(HEAPF[dsp + 860 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 712 >> 2]) * +(HEAPF[dsp + 860 + (2 << 2) >> 2])))));
			fTemp25 = +(+(HEAPF[dsp + 860 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 860 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 860 + (1 << 2) >> 2]))));
			HEAPF[dsp + 872 + (0 << 2) >> 2] = +(fTemp25);
			HEAPF[dsp + 884 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 832 >> 2]) * +(HEAPF[dsp + 884 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 836 >> 2]) * +(+(+(HEAPF[dsp + 292 >> 2]) * +(fTemp25)) + +(+(HEAPF[dsp + 880 >> 2]) * +(HEAPF[dsp + 872 + (1 << 2) >> 2])))));
			HEAPF[dsp + 896 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 884 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 824 >> 2]) * +(+(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 896 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 892 >> 2]) * +(HEAPF[dsp + 896 + (2 << 2) >> 2])))));
			HEAPF[dsp + 912 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 824 >> 2]) * +(+(+(+(HEAPF[dsp + 304 >> 2]) * +(HEAPF[dsp + 896 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 820 >> 2]) * +(HEAPF[dsp + 896 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 304 >> 2]) * +(HEAPF[dsp + 896 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 816 >> 2]) * +(+(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 912 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 908 >> 2]) * +(HEAPF[dsp + 912 + (2 << 2) >> 2])))));
			fTemp26 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 924 + (1 << 2) >> 2]));
			HEAPF[dsp + 924 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 816 >> 2]) * +(+(+(+(HEAPF[dsp + 820 >> 2]) * +(HEAPF[dsp + 912 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 304 >> 2]) * +(HEAPF[dsp + 912 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 304 >> 2]) * +(HEAPF[dsp + 912 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp26) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 924 + (2 << 2) >> 2])))));
			fTemp27 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 936 + (1 << 2) >> 2]));
			HEAPF[dsp + 936 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 924 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp26) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 924 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp27) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 936 + (2 << 2) >> 2])))));
			fTemp28 = +(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 948 + (1 << 2) >> 2]));
			HEAPF[dsp + 948 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 936 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp27) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 936 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp28) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 948 + (2 << 2) >> 2])))));
			fTemp29 = +(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 960 + (1 << 2) >> 2]));
			HEAPF[dsp + 960 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 948 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp28) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 948 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp29) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 960 + (2 << 2) >> 2])))));
			fTemp30 = +(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 972 + (1 << 2) >> 2]));
			HEAPF[dsp + 972 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 960 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp29) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 960 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp30) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 972 + (2 << 2) >> 2])))));
			HEAPF[dsp + 988 + (0 << 2) >> 2] = +(+(fSlow4) + +(0.999000013 * +(HEAPF[dsp + 988 + (1 << 2) >> 2])));
			HEAPF[dsp + 1024 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 832 >> 2]) * +(HEAPF[dsp + 1024 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 836 >> 2]) * +(+(fTemp25) + +(HEAPF[dsp + 872 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1032 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1024 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 824 >> 2]) * +(+(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 1032 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 892 >> 2]) * +(HEAPF[dsp + 1032 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1044 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 824 >> 2]) * +(+(HEAPF[dsp + 1032 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1032 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1032 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 816 >> 2]) * +(+(+(HEAPF[dsp + 308 >> 2]) * +(HEAPF[dsp + 1044 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 908 >> 2]) * +(HEAPF[dsp + 1044 + (2 << 2) >> 2])))));
			fTemp31 = +(+(HEAPF[dsp + 1044 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1044 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1044 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1056 + (0 << 2) >> 2] = +(fTemp31);
			HEAPF[dsp + 1068 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1016 >> 2]) * +(HEAPF[dsp + 1068 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1020 >> 2]) * +(+(+(HEAPF[dsp + 256 >> 2]) * +(fTemp31)) + +(+(HEAPF[dsp + 1064 >> 2]) * +(HEAPF[dsp + 1056 + (1 << 2) >> 2])))));
			HEAPF[dsp + 1080 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1068 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1008 >> 2]) * +(+(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 1080 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1076 >> 2]) * +(HEAPF[dsp + 1080 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1096 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1008 >> 2]) * +(+(+(+(HEAPF[dsp + 268 >> 2]) * +(HEAPF[dsp + 1080 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 1004 >> 2]) * +(HEAPF[dsp + 1080 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 268 >> 2]) * +(HEAPF[dsp + 1080 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 1000 >> 2]) * +(+(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 1096 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1092 >> 2]) * +(HEAPF[dsp + 1096 + (2 << 2) >> 2])))));
			fTemp32 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1108 + (1 << 2) >> 2]));
			HEAPF[dsp + 1108 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1000 >> 2]) * +(+(+(+(HEAPF[dsp + 1004 >> 2]) * +(HEAPF[dsp + 1096 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 268 >> 2]) * +(HEAPF[dsp + 1096 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 268 >> 2]) * +(HEAPF[dsp + 1096 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp32) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1108 + (2 << 2) >> 2])))));
			fTemp33 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1120 + (1 << 2) >> 2]));
			HEAPF[dsp + 1120 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1108 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp32) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1108 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp33) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 1120 + (2 << 2) >> 2])))));
			fTemp34 = +(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 1132 + (1 << 2) >> 2]));
			HEAPF[dsp + 1132 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1120 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp33) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 1120 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp34) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 1132 + (2 << 2) >> 2])))));
			fTemp35 = +(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 1144 + (1 << 2) >> 2]));
			HEAPF[dsp + 1144 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1132 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp34) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 1132 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp35) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 1144 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1160 + (0 << 2) >> 2] = +(+(fSlow5) + +(0.999000013 * +(HEAPF[dsp + 1160 + (1 << 2) >> 2])));
			HEAPF[dsp + 1196 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1016 >> 2]) * +(HEAPF[dsp + 1196 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1020 >> 2]) * +(+(fTemp31) + +(HEAPF[dsp + 1056 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1204 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1196 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1008 >> 2]) * +(+(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 1204 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1076 >> 2]) * +(HEAPF[dsp + 1204 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1216 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1008 >> 2]) * +(+(HEAPF[dsp + 1204 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1204 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1204 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 1000 >> 2]) * +(+(+(HEAPF[dsp + 272 >> 2]) * +(HEAPF[dsp + 1216 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1092 >> 2]) * +(HEAPF[dsp + 1216 + (2 << 2) >> 2])))));
			fTemp36 = +(+(HEAPF[dsp + 1216 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1216 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1216 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1228 + (0 << 2) >> 2] = +(fTemp36);
			HEAPF[dsp + 1240 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1188 >> 2]) * +(HEAPF[dsp + 1240 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1192 >> 2]) * +(+(+(HEAPF[dsp + 220 >> 2]) * +(fTemp36)) + +(+(HEAPF[dsp + 1236 >> 2]) * +(HEAPF[dsp + 1228 + (1 << 2) >> 2])))));
			HEAPF[dsp + 1252 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1240 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1180 >> 2]) * +(+(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 1252 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1248 >> 2]) * +(HEAPF[dsp + 1252 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1268 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1180 >> 2]) * +(+(+(+(HEAPF[dsp + 232 >> 2]) * +(HEAPF[dsp + 1252 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 1176 >> 2]) * +(HEAPF[dsp + 1252 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 232 >> 2]) * +(HEAPF[dsp + 1252 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 1172 >> 2]) * +(+(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 1268 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1264 >> 2]) * +(HEAPF[dsp + 1268 + (2 << 2) >> 2])))));
			fTemp37 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1280 + (1 << 2) >> 2]));
			HEAPF[dsp + 1280 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1172 >> 2]) * +(+(+(+(HEAPF[dsp + 1176 >> 2]) * +(HEAPF[dsp + 1268 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 232 >> 2]) * +(HEAPF[dsp + 1268 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 232 >> 2]) * +(HEAPF[dsp + 1268 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp37) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1280 + (2 << 2) >> 2])))));
			fTemp38 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1292 + (1 << 2) >> 2]));
			HEAPF[dsp + 1292 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1280 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp37) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1280 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp38) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 1292 + (2 << 2) >> 2])))));
			fTemp39 = +(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 1304 + (1 << 2) >> 2]));
			HEAPF[dsp + 1304 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1292 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp38) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 1292 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp39) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 1304 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1320 + (0 << 2) >> 2] = +(+(fSlow6) + +(0.999000013 * +(HEAPF[dsp + 1320 + (1 << 2) >> 2])));
			HEAPF[dsp + 1356 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1188 >> 2]) * +(HEAPF[dsp + 1356 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1192 >> 2]) * +(+(fTemp36) + +(HEAPF[dsp + 1228 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1364 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1356 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1180 >> 2]) * +(+(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 1364 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1248 >> 2]) * +(HEAPF[dsp + 1364 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1376 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1180 >> 2]) * +(+(HEAPF[dsp + 1364 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1364 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1364 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 1172 >> 2]) * +(+(+(HEAPF[dsp + 236 >> 2]) * +(HEAPF[dsp + 1376 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1264 >> 2]) * +(HEAPF[dsp + 1376 + (2 << 2) >> 2])))));
			fTemp40 = +(+(HEAPF[dsp + 1376 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1376 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1376 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1388 + (0 << 2) >> 2] = +(fTemp40);
			HEAPF[dsp + 1400 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1348 >> 2]) * +(HEAPF[dsp + 1400 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1352 >> 2]) * +(+(+(HEAPF[dsp + 184 >> 2]) * +(fTemp40)) + +(+(HEAPF[dsp + 1396 >> 2]) * +(HEAPF[dsp + 1388 + (1 << 2) >> 2])))));
			HEAPF[dsp + 1412 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1400 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1340 >> 2]) * +(+(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 1412 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1408 >> 2]) * +(HEAPF[dsp + 1412 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1428 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1340 >> 2]) * +(+(+(+(HEAPF[dsp + 196 >> 2]) * +(HEAPF[dsp + 1412 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 1336 >> 2]) * +(HEAPF[dsp + 1412 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 196 >> 2]) * +(HEAPF[dsp + 1412 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 1332 >> 2]) * +(+(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 1428 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1424 >> 2]) * +(HEAPF[dsp + 1428 + (2 << 2) >> 2])))));
			fTemp41 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1440 + (1 << 2) >> 2]));
			HEAPF[dsp + 1440 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1332 >> 2]) * +(+(+(+(HEAPF[dsp + 1336 >> 2]) * +(HEAPF[dsp + 1428 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 196 >> 2]) * +(HEAPF[dsp + 1428 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 196 >> 2]) * +(HEAPF[dsp + 1428 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp41) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1440 + (2 << 2) >> 2])))));
			fTemp42 = +(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1452 + (1 << 2) >> 2]));
			HEAPF[dsp + 1452 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1440 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp41) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1440 + (0 << 2) >> 2]))))) - +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp42) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 1452 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1468 + (0 << 2) >> 2] = +(+(fSlow7) + +(0.999000013 * +(HEAPF[dsp + 1468 + (1 << 2) >> 2])));
			HEAPF[dsp + 1504 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1348 >> 2]) * +(HEAPF[dsp + 1504 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1352 >> 2]) * +(+(fTemp40) + +(HEAPF[dsp + 1388 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1512 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1504 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1340 >> 2]) * +(+(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 1512 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1408 >> 2]) * +(HEAPF[dsp + 1512 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1524 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1340 >> 2]) * +(+(HEAPF[dsp + 1512 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1512 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1512 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 1332 >> 2]) * +(+(+(HEAPF[dsp + 200 >> 2]) * +(HEAPF[dsp + 1524 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1424 >> 2]) * +(HEAPF[dsp + 1524 + (2 << 2) >> 2])))));
			fTemp43 = +(+(HEAPF[dsp + 1524 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1524 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1524 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1536 + (0 << 2) >> 2] = +(fTemp43);
			HEAPF[dsp + 1548 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1496 >> 2]) * +(HEAPF[dsp + 1548 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1500 >> 2]) * +(+(+(HEAPF[dsp + 148 >> 2]) * +(fTemp43)) + +(+(HEAPF[dsp + 1544 >> 2]) * +(HEAPF[dsp + 1536 + (1 << 2) >> 2])))));
			HEAPF[dsp + 1560 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1548 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1488 >> 2]) * +(+(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1560 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1556 >> 2]) * +(HEAPF[dsp + 1560 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1576 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1488 >> 2]) * +(+(+(+(HEAPF[dsp + 160 >> 2]) * +(HEAPF[dsp + 1560 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 1484 >> 2]) * +(HEAPF[dsp + 1560 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 160 >> 2]) * +(HEAPF[dsp + 1560 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 1480 >> 2]) * +(+(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1576 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1572 >> 2]) * +(HEAPF[dsp + 1576 + (2 << 2) >> 2])))));
			fTemp44 = +(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1588 + (1 << 2) >> 2]));
			HEAPF[dsp + 1588 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1480 >> 2]) * +(+(+(+(HEAPF[dsp + 1484 >> 2]) * +(HEAPF[dsp + 1576 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 160 >> 2]) * +(HEAPF[dsp + 1576 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 160 >> 2]) * +(HEAPF[dsp + 1576 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp44) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1588 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1604 + (0 << 2) >> 2] = +(+(fSlow8) + +(0.999000013 * +(HEAPF[dsp + 1604 + (1 << 2) >> 2])));
			HEAPF[dsp + 1636 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1496 >> 2]) * +(HEAPF[dsp + 1636 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1500 >> 2]) * +(+(fTemp43) + +(HEAPF[dsp + 1536 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1644 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1636 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1488 >> 2]) * +(+(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1644 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1556 >> 2]) * +(HEAPF[dsp + 1644 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1656 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1488 >> 2]) * +(+(HEAPF[dsp + 1644 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1644 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1644 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 1480 >> 2]) * +(+(+(HEAPF[dsp + 164 >> 2]) * +(HEAPF[dsp + 1656 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1572 >> 2]) * +(HEAPF[dsp + 1656 + (2 << 2) >> 2])))));
			fTemp45 = +(+(HEAPF[dsp + 1656 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1656 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1656 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1668 + (0 << 2) >> 2] = +(fTemp45);
			HEAPF[dsp + 1680 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1628 >> 2]) * +(HEAPF[dsp + 1680 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1632 >> 2]) * +(+(+(HEAPF[dsp + 112 >> 2]) * +(fTemp45)) + +(+(HEAPF[dsp + 1676 >> 2]) * +(HEAPF[dsp + 1668 + (1 << 2) >> 2])))));
			HEAPF[dsp + 1692 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1680 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1620 >> 2]) * +(+(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1692 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1688 >> 2]) * +(HEAPF[dsp + 1692 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1708 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1620 >> 2]) * +(+(+(+(HEAPF[dsp + 124 >> 2]) * +(HEAPF[dsp + 1692 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 1616 >> 2]) * +(HEAPF[dsp + 1692 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 124 >> 2]) * +(HEAPF[dsp + 1692 + (2 << 2) >> 2])))) - +(+(HEAPF[dsp + 1612 >> 2]) * +(+(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1708 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1704 >> 2]) * +(HEAPF[dsp + 1708 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1724 + (0 << 2) >> 2] = +(+(fSlow9) + +(0.999000013 * +(HEAPF[dsp + 1724 + (1 << 2) >> 2])));
			HEAPF[dsp + 1732 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1628 >> 2]) * +(HEAPF[dsp + 1732 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1632 >> 2]) * +(+(fTemp45) + +(HEAPF[dsp + 1668 + (1 << 2) >> 2]))));
			HEAPF[dsp + 1740 + (0 << 2) >> 2] = +(+(HEAPF[dsp + 1732 + (0 << 2) >> 2]) - +(+(HEAPF[dsp + 1620 >> 2]) * +(+(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1740 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1688 >> 2]) * +(HEAPF[dsp + 1740 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1752 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 1620 >> 2]) * +(+(HEAPF[dsp + 1740 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1740 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1740 + (1 << 2) >> 2]))))) - +(+(HEAPF[dsp + 1612 >> 2]) * +(+(+(HEAPF[dsp + 128 >> 2]) * +(HEAPF[dsp + 1752 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 1704 >> 2]) * +(HEAPF[dsp + 1752 + (2 << 2) >> 2])))));
			HEAPF[dsp + 1768 + (0 << 2) >> 2] = +(+(fSlow10) + +(0.999000013 * +(HEAPF[dsp + 1768 + (1 << 2) >> 2])));
			HEAPF[output0 + ((i | 0) << 2) >> 2] = +(+((iSlow0 | 0)?+(fTemp0):+(+(+(+(+(+(+(+(+(+(+(HEAPF[dsp + 384 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 368 >> 2]) * +(+(fTemp9) + +(+(HEAPF[dsp + 372 >> 2]) * +(HEAPF[dsp + 384 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 400 + (0 << 2) >> 2]))))) + +(+(+(HEAPF[dsp + 592 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 332 >> 2]) * +(+(fTemp17) + +(+(HEAPF[dsp + 336 >> 2]) * +(HEAPF[dsp + 592 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 608 + (0 << 2) >> 2])))))) + +(+(+(HEAPF[dsp + 788 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 296 >> 2]) * +(+(fTemp24) + +(+(HEAPF[dsp + 300 >> 2]) * +(HEAPF[dsp + 788 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 804 + (0 << 2) >> 2])))))) + +(+(+(HEAPF[dsp + 972 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 260 >> 2]) * +(+(fTemp30) + +(+(HEAPF[dsp + 264 >> 2]) * +(HEAPF[dsp + 972 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 988 + (0 << 2) >> 2])))))) + +(+(+(HEAPF[dsp + 1144 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 224 >> 2]) * +(+(fTemp35) + +(+(HEAPF[dsp + 228 >> 2]) * +(HEAPF[dsp + 1144 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 1160 + (0 << 2) >> 2])))))) + +(+(+(HEAPF[dsp + 1304 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 188 >> 2]) * +(+(fTemp39) + +(+(HEAPF[dsp + 192 >> 2]) * +(HEAPF[dsp + 1304 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 1320 + (0 << 2) >> 2])))))) + +(+(+(HEAPF[dsp + 1452 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 152 >> 2]) * +(+(fTemp42) + +(+(HEAPF[dsp + 156 >> 2]) * +(HEAPF[dsp + 1452 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 1468 + (0 << 2) >> 2])))))) + +(+(+(HEAPF[dsp + 1588 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 116 >> 2]) * +(+(fTemp44) + +(+(HEAPF[dsp + 120 >> 2]) * +(HEAPF[dsp + 1588 + (0 << 2) >> 2]))))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 1604 + (0 << 2) >> 2])))))) + +(+(HEAPF[dsp + 1612 >> 2]) * +(+(+(+(+(+(HEAPF[dsp + 1616 >> 2]) * +(HEAPF[dsp + 1708 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 124 >> 2]) * +(HEAPF[dsp + 1708 + (0 << 2) >> 2]))) + +(+(HEAPF[dsp + 124 >> 2]) * +(HEAPF[dsp + 1708 + (2 << 2) >> 2]))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 1724 + (0 << 2) >> 2]))))) + +(+(+(HEAPF[dsp + 1752 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 1752 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 1752 + (1 << 2) >> 2])))) * +(powf(10., +(0.0500000007 * +(HEAPF[dsp + 1768 + (0 << 2) >> 2]))))))))));
			HEAPF[dsp + 52 + (1 << 2) >> 2] = +(HEAPF[dsp + 52 + (0 << 2) >> 2]);
			HEAPF[dsp + 64 + (1 << 2) >> 2] = +(HEAPF[dsp + 64 + (0 << 2) >> 2]);
			HEAPF[dsp + 80 + (2 << 2) >> 2] = +(HEAPF[dsp + 80 + (1 << 2) >> 2]);
			HEAPF[dsp + 80 + (1 << 2) >> 2] = +(HEAPF[dsp + 80 + (0 << 2) >> 2]);
			HEAPF[dsp + 96 + (2 << 2) >> 2] = +(HEAPF[dsp + 96 + (1 << 2) >> 2]);
			HEAPF[dsp + 96 + (1 << 2) >> 2] = +(HEAPF[dsp + 96 + (0 << 2) >> 2]);
			HEAPF[dsp + 132 + (2 << 2) >> 2] = +(HEAPF[dsp + 132 + (1 << 2) >> 2]);
			HEAPF[dsp + 132 + (1 << 2) >> 2] = +(HEAPF[dsp + 132 + (0 << 2) >> 2]);
			HEAPF[dsp + 168 + (2 << 2) >> 2] = +(HEAPF[dsp + 168 + (1 << 2) >> 2]);
			HEAPF[dsp + 168 + (1 << 2) >> 2] = +(HEAPF[dsp + 168 + (0 << 2) >> 2]);
			HEAPF[dsp + 204 + (2 << 2) >> 2] = +(HEAPF[dsp + 204 + (1 << 2) >> 2]);
			HEAPF[dsp + 204 + (1 << 2) >> 2] = +(HEAPF[dsp + 204 + (0 << 2) >> 2]);
			HEAPF[dsp + 240 + (2 << 2) >> 2] = +(HEAPF[dsp + 240 + (1 << 2) >> 2]);
			HEAPF[dsp + 240 + (1 << 2) >> 2] = +(HEAPF[dsp + 240 + (0 << 2) >> 2]);
			HEAPF[dsp + 276 + (2 << 2) >> 2] = +(HEAPF[dsp + 276 + (1 << 2) >> 2]);
			HEAPF[dsp + 276 + (1 << 2) >> 2] = +(HEAPF[dsp + 276 + (0 << 2) >> 2]);
			HEAPF[dsp + 312 + (2 << 2) >> 2] = +(HEAPF[dsp + 312 + (1 << 2) >> 2]);
			HEAPF[dsp + 312 + (1 << 2) >> 2] = +(HEAPF[dsp + 312 + (0 << 2) >> 2]);
			HEAPF[dsp + 348 + (2 << 2) >> 2] = +(HEAPF[dsp + 348 + (1 << 2) >> 2]);
			HEAPF[dsp + 348 + (1 << 2) >> 2] = +(HEAPF[dsp + 348 + (0 << 2) >> 2]);
			HEAPF[dsp + 384 + (2 << 2) >> 2] = +(HEAPF[dsp + 384 + (1 << 2) >> 2]);
			HEAPF[dsp + 384 + (1 << 2) >> 2] = +(HEAPF[dsp + 384 + (0 << 2) >> 2]);
			HEAPF[dsp + 400 + (1 << 2) >> 2] = +(HEAPF[dsp + 400 + (0 << 2) >> 2]);
			HEAPF[dsp + 436 + (1 << 2) >> 2] = +(HEAPF[dsp + 436 + (0 << 2) >> 2]);
			HEAPF[dsp + 444 + (2 << 2) >> 2] = +(HEAPF[dsp + 444 + (1 << 2) >> 2]);
			HEAPF[dsp + 444 + (1 << 2) >> 2] = +(HEAPF[dsp + 444 + (0 << 2) >> 2]);
			HEAPF[dsp + 456 + (2 << 2) >> 2] = +(HEAPF[dsp + 456 + (1 << 2) >> 2]);
			HEAPF[dsp + 456 + (1 << 2) >> 2] = +(HEAPF[dsp + 456 + (0 << 2) >> 2]);
			HEAPF[dsp + 468 + (1 << 2) >> 2] = +(HEAPF[dsp + 468 + (0 << 2) >> 2]);
			HEAPF[dsp + 480 + (1 << 2) >> 2] = +(HEAPF[dsp + 480 + (0 << 2) >> 2]);
			HEAPF[dsp + 492 + (2 << 2) >> 2] = +(HEAPF[dsp + 492 + (1 << 2) >> 2]);
			HEAPF[dsp + 492 + (1 << 2) >> 2] = +(HEAPF[dsp + 492 + (0 << 2) >> 2]);
			HEAPF[dsp + 508 + (2 << 2) >> 2] = +(HEAPF[dsp + 508 + (1 << 2) >> 2]);
			HEAPF[dsp + 508 + (1 << 2) >> 2] = +(HEAPF[dsp + 508 + (0 << 2) >> 2]);
			HEAPF[dsp + 520 + (2 << 2) >> 2] = +(HEAPF[dsp + 520 + (1 << 2) >> 2]);
			HEAPF[dsp + 520 + (1 << 2) >> 2] = +(HEAPF[dsp + 520 + (0 << 2) >> 2]);
			HEAPF[dsp + 532 + (2 << 2) >> 2] = +(HEAPF[dsp + 532 + (1 << 2) >> 2]);
			HEAPF[dsp + 532 + (1 << 2) >> 2] = +(HEAPF[dsp + 532 + (0 << 2) >> 2]);
			HEAPF[dsp + 544 + (2 << 2) >> 2] = +(HEAPF[dsp + 544 + (1 << 2) >> 2]);
			HEAPF[dsp + 544 + (1 << 2) >> 2] = +(HEAPF[dsp + 544 + (0 << 2) >> 2]);
			HEAPF[dsp + 556 + (2 << 2) >> 2] = +(HEAPF[dsp + 556 + (1 << 2) >> 2]);
			HEAPF[dsp + 556 + (1 << 2) >> 2] = +(HEAPF[dsp + 556 + (0 << 2) >> 2]);
			HEAPF[dsp + 568 + (2 << 2) >> 2] = +(HEAPF[dsp + 568 + (1 << 2) >> 2]);
			HEAPF[dsp + 568 + (1 << 2) >> 2] = +(HEAPF[dsp + 568 + (0 << 2) >> 2]);
			HEAPF[dsp + 580 + (2 << 2) >> 2] = +(HEAPF[dsp + 580 + (1 << 2) >> 2]);
			HEAPF[dsp + 580 + (1 << 2) >> 2] = +(HEAPF[dsp + 580 + (0 << 2) >> 2]);
			HEAPF[dsp + 592 + (2 << 2) >> 2] = +(HEAPF[dsp + 592 + (1 << 2) >> 2]);
			HEAPF[dsp + 592 + (1 << 2) >> 2] = +(HEAPF[dsp + 592 + (0 << 2) >> 2]);
			HEAPF[dsp + 608 + (1 << 2) >> 2] = +(HEAPF[dsp + 608 + (0 << 2) >> 2]);
			HEAPF[dsp + 644 + (1 << 2) >> 2] = +(HEAPF[dsp + 644 + (0 << 2) >> 2]);
			HEAPF[dsp + 652 + (2 << 2) >> 2] = +(HEAPF[dsp + 652 + (1 << 2) >> 2]);
			HEAPF[dsp + 652 + (1 << 2) >> 2] = +(HEAPF[dsp + 652 + (0 << 2) >> 2]);
			HEAPF[dsp + 664 + (2 << 2) >> 2] = +(HEAPF[dsp + 664 + (1 << 2) >> 2]);
			HEAPF[dsp + 664 + (1 << 2) >> 2] = +(HEAPF[dsp + 664 + (0 << 2) >> 2]);
			HEAPF[dsp + 676 + (1 << 2) >> 2] = +(HEAPF[dsp + 676 + (0 << 2) >> 2]);
			HEAPF[dsp + 688 + (1 << 2) >> 2] = +(HEAPF[dsp + 688 + (0 << 2) >> 2]);
			HEAPF[dsp + 700 + (2 << 2) >> 2] = +(HEAPF[dsp + 700 + (1 << 2) >> 2]);
			HEAPF[dsp + 700 + (1 << 2) >> 2] = +(HEAPF[dsp + 700 + (0 << 2) >> 2]);
			HEAPF[dsp + 716 + (2 << 2) >> 2] = +(HEAPF[dsp + 716 + (1 << 2) >> 2]);
			HEAPF[dsp + 716 + (1 << 2) >> 2] = +(HEAPF[dsp + 716 + (0 << 2) >> 2]);
			HEAPF[dsp + 728 + (2 << 2) >> 2] = +(HEAPF[dsp + 728 + (1 << 2) >> 2]);
			HEAPF[dsp + 728 + (1 << 2) >> 2] = +(HEAPF[dsp + 728 + (0 << 2) >> 2]);
			HEAPF[dsp + 740 + (2 << 2) >> 2] = +(HEAPF[dsp + 740 + (1 << 2) >> 2]);
			HEAPF[dsp + 740 + (1 << 2) >> 2] = +(HEAPF[dsp + 740 + (0 << 2) >> 2]);
			HEAPF[dsp + 752 + (2 << 2) >> 2] = +(HEAPF[dsp + 752 + (1 << 2) >> 2]);
			HEAPF[dsp + 752 + (1 << 2) >> 2] = +(HEAPF[dsp + 752 + (0 << 2) >> 2]);
			HEAPF[dsp + 764 + (2 << 2) >> 2] = +(HEAPF[dsp + 764 + (1 << 2) >> 2]);
			HEAPF[dsp + 764 + (1 << 2) >> 2] = +(HEAPF[dsp + 764 + (0 << 2) >> 2]);
			HEAPF[dsp + 776 + (2 << 2) >> 2] = +(HEAPF[dsp + 776 + (1 << 2) >> 2]);
			HEAPF[dsp + 776 + (1 << 2) >> 2] = +(HEAPF[dsp + 776 + (0 << 2) >> 2]);
			HEAPF[dsp + 788 + (2 << 2) >> 2] = +(HEAPF[dsp + 788 + (1 << 2) >> 2]);
			HEAPF[dsp + 788 + (1 << 2) >> 2] = +(HEAPF[dsp + 788 + (0 << 2) >> 2]);
			HEAPF[dsp + 804 + (1 << 2) >> 2] = +(HEAPF[dsp + 804 + (0 << 2) >> 2]);
			HEAPF[dsp + 840 + (1 << 2) >> 2] = +(HEAPF[dsp + 840 + (0 << 2) >> 2]);
			HEAPF[dsp + 848 + (2 << 2) >> 2] = +(HEAPF[dsp + 848 + (1 << 2) >> 2]);
			HEAPF[dsp + 848 + (1 << 2) >> 2] = +(HEAPF[dsp + 848 + (0 << 2) >> 2]);
			HEAPF[dsp + 860 + (2 << 2) >> 2] = +(HEAPF[dsp + 860 + (1 << 2) >> 2]);
			HEAPF[dsp + 860 + (1 << 2) >> 2] = +(HEAPF[dsp + 860 + (0 << 2) >> 2]);
			HEAPF[dsp + 872 + (1 << 2) >> 2] = +(HEAPF[dsp + 872 + (0 << 2) >> 2]);
			HEAPF[dsp + 884 + (1 << 2) >> 2] = +(HEAPF[dsp + 884 + (0 << 2) >> 2]);
			HEAPF[dsp + 896 + (2 << 2) >> 2] = +(HEAPF[dsp + 896 + (1 << 2) >> 2]);
			HEAPF[dsp + 896 + (1 << 2) >> 2] = +(HEAPF[dsp + 896 + (0 << 2) >> 2]);
			HEAPF[dsp + 912 + (2 << 2) >> 2] = +(HEAPF[dsp + 912 + (1 << 2) >> 2]);
			HEAPF[dsp + 912 + (1 << 2) >> 2] = +(HEAPF[dsp + 912 + (0 << 2) >> 2]);
			HEAPF[dsp + 924 + (2 << 2) >> 2] = +(HEAPF[dsp + 924 + (1 << 2) >> 2]);
			HEAPF[dsp + 924 + (1 << 2) >> 2] = +(HEAPF[dsp + 924 + (0 << 2) >> 2]);
			HEAPF[dsp + 936 + (2 << 2) >> 2] = +(HEAPF[dsp + 936 + (1 << 2) >> 2]);
			HEAPF[dsp + 936 + (1 << 2) >> 2] = +(HEAPF[dsp + 936 + (0 << 2) >> 2]);
			HEAPF[dsp + 948 + (2 << 2) >> 2] = +(HEAPF[dsp + 948 + (1 << 2) >> 2]);
			HEAPF[dsp + 948 + (1 << 2) >> 2] = +(HEAPF[dsp + 948 + (0 << 2) >> 2]);
			HEAPF[dsp + 960 + (2 << 2) >> 2] = +(HEAPF[dsp + 960 + (1 << 2) >> 2]);
			HEAPF[dsp + 960 + (1 << 2) >> 2] = +(HEAPF[dsp + 960 + (0 << 2) >> 2]);
			HEAPF[dsp + 972 + (2 << 2) >> 2] = +(HEAPF[dsp + 972 + (1 << 2) >> 2]);
			HEAPF[dsp + 972 + (1 << 2) >> 2] = +(HEAPF[dsp + 972 + (0 << 2) >> 2]);
			HEAPF[dsp + 988 + (1 << 2) >> 2] = +(HEAPF[dsp + 988 + (0 << 2) >> 2]);
			HEAPF[dsp + 1024 + (1 << 2) >> 2] = +(HEAPF[dsp + 1024 + (0 << 2) >> 2]);
			HEAPF[dsp + 1032 + (2 << 2) >> 2] = +(HEAPF[dsp + 1032 + (1 << 2) >> 2]);
			HEAPF[dsp + 1032 + (1 << 2) >> 2] = +(HEAPF[dsp + 1032 + (0 << 2) >> 2]);
			HEAPF[dsp + 1044 + (2 << 2) >> 2] = +(HEAPF[dsp + 1044 + (1 << 2) >> 2]);
			HEAPF[dsp + 1044 + (1 << 2) >> 2] = +(HEAPF[dsp + 1044 + (0 << 2) >> 2]);
			HEAPF[dsp + 1056 + (1 << 2) >> 2] = +(HEAPF[dsp + 1056 + (0 << 2) >> 2]);
			HEAPF[dsp + 1068 + (1 << 2) >> 2] = +(HEAPF[dsp + 1068 + (0 << 2) >> 2]);
			HEAPF[dsp + 1080 + (2 << 2) >> 2] = +(HEAPF[dsp + 1080 + (1 << 2) >> 2]);
			HEAPF[dsp + 1080 + (1 << 2) >> 2] = +(HEAPF[dsp + 1080 + (0 << 2) >> 2]);
			HEAPF[dsp + 1096 + (2 << 2) >> 2] = +(HEAPF[dsp + 1096 + (1 << 2) >> 2]);
			HEAPF[dsp + 1096 + (1 << 2) >> 2] = +(HEAPF[dsp + 1096 + (0 << 2) >> 2]);
			HEAPF[dsp + 1108 + (2 << 2) >> 2] = +(HEAPF[dsp + 1108 + (1 << 2) >> 2]);
			HEAPF[dsp + 1108 + (1 << 2) >> 2] = +(HEAPF[dsp + 1108 + (0 << 2) >> 2]);
			HEAPF[dsp + 1120 + (2 << 2) >> 2] = +(HEAPF[dsp + 1120 + (1 << 2) >> 2]);
			HEAPF[dsp + 1120 + (1 << 2) >> 2] = +(HEAPF[dsp + 1120 + (0 << 2) >> 2]);
			HEAPF[dsp + 1132 + (2 << 2) >> 2] = +(HEAPF[dsp + 1132 + (1 << 2) >> 2]);
			HEAPF[dsp + 1132 + (1 << 2) >> 2] = +(HEAPF[dsp + 1132 + (0 << 2) >> 2]);
			HEAPF[dsp + 1144 + (2 << 2) >> 2] = +(HEAPF[dsp + 1144 + (1 << 2) >> 2]);
			HEAPF[dsp + 1144 + (1 << 2) >> 2] = +(HEAPF[dsp + 1144 + (0 << 2) >> 2]);
			HEAPF[dsp + 1160 + (1 << 2) >> 2] = +(HEAPF[dsp + 1160 + (0 << 2) >> 2]);
			HEAPF[dsp + 1196 + (1 << 2) >> 2] = +(HEAPF[dsp + 1196 + (0 << 2) >> 2]);
			HEAPF[dsp + 1204 + (2 << 2) >> 2] = +(HEAPF[dsp + 1204 + (1 << 2) >> 2]);
			HEAPF[dsp + 1204 + (1 << 2) >> 2] = +(HEAPF[dsp + 1204 + (0 << 2) >> 2]);
			HEAPF[dsp + 1216 + (2 << 2) >> 2] = +(HEAPF[dsp + 1216 + (1 << 2) >> 2]);
			HEAPF[dsp + 1216 + (1 << 2) >> 2] = +(HEAPF[dsp + 1216 + (0 << 2) >> 2]);
			HEAPF[dsp + 1228 + (1 << 2) >> 2] = +(HEAPF[dsp + 1228 + (0 << 2) >> 2]);
			HEAPF[dsp + 1240 + (1 << 2) >> 2] = +(HEAPF[dsp + 1240 + (0 << 2) >> 2]);
			HEAPF[dsp + 1252 + (2 << 2) >> 2] = +(HEAPF[dsp + 1252 + (1 << 2) >> 2]);
			HEAPF[dsp + 1252 + (1 << 2) >> 2] = +(HEAPF[dsp + 1252 + (0 << 2) >> 2]);
			HEAPF[dsp + 1268 + (2 << 2) >> 2] = +(HEAPF[dsp + 1268 + (1 << 2) >> 2]);
			HEAPF[dsp + 1268 + (1 << 2) >> 2] = +(HEAPF[dsp + 1268 + (0 << 2) >> 2]);
			HEAPF[dsp + 1280 + (2 << 2) >> 2] = +(HEAPF[dsp + 1280 + (1 << 2) >> 2]);
			HEAPF[dsp + 1280 + (1 << 2) >> 2] = +(HEAPF[dsp + 1280 + (0 << 2) >> 2]);
			HEAPF[dsp + 1292 + (2 << 2) >> 2] = +(HEAPF[dsp + 1292 + (1 << 2) >> 2]);
			HEAPF[dsp + 1292 + (1 << 2) >> 2] = +(HEAPF[dsp + 1292 + (0 << 2) >> 2]);
			HEAPF[dsp + 1304 + (2 << 2) >> 2] = +(HEAPF[dsp + 1304 + (1 << 2) >> 2]);
			HEAPF[dsp + 1304 + (1 << 2) >> 2] = +(HEAPF[dsp + 1304 + (0 << 2) >> 2]);
			HEAPF[dsp + 1320 + (1 << 2) >> 2] = +(HEAPF[dsp + 1320 + (0 << 2) >> 2]);
			HEAPF[dsp + 1356 + (1 << 2) >> 2] = +(HEAPF[dsp + 1356 + (0 << 2) >> 2]);
			HEAPF[dsp + 1364 + (2 << 2) >> 2] = +(HEAPF[dsp + 1364 + (1 << 2) >> 2]);
			HEAPF[dsp + 1364 + (1 << 2) >> 2] = +(HEAPF[dsp + 1364 + (0 << 2) >> 2]);
			HEAPF[dsp + 1376 + (2 << 2) >> 2] = +(HEAPF[dsp + 1376 + (1 << 2) >> 2]);
			HEAPF[dsp + 1376 + (1 << 2) >> 2] = +(HEAPF[dsp + 1376 + (0 << 2) >> 2]);
			HEAPF[dsp + 1388 + (1 << 2) >> 2] = +(HEAPF[dsp + 1388 + (0 << 2) >> 2]);
			HEAPF[dsp + 1400 + (1 << 2) >> 2] = +(HEAPF[dsp + 1400 + (0 << 2) >> 2]);
			HEAPF[dsp + 1412 + (2 << 2) >> 2] = +(HEAPF[dsp + 1412 + (1 << 2) >> 2]);
			HEAPF[dsp + 1412 + (1 << 2) >> 2] = +(HEAPF[dsp + 1412 + (0 << 2) >> 2]);
			HEAPF[dsp + 1428 + (2 << 2) >> 2] = +(HEAPF[dsp + 1428 + (1 << 2) >> 2]);
			HEAPF[dsp + 1428 + (1 << 2) >> 2] = +(HEAPF[dsp + 1428 + (0 << 2) >> 2]);
			HEAPF[dsp + 1440 + (2 << 2) >> 2] = +(HEAPF[dsp + 1440 + (1 << 2) >> 2]);
			HEAPF[dsp + 1440 + (1 << 2) >> 2] = +(HEAPF[dsp + 1440 + (0 << 2) >> 2]);
			HEAPF[dsp + 1452 + (2 << 2) >> 2] = +(HEAPF[dsp + 1452 + (1 << 2) >> 2]);
			HEAPF[dsp + 1452 + (1 << 2) >> 2] = +(HEAPF[dsp + 1452 + (0 << 2) >> 2]);
			HEAPF[dsp + 1468 + (1 << 2) >> 2] = +(HEAPF[dsp + 1468 + (0 << 2) >> 2]);
			HEAPF[dsp + 1504 + (1 << 2) >> 2] = +(HEAPF[dsp + 1504 + (0 << 2) >> 2]);
			HEAPF[dsp + 1512 + (2 << 2) >> 2] = +(HEAPF[dsp + 1512 + (1 << 2) >> 2]);
			HEAPF[dsp + 1512 + (1 << 2) >> 2] = +(HEAPF[dsp + 1512 + (0 << 2) >> 2]);
			HEAPF[dsp + 1524 + (2 << 2) >> 2] = +(HEAPF[dsp + 1524 + (1 << 2) >> 2]);
			HEAPF[dsp + 1524 + (1 << 2) >> 2] = +(HEAPF[dsp + 1524 + (0 << 2) >> 2]);
			HEAPF[dsp + 1536 + (1 << 2) >> 2] = +(HEAPF[dsp + 1536 + (0 << 2) >> 2]);
			HEAPF[dsp + 1548 + (1 << 2) >> 2] = +(HEAPF[dsp + 1548 + (0 << 2) >> 2]);
			HEAPF[dsp + 1560 + (2 << 2) >> 2] = +(HEAPF[dsp + 1560 + (1 << 2) >> 2]);
			HEAPF[dsp + 1560 + (1 << 2) >> 2] = +(HEAPF[dsp + 1560 + (0 << 2) >> 2]);
			HEAPF[dsp + 1576 + (2 << 2) >> 2] = +(HEAPF[dsp + 1576 + (1 << 2) >> 2]);
			HEAPF[dsp + 1576 + (1 << 2) >> 2] = +(HEAPF[dsp + 1576 + (0 << 2) >> 2]);
			HEAPF[dsp + 1588 + (2 << 2) >> 2] = +(HEAPF[dsp + 1588 + (1 << 2) >> 2]);
			HEAPF[dsp + 1588 + (1 << 2) >> 2] = +(HEAPF[dsp + 1588 + (0 << 2) >> 2]);
			HEAPF[dsp + 1604 + (1 << 2) >> 2] = +(HEAPF[dsp + 1604 + (0 << 2) >> 2]);
			HEAPF[dsp + 1636 + (1 << 2) >> 2] = +(HEAPF[dsp + 1636 + (0 << 2) >> 2]);
			HEAPF[dsp + 1644 + (2 << 2) >> 2] = +(HEAPF[dsp + 1644 + (1 << 2) >> 2]);
			HEAPF[dsp + 1644 + (1 << 2) >> 2] = +(HEAPF[dsp + 1644 + (0 << 2) >> 2]);
			HEAPF[dsp + 1656 + (2 << 2) >> 2] = +(HEAPF[dsp + 1656 + (1 << 2) >> 2]);
			HEAPF[dsp + 1656 + (1 << 2) >> 2] = +(HEAPF[dsp + 1656 + (0 << 2) >> 2]);
			HEAPF[dsp + 1668 + (1 << 2) >> 2] = +(HEAPF[dsp + 1668 + (0 << 2) >> 2]);
			HEAPF[dsp + 1680 + (1 << 2) >> 2] = +(HEAPF[dsp + 1680 + (0 << 2) >> 2]);
			HEAPF[dsp + 1692 + (2 << 2) >> 2] = +(HEAPF[dsp + 1692 + (1 << 2) >> 2]);
			HEAPF[dsp + 1692 + (1 << 2) >> 2] = +(HEAPF[dsp + 1692 + (0 << 2) >> 2]);
			HEAPF[dsp + 1708 + (2 << 2) >> 2] = +(HEAPF[dsp + 1708 + (1 << 2) >> 2]);
			HEAPF[dsp + 1708 + (1 << 2) >> 2] = +(HEAPF[dsp + 1708 + (0 << 2) >> 2]);
			HEAPF[dsp + 1724 + (1 << 2) >> 2] = +(HEAPF[dsp + 1724 + (0 << 2) >> 2]);
			HEAPF[dsp + 1732 + (1 << 2) >> 2] = +(HEAPF[dsp + 1732 + (0 << 2) >> 2]);
			HEAPF[dsp + 1740 + (2 << 2) >> 2] = +(HEAPF[dsp + 1740 + (1 << 2) >> 2]);
			HEAPF[dsp + 1740 + (1 << 2) >> 2] = +(HEAPF[dsp + 1740 + (0 << 2) >> 2]);
			HEAPF[dsp + 1752 + (2 << 2) >> 2] = +(HEAPF[dsp + 1752 + (1 << 2) >> 2]);
			HEAPF[dsp + 1752 + (1 << 2) >> 2] = +(HEAPF[dsp + 1752 + (0 << 2) >> 2]);
			HEAPF[dsp + 1768 + (1 << 2) >> 2] = +(HEAPF[dsp + 1768 + (0 << 2) >> 2]);
			
		}
		
	}
	
	return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, instanceConstants : instanceConstants, instanceResetUserInterface : instanceResetUserInterface, instanceClear : instanceClear, init : init, getSampleRate : getSampleRate, setParamValue : setParamValue, getParamValue : getParamValue, compute : compute };
}

function getSizemydsp() {
	return 1776;
}

function getPathTablemydsp() {
	var pathTable = [];
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/Bypass"] = 0;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 396;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 604;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 800;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 984;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 1156;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 1316;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 1464;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 1600;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 1720;
	pathTable["/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00"] = 1764;
	return pathTable;
}

function getJSONmydsp() {
	return "{\"name\":\"filterBank\",\"inputs\":\"1\",\"outputs\":\"1\",\"meta\":[{\"analyzers.lib/name\":\"Faust Analyzer Library\"},{\"analyzers.lib/version\":\"0.0\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"description\":\"Graphic Equalizer consisting of a filter-bank driving a bank of faders\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"filterBank\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"CONSTANT-Q FILTER BANK (Butterworth dyadic tree)\",\"meta\":[{\"tooltip\":\"See Faust's filters.lib for documentation and references\"}],\"items\":[{\"type\":\"hgroup\",\"label\":\"0x00\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"checkbox\",\"label\":\"Bypass\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/Bypass\",\"meta\":[{\"0\":\"\"},{\"tooltip\":\"When this is checked, the filter-bank has no effect\"}]}]},{\"type\":\"hgroup\",\"label\":\"0x00\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"1\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"2\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"3\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"4\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"5\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"6\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"7\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"8\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"9\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/CONSTANT-Q_FILTER_BANK_(Butterworth_dyadic_tree)/0x00/0x00\",\"meta\":[{\"10\":\"\"},{\"tooltip\":\"Bandpass filter   gain in dB\"},{\"unit\":\"dB\"}],\"init\":\"-10\",\"min\":\"-70\",\"max\":\"10\",\"step\":\"0.1\"}]}]}]}";
}

function metadatamydsp(m) {
	m.declare("analyzers.lib/name", "Faust Analyzer Library");
	m.declare("analyzers.lib/version", "0.0");
	m.declare("basics.lib/name", "Faust Basic Element Library");
	m.declare("basics.lib/version", "0.0");
	m.declare("description", "Graphic Equalizer consisting of a filter-bank driving a bank of faders");
	m.declare("filters.lib/name", "Faust Filters Library");
	m.declare("filters.lib/version", "0.0");
	m.declare("maths.lib/author", "GRAME");
	m.declare("maths.lib/copyright", "GRAME");
	m.declare("maths.lib/license", "LGPL with exception");
	m.declare("maths.lib/name", "Faust Math Library");
	m.declare("maths.lib/version", "2.1");
	m.declare("name", "filterBank");
	m.declare("signals.lib/name", "Faust Signal Routing Library");
	m.declare("signals.lib/version", "0.0");
}

