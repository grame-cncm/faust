/* ------------------------------------------------------------
copyright: "(c)Romain Michon, CCRMA (Stanford University), GRAME"
license: "MIT"
name: "Vocal BandPass MIDI"
Code generated with Faust 2.5.15 (https://faust.grame.fr)
Compilation options: ajs, -scal -ftz 0
------------------------------------------------------------ */


function mydspModule(global, foreign, buffer) {
	
	'use asm';
	
	var HEAP32 = new global.Int32Array(buffer);
	var HEAPF = new global.Float32Array(buffer);
	
	var imul = foreign.imul;
	var log = foreign.log;
	var round = foreign.round;
	
	var cosf = foreign.cos;
	var expf = foreign.exp;
	var fabsf = foreign.abs;
	var max_f = foreign.max;
	var min_f = foreign.min;
	var powf = foreign.pow;
	var sinf = foreign.sin;
	var tanf = foreign.tan;
	function fmodf(x, y) { x = +x; y = +y; return +(x % y); }
	function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }
	function remainderf(x, y) { x = +x; y = +y; return +(x - +round(x/y) * y); }
	
	function getNumInputs(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputs(dsp) {
		dsp = dsp | 0;
		return 2;
	}
	
	function classInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		
	}
	
	function instanceConstants(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAP32[dsp + 32 >> 2] = (samplingFreq | 0);
		HEAPF[dsp + 36 >> 2] = +(min_f(192000., +(max_f(1., +((HEAP32[dsp + 32 >> 2] | 0))))));
		HEAPF[dsp + 40 >> 2] = +(1000. / +(HEAPF[dsp + 36 >> 2]));
		HEAPF[dsp + 68 >> 2] = +(1. / +(HEAPF[dsp + 36 >> 2]));
		HEAPF[dsp + 92 >> 2] = +(6.28318548 / +(HEAPF[dsp + 36 >> 2]));
		HEAPF[dsp + 132 >> 2] = +(3.14159274 / +(HEAPF[dsp + 36 >> 2]));
		
	}
	
	function instanceResetUserInterface(dsp) {
		dsp = dsp | 0;
		HEAPF[dsp + 0 >> 2] = 0.5;
		HEAPF[dsp + 12 >> 2] = 0.;
		HEAPF[dsp + 16 >> 2] = 0.;
		HEAPF[dsp + 28 >> 2] = 0.899999976;
		HEAPF[dsp + 44 >> 2] = 10.;
		HEAPF[dsp + 56 >> 2] = 0.;
		HEAPF[dsp + 72 >> 2] = 440.;
		HEAPF[dsp + 76 >> 2] = 1.;
		HEAPF[dsp + 88 >> 2] = 0.5;
		HEAPF[dsp + 96 >> 2] = 6.;
		HEAPF[dsp + 136 >> 2] = 0.;
		HEAPF[dsp + 140 >> 2] = 0.;
		
	}
	
	function instanceClear(dsp) {
		dsp = dsp | 0;
		var l0 = 0;
		var l1 = 0;
		var l2 = 0;
		var l3 = 0;
		var l4 = 0;
		var l5 = 0;
		var l6 = 0;
		var l7 = 0;
		var l8 = 0;
		var l9 = 0;
		var l10 = 0;
		var l11 = 0;
		var l12 = 0;
		var l13 = 0;
		var l14 = 0;
		var l15 = 0;
		var l16 = 0;
		for (l0 = 0; (((l0 | 0) < 2) | 0); l0 = (((l0 | 0) + 1) | 0)) {
			HEAP32[dsp + 4 + ((l0 | 0) << 2) >> 2] = 0;
			
		}
		for (l1 = 0; (((l1 | 0) < 2) | 0); l1 = (((l1 | 0) + 1) | 0)) {
			HEAPF[dsp + 20 + ((l1 | 0) << 2) >> 2] = 0.;
			
		}
		for (l2 = 0; (((l2 | 0) < 2) | 0); l2 = (((l2 | 0) + 1) | 0)) {
			HEAPF[dsp + 48 + ((l2 | 0) << 2) >> 2] = 0.;
			
		}
		for (l3 = 0; (((l3 | 0) < 2) | 0); l3 = (((l3 | 0) + 1) | 0)) {
			HEAPF[dsp + 60 + ((l3 | 0) << 2) >> 2] = 0.;
			
		}
		for (l4 = 0; (((l4 | 0) < 2) | 0); l4 = (((l4 | 0) + 1) | 0)) {
			HEAPF[dsp + 80 + ((l4 | 0) << 2) >> 2] = 0.;
			
		}
		for (l5 = 0; (((l5 | 0) < 2) | 0); l5 = (((l5 | 0) + 1) | 0)) {
			HEAPF[dsp + 100 + ((l5 | 0) << 2) >> 2] = 0.;
			
		}
		for (l6 = 0; (((l6 | 0) < 2) | 0); l6 = (((l6 | 0) + 1) | 0)) {
			HEAPF[dsp + 108 + ((l6 | 0) << 2) >> 2] = 0.;
			
		}
		for (l7 = 0; (((l7 | 0) < 2) | 0); l7 = (((l7 | 0) + 1) | 0)) {
			HEAPF[dsp + 116 + ((l7 | 0) << 2) >> 2] = 0.;
			
		}
		for (l8 = 0; (((l8 | 0) < 2) | 0); l8 = (((l8 | 0) + 1) | 0)) {
			HEAP32[dsp + 124 + ((l8 | 0) << 2) >> 2] = 0;
			
		}
		for (l9 = 0; (((l9 | 0) < 2) | 0); l9 = (((l9 | 0) + 1) | 0)) {
			HEAPF[dsp + 144 + ((l9 | 0) << 2) >> 2] = 0.;
			
		}
		for (l10 = 0; (((l10 | 0) < 2) | 0); l10 = (((l10 | 0) + 1) | 0)) {
			HEAPF[dsp + 152 + ((l10 | 0) << 2) >> 2] = 0.;
			
		}
		for (l11 = 0; (((l11 | 0) < 2) | 0); l11 = (((l11 | 0) + 1) | 0)) {
			HEAPF[dsp + 160 + ((l11 | 0) << 2) >> 2] = 0.;
			
		}
		for (l12 = 0; (((l12 | 0) < 3) | 0); l12 = (((l12 | 0) + 1) | 0)) {
			HEAPF[dsp + 168 + ((l12 | 0) << 2) >> 2] = 0.;
			
		}
		for (l13 = 0; (((l13 | 0) < 3) | 0); l13 = (((l13 | 0) + 1) | 0)) {
			HEAPF[dsp + 180 + ((l13 | 0) << 2) >> 2] = 0.;
			
		}
		for (l14 = 0; (((l14 | 0) < 3) | 0); l14 = (((l14 | 0) + 1) | 0)) {
			HEAPF[dsp + 192 + ((l14 | 0) << 2) >> 2] = 0.;
			
		}
		for (l15 = 0; (((l15 | 0) < 3) | 0); l15 = (((l15 | 0) + 1) | 0)) {
			HEAPF[dsp + 204 + ((l15 | 0) << 2) >> 2] = 0.;
			
		}
		for (l16 = 0; (((l16 | 0) < 3) | 0); l16 = (((l16 | 0) + 1) | 0)) {
			HEAPF[dsp + 216 + ((l16 | 0) << 2) >> 2] = 0.;
			
		}
		
	}
	
	function init(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		classInit(dsp, samplingFreq);
		instanceInit(dsp, samplingFreq);
	}
	
	function instanceInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceConstants(dsp, samplingFreq);
		instanceResetUserInterface(dsp);
		instanceClear(dsp);
	}
	
	function getSampleRate(dsp) {
		dsp = dsp | 0;
		return HEAP32[dsp + 32 >> 2] | 0;
	}
	
	function setParamValue(dsp, offset, value) {
		dsp = dsp | 0;
		offset = offset | 0;
		value = +value;
		HEAPF[dsp + offset >> 2] = value;
	}
	
	function getParamValue(dsp, offset) {
		dsp = dsp | 0;
		offset = offset | 0;
		return +(HEAPF[dsp + offset >> 2]);
	}
	
	function compute(dsp, count, inputs, outputs) {
		dsp = dsp | 0;
		count = count | 0;
		inputs = inputs | 0;
		outputs = outputs | 0;
		var output0 = 0;
		var output1 = 0;
		var fSlow0 = 0.;
		var fSlow1 = 0.;
		var fSlow2 = 0.;
		var fSlow3 = 0.;
		var fSlow4 = 0.;
		var fSlow5 = 0.;
		var iSlow6 = 0;
		var fSlow7 = 0.;
		var fSlow8 = 0.;
		var fSlow9 = 0.;
		var fSlow10 = 0.;
		var fSlow11 = 0.;
		var fSlow12 = 0.;
		var fSlow13 = 0.;
		var fSlow14 = 0.;
		var fSlow15 = 0.;
		var fSlow16 = 0.;
		var iSlow17 = 0;
		var iSlow18 = 0;
		var fSlow19 = 0.;
		var i = 0;
		var iTemp0 = 0;
		var iTemp1 = 0;
		var fTemp2 = 0.;
		var fTemp3 = 0.;
		var fTemp4 = 0.;
		var iTemp5 = 0;
		var fRec4 = 0.;
		var fTemp6 = 0.;
		var fTemp7 = 0.;
		var iTemp8 = 0;
		var iTemp9 = 0;
		var fTemp10 = 0.;
		var iTemp11 = 0;
		var fTemp12 = 0.;
		var iTemp13 = 0;
		var fTemp14 = 0.;
		var iTemp15 = 0;
		var fTemp16 = 0.;
		var iTemp17 = 0;
		var fTemp18 = 0.;
		var iTemp19 = 0;
		var fTemp20 = 0.;
		var iTemp21 = 0;
		var fTemp22 = 0.;
		var iTemp23 = 0;
		var fTemp24 = 0.;
		var fTemp25 = 0.;
		var iTemp26 = 0;
		var fTemp27 = 0.;
		var iTemp28 = 0;
		var fTemp29 = 0.;
		var iTemp30 = 0;
		var fTemp31 = 0.;
		var iTemp32 = 0;
		var fTemp33 = 0.;
		var iTemp34 = 0;
		var fTemp35 = 0.;
		var iTemp36 = 0;
		var fTemp37 = 0.;
		var iTemp38 = 0;
		var fTemp39 = 0.;
		var iTemp40 = 0;
		var fTemp41 = 0.;
		var fTemp42 = 0.;
		var iTemp43 = 0;
		var fTemp44 = 0.;
		var iTemp45 = 0;
		var fTemp46 = 0.;
		var iTemp47 = 0;
		var fTemp48 = 0.;
		var iTemp49 = 0;
		var fTemp50 = 0.;
		var iTemp51 = 0;
		var fTemp52 = 0.;
		var iTemp53 = 0;
		var fTemp54 = 0.;
		var iTemp55 = 0;
		var fTemp56 = 0.;
		var iTemp57 = 0;
		var fTemp58 = 0.;
		var fTemp59 = 0.;
		var fTemp60 = 0.;
		var fTemp61 = 0.;
		var fTemp62 = 0.;
		var fTemp63 = 0.;
		var fTemp64 = 0.;
		var fTemp65 = 0.;
		var fTemp66 = 0.;
		var fTemp67 = 0.;
		var fTemp68 = 0.;
		var fTemp69 = 0.;
		var fTemp70 = 0.;
		var fTemp71 = 0.;
		var fTemp72 = 0.;
		var fTemp73 = 0.;
		var fTemp74 = 0.;
		var fTemp75 = 0.;
		var fTemp76 = 0.;
		var fTemp77 = 0.;
		var fTemp78 = 0.;
		var fTemp79 = 0.;
		var fTemp80 = 0.;
		var fTemp81 = 0.;
		var fTemp82 = 0.;
		var fTemp83 = 0.;
		var fTemp84 = 0.;
		var fTemp85 = 0.;
		var fTemp86 = 0.;
		var fTemp87 = 0.;
		var fTemp88 = 0.;
		var fTemp89 = 0.;
		var fTemp90 = 0.;
		var fTemp91 = 0.;
		var fTemp92 = 0.;
		var fTemp93 = 0.;
		var fTemp94 = 0.;
		var fTemp95 = 0.;
		var fTemp96 = 0.;
		var fTemp97 = 0.;
		var fTemp98 = 0.;
		var fTemp99 = 0.;
		var fTemp100 = 0.;
		var fTemp101 = 0.;
		var fTemp102 = 0.;
		var fTemp103 = 0.;
		var fTemp104 = 0.;
		var fTemp105 = 0.;
		var fTemp106 = 0.;
		var fTemp107 = 0.;
		var fTemp108 = 0.;
		var fTemp109 = 0.;
		var fTemp110 = 0.;
		var fTemp111 = 0.;
		var fTemp112 = 0.;
		var fTemp113 = 0.;
		var fTemp114 = 0.;
		var fTemp115 = 0.;
		var fTemp116 = 0.;
		var fTemp117 = 0.;
		var fTemp118 = 0.;
		var fTemp119 = 0.;
		var fTemp120 = 0.;
		output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);
		output1 = (HEAP32[outputs + (1 << 2) >> 2] | 0);
		fSlow0 = +(+(HEAPF[dsp + 0 >> 2]));
		fSlow1 = +(min_f(1., +(+(+(HEAPF[dsp + 12 >> 2])) + +(+(HEAPF[dsp + 16 >> 2])))));
		fSlow2 = +(expf(+(0. - +(+(HEAPF[dsp + 40 >> 2]) / +(+(HEAPF[dsp + 44 >> 2]))))));
		fSlow3 = +(+(+(fSlow1) * +(+(HEAPF[dsp + 28 >> 2]))) * +(1. - +(fSlow2)));
		fSlow4 = +(0.00100000005 * +(+(HEAPF[dsp + 56 >> 2])));
		fSlow5 = +(+(HEAPF[dsp + 72 >> 2]));
		iSlow6 = ((+(fSlow1) == 0.) | 0);
		fSlow7 = +(+(HEAPF[dsp + 76 >> 2]));
		fSlow8 = +(0.100000001 * +(+(HEAPF[dsp + 88 >> 2])));
		fSlow9 = +(+(HEAPF[dsp + 92 >> 2]) * +(+(HEAPF[dsp + 96 >> 2])));
		fSlow10 = +(sinf(+(fSlow9)));
		fSlow11 = +(cosf(+(fSlow9)));
		fSlow12 = +(0. - +(fSlow10));
		fSlow13 = +(+(HEAPF[dsp + 136 >> 2]));
		fSlow14 = +(5. * +(fSlow13));
		fSlow15 = +(0.00100000005 * +(+(HEAPF[dsp + 140 >> 2])));
		fSlow16 = +(5. * +(1. - +(fSlow13)));
		iSlow17 = ((((((+(fSlow13) == 0.) | 0)?1:((((+(fSlow13) == 3.) | 0)?1:0) | 0)) | 0) == 0) | 0);
		iSlow18 = ((+(fSlow13) != 2.) | 0);
		fSlow19 = +(2. * +(fSlow5));
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAP32[dsp + 4 + (0 << 2) >> 2] = 1;
			HEAPF[dsp + 20 + (0 << 2) >> 2] = +(fSlow1);
			HEAPF[dsp + 48 + (0 << 2) >> 2] = +(+(fSlow3) + +(+(fSlow2) * +(HEAPF[dsp + 48 + (1 << 2) >> 2])));
			HEAPF[dsp + 60 + (0 << 2) >> 2] = +(+(fSlow4) + +(0.999000013 * +(HEAPF[dsp + 60 + (1 << 2) >> 2])));
			iTemp0 = ((((+(fSlow1) == +(HEAPF[dsp + 20 + (1 << 2) >> 2])) | 0) | (iSlow6 | 0)) | 0);
			HEAPF[dsp + 80 + (0 << 2) >> 2] = +(+(0.999000013 * +(+(HEAPF[dsp + 80 + (1 << 2) >> 2]) * +((iTemp0 | 0)))) + +(+(fSlow7) * +(1. - +(0.999000013 * +((iTemp0 | 0))))));
			HEAPF[dsp + 100 + (0 << 2) >> 2] = +(+(+(fSlow10) * +(HEAPF[dsp + 108 + (1 << 2) >> 2])) + +(+(fSlow11) * +(HEAPF[dsp + 100 + (1 << 2) >> 2])));
			iTemp1 = ((1 - (HEAP32[dsp + 4 + (1 << 2) >> 2] | 0)) | 0);
			HEAPF[dsp + 108 + (0 << 2) >> 2] = +(+(+(+(fSlow11) * +(HEAPF[dsp + 108 + (1 << 2) >> 2])) + +(+(fSlow12) * +(HEAPF[dsp + 100 + (1 << 2) >> 2]))) + +((iTemp1 | 0)));
			fTemp2 = +(max_f(1.00000001e-07, +(fabsf(+(+(fSlow5) * +(+(HEAPF[dsp + 80 + (0 << 2) >> 2]) * +(+(+(fSlow8) * +(HEAPF[dsp + 100 + (0 << 2) >> 2])) + 1.)))))));
			fTemp3 = +(+(HEAPF[dsp + 116 + (1 << 2) >> 2]) + +(+(HEAPF[dsp + 68 >> 2]) * +(fTemp2)));
			fTemp4 = +(+(fTemp3) + -1.);
			iTemp5 = ((+(fTemp4) < 0.) | 0);
			HEAPF[dsp + 116 + (0 << 2) >> 2] = +((iTemp5 | 0)?+(fTemp3):+(fTemp4));
			fRec4 = +((iTemp5 | 0)?+(fTemp3):+(+(fTemp3) + +(+(fTemp4) * +(1. - +(+(HEAPF[dsp + 36 >> 2]) / +(fTemp2))))));
			HEAP32[dsp + 124 + (0 << 2) >> 2] = (((imul(1103515245, (HEAP32[dsp + 124 + (1 << 2) >> 2] | 0)) | 0) + 12345) | 0);
			fTemp6 = +(+(HEAPF[dsp + 48 + (0 << 2) >> 2]) * +(+(+(1. - +(HEAPF[dsp + 60 + (0 << 2) >> 2])) * +(+(2. * +(fRec4)) + -1.)) + +(4.65661287e-10 * +(+(HEAPF[dsp + 60 + (0 << 2) >> 2]) * +((HEAP32[dsp + 124 + (0 << 2) >> 2] | 0))))));
			HEAPF[dsp + 144 + (0 << 2) >> 2] = +(+(fSlow15) + +(0.999000013 * +(HEAPF[dsp + 144 + (1 << 2) >> 2])));
			fTemp7 = +(+(fSlow14) + +(HEAPF[dsp + 144 + (0 << 2) >> 2]));
			iTemp8 = ((+(fTemp7) < 23.) | 0);
			iTemp9 = ((+(fTemp7) < 24.) | 0);
			fTemp10 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -23.));
			iTemp11 = ((+(fTemp7) < 22.) | 0);
			fTemp12 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -22.));
			iTemp13 = ((+(fTemp7) < 21.) | 0);
			fTemp14 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -21.));
			iTemp15 = ((+(fTemp7) < 20.) | 0);
			fTemp16 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -20.));
			iTemp17 = ((+(fTemp7) < 19.) | 0);
			fTemp18 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -19.));
			iTemp19 = ((+(fTemp7) < 18.) | 0);
			fTemp20 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -18.));
			iTemp21 = ((+(fTemp7) < 17.) | 0);
			fTemp22 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -17.));
			iTemp23 = ((+(fTemp7) < 16.) | 0);
			fTemp24 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -16.));
			fTemp25 = +(80. * +(fTemp24));
			iTemp26 = ((+(fTemp7) < 15.) | 0);
			fTemp27 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -15.));
			iTemp28 = ((+(fTemp7) < 14.) | 0);
			fTemp29 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -14.));
			iTemp30 = ((+(fTemp7) < 13.) | 0);
			fTemp31 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -13.));
			iTemp32 = ((+(fTemp7) < 12.) | 0);
			fTemp33 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -12.));
			iTemp34 = ((+(fTemp7) < 11.) | 0);
			fTemp35 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -11.));
			iTemp36 = ((+(fTemp7) < 10.) | 0);
			fTemp37 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -10.));
			iTemp38 = ((+(fTemp7) < 9.) | 0);
			fTemp39 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -9.));
			iTemp40 = ((+(fTemp7) < 8.) | 0);
			fTemp41 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -8.));
			fTemp42 = +(50. * +(fTemp41));
			iTemp43 = ((+(fTemp7) < 7.) | 0);
			fTemp44 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -7.));
			iTemp45 = ((+(fTemp7) < 6.) | 0);
			fTemp46 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -6.));
			iTemp47 = ((+(fTemp7) < 5.) | 0);
			fTemp48 = +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) - +(fSlow16));
			iTemp49 = ((+(fTemp7) < 4.) | 0);
			fTemp50 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -4.));
			iTemp51 = ((+(fTemp7) < 3.) | 0);
			fTemp52 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -3.));
			iTemp53 = ((+(fTemp7) < 2.) | 0);
			fTemp54 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -2.));
			iTemp55 = ((+(fTemp7) < 1.) | 0);
			fTemp56 = +(+(fSlow14) + +(+(HEAPF[dsp + 144 + (0 << 2) >> 2]) + -1.));
			iTemp57 = ((+(fTemp7) < 0.) | 0);
			fTemp58 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?800.:+((iTemp55 | 0)?+(800. - +(400. * +(fTemp7))):400.)):+((iTemp53 | 0)?+(400. - +(50. * +(fTemp56))):350.)):+((iTemp51 | 0)?+(+(100. * +(fTemp54)) + 350.):450.)):+((iTemp49 | 0)?+(450. - +(125. * +(fTemp52))):325.)):+((iTemp47 | 0)?+(+(275. * +(fTemp50)) + 325.):600.)):+((iTemp45 | 0)?+(600. - +(200. * +(fTemp48))):400.)):+((iTemp43 | 0)?+(400. - +(150. * +(fTemp46))):250.)):+((iTemp40 | 0)?+(+(150. * +(fTemp44)) + 250.):400.)):+((iTemp38 | 0)?+(400. - +(fTemp42)):350.)):+((iTemp36 | 0)?+(+(310. * +(fTemp39)) + 350.):660.)):+((iTemp34 | 0)?+(660. - +(220. * +(fTemp37))):440.)):+((iTemp32 | 0)?+(440. - +(170. * +(fTemp35))):270.)):+((iTemp30 | 0)?+(+(160. * +(fTemp33)) + 270.):430.)):+((iTemp28 | 0)?+(430. - +(60. * +(fTemp31))):370.)):+((iTemp26 | 0)?+(+(430. * +(fTemp29)) + 370.):800.)):+((iTemp23 | 0)?+(800. - +(450. * +(fTemp27))):350.)):+((iTemp21 | 0)?+(350. - +(fTemp25)):270.)):+((iTemp19 | 0)?+(+(180. * +(fTemp22)) + 270.):450.)):+((iTemp17 | 0)?+(450. - +(125. * +(fTemp20))):325.)):+((iTemp15 | 0)?+(325. * +(+(fTemp18) + 1.)):650.)):+((iTemp13 | 0)?+(650. - +(250. * +(fTemp16))):400.)):+((iTemp11 | 0)?+(400. - +(110. * +(fTemp14))):290.)):+((iTemp8 | 0)?+(+(110. * +(fTemp12)) + 290.):400.)):+((iTemp9 | 0)?+(400. - +(50. * +(fTemp10))):350.));
			HEAPF[dsp + 152 + (0 << 2) >> 2] = +(+(+(fSlow10) * +(HEAPF[dsp + 160 + (1 << 2) >> 2])) + +(+(fSlow11) * +(HEAPF[dsp + 152 + (1 << 2) >> 2])));
			HEAPF[dsp + 160 + (0 << 2) >> 2] = +(+(+(+(fSlow11) * +(HEAPF[dsp + 160 + (1 << 2) >> 2])) + +(+(fSlow12) * +(HEAPF[dsp + 152 + (1 << 2) >> 2]))) + +((iTemp1 | 0)));
			fTemp59 = +(+(HEAPF[dsp + 80 + (0 << 2) >> 2]) * +(+(+(fSlow8) * +(HEAPF[dsp + 152 + (0 << 2) >> 2])) + 1.));
			fTemp60 = +(+(fSlow5) * +(fTemp59));
			fTemp61 = +(((+(fTemp58) <= +(fTemp60)) | 0)?+(fTemp60):+(fTemp58));
			fTemp62 = +(tanf(+(+(HEAPF[dsp + 132 >> 2]) * +(fTemp61))));
			fTemp63 = +(1. / +(fTemp62));
			fTemp64 = +(20. * +(fTemp16));
			fTemp65 = +(20. * +(fTemp27));
			fTemp66 = +(10. * +(fTemp37));
			fTemp67 = +(10. * +(fTemp50));
			fTemp68 = +(20. * +(fTemp52));
			fTemp69 = +(20. * +(fTemp54));
			fTemp70 = +(20. * +(fTemp7));
			fTemp71 = +(+((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?80.:+((iTemp55 | 0)?+(80. - +(fTemp70)):60.)):+((iTemp53 | 0)?+(60. - +(10. * +(fTemp56))):50.)):+((iTemp51 | 0)?+(+(fTemp69) + 50.):70.)):+((iTemp49 | 0)?+(70. - +(fTemp68)):50.)):+((iTemp47 | 0)?+(+(fTemp67) + 50.):60.)):+((iTemp45 | 0)?+(60. - +(20. * +(fTemp48))):40.)):+((iTemp43 | 0)?+(+(20. * +(fTemp46)) + 40.):60.)):+((iTemp40 | 0)?+(60. - +(20. * +(fTemp44))):40.)):40.):+((iTemp36 | 0)?+(40. * +(+(fTemp39) + 1.)):80.)):+((iTemp34 | 0)?+(80. - +(fTemp66)):70.)):+((iTemp32 | 0)?+(70. - +(30. * +(fTemp35))):40.)):40.):40.):+((iTemp26 | 0)?+(40. * +(+(fTemp29) + 1.)):80.)):+((iTemp23 | 0)?+(80. - +(fTemp65)):60.)):60.):+((iTemp19 | 0)?+(60. - +(20. * +(fTemp22))):40.)):+((iTemp17 | 0)?+(+(10. * +(fTemp20)) + 40.):50.)):50.):+((iTemp13 | 0)?+(+(fTemp64) + 50.):70.)):+((iTemp11 | 0)?+(70. - +(30. * +(fTemp14))):40.)):+((iTemp8 | 0)?+(+(30. * +(fTemp12)) + 40.):70.)):+((iTemp9 | 0)?+(70. - +(30. * +(fTemp10))):40.)) / +(fTemp61));
			fTemp72 = +(+(+(+(fTemp63) + +(fTemp71)) / +(fTemp62)) + 1.);
			HEAPF[dsp + 168 + (0 << 2) >> 2] = +(+(fTemp6) - +(+(+(+(HEAPF[dsp + 168 + (2 << 2) >> 2]) * +(+(+(+(fTemp63) - +(fTemp71)) / +(fTemp62)) + 1.)) + +(2. * +(+(HEAPF[dsp + 168 + (1 << 2) >> 2]) * +(1. - +(1. / +(powf(+(fTemp62), 2.))))))) / +(fTemp72)));
			fTemp73 = +(+(0.000839999993 * +(1000. - +(fTemp60))) + 0.800000012);
			fTemp74 = +(+(0.00366666657 * +(400. - +(fTemp60))) + 3.);
			fTemp75 = +((iSlow17 | 0)?+(fTemp74):+(fTemp73));
			fTemp76 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?1150.:+((iTemp55 | 0)?+(+(450. * +(fTemp7)) + 1150.):1600.)):+((iTemp53 | 0)?+(+(100. * +(fTemp56)) + 1600.):1700.)):+((iTemp51 | 0)?+(1700. - +(900. * +(fTemp54))):800.)):+((iTemp49 | 0)?+(800. - +(100. * +(fTemp52))):700.)):+((iTemp47 | 0)?+(+(340. * +(fTemp50)) + 700.):1040.)):+((iTemp45 | 0)?+(+(580. * +(fTemp48)) + 1040.):1620.)):+((iTemp43 | 0)?+(+(130. * +(fTemp46)) + 1620.):1750.)):+((iTemp40 | 0)?+(1750. - +(1000. * +(fTemp44))):750.)):+((iTemp38 | 0)?+(750. - +(150. * +(fTemp41))):600.)):+((iTemp36 | 0)?+(+(520. * +(fTemp39)) + 600.):1120.)):+((iTemp34 | 0)?+(+(680. * +(fTemp37)) + 1120.):1800.)):+((iTemp32 | 0)?+(+(50. * +(fTemp35)) + 1800.):1850.)):+((iTemp30 | 0)?+(1850. - +(1030. * +(fTemp33))):820.)):+((iTemp28 | 0)?+(820. - +(190. * +(fTemp31))):630.)):+((iTemp26 | 0)?+(+(520. * +(fTemp29)) + 630.):1150.)):+((iTemp23 | 0)?+(+(850. * +(fTemp27)) + 1150.):2000.)):+((iTemp21 | 0)?+(+(140. * +(fTemp24)) + 2000.):2140.)):+((iTemp19 | 0)?+(2140. - +(1340. * +(fTemp22))):800.)):+((iTemp17 | 0)?+(800. - +(100. * +(fTemp20))):700.)):+((iTemp15 | 0)?+(+(380. * +(fTemp18)) + 700.):1080.)):+((iTemp13 | 0)?+(+(620. * +(fTemp16)) + 1080.):1700.)):+((iTemp11 | 0)?+(+(170. * +(fTemp14)) + 1700.):1870.)):+((iTemp8 | 0)?+(1870. - +(1070. * +(fTemp12))):800.)):+((iTemp9 | 0)?+(800. - +(200. * +(fTemp10))):600.));
			fTemp77 = +(+(+(fSlow19) * +(fTemp59)) + 30.);
			fTemp78 = +((iSlow18 | 0)?+(((((+(fTemp76) >= 1300.) | 0) & ((+(fTemp60) >= 200.) | 0)) | 0)?+(+(fTemp76) - +(0.000952380942 * +(+(+(fTemp60) + -200.) * +(+(fTemp76) + -1300.)))):+(((+(fTemp76) <= +(fTemp77)) | 0)?+(fTemp77):+(fTemp76))):+(fTemp76));
			fTemp79 = +(tanf(+(+(HEAPF[dsp + 132 >> 2]) * +(fTemp78))));
			fTemp80 = +(1. / +(fTemp79));
			fTemp81 = +(10. * +(fTemp12));
			fTemp82 = +(10. * +(fTemp16));
			fTemp83 = +(10. * +(fTemp39));
			fTemp84 = +(10. * +(fTemp48));
			fTemp85 = +(+((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?90.:+((iTemp55 | 0)?+(90. - +(10. * +(fTemp7))):80.)):+((iTemp53 | 0)?+(+(20. * +(fTemp56)) + 80.):100.)):+((iTemp51 | 0)?+(100. - +(fTemp69)):80.)):+((iTemp49 | 0)?+(80. - +(fTemp68)):60.)):+((iTemp47 | 0)?+(+(fTemp67) + 60.):70.)):+((iTemp45 | 0)?+(+(fTemp84) + 70.):80.)):+((iTemp43 | 0)?+(+(10. * +(fTemp46)) + 80.):90.)):+((iTemp40 | 0)?+(90. - +(10. * +(fTemp44))):80.)):80.):+((iTemp36 | 0)?+(+(fTemp83) + 80.):90.)):+((iTemp34 | 0)?+(90. - +(fTemp66)):80.)):+((iTemp32 | 0)?+(+(10. * +(fTemp35)) + 80.):90.)):+((iTemp30 | 0)?+(90. - +(10. * +(fTemp33))):80.)):+((iTemp28 | 0)?+(80. - +(20. * +(fTemp31))):60.)):+((iTemp26 | 0)?+(+(30. * +(fTemp29)) + 60.):90.)):+((iTemp23 | 0)?+(+(10. * +(fTemp27)) + 90.):100.)):+((iTemp21 | 0)?+(100. - +(10. * +(fTemp24))):90.)):+((iTemp19 | 0)?+(90. - +(10. * +(fTemp22))):80.)):+((iTemp17 | 0)?+(80. - +(20. * +(fTemp20))):60.)):+((iTemp15 | 0)?+(+(30. * +(fTemp18)) + 60.):90.)):+((iTemp13 | 0)?+(90. - +(fTemp82)):80.)):+((iTemp11 | 0)?+(+(10. * +(fTemp14)) + 80.):90.)):+((iTemp8 | 0)?+(90. - +(fTemp81)):80.)):+((iTemp9 | 0)?+(80. - +(20. * +(fTemp10))):60.)) / +(fTemp78));
			fTemp86 = +(+(+(+(fTemp80) + +(fTemp85)) / +(fTemp79)) + 1.);
			HEAPF[dsp + 180 + (0 << 2) >> 2] = +(+(fTemp6) - +(+(+(+(HEAPF[dsp + 180 + (2 << 2) >> 2]) * +(+(+(+(fTemp80) - +(fTemp85)) / +(fTemp79)) + 1.)) + +(2. * +(+(HEAPF[dsp + 180 + (1 << 2) >> 2]) * +(1. - +(1. / +(powf(+(fTemp79), 2.))))))) / +(fTemp86)));
			fTemp87 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?0.630957007:+((iTemp55 | 0)?+(0.630957007 - +(0.567861021 * +(fTemp7))):0.0630960017)):+((iTemp53 | 0)?+(+(0.0369039997 * +(fTemp56)) + 0.0630960017):0.100000001)):+((iTemp51 | 0)?+(+(0.254812986 * +(fTemp54)) + 0.100000001):0.35481301)):+((iTemp49 | 0)?+(0.35481301 - +(0.103624001 * +(fTemp52))):0.251188993)):+((iTemp47 | 0)?+(+(0.195494995 * +(fTemp50)) + 0.251188993):0.446684003)):+((iTemp45 | 0)?+(0.446684003 - +(0.195494995 * +(fTemp48))):0.251188993)):+((iTemp43 | 0)?+(0.251188993 - +(0.219566002 * +(fTemp46))):0.0316229984)):+((iTemp40 | 0)?+(+(0.250214994 * +(fTemp44)) + 0.0316229984):0.281838)):+((iTemp38 | 0)?+(0.281838 - +(0.181838006 * +(fTemp41))):0.100000001)):+((iTemp36 | 0)?+(+(0.401187003 * +(fTemp39)) + 0.100000001):0.501187027)):+((iTemp34 | 0)?+(0.501187027 - +(0.301661015 * +(fTemp37))):0.199525997)):+((iTemp32 | 0)?+(0.199525997 - +(0.136429995 * +(fTemp35))):0.0630960017)):+((iTemp30 | 0)?+(+(0.253131986 * +(fTemp33)) + 0.0630960017):0.316228002)):+((iTemp28 | 0)?+(0.316228002 - +(0.216227993 * +(fTemp31))):0.100000001)):+((iTemp26 | 0)?+(+(0.401187003 * +(fTemp29)) + 0.100000001):0.501187027)):+((iTemp23 | 0)?+(0.501187027 - +(0.401187003 * +(fTemp27))):0.100000001)):+((iTemp21 | 0)?+(+(0.151188999 * +(fTemp24)) + 0.100000001):0.251188993)):+((iTemp19 | 0)?+(+(0.0306490008 * +(fTemp22)) + 0.251188993):0.281838)):+((iTemp17 | 0)?+(0.281838 - +(0.123349003 * +(fTemp20))):0.158489004)):+((iTemp15 | 0)?+(+(0.342698008 * +(fTemp18)) + 0.158489004):0.501187027)):+((iTemp13 | 0)?+(0.501187027 - +(0.301661015 * +(fTemp16))):0.199525997)):+((iTemp11 | 0)?+(0.199525997 - +(0.0216979999 * +(fTemp14))):0.177827999)):+((iTemp8 | 0)?+(+(0.138400003 * +(fTemp12)) + 0.177827999):0.316228002)):+((iTemp9 | 0)?+(0.316228002 - +(0.216227993 * +(fTemp10))):0.100000001));
			fTemp88 = +((iSlow17 | 0)?+(+(fTemp74) * +(fTemp87)):+(+(fTemp73) * +(fTemp87)));
			fTemp89 = +(100. * +(fTemp10));
			fTemp90 = +(50. * +(fTemp18));
			fTemp91 = +(50. * +(fTemp37));
			fTemp92 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?2800.:+((iTemp55 | 0)?+(2800. - +(100. * +(fTemp7))):2700.)):2700.):+((iTemp51 | 0)?+(+(130. * +(fTemp54)) + 2700.):2830.)):+((iTemp49 | 0)?+(2830. - +(300. * +(fTemp52))):2530.)):+((iTemp47 | 0)?+(2530. - +(280. * +(fTemp50))):2250.)):+((iTemp45 | 0)?+(+(150. * +(fTemp48)) + 2250.):2400.)):+((iTemp43 | 0)?+(+(200. * +(fTemp46)) + 2400.):2600.)):+((iTemp40 | 0)?+(2600. - +(200. * +(fTemp44))):2400.)):2400.):+((iTemp36 | 0)?+(+(350. * +(fTemp39)) + 2400.):2750.)):+((iTemp34 | 0)?+(2750. - +(fTemp91)):2700.)):+((iTemp32 | 0)?+(+(200. * +(fTemp35)) + 2700.):2900.)):+((iTemp30 | 0)?+(2900. - +(200. * +(fTemp33))):2700.)):+((iTemp28 | 0)?+(+(50. * +(fTemp31)) + 2700.):2750.)):+((iTemp26 | 0)?+(+(150. * +(fTemp29)) + 2750.):2900.)):+((iTemp23 | 0)?+(2900. - +(100. * +(fTemp27))):2800.)):+((iTemp21 | 0)?+(+(150. * +(fTemp24)) + 2800.):2950.)):+((iTemp19 | 0)?+(2950. - +(120. * +(fTemp22))):2830.)):+((iTemp17 | 0)?+(2830. - +(130. * +(fTemp20))):2700.)):+((iTemp15 | 0)?+(2700. - +(fTemp90)):2650.)):+((iTemp13 | 0)?+(2650. - +(50. * +(fTemp16))):2600.)):+((iTemp11 | 0)?+(+(200. * +(fTemp14)) + 2600.):2800.)):+((iTemp8 | 0)?+(2800. - +(200. * +(fTemp12))):2600.)):+((iTemp9 | 0)?+(+(fTemp89) + 2600.):2700.));
			fTemp93 = +(tanf(+(+(HEAPF[dsp + 132 >> 2]) * +(fTemp92))));
			fTemp94 = +(1. / +(fTemp93));
			fTemp95 = +(20. * +(fTemp29));
			fTemp96 = +(20. * +(fTemp37));
			fTemp97 = +(20. * +(fTemp39));
			fTemp98 = +(60. * +(fTemp50));
			fTemp99 = +(+((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?120.:+((iTemp51 | 0)?+(120. - +(fTemp69)):100.)):+((iTemp49 | 0)?+(+(70. * +(fTemp52)) + 100.):170.)):+((iTemp47 | 0)?+(170. - +(fTemp98)):110.)):+((iTemp45 | 0)?+(110. - +(fTemp84)):100.)):100.):100.):100.):+((iTemp36 | 0)?+(+(fTemp97) + 100.):120.)):+((iTemp34 | 0)?+(120. - +(fTemp96)):100.)):100.):100.):100.):+((iTemp26 | 0)?+(+(fTemp95) + 100.):120.)):120.):+((iTemp21 | 0)?+(120. - +(20. * +(fTemp24))):100.)):100.):+((iTemp17 | 0)?+(+(70. * +(fTemp20)) + 100.):170.)):+((iTemp15 | 0)?+(170. - +(fTemp90)):120.)):+((iTemp13 | 0)?+(120. - +(fTemp64)):100.)):100.):100.):100.) / +(fTemp92));
			fTemp100 = +(+(+(+(fTemp94) + +(fTemp99)) / +(fTemp93)) + 1.);
			HEAPF[dsp + 192 + (0 << 2) >> 2] = +(+(fTemp6) - +(+(+(+(HEAPF[dsp + 192 + (2 << 2) >> 2]) * +(+(+(+(fTemp94) - +(fTemp99)) / +(fTemp93)) + 1.)) + +(2. * +(+(HEAPF[dsp + 192 + (1 << 2) >> 2]) * +(1. - +(1. / +(powf(+(fTemp93), 2.))))))) / +(fTemp100)));
			fTemp101 = +((iTemp19 | 0)?+(+(0.0293140002 * +(fTemp22)) + 0.0501190014):0.0794330016);
			fTemp102 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?0.100000001:+((iTemp55 | 0)?+(0.100000001 - +(0.0683770031 * +(fTemp7))):0.0316229984)):0.0316229984):+((iTemp51 | 0)?+(+(0.126865998 * +(fTemp54)) + 0.0316229984):0.158489004)):+((iTemp49 | 0)?+(0.158489004 - +(0.126865998 * +(fTemp52))):0.0316229984)):+((iTemp47 | 0)?+(+(0.323190004 * +(fTemp50)) + 0.0316229984):0.35481301)):0.35481301):+((iTemp43 | 0)?+(0.35481301 - +(0.196324006 * +(fTemp46))):0.158489004)):+((iTemp40 | 0)?+(0.158489004 - +(0.0693639964 * +(fTemp44))):0.0891249999)):+((iTemp38 | 0)?+(0.0891249999 - +(0.0640060008 * +(fTemp41))):0.0251189992)):+((iTemp36 | 0)?+(+(0.0456760004 * +(fTemp39)) + 0.0251189992):0.0707949996)):+((iTemp34 | 0)?+(+(0.0550980009 * +(fTemp37)) + 0.0707949996):0.125892997)):+((iTemp32 | 0)?+(0.125892997 - +(0.0627970025 * +(fTemp35))):0.0630960017)):+((iTemp30 | 0)?+(0.0630960017 - +(0.0129770003 * +(fTemp33))):0.0501190014)):+((iTemp28 | 0)?+(+(0.020676 * +(fTemp31)) + 0.0501190014):0.0707949996)):+((iTemp26 | 0)?+(0.0707949996 - +(0.0456760004 * +(fTemp29))):0.0251189992)):+((iTemp23 | 0)?+(+(0.152709007 * +(fTemp27)) + 0.0251189992):0.177827999)):+((iTemp21 | 0)?+(0.177827999 - +(0.127709001 * +(fTemp24))):0.0501190014)):+(fTemp101)):+((iTemp17 | 0)?+(0.0794330016 - +(0.0616500005 * +(fTemp20))):0.0177829992)):+((iTemp15 | 0)?+(+(0.428900987 * +(fTemp18)) + 0.0177829992):0.446684003)):+((iTemp13 | 0)?+(0.446684003 - +(0.195494995 * +(fTemp16))):0.251188993)):+((iTemp11 | 0)?+(0.251188993 - +(0.125295997 * +(fTemp14))):0.125892997)):+((iTemp8 | 0)?+(+(0.125295997 * +(fTemp12)) + 0.125892997):0.251188993)):+((iTemp9 | 0)?+(0.251188993 - +(0.109935001 * +(fTemp10))):0.141253993));
			fTemp103 = +((iSlow17 | 0)?+(+(fTemp74) * +(fTemp102)):+(+(fTemp73) * +(fTemp102)));
			fTemp104 = +(350. * +(fTemp48));
			fTemp105 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?3500.:+((iTemp55 | 0)?+(3500. - +(200. * +(fTemp7))):3300.)):+((iTemp53 | 0)?+(+(400. * +(fTemp56)) + 3300.):3700.)):+((iTemp51 | 0)?+(3700. - +(200. * +(fTemp54))):3500.)):3500.):+((iTemp47 | 0)?+(3500. - +(1050. * +(fTemp50))):2450.)):+((iTemp45 | 0)?+(+(fTemp104) + 2450.):2800.)):+((iTemp43 | 0)?+(+(250. * +(fTemp46)) + 2800.):3050.)):+((iTemp40 | 0)?+(3050. - +(450. * +(fTemp44))):2600.)):+((iTemp38 | 0)?+(+(75. * +(fTemp41)) + 2600.):2675.)):+((iTemp36 | 0)?+(+(325. * +(fTemp39)) + 2675.):3000.)):3000.):+((iTemp32 | 0)?+(+(350. * +(fTemp35)) + 3000.):3350.)):+((iTemp30 | 0)?+(3350. - +(350. * +(fTemp33))):3000.)):3000.):+((iTemp26 | 0)?+(+(900. * +(fTemp29)) + 3000.):3900.)):+((iTemp23 | 0)?+(3900. - +(300. * +(fTemp27))):3600.)):+((iTemp21 | 0)?+(+(300. * +(fTemp24)) + 3600.):3900.)):+((iTemp19 | 0)?+(3900. - +(100. * +(fTemp22))):3800.)):3800.):+((iTemp15 | 0)?+(3800. - +(900. * +(fTemp18))):2900.)):+((iTemp13 | 0)?+(+(300. * +(fTemp16)) + 2900.):3200.)):+((iTemp11 | 0)?+(+(50. * +(fTemp14)) + 3200.):3250.)):+((iTemp8 | 0)?+(3250. - +(450. * +(fTemp12))):2800.)):+((iTemp9 | 0)?+(+(fTemp89) + 2800.):2900.));
			fTemp106 = +(tanf(+(+(HEAPF[dsp + 132 >> 2]) * +(fTemp105))));
			fTemp107 = +(1. / +(fTemp106));
			fTemp108 = +(+((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?130.:+((iTemp55 | 0)?+(+(fTemp70) + 130.):150.)):150.):+((iTemp51 | 0)?+(150. - +(fTemp69)):130.)):+((iTemp49 | 0)?+(+(50. * +(fTemp52)) + 130.):180.)):+((iTemp47 | 0)?+(180. - +(fTemp98)):120.)):120.):120.):120.):120.):+((iTemp36 | 0)?+(+(fTemp83) + 120.):130.)):+((iTemp34 | 0)?+(130. - +(fTemp66)):120.)):120.):120.):120.):+((iTemp26 | 0)?+(+(10. * +(fTemp29)) + 120.):130.)):+((iTemp23 | 0)?+(+(fTemp65) + 130.):150.)):+((iTemp21 | 0)?+(150. - +(30. * +(fTemp24))):120.)):120.):+((iTemp17 | 0)?+(+(60. * +(fTemp20)) + 120.):180.)):+((iTemp15 | 0)?+(180. - +(fTemp90)):130.)):+((iTemp13 | 0)?+(130. - +(fTemp82)):120.)):120.):+((iTemp8 | 0)?+(+(fTemp81) + 120.):130.)):+((iTemp9 | 0)?+(130. - +(10. * +(fTemp10))):120.)) / +(fTemp105));
			fTemp109 = +(+(+(+(fTemp107) + +(fTemp108)) / +(fTemp106)) + 1.);
			HEAPF[dsp + 204 + (0 << 2) >> 2] = +(+(fTemp6) - +(+(+(+(HEAPF[dsp + 204 + (2 << 2) >> 2]) * +(+(+(+(fTemp107) - +(fTemp108)) / +(fTemp106)) + 1.)) + +(2. * +(+(HEAPF[dsp + 204 + (1 << 2) >> 2]) * +(1. - +(1. / +(powf(+(fTemp106), 2.))))))) / +(fTemp109)));
			fTemp110 = +((iTemp32 | 0)?+(0.100000001 - +(0.0841509998 * +(fTemp35))):0.0158489998);
			fTemp111 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?0.0158489998:+((iTemp55 | 0)?+(+(0.00193400006 * +(fTemp7)) + 0.0158489998):0.0177829992)):+((iTemp53 | 0)?+(0.0177829992 - +(0.00193400006 * +(fTemp56))):0.0158489998)):+((iTemp51 | 0)?+(+(0.0239620004 * +(fTemp54)) + 0.0158489998):0.0398110002)):+((iTemp49 | 0)?+(0.0398110002 - +(0.0298110005 * +(fTemp52))):0.00999999978)):+((iTemp47 | 0)?+(+(0.344812989 * +(fTemp50)) + 0.00999999978):0.35481301)):+((iTemp45 | 0)?+(0.35481301 - +(0.103624001 * +(fTemp48))):0.251188993)):+((iTemp43 | 0)?+(0.251188993 - +(0.171755999 * +(fTemp46))):0.0794330016)):+((iTemp40 | 0)?+(+(0.0205669999 * +(fTemp44)) + 0.0794330016):0.100000001)):+((iTemp38 | 0)?+(0.100000001 - +(0.0601890013 * +(fTemp41))):0.0398110002)):+((iTemp36 | 0)?+(+(0.0232849997 * +(fTemp39)) + 0.0398110002):0.0630960017)):+((iTemp34 | 0)?+(+(0.0369039997 * +(fTemp37)) + 0.0630960017):0.100000001)):+(fTemp110)):+((iTemp30 | 0)?+(+(0.0635839999 * +(fTemp33)) + 0.0158489998):0.0794330016)):+((iTemp28 | 0)?+(0.0794330016 - +(0.0478099994 * +(fTemp31))):0.0316229984)):+((iTemp26 | 0)?+(+(0.0683770031 * +(fTemp29)) + 0.0316229984):0.100000001)):+((iTemp23 | 0)?+(0.100000001 - +(0.0900000036 * +(fTemp27))):0.00999999978)):+((iTemp21 | 0)?+(+(0.0401189998 * +(fTemp24)) + 0.00999999978):0.0501190014)):+(fTemp101)):+((iTemp17 | 0)?+(0.0794330016 - +(0.0694330037 * +(fTemp20))):0.00999999978)):+((iTemp15 | 0)?+(+(0.388107002 * +(fTemp18)) + 0.00999999978):0.398106992)):+((iTemp13 | 0)?+(0.398106992 - +(0.198580995 * +(fTemp16))):0.199525997)):+((iTemp11 | 0)?+(0.199525997 - +(0.099526003 * +(fTemp14))):0.100000001)):+((iTemp8 | 0)?+(+(0.151188999 * +(fTemp12)) + 0.100000001):0.251188993)):+((iTemp9 | 0)?+(0.251188993 - +(0.0516630001 * +(fTemp10))):0.199525997));
			fTemp112 = +((iSlow17 | 0)?+(+(fTemp74) * +(fTemp111)):+(+(fTemp73) * +(fTemp111)));
			fTemp113 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?4950.:+((iTemp47 | 0)?+(4950. - +(2200. * +(fTemp50))):2750.)):+((iTemp45 | 0)?+(+(fTemp104) + 2750.):3100.)):+((iTemp43 | 0)?+(+(240. * +(fTemp46)) + 3100.):3340.)):+((iTemp40 | 0)?+(3340. - +(440. * +(fTemp44))):2900.)):+((iTemp38 | 0)?+(+(fTemp42) + 2900.):2950.)):+((iTemp36 | 0)?+(+(400. * +(fTemp39)) + 2950.):3350.)):+((iTemp34 | 0)?+(3350. - +(fTemp91)):3300.)):+((iTemp32 | 0)?+(+(290. * +(fTemp35)) + 3300.):3590.)):+((iTemp30 | 0)?+(3590. - +(290. * +(fTemp33))):3300.)):+((iTemp28 | 0)?+(+(100. * +(fTemp31)) + 3300.):3400.)):+((iTemp26 | 0)?+(+(1550. * +(fTemp29)) + 3400.):4950.)):4950.):4950.):4950.):4950.):+((iTemp15 | 0)?+(4950. - +(1700. * +(fTemp18))):3250.)):+((iTemp13 | 0)?+(+(330. * +(fTemp16)) + 3250.):3580.)):+((iTemp11 | 0)?+(3580. - +(40. * +(fTemp14))):3540.)):+((iTemp8 | 0)?+(3540. - +(540. * +(fTemp12))):3000.)):+((iTemp9 | 0)?+(+(300. * +(fTemp10)) + 3000.):3300.));
			fTemp114 = +(tanf(+(+(HEAPF[dsp + 132 >> 2]) * +(fTemp113))));
			fTemp115 = +(1. / +(fTemp114));
			fTemp116 = +(+((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp57 | 0)?140.:+((iTemp55 | 0)?+(+(60. * +(fTemp7)) + 140.):200.)):200.):+((iTemp51 | 0)?+(200. - +(65. * +(fTemp54))):135.)):+((iTemp49 | 0)?+(+(65. * +(fTemp52)) + 135.):200.)):+((iTemp47 | 0)?+(200. - +(70. * +(fTemp50))):130.)):+((iTemp45 | 0)?+(130. - +(fTemp84)):120.)):120.):120.):120.):+((iTemp36 | 0)?+(+(fTemp97) + 120.):140.)):+((iTemp34 | 0)?+(140. - +(fTemp96)):120.)):120.):120.):120.):+((iTemp26 | 0)?+(+(fTemp95) + 120.):140.)):+((iTemp23 | 0)?+(+(60. * +(fTemp27)) + 140.):200.)):+((iTemp21 | 0)?+(200. - +(fTemp25)):120.)):120.):+((iTemp17 | 0)?+(+(80. * +(fTemp20)) + 120.):200.)):+((iTemp15 | 0)?+(200. - +(60. * +(fTemp18))):140.)):+((iTemp13 | 0)?+(140. - +(fTemp64)):120.)):120.):+((iTemp8 | 0)?+(+(15. * +(fTemp12)) + 120.):135.)):+((iTemp9 | 0)?+(135. - +(15. * +(fTemp10))):120.)) / +(fTemp113));
			fTemp117 = +(+(+(+(fTemp115) + +(fTemp116)) / +(fTemp114)) + 1.);
			HEAPF[dsp + 216 + (0 << 2) >> 2] = +(+(fTemp6) - +(+(+(+(HEAPF[dsp + 216 + (2 << 2) >> 2]) * +(+(+(+(fTemp115) - +(fTemp116)) / +(fTemp114)) + 1.)) + +(2. * +(+(HEAPF[dsp + 216 + (1 << 2) >> 2]) * +(1. - +(1. / +(powf(+(fTemp114), 2.))))))) / +(fTemp117)));
			fTemp118 = +((iTemp8 | 0)?+((iTemp11 | 0)?+((iTemp13 | 0)?+((iTemp15 | 0)?+((iTemp17 | 0)?+((iTemp19 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp26 | 0)?+((iTemp28 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp36 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp43 | 0)?+((iTemp45 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?0.00100000005:+((iTemp51 | 0)?+(+(0.000777999987 * +(fTemp54)) + 0.00100000005):0.00177800003)):+((iTemp49 | 0)?+(0.00177800003 - +(0.001147 * +(fTemp52))):0.000630999974)):+((iTemp47 | 0)?+(+(0.0993689969 * +(fTemp50)) + 0.000630999974):0.100000001)):+((iTemp45 | 0)?+(+(0.0258930009 * +(fTemp48)) + 0.100000001):0.125892997)):+((iTemp43 | 0)?+(0.125892997 - +(0.0860819966 * +(fTemp46))):0.0398110002)):+((iTemp40 | 0)?+(0.0398110002 - +(0.0298110005 * +(fTemp44))):0.00999999978)):+((iTemp38 | 0)?+(+(0.00584900007 * +(fTemp41)) + 0.00999999978):0.0158489998)):+((iTemp36 | 0)?+(0.0158489998 - +(0.00325999991 * +(fTemp39))):0.0125890002)):+((iTemp34 | 0)?+(+(0.0874110013 * +(fTemp37)) + 0.0125890002):0.100000001)):+(fTemp110)):+((iTemp30 | 0)?+(+(0.00410400005 * +(fTemp33)) + 0.0158489998):0.0199529994)):0.0199529994):+((iTemp26 | 0)?+(0.0199529994 - +(0.0167909991 * +(fTemp29))):0.0031620001)):+((iTemp23 | 0)?+(0.0031620001 - +(0.00157700002 * +(fTemp27))):0.00158499996)):+((iTemp21 | 0)?+(+(0.00472499989 * +(fTemp24)) + 0.00158499996):0.00631000008)):+((iTemp19 | 0)?+(0.00631000008 - +(0.00314799999 * +(fTemp22))):0.0031620001)):+((iTemp17 | 0)?+(0.0031620001 - +(0.00216199993 * +(fTemp20))):0.00100000005)):+((iTemp15 | 0)?+(+(0.0784329996 * +(fTemp18)) + 0.00100000005):0.0794330016)):+((iTemp13 | 0)?+(+(0.0205669999 * +(fTemp16)) + 0.0794330016):0.100000001)):+((iTemp11 | 0)?+(0.100000001 - +(0.0683770031 * +(fTemp14))):0.0316229984)):+((iTemp8 | 0)?+(+(0.0184959993 * +(fTemp12)) + 0.0316229984):0.0501190014)):0.0501190014);
			fTemp119 = +((iSlow17 | 0)?+(+(fTemp74) * +(fTemp118)):+(+(fTemp73) * +(fTemp118)));
			fTemp120 = +(+(fSlow0) * +(+(+(+(+(+(+(+(HEAPF[dsp + 168 + (2 << 2) >> 2]) * +(0. - +(+(fTemp75) / +(fTemp62)))) + +(+(+(HEAPF[dsp + 168 + (0 << 2) >> 2]) * +(fTemp75)) / +(fTemp62))) / +(fTemp72)) + +(+(+(+(HEAPF[dsp + 180 + (2 << 2) >> 2]) * +(0. - +(+(fTemp88) / +(fTemp79)))) + +(+(+(HEAPF[dsp + 180 + (0 << 2) >> 2]) * +(fTemp88)) / +(fTemp79))) / +(fTemp86))) + +(+(+(+(HEAPF[dsp + 192 + (2 << 2) >> 2]) * +(0. - +(+(fTemp103) / +(fTemp93)))) + +(+(+(HEAPF[dsp + 192 + (0 << 2) >> 2]) * +(fTemp103)) / +(fTemp93))) / +(fTemp100))) + +(+(+(+(HEAPF[dsp + 204 + (2 << 2) >> 2]) * +(0. - +(+(fTemp112) / +(fTemp106)))) + +(+(+(HEAPF[dsp + 204 + (0 << 2) >> 2]) * +(fTemp112)) / +(fTemp106))) / +(fTemp109))) + +(+(+(+(HEAPF[dsp + 216 + (2 << 2) >> 2]) * +(0. - +(+(fTemp119) / +(fTemp114)))) + +(+(+(HEAPF[dsp + 216 + (0 << 2) >> 2]) * +(fTemp119)) / +(fTemp114))) / +(fTemp117))));
			HEAPF[output0 + ((i | 0) << 2) >> 2] = +(+(fTemp120));
			HEAPF[output1 + ((i | 0) << 2) >> 2] = +(+(fTemp120));
			HEAP32[dsp + 4 + (1 << 2) >> 2] = (HEAP32[dsp + 4 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 20 + (1 << 2) >> 2] = +(HEAPF[dsp + 20 + (0 << 2) >> 2]);
			HEAPF[dsp + 48 + (1 << 2) >> 2] = +(HEAPF[dsp + 48 + (0 << 2) >> 2]);
			HEAPF[dsp + 60 + (1 << 2) >> 2] = +(HEAPF[dsp + 60 + (0 << 2) >> 2]);
			HEAPF[dsp + 80 + (1 << 2) >> 2] = +(HEAPF[dsp + 80 + (0 << 2) >> 2]);
			HEAPF[dsp + 100 + (1 << 2) >> 2] = +(HEAPF[dsp + 100 + (0 << 2) >> 2]);
			HEAPF[dsp + 108 + (1 << 2) >> 2] = +(HEAPF[dsp + 108 + (0 << 2) >> 2]);
			HEAPF[dsp + 116 + (1 << 2) >> 2] = +(HEAPF[dsp + 116 + (0 << 2) >> 2]);
			HEAP32[dsp + 124 + (1 << 2) >> 2] = (HEAP32[dsp + 124 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 144 + (1 << 2) >> 2] = +(HEAPF[dsp + 144 + (0 << 2) >> 2]);
			HEAPF[dsp + 152 + (1 << 2) >> 2] = +(HEAPF[dsp + 152 + (0 << 2) >> 2]);
			HEAPF[dsp + 160 + (1 << 2) >> 2] = +(HEAPF[dsp + 160 + (0 << 2) >> 2]);
			HEAPF[dsp + 168 + (2 << 2) >> 2] = +(HEAPF[dsp + 168 + (1 << 2) >> 2]);
			HEAPF[dsp + 168 + (1 << 2) >> 2] = +(HEAPF[dsp + 168 + (0 << 2) >> 2]);
			HEAPF[dsp + 180 + (2 << 2) >> 2] = +(HEAPF[dsp + 180 + (1 << 2) >> 2]);
			HEAPF[dsp + 180 + (1 << 2) >> 2] = +(HEAPF[dsp + 180 + (0 << 2) >> 2]);
			HEAPF[dsp + 192 + (2 << 2) >> 2] = +(HEAPF[dsp + 192 + (1 << 2) >> 2]);
			HEAPF[dsp + 192 + (1 << 2) >> 2] = +(HEAPF[dsp + 192 + (0 << 2) >> 2]);
			HEAPF[dsp + 204 + (2 << 2) >> 2] = +(HEAPF[dsp + 204 + (1 << 2) >> 2]);
			HEAPF[dsp + 204 + (1 << 2) >> 2] = +(HEAPF[dsp + 204 + (0 << 2) >> 2]);
			HEAPF[dsp + 216 + (2 << 2) >> 2] = +(HEAPF[dsp + 216 + (1 << 2) >> 2]);
			HEAPF[dsp + 216 + (1 << 2) >> 2] = +(HEAPF[dsp + 216 + (0 << 2) >> 2]);
			
		}
		
	}
	
	return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, instanceConstants : instanceConstants, instanceResetUserInterface : instanceResetUserInterface, instanceClear : instanceClear, init : init, getSampleRate : getSampleRate, setParamValue : setParamValue, getParamValue : getParamValue, compute : compute };
}

function getSizemydsp() {
	return 228;
}

function getPathTablemydsp() {
	var pathTable = [];
	pathTable["/vocal/gate"] = 12;
	pathTable["/vocal/otherParams/outGain"] = 0;
	pathTable["/vocal/midi/sustain"] = 16;
	pathTable["/vocal/otherParams/vowel"] = 140;
	pathTable["/vocal/midi/gain"] = 28;
	pathTable["/vocal/midi/envAttack"] = 44;
	pathTable["/vocal/otherParams/fricative"] = 56;
	pathTable["/vocal/midi/freq"] = 72;
	pathTable["/vocal/midi/bend"] = 76;
	pathTable["/vocal/otherParams/vibratoGain"] = 88;
	pathTable["/vocal/otherParams/vibratoFreq"] = 96;
	pathTable["/vocal/otherParams/voiceType"] = 136;
	return pathTable;
}

function getJSONmydsp() {
	return "{\"name\":\"Vocal BandPass MIDI\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"(c)Romain Michon, CCRMA (Stanford University), GRAME\"},{\"description\":\"Simple MIDI-controllable source-filter vocal synthesizer.\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"MIT\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Vocal BandPass MIDI\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"vocal\",\"items\":[{\"type\":\"hgroup\",\"label\":\"midi\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"freq\",\"address\":\"/vocal/midi/freq\",\"meta\":[{\"0\":\"\"},{\"style\":\"knob\"}],\"init\":\"440\",\"min\":\"50\",\"max\":\"1000\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"bend\",\"address\":\"/vocal/midi/bend\",\"meta\":[{\"1\":\"\"},{\"hidden\":\"1\"},{\"midi\":\"pitchwheel\"},{\"style\":\"knob\"}],\"init\":\"1\",\"min\":\"0\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"gain\",\"address\":\"/vocal/midi/gain\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.9\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"envAttack\",\"address\":\"/vocal/midi/envAttack\",\"meta\":[{\"3\":\"\"},{\"style\":\"knob\"}],\"init\":\"10\",\"min\":\"0\",\"max\":\"30\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"sustain\",\"address\":\"/vocal/midi/sustain\",\"meta\":[{\"4\":\"\"},{\"hidden\":\"1\"},{\"midi\":\"ctrl 64\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"otherParams\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"voiceType\",\"address\":\"/vocal/otherParams/voiceType\",\"meta\":[{\"0\":\"\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"vowel\",\"address\":\"/vocal/otherParams/vowel\",\"meta\":[{\"1\":\"\"},{\"midi\":\"ctrl 1\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"fricative\",\"address\":\"/vocal/otherParams/fricative\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"vibratoFreq\",\"address\":\"/vocal/otherParams/vibratoFreq\",\"meta\":[{\"3\":\"\"},{\"style\":\"knob\"}],\"init\":\"6\",\"min\":\"1\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"vibratoGain\",\"address\":\"/vocal/otherParams/vibratoGain\",\"meta\":[{\"4\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"outGain\",\"address\":\"/vocal/otherParams/outGain\",\"meta\":[{\"5\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"button\",\"label\":\"gate\",\"address\":\"/vocal/gate\",\"meta\":[{\"2\":\"\"}]}]}]}";
}

function metadatamydsp(m) {
	m.declare("basics.lib/name", "Faust Basic Element Library");
	m.declare("basics.lib/version", "0.0");
	m.declare("copyright", "(c)Romain Michon, CCRMA (Stanford University), GRAME");
	m.declare("description", "Simple MIDI-controllable source-filter vocal synthesizer.");
	m.declare("filters.lib/name", "Faust Filters Library");
	m.declare("filters.lib/version", "0.0");
	m.declare("license", "MIT");
	m.declare("maths.lib/author", "GRAME");
	m.declare("maths.lib/copyright", "GRAME");
	m.declare("maths.lib/license", "LGPL with exception");
	m.declare("maths.lib/name", "Faust Math Library");
	m.declare("maths.lib/version", "2.1");
	m.declare("name", "Vocal BandPass MIDI");
	m.declare("noises.lib/name", "Faust Noise Generator Library");
	m.declare("noises.lib/version", "0.0");
	m.declare("oscillators.lib/name", "Faust Oscillator Library");
	m.declare("oscillators.lib/version", "0.0");
	m.declare("signals.lib/name", "Faust Signal Routing Library");
	m.declare("signals.lib/version", "0.0");
}

