/* ------------------------------------------------------------
copyright: "(c)Mike Olsen, CCRMA (Stanford University)"
license: "MIT"
name: "Vocal FOF"
Code generated with Faust 2.5.15 (https://faust.grame.fr)
Compilation options: ajs, -scal -ftz 0
------------------------------------------------------------ */


function mydspModule(global, foreign, buffer) {
	
	'use asm';
	
	var HEAP32 = new global.Int32Array(buffer);
	var HEAPF = new global.Float32Array(buffer);
	
	var imul = foreign.imul;
	var log = foreign.log;
	var round = foreign.round;
	
	var cosf = foreign.cos;
	var expf = foreign.exp;
	var floorf = foreign.floor;
	var max_f = foreign.max;
	var min_f = foreign.min;
	var sinf = foreign.sin;
	function fmodf(x, y) { x = +x; y = +y; return +(x % y); }
	function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }
	function remainderf(x, y) { x = +x; y = +y; return +(x - +round(x/y) * y); }

	function getNumInputsmydspSIG0(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputsmydspSIG0(dsp) {
		dsp = dsp | 0;
		return 1;
	}
	
	function instanceInitmydspSIG0(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		var l12 = 0;
		for (l12 = 0; (((l12 | 0) < 2) | 0); l12 = (((l12 | 0) + 1) | 0)) {
			HEAP32[dsp + 262460 + ((l12 | 0) << 2) >> 2] = 0;
			
		}
		
	}
	
	function fillmydspSIG0(dsp, count, output) {
		dsp = dsp | 0;
		count = count | 0;
		output = output | 0;
		var i = 0;
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAP32[dsp + 262460 + (0 << 2) >> 2] = (((HEAP32[dsp + 262460 + (1 << 2) >> 2] | 0) + 1) | 0);
			HEAPF[output + ((i | 0) << 2) >> 2] = +(sinf(+(9.58738019e-05 * +((((HEAP32[dsp + 262460 + (0 << 2) >> 2] | 0) + -1) | 0)))));
			HEAP32[dsp + 262460 + (1 << 2) >> 2] = (HEAP32[dsp + 262460 + (0 << 2) >> 2] | 0);
			
		}
		
	}
	
	function getNumInputs(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputs(dsp) {
		dsp = dsp | 0;
		return 2;
	}
	
	function classInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceInitmydspSIG0(dsp, (samplingFreq | 0));
		fillmydspSIG0(dsp, 65536, (dsp + 0 | 0));
		
	}
	
	function instanceConstants(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAP32[dsp + 262156 >> 2] = (samplingFreq | 0);
		HEAPF[dsp + 262160 >> 2] = +(min_f(192000., +(max_f(1., +((HEAP32[dsp + 262156 >> 2] | 0))))));
		HEAPF[dsp + 262164 >> 2] = +(1. / +(HEAPF[dsp + 262160 >> 2]));
		HEAPF[dsp + 262176 >> 2] = +(6.28318548 / +(HEAPF[dsp + 262160 >> 2]));
		HEAPF[dsp + 262224 >> 2] = +(3.14159274 / +(HEAPF[dsp + 262160 >> 2]));
		HEAPF[dsp + 262228 >> 2] = +(expf(+(0. - +(1000. / +(HEAPF[dsp + 262160 >> 2])))));
		HEAPF[dsp + 262232 >> 2] = +(1. - +(HEAPF[dsp + 262228 >> 2]));
		HEAPF[dsp + 262296 >> 2] = +(1. / +(HEAPF[dsp + 262160 >> 2]));
		
	}
	
	function instanceResetUserInterface(dsp) {
		dsp = dsp | 0;
		HEAPF[dsp + 262144 >> 2] = 0.899999976;
		HEAPF[dsp + 262168 >> 2] = 440.;
		HEAPF[dsp + 262172 >> 2] = 0.5;
		HEAPF[dsp + 262180 >> 2] = 6.;
		HEAPF[dsp + 262236 >> 2] = 0.;
		HEAPF[dsp + 262248 >> 2] = 0.;
		
	}
	
	function instanceClear(dsp) {
		dsp = dsp | 0;
		var l0 = 0;
		var l1 = 0;
		var l2 = 0;
		var l3 = 0;
		var l4 = 0;
		var l5 = 0;
		var l6 = 0;
		var l7 = 0;
		var l8 = 0;
		var l9 = 0;
		var l10 = 0;
		var l11 = 0;
		var l13 = 0;
		var l14 = 0;
		var l15 = 0;
		var l16 = 0;
		var l17 = 0;
		var l18 = 0;
		var l19 = 0;
		var l20 = 0;
		var l21 = 0;
		var l22 = 0;
		var l23 = 0;
		var l24 = 0;
		var l25 = 0;
		var l26 = 0;
		var l27 = 0;
		var l28 = 0;
		var l29 = 0;
		var l30 = 0;
		for (l0 = 0; (((l0 | 0) < 2) | 0); l0 = (((l0 | 0) + 1) | 0)) {
			HEAP32[dsp + 262148 + ((l0 | 0) << 2) >> 2] = 0;
			
		}
		for (l1 = 0; (((l1 | 0) < 2) | 0); l1 = (((l1 | 0) + 1) | 0)) {
			HEAPF[dsp + 262184 + ((l1 | 0) << 2) >> 2] = 0.;
			
		}
		for (l2 = 0; (((l2 | 0) < 2) | 0); l2 = (((l2 | 0) + 1) | 0)) {
			HEAPF[dsp + 262192 + ((l2 | 0) << 2) >> 2] = 0.;
			
		}
		for (l3 = 0; (((l3 | 0) < 2) | 0); l3 = (((l3 | 0) + 1) | 0)) {
			HEAPF[dsp + 262200 + ((l3 | 0) << 2) >> 2] = 0.;
			
		}
		for (l4 = 0; (((l4 | 0) < 2) | 0); l4 = (((l4 | 0) + 1) | 0)) {
			HEAPF[dsp + 262208 + ((l4 | 0) << 2) >> 2] = 0.;
			
		}
		for (l5 = 0; (((l5 | 0) < 2) | 0); l5 = (((l5 | 0) + 1) | 0)) {
			HEAP32[dsp + 262216 + ((l5 | 0) << 2) >> 2] = 0;
			
		}
		for (l6 = 0; (((l6 | 0) < 2) | 0); l6 = (((l6 | 0) + 1) | 0)) {
			HEAPF[dsp + 262240 + ((l6 | 0) << 2) >> 2] = 0.;
			
		}
		for (l7 = 0; (((l7 | 0) < 2) | 0); l7 = (((l7 | 0) + 1) | 0)) {
			HEAPF[dsp + 262252 + ((l7 | 0) << 2) >> 2] = 0.;
			
		}
		for (l8 = 0; (((l8 | 0) < 2) | 0); l8 = (((l8 | 0) + 1) | 0)) {
			HEAPF[dsp + 262260 + ((l8 | 0) << 2) >> 2] = 0.;
			
		}
		for (l9 = 0; (((l9 | 0) < 2) | 0); l9 = (((l9 | 0) + 1) | 0)) {
			HEAPF[dsp + 262268 + ((l9 | 0) << 2) >> 2] = 0.;
			
		}
		for (l10 = 0; (((l10 | 0) < 2) | 0); l10 = (((l10 | 0) + 1) | 0)) {
			HEAPF[dsp + 262276 + ((l10 | 0) << 2) >> 2] = 0.;
			
		}
		for (l11 = 0; (((l11 | 0) < 3) | 0); l11 = (((l11 | 0) + 1) | 0)) {
			HEAPF[dsp + 262284 + ((l11 | 0) << 2) >> 2] = 0.;
			
		}
		for (l13 = 0; (((l13 | 0) < 2) | 0); l13 = (((l13 | 0) + 1) | 0)) {
			HEAPF[dsp + 262300 + ((l13 | 0) << 2) >> 2] = 0.;
			
		}
		for (l14 = 0; (((l14 | 0) < 2) | 0); l14 = (((l14 | 0) + 1) | 0)) {
			HEAPF[dsp + 262308 + ((l14 | 0) << 2) >> 2] = 0.;
			
		}
		for (l15 = 0; (((l15 | 0) < 2) | 0); l15 = (((l15 | 0) + 1) | 0)) {
			HEAPF[dsp + 262316 + ((l15 | 0) << 2) >> 2] = 0.;
			
		}
		for (l16 = 0; (((l16 | 0) < 2) | 0); l16 = (((l16 | 0) + 1) | 0)) {
			HEAPF[dsp + 262324 + ((l16 | 0) << 2) >> 2] = 0.;
			
		}
		for (l17 = 0; (((l17 | 0) < 3) | 0); l17 = (((l17 | 0) + 1) | 0)) {
			HEAPF[dsp + 262332 + ((l17 | 0) << 2) >> 2] = 0.;
			
		}
		for (l18 = 0; (((l18 | 0) < 2) | 0); l18 = (((l18 | 0) + 1) | 0)) {
			HEAPF[dsp + 262344 + ((l18 | 0) << 2) >> 2] = 0.;
			
		}
		for (l19 = 0; (((l19 | 0) < 2) | 0); l19 = (((l19 | 0) + 1) | 0)) {
			HEAPF[dsp + 262352 + ((l19 | 0) << 2) >> 2] = 0.;
			
		}
		for (l20 = 0; (((l20 | 0) < 2) | 0); l20 = (((l20 | 0) + 1) | 0)) {
			HEAPF[dsp + 262360 + ((l20 | 0) << 2) >> 2] = 0.;
			
		}
		for (l21 = 0; (((l21 | 0) < 3) | 0); l21 = (((l21 | 0) + 1) | 0)) {
			HEAPF[dsp + 262368 + ((l21 | 0) << 2) >> 2] = 0.;
			
		}
		for (l22 = 0; (((l22 | 0) < 2) | 0); l22 = (((l22 | 0) + 1) | 0)) {
			HEAPF[dsp + 262380 + ((l22 | 0) << 2) >> 2] = 0.;
			
		}
		for (l23 = 0; (((l23 | 0) < 2) | 0); l23 = (((l23 | 0) + 1) | 0)) {
			HEAPF[dsp + 262388 + ((l23 | 0) << 2) >> 2] = 0.;
			
		}
		for (l24 = 0; (((l24 | 0) < 2) | 0); l24 = (((l24 | 0) + 1) | 0)) {
			HEAPF[dsp + 262396 + ((l24 | 0) << 2) >> 2] = 0.;
			
		}
		for (l25 = 0; (((l25 | 0) < 3) | 0); l25 = (((l25 | 0) + 1) | 0)) {
			HEAPF[dsp + 262404 + ((l25 | 0) << 2) >> 2] = 0.;
			
		}
		for (l26 = 0; (((l26 | 0) < 2) | 0); l26 = (((l26 | 0) + 1) | 0)) {
			HEAPF[dsp + 262416 + ((l26 | 0) << 2) >> 2] = 0.;
			
		}
		for (l27 = 0; (((l27 | 0) < 2) | 0); l27 = (((l27 | 0) + 1) | 0)) {
			HEAPF[dsp + 262424 + ((l27 | 0) << 2) >> 2] = 0.;
			
		}
		for (l28 = 0; (((l28 | 0) < 2) | 0); l28 = (((l28 | 0) + 1) | 0)) {
			HEAPF[dsp + 262432 + ((l28 | 0) << 2) >> 2] = 0.;
			
		}
		for (l29 = 0; (((l29 | 0) < 3) | 0); l29 = (((l29 | 0) + 1) | 0)) {
			HEAPF[dsp + 262440 + ((l29 | 0) << 2) >> 2] = 0.;
			
		}
		for (l30 = 0; (((l30 | 0) < 2) | 0); l30 = (((l30 | 0) + 1) | 0)) {
			HEAPF[dsp + 262452 + ((l30 | 0) << 2) >> 2] = 0.;
			
		}
		
	}
	
	function init(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		classInit(dsp, samplingFreq);
		instanceInit(dsp, samplingFreq);
	}
	
	function instanceInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceConstants(dsp, samplingFreq);
		instanceResetUserInterface(dsp);
		instanceClear(dsp);
	}
	
	function getSampleRate(dsp) {
		dsp = dsp | 0;
		return HEAP32[dsp + 262156 >> 2] | 0;
	}
	
	function setParamValue(dsp, offset, value) {
		dsp = dsp | 0;
		offset = offset | 0;
		value = +value;
		HEAPF[dsp + offset >> 2] = value;
	}
	
	function getParamValue(dsp, offset) {
		dsp = dsp | 0;
		offset = offset | 0;
		return +(HEAPF[dsp + offset >> 2]);
	}
	
	function compute(dsp, count, inputs, outputs) {
		dsp = dsp | 0;
		count = count | 0;
		inputs = inputs | 0;
		outputs = outputs | 0;
		var output0 = 0;
		var output1 = 0;
		var fSlow0 = 0.;
		var fSlow1 = 0.;
		var fSlow2 = 0.;
		var fSlow3 = 0.;
		var fSlow4 = 0.;
		var fSlow5 = 0.;
		var fSlow6 = 0.;
		var fSlow7 = 0.;
		var fSlow8 = 0.;
		var iSlow9 = 0;
		var iSlow10 = 0;
		var iSlow11 = 0;
		var fSlow12 = 0.;
		var fSlow13 = 0.;
		var fSlow14 = 0.;
		var fSlow15 = 0.;
		var fSlow16 = 0.;
		var iSlow17 = 0;
		var iSlow18 = 0;
		var fSlow19 = 0.;
		var i = 0;
		var iTemp0 = 0;
		var fTemp1 = 0.;
		var fTemp2 = 0.;
		var fTemp3 = 0.;
		var iTemp4 = 0;
		var fTemp5 = 0.;
		var iTemp6 = 0;
		var iTemp7 = 0;
		var iTemp8 = 0;
		var iTemp9 = 0;
		var iTemp10 = 0;
		var iTemp11 = 0;
		var iTemp12 = 0;
		var iTemp13 = 0;
		var fTemp14 = 0.;
		var fTemp15 = 0.;
		var fTemp16 = 0.;
		var fTemp17 = 0.;
		var iTemp18 = 0;
		var iTemp19 = 0;
		var fTemp20 = 0.;
		var iTemp21 = 0;
		var fTemp22 = 0.;
		var iTemp23 = 0;
		var fTemp24 = 0.;
		var iTemp25 = 0;
		var fTemp26 = 0.;
		var fTemp27 = 0.;
		var iTemp28 = 0;
		var iTemp29 = 0;
		var fTemp30 = 0.;
		var iTemp31 = 0;
		var fTemp32 = 0.;
		var iTemp33 = 0;
		var iTemp34 = 0;
		var fTemp35 = 0.;
		var fTemp36 = 0.;
		var iTemp37 = 0;
		var fTemp38 = 0.;
		var iTemp39 = 0;
		var iTemp40 = 0;
		var iTemp41 = 0;
		var fTemp42 = 0.;
		var iTemp43 = 0;
		var fTemp44 = 0.;
		var fTemp45 = 0.;
		var iTemp46 = 0;
		var fTemp47 = 0.;
		var iTemp48 = 0;
		var iTemp49 = 0;
		var fTemp50 = 0.;
		var iTemp51 = 0;
		var fTemp52 = 0.;
		var iTemp53 = 0;
		var fTemp54 = 0.;
		var iTemp55 = 0;
		var fTemp56 = 0.;
		var fTemp57 = 0.;
		var iTemp58 = 0;
		var fTemp59 = 0.;
		var fTemp60 = 0.;
		var iTemp61 = 0;
		var fTemp62 = 0.;
		var fTemp63 = 0.;
		var iTemp64 = 0;
		var fTemp65 = 0.;
		var iTemp66 = 0;
		var fTemp67 = 0.;
		var fTemp68 = 0.;
		var fTemp69 = 0.;
		var fTemp70 = 0.;
		var fTemp71 = 0.;
		var fTemp72 = 0.;
		var iTemp73 = 0;
		var fTemp74 = 0.;
		var iTemp75 = 0;
		var iTemp76 = 0;
		var fTemp77 = 0.;
		var iTemp78 = 0;
		var fTemp79 = 0.;
		var iTemp80 = 0;
		var fTemp81 = 0.;
		var iTemp82 = 0;
		var fTemp83 = 0.;
		var iTemp84 = 0;
		var fTemp85 = 0.;
		var iTemp86 = 0;
		var fTemp87 = 0.;
		var iTemp88 = 0;
		var fTemp89 = 0.;
		var iTemp90 = 0;
		var fTemp91 = 0.;
		var iTemp92 = 0;
		var fTemp93 = 0.;
		var iTemp94 = 0;
		var fTemp95 = 0.;
		var iTemp96 = 0;
		var fTemp97 = 0.;
		var iTemp98 = 0;
		var fTemp99 = 0.;
		var iTemp100 = 0;
		var fTemp101 = 0.;
		var iTemp102 = 0;
		var fTemp103 = 0.;
		var iTemp104 = 0;
		var fTemp105 = 0.;
		var iTemp106 = 0;
		var fTemp107 = 0.;
		var fTemp108 = 0.;
		var iTemp109 = 0;
		var fTemp110 = 0.;
		var iTemp111 = 0;
		var fTemp112 = 0.;
		var iTemp113 = 0;
		var fTemp114 = 0.;
		var iTemp115 = 0;
		var fTemp116 = 0.;
		var iTemp117 = 0;
		var fTemp118 = 0.;
		var iTemp119 = 0;
		var fTemp120 = 0.;
		var iTemp121 = 0;
		var fTemp122 = 0.;
		var iTemp123 = 0;
		var fTemp124 = 0.;
		var fTemp125 = 0.;
		var fTemp126 = 0.;
		var fTemp127 = 0.;
		var fTemp128 = 0.;
		var fTemp129 = 0.;
		var fTemp130 = 0.;
		var fTemp131 = 0.;
		var fTemp132 = 0.;
		var fTemp133 = 0.;
		var fTemp134 = 0.;
		var fTemp135 = 0.;
		var fTemp136 = 0.;
		var fTemp137 = 0.;
		var fTemp138 = 0.;
		var fTemp139 = 0.;
		var fTemp140 = 0.;
		var fTemp141 = 0.;
		var fTemp142 = 0.;
		var fTemp143 = 0.;
		var fTemp144 = 0.;
		var fTemp145 = 0.;
		var fTemp146 = 0.;
		var fTemp147 = 0.;
		var fTemp148 = 0.;
		var fTemp149 = 0.;
		var fTemp150 = 0.;
		var fTemp151 = 0.;
		var fTemp152 = 0.;
		var fTemp153 = 0.;
		var fTemp154 = 0.;
		var fTemp155 = 0.;
		var fTemp156 = 0.;
		var fTemp157 = 0.;
		var fTemp158 = 0.;
		var fTemp159 = 0.;
		var fTemp160 = 0.;
		var fTemp161 = 0.;
		var fTemp162 = 0.;
		var fTemp163 = 0.;
		var fTemp164 = 0.;
		var fTemp165 = 0.;
		var fTemp166 = 0.;
		var fTemp167 = 0.;
		output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);
		output1 = (HEAP32[outputs + (1 << 2) >> 2] | 0);
		fSlow0 = +(25. * +(+(HEAPF[dsp + 262144 >> 2])));
		fSlow1 = +(+(HEAPF[dsp + 262168 >> 2]));
		fSlow2 = +(0.100000001 * +(+(HEAPF[dsp + 262172 >> 2])));
		fSlow3 = +(+(HEAPF[dsp + 262176 >> 2]) * +(+(HEAPF[dsp + 262180 >> 2])));
		fSlow4 = +(sinf(+(fSlow3)));
		fSlow5 = +(cosf(+(fSlow3)));
		fSlow6 = +(0. - +(fSlow4));
		fSlow7 = +(0.00100000005 * +(+(HEAPF[dsp + 262236 >> 2])));
		fSlow8 = +(+(HEAPF[dsp + 262248 >> 2]));
		iSlow9 = ((((+(fSlow8) == 0.) | 0)?1:((((+(fSlow8) == 3.) | 0)?1:0) | 0)) | 0);
		iSlow10 = (imul(5, (iSlow9 | 0)) | 0);
		iSlow11 = (((iSlow9 | 0) >= 1) | 0);
		fSlow12 = +((iSlow11 | 0)?174.610001:82.4100037);
		fSlow13 = +((iSlow11 | 0)?1046.5:523.25);
		fSlow14 = +(+(fSlow13) - +(fSlow12));
		fSlow15 = +(5. * +(fSlow8));
		fSlow16 = +(5. * +(1. - +(fSlow8)));
		iSlow17 = (((iSlow9 | 0) == 0) | 0);
		iSlow18 = ((+(fSlow8) != 2.) | 0);
		fSlow19 = +(2. * +(fSlow1));
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAP32[dsp + 262148 + (0 << 2) >> 2] = 1;
			HEAPF[dsp + 262184 + (0 << 2) >> 2] = +(+(+(fSlow4) * +(HEAPF[dsp + 262192 + (1 << 2) >> 2])) + +(+(fSlow5) * +(HEAPF[dsp + 262184 + (1 << 2) >> 2])));
			iTemp0 = ((1 - (HEAP32[dsp + 262148 + (1 << 2) >> 2] | 0)) | 0);
			HEAPF[dsp + 262192 + (0 << 2) >> 2] = +(+(+(+(fSlow5) * +(HEAPF[dsp + 262192 + (1 << 2) >> 2])) + +(+(fSlow6) * +(HEAPF[dsp + 262184 + (1 << 2) >> 2]))) + +((iTemp0 | 0)));
			fTemp1 = +(+(+(fSlow2) * +(HEAPF[dsp + 262184 + (0 << 2) >> 2])) + 1.);
			fTemp2 = +(+(fSlow1) * +(fTemp1));
			HEAPF[dsp + 262200 + (0 << 2) >> 2] = +(fTemp2);
			fTemp3 = +(+(HEAPF[dsp + 262208 + (1 << 2) >> 2]) + +(+(HEAPF[dsp + 262164 >> 2]) * +(HEAPF[dsp + 262200 + (1 << 2) >> 2])));
			HEAPF[dsp + 262208 + (0 << 2) >> 2] = +(+(fTemp3) - +(floorf(+(fTemp3))));
			iTemp4 = ((+(+(HEAPF[dsp + 262208 + (0 << 2) >> 2]) - +(HEAPF[dsp + 262208 + (1 << 2) >> 2])) < 0.) | 0);
			HEAP32[dsp + 262216 + (0 << 2) >> 2] = (iTemp4 | 0);
			HEAPF[dsp + 262240 + (0 << 2) >> 2] = +(+(fSlow7) + +(0.999000013 * +(HEAPF[dsp + 262240 + (1 << 2) >> 2])));
			fTemp5 = +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + +((iSlow10 | 0)));
			iTemp6 = ((+(fTemp5) >= 5.) | 0);
			iTemp7 = ((+(fTemp5) >= 3.) | 0);
			iTemp8 = ((+(fTemp5) >= 2.) | 0);
			iTemp9 = ((+(fTemp5) >= 1.) | 0);
			iTemp10 = ((+(fTemp5) >= 4.) | 0);
			iTemp11 = ((+(fTemp5) >= 8.) | 0);
			iTemp12 = ((+(fTemp5) >= 7.) | 0);
			iTemp13 = ((+(fTemp5) >= 6.) | 0);
			fTemp14 = +((iTemp6 | 0)?+((iTemp11 | 0)?2.:+((iTemp12 | 0)?3.:+((iTemp13 | 0)?3.:2.))):+((iTemp7 | 0)?+((iTemp10 | 0)?1.5:1.):+((iTemp8 | 0)?1.25:+((iTemp9 | 0)?1.25:1.))));
			HEAPF[dsp + 262252 + (0 << 2) >> 2] = +(+(+(fSlow4) * +(HEAPF[dsp + 262260 + (1 << 2) >> 2])) + +(+(fSlow5) * +(HEAPF[dsp + 262252 + (1 << 2) >> 2])));
			HEAPF[dsp + 262260 + (0 << 2) >> 2] = +(+(+(+(fSlow5) * +(HEAPF[dsp + 262260 + (1 << 2) >> 2])) + +(+(fSlow6) * +(HEAPF[dsp + 262252 + (1 << 2) >> 2]))) + +((iTemp0 | 0)));
			fTemp15 = +(+(fSlow1) * +(+(+(fSlow2) * +(HEAPF[dsp + 262252 + (0 << 2) >> 2])) + 1.));
			fTemp16 = +(+(fTemp14) + +(+(+((iTemp6 | 0)?+((iTemp11 | 0)?12.:+((iTemp12 | 0)?12.:+((iTemp13 | 0)?12.:15.))):+((iTemp7 | 0)?+((iTemp10 | 0)?4.:10.):+((iTemp8 | 0)?2.5:+((iTemp9 | 0)?2.5:10.)))) - +(fTemp14)) * +(((+(fTemp15) <= +(fSlow12)) | 0)?0.:+(((+(fTemp15) >= +(fSlow13)) | 0)?1.:+(+(+(fTemp15) - +(fSlow12)) / +(fSlow14))))));
			fTemp17 = +(+(fSlow15) + +(HEAPF[dsp + 262240 + (0 << 2) >> 2]));
			iTemp18 = ((+(fTemp17) < 23.) | 0);
			iTemp19 = ((+(fTemp17) < 24.) | 0);
			fTemp20 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -23.));
			iTemp21 = ((+(fTemp17) < 22.) | 0);
			fTemp22 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -22.));
			iTemp23 = ((+(fTemp17) < 21.) | 0);
			fTemp24 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -21.));
			iTemp25 = ((+(fTemp17) < 20.) | 0);
			fTemp26 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -20.));
			fTemp27 = +(20. * +(fTemp26));
			iTemp28 = ((+(fTemp17) < 19.) | 0);
			iTemp29 = ((+(fTemp17) < 18.) | 0);
			fTemp30 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -18.));
			iTemp31 = ((+(fTemp17) < 17.) | 0);
			fTemp32 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -17.));
			iTemp33 = ((+(fTemp17) < 16.) | 0);
			iTemp34 = ((+(fTemp17) < 15.) | 0);
			fTemp35 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -15.));
			fTemp36 = +(20. * +(fTemp35));
			iTemp37 = ((+(fTemp17) < 14.) | 0);
			fTemp38 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -14.));
			iTemp39 = ((+(fTemp17) < 13.) | 0);
			iTemp40 = ((+(fTemp17) < 12.) | 0);
			iTemp41 = ((+(fTemp17) < 11.) | 0);
			fTemp42 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -11.));
			iTemp43 = ((+(fTemp17) < 10.) | 0);
			fTemp44 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -10.));
			fTemp45 = +(10. * +(fTemp44));
			iTemp46 = ((+(fTemp17) < 9.) | 0);
			fTemp47 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -9.));
			iTemp48 = ((+(fTemp17) < 8.) | 0);
			iTemp49 = ((+(fTemp17) < 7.) | 0);
			fTemp50 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -7.));
			iTemp51 = ((+(fTemp17) < 6.) | 0);
			fTemp52 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -6.));
			iTemp53 = ((+(fTemp17) < 5.) | 0);
			fTemp54 = +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) - +(fSlow16));
			iTemp55 = ((+(fTemp17) < 4.) | 0);
			fTemp56 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -4.));
			fTemp57 = +(10. * +(fTemp56));
			iTemp58 = ((+(fTemp17) < 3.) | 0);
			fTemp59 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -3.));
			fTemp60 = +(20. * +(fTemp59));
			iTemp61 = ((+(fTemp17) < 2.) | 0);
			fTemp62 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -2.));
			fTemp63 = +(20. * +(fTemp62));
			iTemp64 = ((+(fTemp17) < 1.) | 0);
			fTemp65 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -1.));
			iTemp66 = ((+(fTemp17) < 0.) | 0);
			fTemp67 = +(20. * +(fTemp17));
			fTemp68 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?80.:+((iTemp64 | 0)?+(80. - +(fTemp67)):60.)):+((iTemp61 | 0)?+(60. - +(10. * +(fTemp65))):50.)):+((iTemp58 | 0)?+(+(fTemp63) + 50.):70.)):+((iTemp55 | 0)?+(70. - +(fTemp60)):50.)):+((iTemp53 | 0)?+(+(fTemp57) + 50.):60.)):+((iTemp51 | 0)?+(60. - +(20. * +(fTemp54))):40.)):+((iTemp49 | 0)?+(+(20. * +(fTemp52)) + 40.):60.)):+((iTemp48 | 0)?+(60. - +(20. * +(fTemp50))):40.)):40.):+((iTemp43 | 0)?+(40. * +(+(fTemp47) + 1.)):80.)):+((iTemp41 | 0)?+(80. - +(fTemp45)):70.)):+((iTemp40 | 0)?+(70. - +(30. * +(fTemp42))):40.)):40.):40.):+((iTemp34 | 0)?+(40. * +(+(fTemp38) + 1.)):80.)):+((iTemp33 | 0)?+(80. - +(fTemp36)):60.)):60.):+((iTemp29 | 0)?+(60. - +(20. * +(fTemp32))):40.)):+((iTemp28 | 0)?+(+(10. * +(fTemp30)) + 40.):50.)):50.):+((iTemp23 | 0)?+(+(fTemp27) + 50.):70.)):+((iTemp21 | 0)?+(70. - +(30. * +(fTemp24))):40.)):+((iTemp18 | 0)?+(+(30. * +(fTemp22)) + 40.):70.)):+((iTemp19 | 0)?+(70. - +(30. * +(fTemp20))):40.));
			HEAPF[dsp + 262268 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262268 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(+(fTemp16) * +(fTemp68))));
			fTemp69 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262268 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262276 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262276 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(fTemp68)));
			fTemp70 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262276 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262284 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262216 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262284 + (1 << 2) >> 2]) * +(0. - +(+(fTemp69) + +(fTemp70)))) + +(+(+(fTemp69) * +(fTemp70)) * +(HEAPF[dsp + 262284 + (2 << 2) >> 2]))));
			fTemp71 = +(+(0.000839999993 * +(1000. - +(fTemp15))) + 0.800000012);
			fTemp72 = +(+(0.00366666657 * +(400. - +(fTemp15))) + 3.);
			iTemp73 = ((1 - (((iTemp4 | 0) > 0) | 0)) | 0);
			HEAPF[dsp + 262300 + (0 << 2) >> 2] = +(+(fSlow7) + +(0.999000013 * +(HEAPF[dsp + 262300 + (1 << 2) >> 2])));
			fTemp74 = +(+(fSlow15) + +(HEAPF[dsp + 262300 + (0 << 2) >> 2]));
			iTemp75 = ((+(fTemp74) < 23.) | 0);
			iTemp76 = ((+(fTemp74) < 24.) | 0);
			fTemp77 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -23.));
			iTemp78 = ((+(fTemp74) < 22.) | 0);
			fTemp79 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -22.));
			iTemp80 = ((+(fTemp74) < 21.) | 0);
			fTemp81 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -21.));
			iTemp82 = ((+(fTemp74) < 20.) | 0);
			fTemp83 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -20.));
			iTemp84 = ((+(fTemp74) < 19.) | 0);
			fTemp85 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -19.));
			iTemp86 = ((+(fTemp74) < 18.) | 0);
			fTemp87 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -18.));
			iTemp88 = ((+(fTemp74) < 17.) | 0);
			fTemp89 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -17.));
			iTemp90 = ((+(fTemp74) < 16.) | 0);
			fTemp91 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -16.));
			iTemp92 = ((+(fTemp74) < 15.) | 0);
			fTemp93 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -15.));
			iTemp94 = ((+(fTemp74) < 14.) | 0);
			fTemp95 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -14.));
			iTemp96 = ((+(fTemp74) < 13.) | 0);
			fTemp97 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -13.));
			iTemp98 = ((+(fTemp74) < 12.) | 0);
			fTemp99 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -12.));
			iTemp100 = ((+(fTemp74) < 11.) | 0);
			fTemp101 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -11.));
			iTemp102 = ((+(fTemp74) < 10.) | 0);
			fTemp103 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -10.));
			iTemp104 = ((+(fTemp74) < 9.) | 0);
			fTemp105 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -9.));
			iTemp106 = ((+(fTemp74) < 8.) | 0);
			fTemp107 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -8.));
			fTemp108 = +(50. * +(fTemp107));
			iTemp109 = ((+(fTemp74) < 7.) | 0);
			fTemp110 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -7.));
			iTemp111 = ((+(fTemp74) < 6.) | 0);
			fTemp112 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -6.));
			iTemp113 = ((+(fTemp74) < 5.) | 0);
			fTemp114 = +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) - +(fSlow16));
			iTemp115 = ((+(fTemp74) < 4.) | 0);
			fTemp116 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -4.));
			iTemp117 = ((+(fTemp74) < 3.) | 0);
			fTemp118 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -3.));
			iTemp119 = ((+(fTemp74) < 2.) | 0);
			fTemp120 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -2.));
			iTemp121 = ((+(fTemp74) < 1.) | 0);
			fTemp122 = +(+(fSlow15) + +(+(HEAPF[dsp + 262300 + (0 << 2) >> 2]) + -1.));
			iTemp123 = ((+(fTemp74) < 0.) | 0);
			fTemp124 = +((iTemp75 | 0)?+((iTemp78 | 0)?+((iTemp80 | 0)?+((iTemp82 | 0)?+((iTemp84 | 0)?+((iTemp86 | 0)?+((iTemp88 | 0)?+((iTemp90 | 0)?+((iTemp92 | 0)?+((iTemp94 | 0)?+((iTemp96 | 0)?+((iTemp98 | 0)?+((iTemp100 | 0)?+((iTemp102 | 0)?+((iTemp104 | 0)?+((iTemp106 | 0)?+((iTemp109 | 0)?+((iTemp111 | 0)?+((iTemp113 | 0)?+((iTemp115 | 0)?+((iTemp117 | 0)?+((iTemp119 | 0)?+((iTemp121 | 0)?+((iTemp123 | 0)?800.:+((iTemp121 | 0)?+(800. - +(400. * +(fTemp74))):400.)):+((iTemp119 | 0)?+(400. - +(50. * +(fTemp122))):350.)):+((iTemp117 | 0)?+(+(100. * +(fTemp120)) + 350.):450.)):+((iTemp115 | 0)?+(450. - +(125. * +(fTemp118))):325.)):+((iTemp113 | 0)?+(+(275. * +(fTemp116)) + 325.):600.)):+((iTemp111 | 0)?+(600. - +(200. * +(fTemp114))):400.)):+((iTemp109 | 0)?+(400. - +(150. * +(fTemp112))):250.)):+((iTemp106 | 0)?+(+(150. * +(fTemp110)) + 250.):400.)):+((iTemp104 | 0)?+(400. - +(fTemp108)):350.)):+((iTemp102 | 0)?+(+(310. * +(fTemp105)) + 350.):660.)):+((iTemp100 | 0)?+(660. - +(220. * +(fTemp103))):440.)):+((iTemp98 | 0)?+(440. - +(170. * +(fTemp101))):270.)):+((iTemp96 | 0)?+(+(160. * +(fTemp99)) + 270.):430.)):+((iTemp94 | 0)?+(430. - +(60. * +(fTemp97))):370.)):+((iTemp92 | 0)?+(+(430. * +(fTemp95)) + 370.):800.)):+((iTemp90 | 0)?+(800. - +(450. * +(fTemp93))):350.)):+((iTemp88 | 0)?+(350. - +(80. * +(fTemp91))):270.)):+((iTemp86 | 0)?+(+(180. * +(fTemp89)) + 270.):450.)):+((iTemp84 | 0)?+(450. - +(125. * +(fTemp87))):325.)):+((iTemp82 | 0)?+(325. * +(+(fTemp85) + 1.)):650.)):+((iTemp80 | 0)?+(650. - +(250. * +(fTemp83))):400.)):+((iTemp78 | 0)?+(400. - +(110. * +(fTemp81))):290.)):+((iTemp75 | 0)?+(+(110. * +(fTemp79)) + 290.):400.)):+((iTemp76 | 0)?+(400. - +(50. * +(fTemp77))):350.));
			fTemp125 = +(+(+(HEAPF[dsp + 262308 + (1 << 2) >> 2]) * +((iTemp73 | 0))) + +(+(HEAPF[dsp + 262296 >> 2]) * +(((+(fTemp124) <= +(fTemp2)) | 0)?+(fTemp2):+(fTemp124))));
			HEAPF[dsp + 262308 + (0 << 2) >> 2] = +(+(fTemp125) - +(floorf(+(fTemp125))));
			fTemp126 = +(10. * +(fTemp22));
			fTemp127 = +(10. * +(fTemp26));
			fTemp128 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -19.));
			fTemp129 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -16.));
			fTemp130 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -13.));
			fTemp131 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -12.));
			fTemp132 = +(10. * +(fTemp47));
			fTemp133 = +(10. * +(fTemp54));
			fTemp134 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?90.:+((iTemp64 | 0)?+(90. - +(10. * +(fTemp17))):80.)):+((iTemp61 | 0)?+(+(20. * +(fTemp65)) + 80.):100.)):+((iTemp58 | 0)?+(100. - +(fTemp63)):80.)):+((iTemp55 | 0)?+(80. - +(fTemp60)):60.)):+((iTemp53 | 0)?+(+(fTemp57) + 60.):70.)):+((iTemp51 | 0)?+(+(fTemp133) + 70.):80.)):+((iTemp49 | 0)?+(+(10. * +(fTemp52)) + 80.):90.)):+((iTemp48 | 0)?+(90. - +(10. * +(fTemp50))):80.)):80.):+((iTemp43 | 0)?+(+(fTemp132) + 80.):90.)):+((iTemp41 | 0)?+(90. - +(fTemp45)):80.)):+((iTemp40 | 0)?+(+(10. * +(fTemp42)) + 80.):90.)):+((iTemp39 | 0)?+(90. - +(10. * +(fTemp131))):80.)):+((iTemp37 | 0)?+(80. - +(20. * +(fTemp130))):60.)):+((iTemp34 | 0)?+(+(30. * +(fTemp38)) + 60.):90.)):+((iTemp33 | 0)?+(+(10. * +(fTemp35)) + 90.):100.)):+((iTemp31 | 0)?+(100. - +(10. * +(fTemp129))):90.)):+((iTemp29 | 0)?+(90. - +(10. * +(fTemp32))):80.)):+((iTemp28 | 0)?+(80. - +(20. * +(fTemp30))):60.)):+((iTemp25 | 0)?+(+(30. * +(fTemp128)) + 60.):90.)):+((iTemp23 | 0)?+(90. - +(fTemp127)):80.)):+((iTemp21 | 0)?+(+(10. * +(fTemp24)) + 80.):90.)):+((iTemp18 | 0)?+(90. - +(fTemp126)):80.)):+((iTemp19 | 0)?+(80. - +(20. * +(fTemp20))):60.));
			HEAPF[dsp + 262316 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262316 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(+(fTemp16) * +(fTemp134))));
			fTemp135 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262316 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262324 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262324 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(fTemp134)));
			fTemp136 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262324 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262332 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262216 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262332 + (1 << 2) >> 2]) * +(0. - +(+(fTemp135) + +(fTemp136)))) + +(+(+(fTemp135) * +(fTemp136)) * +(HEAPF[dsp + 262332 + (2 << 2) >> 2]))));
			fTemp137 = +(+(fSlow15) + +(+(HEAPF[dsp + 262240 + (0 << 2) >> 2]) + -8.));
			fTemp138 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?0.630957007:+((iTemp64 | 0)?+(0.630957007 - +(0.567861021 * +(fTemp17))):0.0630960017)):+((iTemp61 | 0)?+(+(0.0369039997 * +(fTemp65)) + 0.0630960017):0.100000001)):+((iTemp58 | 0)?+(+(0.254812986 * +(fTemp62)) + 0.100000001):0.35481301)):+((iTemp55 | 0)?+(0.35481301 - +(0.103624001 * +(fTemp59))):0.251188993)):+((iTemp53 | 0)?+(+(0.195494995 * +(fTemp56)) + 0.251188993):0.446684003)):+((iTemp51 | 0)?+(0.446684003 - +(0.195494995 * +(fTemp54))):0.251188993)):+((iTemp49 | 0)?+(0.251188993 - +(0.219566002 * +(fTemp52))):0.0316229984)):+((iTemp48 | 0)?+(+(0.250214994 * +(fTemp50)) + 0.0316229984):0.281838)):+((iTemp46 | 0)?+(0.281838 - +(0.181838006 * +(fTemp137))):0.100000001)):+((iTemp43 | 0)?+(+(0.401187003 * +(fTemp47)) + 0.100000001):0.501187027)):+((iTemp41 | 0)?+(0.501187027 - +(0.301661015 * +(fTemp44))):0.199525997)):+((iTemp40 | 0)?+(0.199525997 - +(0.136429995 * +(fTemp42))):0.0630960017)):+((iTemp39 | 0)?+(+(0.253131986 * +(fTemp131)) + 0.0630960017):0.316228002)):+((iTemp37 | 0)?+(0.316228002 - +(0.216227993 * +(fTemp130))):0.100000001)):+((iTemp34 | 0)?+(+(0.401187003 * +(fTemp38)) + 0.100000001):0.501187027)):+((iTemp33 | 0)?+(0.501187027 - +(0.401187003 * +(fTemp35))):0.100000001)):+((iTemp31 | 0)?+(+(0.151188999 * +(fTemp129)) + 0.100000001):0.251188993)):+((iTemp29 | 0)?+(+(0.0306490008 * +(fTemp32)) + 0.251188993):0.281838)):+((iTemp28 | 0)?+(0.281838 - +(0.123349003 * +(fTemp30))):0.158489004)):+((iTemp25 | 0)?+(+(0.342698008 * +(fTemp128)) + 0.158489004):0.501187027)):+((iTemp23 | 0)?+(0.501187027 - +(0.301661015 * +(fTemp26))):0.199525997)):+((iTemp21 | 0)?+(0.199525997 - +(0.0216979999 * +(fTemp24))):0.177827999)):+((iTemp18 | 0)?+(+(0.138400003 * +(fTemp22)) + 0.177827999):0.316228002)):+((iTemp19 | 0)?+(0.316228002 - +(0.216227993 * +(fTemp20))):0.100000001));
			fTemp139 = +((iTemp75 | 0)?+((iTemp78 | 0)?+((iTemp80 | 0)?+((iTemp82 | 0)?+((iTemp84 | 0)?+((iTemp86 | 0)?+((iTemp88 | 0)?+((iTemp90 | 0)?+((iTemp92 | 0)?+((iTemp94 | 0)?+((iTemp96 | 0)?+((iTemp98 | 0)?+((iTemp100 | 0)?+((iTemp102 | 0)?+((iTemp104 | 0)?+((iTemp106 | 0)?+((iTemp109 | 0)?+((iTemp111 | 0)?+((iTemp113 | 0)?+((iTemp115 | 0)?+((iTemp117 | 0)?+((iTemp119 | 0)?+((iTemp121 | 0)?+((iTemp123 | 0)?1150.:+((iTemp121 | 0)?+(+(450. * +(fTemp74)) + 1150.):1600.)):+((iTemp119 | 0)?+(+(100. * +(fTemp122)) + 1600.):1700.)):+((iTemp117 | 0)?+(1700. - +(900. * +(fTemp120))):800.)):+((iTemp115 | 0)?+(800. - +(100. * +(fTemp118))):700.)):+((iTemp113 | 0)?+(+(340. * +(fTemp116)) + 700.):1040.)):+((iTemp111 | 0)?+(+(580. * +(fTemp114)) + 1040.):1620.)):+((iTemp109 | 0)?+(+(130. * +(fTemp112)) + 1620.):1750.)):+((iTemp106 | 0)?+(1750. - +(1000. * +(fTemp110))):750.)):+((iTemp104 | 0)?+(750. - +(150. * +(fTemp107))):600.)):+((iTemp102 | 0)?+(+(520. * +(fTemp105)) + 600.):1120.)):+((iTemp100 | 0)?+(+(680. * +(fTemp103)) + 1120.):1800.)):+((iTemp98 | 0)?+(+(50. * +(fTemp101)) + 1800.):1850.)):+((iTemp96 | 0)?+(1850. - +(1030. * +(fTemp99))):820.)):+((iTemp94 | 0)?+(820. - +(190. * +(fTemp97))):630.)):+((iTemp92 | 0)?+(+(520. * +(fTemp95)) + 630.):1150.)):+((iTemp90 | 0)?+(+(850. * +(fTemp93)) + 1150.):2000.)):+((iTemp88 | 0)?+(+(140. * +(fTemp91)) + 2000.):2140.)):+((iTemp86 | 0)?+(2140. - +(1340. * +(fTemp89))):800.)):+((iTemp84 | 0)?+(800. - +(100. * +(fTemp87))):700.)):+((iTemp82 | 0)?+(+(380. * +(fTemp85)) + 700.):1080.)):+((iTemp80 | 0)?+(+(620. * +(fTemp83)) + 1080.):1700.)):+((iTemp78 | 0)?+(+(170. * +(fTemp81)) + 1700.):1870.)):+((iTemp75 | 0)?+(1870. - +(1070. * +(fTemp79))):800.)):+((iTemp76 | 0)?+(800. - +(200. * +(fTemp77))):600.));
			fTemp140 = +(+(+(fSlow19) * +(fTemp1)) + 30.);
			fTemp141 = +(+(+((iTemp73 | 0)) * +(HEAPF[dsp + 262344 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262296 >> 2]) * +((iSlow18 | 0)?+(((((+(fTemp139) >= 1300.) | 0) & ((+(fTemp2) >= 200.) | 0)) | 0)?+(+(fTemp139) - +(0.000952380942 * +(+(+(fTemp2) + -200.) * +(+(fTemp139) + -1300.)))):+(((+(fTemp139) <= +(fTemp140)) | 0)?+(fTemp140):+(fTemp139))):+(fTemp139))));
			HEAPF[dsp + 262344 + (0 << 2) >> 2] = +(+(fTemp141) - +(floorf(+(fTemp141))));
			fTemp142 = +(50. * +(fTemp128));
			fTemp143 = +(20. * +(fTemp38));
			fTemp144 = +(20. * +(fTemp44));
			fTemp145 = +(20. * +(fTemp47));
			fTemp146 = +(60. * +(fTemp56));
			fTemp147 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?120.:+((iTemp58 | 0)?+(120. - +(fTemp63)):100.)):+((iTemp55 | 0)?+(+(70. * +(fTemp59)) + 100.):170.)):+((iTemp53 | 0)?+(170. - +(fTemp146)):110.)):+((iTemp51 | 0)?+(110. - +(fTemp133)):100.)):100.):100.):100.):+((iTemp43 | 0)?+(+(fTemp145) + 100.):120.)):+((iTemp41 | 0)?+(120. - +(fTemp144)):100.)):100.):100.):100.):+((iTemp34 | 0)?+(+(fTemp143) + 100.):120.)):120.):+((iTemp31 | 0)?+(120. - +(20. * +(fTemp129))):100.)):100.):+((iTemp28 | 0)?+(+(70. * +(fTemp30)) + 100.):170.)):+((iTemp25 | 0)?+(170. - +(fTemp142)):120.)):+((iTemp23 | 0)?+(120. - +(fTemp27)):100.)):100.):100.):100.);
			HEAPF[dsp + 262352 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262352 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(+(fTemp16) * +(fTemp147))));
			fTemp148 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262352 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262360 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262360 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(fTemp147)));
			fTemp149 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262360 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262368 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262216 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262368 + (1 << 2) >> 2]) * +(0. - +(+(fTemp148) + +(fTemp149)))) + +(+(+(fTemp148) * +(fTemp149)) * +(HEAPF[dsp + 262368 + (2 << 2) >> 2]))));
			fTemp150 = +((iTemp29 | 0)?+(+(0.0293140002 * +(fTemp32)) + 0.0501190014):0.0794330016);
			fTemp151 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?0.100000001:+((iTemp64 | 0)?+(0.100000001 - +(0.0683770031 * +(fTemp17))):0.0316229984)):0.0316229984):+((iTemp58 | 0)?+(+(0.126865998 * +(fTemp62)) + 0.0316229984):0.158489004)):+((iTemp55 | 0)?+(0.158489004 - +(0.126865998 * +(fTemp59))):0.0316229984)):+((iTemp53 | 0)?+(+(0.323190004 * +(fTemp56)) + 0.0316229984):0.35481301)):0.35481301):+((iTemp49 | 0)?+(0.35481301 - +(0.196324006 * +(fTemp52))):0.158489004)):+((iTemp48 | 0)?+(0.158489004 - +(0.0693639964 * +(fTemp50))):0.0891249999)):+((iTemp46 | 0)?+(0.0891249999 - +(0.0640060008 * +(fTemp137))):0.0251189992)):+((iTemp43 | 0)?+(+(0.0456760004 * +(fTemp47)) + 0.0251189992):0.0707949996)):+((iTemp41 | 0)?+(+(0.0550980009 * +(fTemp44)) + 0.0707949996):0.125892997)):+((iTemp40 | 0)?+(0.125892997 - +(0.0627970025 * +(fTemp42))):0.0630960017)):+((iTemp39 | 0)?+(0.0630960017 - +(0.0129770003 * +(fTemp131))):0.0501190014)):+((iTemp37 | 0)?+(+(0.020676 * +(fTemp130)) + 0.0501190014):0.0707949996)):+((iTemp34 | 0)?+(0.0707949996 - +(0.0456760004 * +(fTemp38))):0.0251189992)):+((iTemp33 | 0)?+(+(0.152709007 * +(fTemp35)) + 0.0251189992):0.177827999)):+((iTemp31 | 0)?+(0.177827999 - +(0.127709001 * +(fTemp129))):0.0501190014)):+(fTemp150)):+((iTemp28 | 0)?+(0.0794330016 - +(0.0616500005 * +(fTemp30))):0.0177829992)):+((iTemp25 | 0)?+(+(0.428900987 * +(fTemp128)) + 0.0177829992):0.446684003)):+((iTemp23 | 0)?+(0.446684003 - +(0.195494995 * +(fTemp26))):0.251188993)):+((iTemp21 | 0)?+(0.251188993 - +(0.125295997 * +(fTemp24))):0.125892997)):+((iTemp18 | 0)?+(+(0.125295997 * +(fTemp22)) + 0.125892997):0.251188993)):+((iTemp19 | 0)?+(0.251188993 - +(0.109935001 * +(fTemp20))):0.141253993));
			fTemp152 = +(100. * +(fTemp77));
			fTemp153 = +(50. * +(fTemp103));
			fTemp154 = +(+(+((iTemp73 | 0)) * +(HEAPF[dsp + 262380 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262296 >> 2]) * +((iTemp75 | 0)?+((iTemp78 | 0)?+((iTemp80 | 0)?+((iTemp82 | 0)?+((iTemp84 | 0)?+((iTemp86 | 0)?+((iTemp88 | 0)?+((iTemp90 | 0)?+((iTemp92 | 0)?+((iTemp94 | 0)?+((iTemp96 | 0)?+((iTemp98 | 0)?+((iTemp100 | 0)?+((iTemp102 | 0)?+((iTemp104 | 0)?+((iTemp106 | 0)?+((iTemp109 | 0)?+((iTemp111 | 0)?+((iTemp113 | 0)?+((iTemp115 | 0)?+((iTemp117 | 0)?+((iTemp119 | 0)?+((iTemp121 | 0)?+((iTemp123 | 0)?2800.:+((iTemp121 | 0)?+(2800. - +(100. * +(fTemp74))):2700.)):2700.):+((iTemp117 | 0)?+(+(130. * +(fTemp120)) + 2700.):2830.)):+((iTemp115 | 0)?+(2830. - +(300. * +(fTemp118))):2530.)):+((iTemp113 | 0)?+(2530. - +(280. * +(fTemp116))):2250.)):+((iTemp111 | 0)?+(+(150. * +(fTemp114)) + 2250.):2400.)):+((iTemp109 | 0)?+(+(200. * +(fTemp112)) + 2400.):2600.)):+((iTemp106 | 0)?+(2600. - +(200. * +(fTemp110))):2400.)):2400.):+((iTemp102 | 0)?+(+(350. * +(fTemp105)) + 2400.):2750.)):+((iTemp100 | 0)?+(2750. - +(fTemp153)):2700.)):+((iTemp98 | 0)?+(+(200. * +(fTemp101)) + 2700.):2900.)):+((iTemp96 | 0)?+(2900. - +(200. * +(fTemp99))):2700.)):+((iTemp94 | 0)?+(+(50. * +(fTemp97)) + 2700.):2750.)):+((iTemp92 | 0)?+(+(150. * +(fTemp95)) + 2750.):2900.)):+((iTemp90 | 0)?+(2900. - +(100. * +(fTemp93))):2800.)):+((iTemp88 | 0)?+(+(150. * +(fTemp91)) + 2800.):2950.)):+((iTemp86 | 0)?+(2950. - +(120. * +(fTemp89))):2830.)):+((iTemp84 | 0)?+(2830. - +(130. * +(fTemp87))):2700.)):+((iTemp82 | 0)?+(2700. - +(50. * +(fTemp85))):2650.)):+((iTemp80 | 0)?+(2650. - +(50. * +(fTemp83))):2600.)):+((iTemp78 | 0)?+(+(200. * +(fTemp81)) + 2600.):2800.)):+((iTemp75 | 0)?+(2800. - +(200. * +(fTemp79))):2600.)):+((iTemp76 | 0)?+(+(fTemp152) + 2600.):2700.))));
			HEAPF[dsp + 262380 + (0 << 2) >> 2] = +(+(fTemp154) - +(floorf(+(fTemp154))));
			fTemp155 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?130.:+((iTemp64 | 0)?+(+(fTemp67) + 130.):150.)):150.):+((iTemp58 | 0)?+(150. - +(fTemp63)):130.)):+((iTemp55 | 0)?+(+(50. * +(fTemp59)) + 130.):180.)):+((iTemp53 | 0)?+(180. - +(fTemp146)):120.)):120.):120.):120.):120.):+((iTemp43 | 0)?+(+(fTemp132) + 120.):130.)):+((iTemp41 | 0)?+(130. - +(fTemp45)):120.)):120.):120.):120.):+((iTemp34 | 0)?+(+(10. * +(fTemp38)) + 120.):130.)):+((iTemp33 | 0)?+(+(fTemp36) + 130.):150.)):+((iTemp31 | 0)?+(150. - +(30. * +(fTemp129))):120.)):120.):+((iTemp28 | 0)?+(+(60. * +(fTemp30)) + 120.):180.)):+((iTemp25 | 0)?+(180. - +(fTemp142)):130.)):+((iTemp23 | 0)?+(130. - +(fTemp127)):120.)):120.):+((iTemp18 | 0)?+(+(fTemp126) + 120.):130.)):+((iTemp19 | 0)?+(130. - +(10. * +(fTemp20))):120.));
			HEAPF[dsp + 262388 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262388 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(+(fTemp16) * +(fTemp155))));
			fTemp156 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262388 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262396 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262396 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(fTemp155)));
			fTemp157 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262396 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262404 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262216 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262404 + (1 << 2) >> 2]) * +(0. - +(+(fTemp156) + +(fTemp157)))) + +(+(+(fTemp156) * +(fTemp157)) * +(HEAPF[dsp + 262404 + (2 << 2) >> 2]))));
			fTemp158 = +((iTemp40 | 0)?+(0.100000001 - +(0.0841509998 * +(fTemp42))):0.0158489998);
			fTemp159 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?0.0158489998:+((iTemp64 | 0)?+(+(0.00193400006 * +(fTemp17)) + 0.0158489998):0.0177829992)):+((iTemp61 | 0)?+(0.0177829992 - +(0.00193400006 * +(fTemp65))):0.0158489998)):+((iTemp58 | 0)?+(+(0.0239620004 * +(fTemp62)) + 0.0158489998):0.0398110002)):+((iTemp55 | 0)?+(0.0398110002 - +(0.0298110005 * +(fTemp59))):0.00999999978)):+((iTemp53 | 0)?+(+(0.344812989 * +(fTemp56)) + 0.00999999978):0.35481301)):+((iTemp51 | 0)?+(0.35481301 - +(0.103624001 * +(fTemp54))):0.251188993)):+((iTemp49 | 0)?+(0.251188993 - +(0.171755999 * +(fTemp52))):0.0794330016)):+((iTemp48 | 0)?+(+(0.0205669999 * +(fTemp50)) + 0.0794330016):0.100000001)):+((iTemp46 | 0)?+(0.100000001 - +(0.0601890013 * +(fTemp137))):0.0398110002)):+((iTemp43 | 0)?+(+(0.0232849997 * +(fTemp47)) + 0.0398110002):0.0630960017)):+((iTemp41 | 0)?+(+(0.0369039997 * +(fTemp44)) + 0.0630960017):0.100000001)):+(fTemp158)):+((iTemp39 | 0)?+(+(0.0635839999 * +(fTemp131)) + 0.0158489998):0.0794330016)):+((iTemp37 | 0)?+(0.0794330016 - +(0.0478099994 * +(fTemp130))):0.0316229984)):+((iTemp34 | 0)?+(+(0.0683770031 * +(fTemp38)) + 0.0316229984):0.100000001)):+((iTemp33 | 0)?+(0.100000001 - +(0.0900000036 * +(fTemp35))):0.00999999978)):+((iTemp31 | 0)?+(+(0.0401189998 * +(fTemp129)) + 0.00999999978):0.0501190014)):+(fTemp150)):+((iTemp28 | 0)?+(0.0794330016 - +(0.0694330037 * +(fTemp30))):0.00999999978)):+((iTemp25 | 0)?+(+(0.388107002 * +(fTemp128)) + 0.00999999978):0.398106992)):+((iTemp23 | 0)?+(0.398106992 - +(0.198580995 * +(fTemp26))):0.199525997)):+((iTemp21 | 0)?+(0.199525997 - +(0.099526003 * +(fTemp24))):0.100000001)):+((iTemp18 | 0)?+(+(0.151188999 * +(fTemp22)) + 0.100000001):0.251188993)):+((iTemp19 | 0)?+(0.251188993 - +(0.0516630001 * +(fTemp20))):0.199525997));
			fTemp160 = +(350. * +(fTemp114));
			fTemp161 = +(+(+((iTemp73 | 0)) * +(HEAPF[dsp + 262416 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262296 >> 2]) * +((iTemp75 | 0)?+((iTemp78 | 0)?+((iTemp80 | 0)?+((iTemp82 | 0)?+((iTemp84 | 0)?+((iTemp86 | 0)?+((iTemp88 | 0)?+((iTemp90 | 0)?+((iTemp92 | 0)?+((iTemp94 | 0)?+((iTemp96 | 0)?+((iTemp98 | 0)?+((iTemp100 | 0)?+((iTemp102 | 0)?+((iTemp104 | 0)?+((iTemp106 | 0)?+((iTemp109 | 0)?+((iTemp111 | 0)?+((iTemp113 | 0)?+((iTemp115 | 0)?+((iTemp117 | 0)?+((iTemp119 | 0)?+((iTemp121 | 0)?+((iTemp123 | 0)?3500.:+((iTemp121 | 0)?+(3500. - +(200. * +(fTemp74))):3300.)):+((iTemp119 | 0)?+(+(400. * +(fTemp122)) + 3300.):3700.)):+((iTemp117 | 0)?+(3700. - +(200. * +(fTemp120))):3500.)):3500.):+((iTemp113 | 0)?+(3500. - +(1050. * +(fTemp116))):2450.)):+((iTemp111 | 0)?+(+(fTemp160) + 2450.):2800.)):+((iTemp109 | 0)?+(+(250. * +(fTemp112)) + 2800.):3050.)):+((iTemp106 | 0)?+(3050. - +(450. * +(fTemp110))):2600.)):+((iTemp104 | 0)?+(+(75. * +(fTemp107)) + 2600.):2675.)):+((iTemp102 | 0)?+(+(325. * +(fTemp105)) + 2675.):3000.)):3000.):+((iTemp98 | 0)?+(+(350. * +(fTemp101)) + 3000.):3350.)):+((iTemp96 | 0)?+(3350. - +(350. * +(fTemp99))):3000.)):3000.):+((iTemp92 | 0)?+(+(900. * +(fTemp95)) + 3000.):3900.)):+((iTemp90 | 0)?+(3900. - +(300. * +(fTemp93))):3600.)):+((iTemp88 | 0)?+(+(300. * +(fTemp91)) + 3600.):3900.)):+((iTemp86 | 0)?+(3900. - +(100. * +(fTemp89))):3800.)):3800.):+((iTemp82 | 0)?+(3800. - +(900. * +(fTemp85))):2900.)):+((iTemp80 | 0)?+(+(300. * +(fTemp83)) + 2900.):3200.)):+((iTemp78 | 0)?+(+(50. * +(fTemp81)) + 3200.):3250.)):+((iTemp75 | 0)?+(3250. - +(450. * +(fTemp79))):2800.)):+((iTemp76 | 0)?+(+(fTemp152) + 2800.):2900.))));
			HEAPF[dsp + 262416 + (0 << 2) >> 2] = +(+(fTemp161) - +(floorf(+(fTemp161))));
			fTemp162 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?+((iTemp64 | 0)?+((iTemp66 | 0)?140.:+((iTemp64 | 0)?+(+(60. * +(fTemp17)) + 140.):200.)):200.):+((iTemp58 | 0)?+(200. - +(65. * +(fTemp62))):135.)):+((iTemp55 | 0)?+(+(65. * +(fTemp59)) + 135.):200.)):+((iTemp53 | 0)?+(200. - +(70. * +(fTemp56))):130.)):+((iTemp51 | 0)?+(130. - +(fTemp133)):120.)):120.):120.):120.):+((iTemp43 | 0)?+(+(fTemp145) + 120.):140.)):+((iTemp41 | 0)?+(140. - +(fTemp144)):120.)):120.):120.):120.):+((iTemp34 | 0)?+(+(fTemp143) + 120.):140.)):+((iTemp33 | 0)?+(+(60. * +(fTemp35)) + 140.):200.)):+((iTemp31 | 0)?+(200. - +(80. * +(fTemp129))):120.)):120.):+((iTemp28 | 0)?+(+(80. * +(fTemp30)) + 120.):200.)):+((iTemp25 | 0)?+(200. - +(60. * +(fTemp128))):140.)):+((iTemp23 | 0)?+(140. - +(fTemp27)):120.)):120.):+((iTemp18 | 0)?+(+(15. * +(fTemp22)) + 120.):135.)):+((iTemp19 | 0)?+(135. - +(15. * +(fTemp20))):120.));
			HEAPF[dsp + 262424 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262424 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(+(fTemp16) * +(fTemp162))));
			fTemp163 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262424 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262432 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262228 >> 2]) * +(HEAPF[dsp + 262432 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262232 >> 2]) * +(fTemp162)));
			fTemp164 = +(expf(+(+(HEAPF[dsp + 262224 >> 2]) * +(0. - +(HEAPF[dsp + 262432 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262440 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262216 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262440 + (1 << 2) >> 2]) * +(0. - +(+(fTemp163) + +(fTemp164)))) + +(+(+(fTemp163) * +(fTemp164)) * +(HEAPF[dsp + 262440 + (2 << 2) >> 2]))));
			fTemp165 = +((iTemp18 | 0)?+((iTemp21 | 0)?+((iTemp23 | 0)?+((iTemp25 | 0)?+((iTemp28 | 0)?+((iTemp29 | 0)?+((iTemp31 | 0)?+((iTemp33 | 0)?+((iTemp34 | 0)?+((iTemp37 | 0)?+((iTemp39 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp43 | 0)?+((iTemp46 | 0)?+((iTemp48 | 0)?+((iTemp49 | 0)?+((iTemp51 | 0)?+((iTemp53 | 0)?+((iTemp55 | 0)?+((iTemp58 | 0)?+((iTemp61 | 0)?0.00100000005:+((iTemp58 | 0)?+(+(0.000777999987 * +(fTemp62)) + 0.00100000005):0.00177800003)):+((iTemp55 | 0)?+(0.00177800003 - +(0.001147 * +(fTemp59))):0.000630999974)):+((iTemp53 | 0)?+(+(0.0993689969 * +(fTemp56)) + 0.000630999974):0.100000001)):+((iTemp51 | 0)?+(+(0.0258930009 * +(fTemp54)) + 0.100000001):0.125892997)):+((iTemp49 | 0)?+(0.125892997 - +(0.0860819966 * +(fTemp52))):0.0398110002)):+((iTemp48 | 0)?+(0.0398110002 - +(0.0298110005 * +(fTemp50))):0.00999999978)):+((iTemp46 | 0)?+(+(0.00584900007 * +(fTemp137)) + 0.00999999978):0.0158489998)):+((iTemp43 | 0)?+(0.0158489998 - +(0.00325999991 * +(fTemp47))):0.0125890002)):+((iTemp41 | 0)?+(+(0.0874110013 * +(fTemp44)) + 0.0125890002):0.100000001)):+(fTemp158)):+((iTemp39 | 0)?+(+(0.00410400005 * +(fTemp131)) + 0.0158489998):0.0199529994)):0.0199529994):+((iTemp34 | 0)?+(0.0199529994 - +(0.0167909991 * +(fTemp38))):0.0031620001)):+((iTemp33 | 0)?+(0.0031620001 - +(0.00157700002 * +(fTemp35))):0.00158499996)):+((iTemp31 | 0)?+(+(0.00472499989 * +(fTemp129)) + 0.00158499996):0.00631000008)):+((iTemp29 | 0)?+(0.00631000008 - +(0.00314799999 * +(fTemp32))):0.0031620001)):+((iTemp28 | 0)?+(0.0031620001 - +(0.00216199993 * +(fTemp30))):0.00100000005)):+((iTemp25 | 0)?+(+(0.0784329996 * +(fTemp128)) + 0.00100000005):0.0794330016)):+((iTemp23 | 0)?+(+(0.0205669999 * +(fTemp26)) + 0.0794330016):0.100000001)):+((iTemp21 | 0)?+(0.100000001 - +(0.0683770031 * +(fTemp24))):0.0316229984)):+((iTemp18 | 0)?+(+(0.0184959993 * +(fTemp22)) + 0.0316229984):0.0501190014)):0.0501190014);
			fTemp166 = +(+(+((iTemp73 | 0)) * +(HEAPF[dsp + 262452 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262296 >> 2]) * +((iTemp75 | 0)?+((iTemp78 | 0)?+((iTemp80 | 0)?+((iTemp82 | 0)?+((iTemp84 | 0)?+((iTemp86 | 0)?+((iTemp88 | 0)?+((iTemp90 | 0)?+((iTemp92 | 0)?+((iTemp94 | 0)?+((iTemp96 | 0)?+((iTemp98 | 0)?+((iTemp100 | 0)?+((iTemp102 | 0)?+((iTemp104 | 0)?+((iTemp106 | 0)?+((iTemp109 | 0)?+((iTemp111 | 0)?+((iTemp113 | 0)?+((iTemp115 | 0)?4950.:+((iTemp113 | 0)?+(4950. - +(2200. * +(fTemp116))):2750.)):+((iTemp111 | 0)?+(+(fTemp160) + 2750.):3100.)):+((iTemp109 | 0)?+(+(240. * +(fTemp112)) + 3100.):3340.)):+((iTemp106 | 0)?+(3340. - +(440. * +(fTemp110))):2900.)):+((iTemp104 | 0)?+(+(fTemp108) + 2900.):2950.)):+((iTemp102 | 0)?+(+(400. * +(fTemp105)) + 2950.):3350.)):+((iTemp100 | 0)?+(3350. - +(fTemp153)):3300.)):+((iTemp98 | 0)?+(+(290. * +(fTemp101)) + 3300.):3590.)):+((iTemp96 | 0)?+(3590. - +(290. * +(fTemp99))):3300.)):+((iTemp94 | 0)?+(+(100. * +(fTemp97)) + 3300.):3400.)):+((iTemp92 | 0)?+(+(1550. * +(fTemp95)) + 3400.):4950.)):4950.):4950.):4950.):4950.):+((iTemp82 | 0)?+(4950. - +(1700. * +(fTemp85))):3250.)):+((iTemp80 | 0)?+(+(330. * +(fTemp83)) + 3250.):3580.)):+((iTemp78 | 0)?+(3580. - +(40. * +(fTemp81))):3540.)):+((iTemp75 | 0)?+(3540. - +(540. * +(fTemp79))):3000.)):+((iTemp76 | 0)?+(+(300. * +(fTemp77)) + 3000.):3300.))));
			HEAPF[dsp + 262452 + (0 << 2) >> 2] = +(+(fTemp166) - +(floorf(+(fTemp166))));
			fTemp167 = +(+(fSlow0) * +(+(+(+(+(+(+(+(HEAPF[dsp + 262284 + (0 << 2) >> 2]) * +((iSlow17 | 0)?+(fTemp72):+(fTemp71))) * +(1. - +(+(fTemp70) + +(+(fTemp69) * +(1. - +(fTemp70)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262308 + (0 << 2) >> 2]))) << 2) >> 2])) + +(+(+(+(HEAPF[dsp + 262332 + (0 << 2) >> 2]) * +((iSlow17 | 0)?+(+(fTemp72) * +(fTemp138)):+(+(fTemp71) * +(fTemp138)))) * +(1. - +(+(fTemp136) + +(+(fTemp135) * +(1. - +(fTemp136)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262344 + (0 << 2) >> 2]))) << 2) >> 2]))) + +(+(+(+(HEAPF[dsp + 262368 + (0 << 2) >> 2]) * +((iSlow17 | 0)?+(+(fTemp72) * +(fTemp151)):+(+(fTemp71) * +(fTemp151)))) * +(1. - +(+(fTemp149) + +(+(fTemp148) * +(1. - +(fTemp149)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262380 + (0 << 2) >> 2]))) << 2) >> 2]))) + +(+(+(+(HEAPF[dsp + 262404 + (0 << 2) >> 2]) * +((iSlow17 | 0)?+(+(fTemp72) * +(fTemp159)):+(+(fTemp71) * +(fTemp159)))) * +(1. - +(+(fTemp157) + +(+(fTemp156) * +(1. - +(fTemp157)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262416 + (0 << 2) >> 2]))) << 2) >> 2]))) + +(+(+(+(HEAPF[dsp + 262440 + (0 << 2) >> 2]) * +((iSlow17 | 0)?+(+(fTemp72) * +(fTemp165)):+(+(fTemp71) * +(fTemp165)))) * +(1. - +(+(fTemp164) + +(+(fTemp163) * +(1. - +(fTemp164)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262452 + (0 << 2) >> 2]))) << 2) >> 2]))));
			HEAPF[output0 + ((i | 0) << 2) >> 2] = +(+(fTemp167));
			HEAPF[output1 + ((i | 0) << 2) >> 2] = +(+(fTemp167));
			HEAP32[dsp + 262148 + (1 << 2) >> 2] = (HEAP32[dsp + 262148 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 262184 + (1 << 2) >> 2] = +(HEAPF[dsp + 262184 + (0 << 2) >> 2]);
			HEAPF[dsp + 262192 + (1 << 2) >> 2] = +(HEAPF[dsp + 262192 + (0 << 2) >> 2]);
			HEAPF[dsp + 262200 + (1 << 2) >> 2] = +(HEAPF[dsp + 262200 + (0 << 2) >> 2]);
			HEAPF[dsp + 262208 + (1 << 2) >> 2] = +(HEAPF[dsp + 262208 + (0 << 2) >> 2]);
			HEAP32[dsp + 262216 + (1 << 2) >> 2] = (HEAP32[dsp + 262216 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 262240 + (1 << 2) >> 2] = +(HEAPF[dsp + 262240 + (0 << 2) >> 2]);
			HEAPF[dsp + 262252 + (1 << 2) >> 2] = +(HEAPF[dsp + 262252 + (0 << 2) >> 2]);
			HEAPF[dsp + 262260 + (1 << 2) >> 2] = +(HEAPF[dsp + 262260 + (0 << 2) >> 2]);
			HEAPF[dsp + 262268 + (1 << 2) >> 2] = +(HEAPF[dsp + 262268 + (0 << 2) >> 2]);
			HEAPF[dsp + 262276 + (1 << 2) >> 2] = +(HEAPF[dsp + 262276 + (0 << 2) >> 2]);
			HEAPF[dsp + 262284 + (2 << 2) >> 2] = +(HEAPF[dsp + 262284 + (1 << 2) >> 2]);
			HEAPF[dsp + 262284 + (1 << 2) >> 2] = +(HEAPF[dsp + 262284 + (0 << 2) >> 2]);
			HEAPF[dsp + 262300 + (1 << 2) >> 2] = +(HEAPF[dsp + 262300 + (0 << 2) >> 2]);
			HEAPF[dsp + 262308 + (1 << 2) >> 2] = +(HEAPF[dsp + 262308 + (0 << 2) >> 2]);
			HEAPF[dsp + 262316 + (1 << 2) >> 2] = +(HEAPF[dsp + 262316 + (0 << 2) >> 2]);
			HEAPF[dsp + 262324 + (1 << 2) >> 2] = +(HEAPF[dsp + 262324 + (0 << 2) >> 2]);
			HEAPF[dsp + 262332 + (2 << 2) >> 2] = +(HEAPF[dsp + 262332 + (1 << 2) >> 2]);
			HEAPF[dsp + 262332 + (1 << 2) >> 2] = +(HEAPF[dsp + 262332 + (0 << 2) >> 2]);
			HEAPF[dsp + 262344 + (1 << 2) >> 2] = +(HEAPF[dsp + 262344 + (0 << 2) >> 2]);
			HEAPF[dsp + 262352 + (1 << 2) >> 2] = +(HEAPF[dsp + 262352 + (0 << 2) >> 2]);
			HEAPF[dsp + 262360 + (1 << 2) >> 2] = +(HEAPF[dsp + 262360 + (0 << 2) >> 2]);
			HEAPF[dsp + 262368 + (2 << 2) >> 2] = +(HEAPF[dsp + 262368 + (1 << 2) >> 2]);
			HEAPF[dsp + 262368 + (1 << 2) >> 2] = +(HEAPF[dsp + 262368 + (0 << 2) >> 2]);
			HEAPF[dsp + 262380 + (1 << 2) >> 2] = +(HEAPF[dsp + 262380 + (0 << 2) >> 2]);
			HEAPF[dsp + 262388 + (1 << 2) >> 2] = +(HEAPF[dsp + 262388 + (0 << 2) >> 2]);
			HEAPF[dsp + 262396 + (1 << 2) >> 2] = +(HEAPF[dsp + 262396 + (0 << 2) >> 2]);
			HEAPF[dsp + 262404 + (2 << 2) >> 2] = +(HEAPF[dsp + 262404 + (1 << 2) >> 2]);
			HEAPF[dsp + 262404 + (1 << 2) >> 2] = +(HEAPF[dsp + 262404 + (0 << 2) >> 2]);
			HEAPF[dsp + 262416 + (1 << 2) >> 2] = +(HEAPF[dsp + 262416 + (0 << 2) >> 2]);
			HEAPF[dsp + 262424 + (1 << 2) >> 2] = +(HEAPF[dsp + 262424 + (0 << 2) >> 2]);
			HEAPF[dsp + 262432 + (1 << 2) >> 2] = +(HEAPF[dsp + 262432 + (0 << 2) >> 2]);
			HEAPF[dsp + 262440 + (2 << 2) >> 2] = +(HEAPF[dsp + 262440 + (1 << 2) >> 2]);
			HEAPF[dsp + 262440 + (1 << 2) >> 2] = +(HEAPF[dsp + 262440 + (0 << 2) >> 2]);
			HEAPF[dsp + 262452 + (1 << 2) >> 2] = +(HEAPF[dsp + 262452 + (0 << 2) >> 2]);
			
		}
		
	}
	
	return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, instanceConstants : instanceConstants, instanceResetUserInterface : instanceResetUserInterface, instanceClear : instanceClear, init : init, getSampleRate : getSampleRate, setParamValue : setParamValue, getParamValue : getParamValue, compute : compute };
}

function getSizemydsp() {
	return 262468;
}

function getPathTablemydsp() {
	var pathTable = [];
	pathTable["/vocal/gain"] = 262144;
	pathTable["/vocal/freq"] = 262168;
	pathTable["/vocal/vibratoGain"] = 262172;
	pathTable["/vocal/vibratoFreq"] = 262180;
	pathTable["/vocal/vowel"] = 262236;
	pathTable["/vocal/voiceType"] = 262248;
	return pathTable;
}

function getJSONmydsp() {
	return "{\"name\":\"Vocal FOF\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"(c)Mike Olsen, CCRMA (Stanford University)\"},{\"description\":\"FOF vocal synthesizer.\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"MIT\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Vocal FOF\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"vocal\",\"items\":[{\"type\":\"hslider\",\"label\":\"freq\",\"address\":\"/vocal/freq\",\"meta\":[{\"0\":\"\"}],\"init\":\"440\",\"min\":\"50\",\"max\":\"1000\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"gain\",\"address\":\"/vocal/gain\",\"meta\":[{\"1\":\"\"}],\"init\":\"0.9\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"voiceType\",\"address\":\"/vocal/voiceType\",\"meta\":[{\"2\":\"\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"vowel\",\"address\":\"/vocal/vowel\",\"meta\":[{\"3\":\"\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"vibratoFreq\",\"address\":\"/vocal/vibratoFreq\",\"meta\":[{\"5\":\"\"}],\"init\":\"6\",\"min\":\"1\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"vibratoGain\",\"address\":\"/vocal/vibratoGain\",\"meta\":[{\"6\":\"\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]}]}";
}

function metadatamydsp(m) {
	m.declare("basics.lib/name", "Faust Basic Element Library");
	m.declare("basics.lib/version", "0.0");
	m.declare("copyright", "(c)Mike Olsen, CCRMA (Stanford University)");
	m.declare("description", "FOF vocal synthesizer.");
	m.declare("filters.lib/name", "Faust Filters Library");
	m.declare("filters.lib/version", "0.0");
	m.declare("license", "MIT");
	m.declare("maths.lib/author", "GRAME");
	m.declare("maths.lib/copyright", "GRAME");
	m.declare("maths.lib/license", "LGPL with exception");
	m.declare("maths.lib/name", "Faust Math Library");
	m.declare("maths.lib/version", "2.1");
	m.declare("name", "Vocal FOF");
	m.declare("noises.lib/name", "Faust Noise Generator Library");
	m.declare("noises.lib/version", "0.0");
	m.declare("oscillators.lib/name", "Faust Oscillator Library");
	m.declare("oscillators.lib/version", "0.0");
	m.declare("signals.lib/name", "Faust Signal Routing Library");
	m.declare("signals.lib/version", "0.0");
}

