/* ------------------------------------------------------------
copyright: "(c)Mike Olsen, CCRMA (Stanford University)"
license: "MIT"
name: "Vocal FOF MIDI"
Code generated with Faust 2.5.15 (https://faust.grame.fr)
Compilation options: ajs, -scal -ftz 0
------------------------------------------------------------ */


function mydspModule(global, foreign, buffer) {
	
	'use asm';
	
	var HEAP32 = new global.Int32Array(buffer);
	var HEAPF = new global.Float32Array(buffer);
	
	var imul = foreign.imul;
	var log = foreign.log;
	var round = foreign.round;
	
	var cosf = foreign.cos;
	var expf = foreign.exp;
	var floorf = foreign.floor;
	var max_f = foreign.max;
	var min_f = foreign.min;
	var sinf = foreign.sin;
	function fmodf(x, y) { x = +x; y = +y; return +(x % y); }
	function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }
	function remainderf(x, y) { x = +x; y = +y; return +(x - +round(x/y) * y); }

	function getNumInputsmydspSIG0(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputsmydspSIG0(dsp) {
		dsp = dsp | 0;
		return 1;
	}
	
	function instanceInitmydspSIG0(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		var l15 = 0;
		for (l15 = 0; (((l15 | 0) < 2) | 0); l15 = (((l15 | 0) + 1) | 0)) {
			HEAP32[dsp + 262508 + ((l15 | 0) << 2) >> 2] = 0;
			
		}
		
	}
	
	function fillmydspSIG0(dsp, count, output) {
		dsp = dsp | 0;
		count = count | 0;
		output = output | 0;
		var i = 0;
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAP32[dsp + 262508 + (0 << 2) >> 2] = (((HEAP32[dsp + 262508 + (1 << 2) >> 2] | 0) + 1) | 0);
			HEAPF[output + ((i | 0) << 2) >> 2] = +(sinf(+(9.58738019e-05 * +((((HEAP32[dsp + 262508 + (0 << 2) >> 2] | 0) + -1) | 0)))));
			HEAP32[dsp + 262508 + (1 << 2) >> 2] = (HEAP32[dsp + 262508 + (0 << 2) >> 2] | 0);
			
		}
		
	}
	
	function getNumInputs(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputs(dsp) {
		dsp = dsp | 0;
		return 2;
	}
	
	function classInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceInitmydspSIG0(dsp, (samplingFreq | 0));
		fillmydspSIG0(dsp, 65536, (dsp + 0 | 0));
		
	}
	
	function instanceConstants(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAP32[dsp + 262176 >> 2] = (samplingFreq | 0);
		HEAPF[dsp + 262180 >> 2] = +(min_f(192000., +(max_f(1., +((HEAP32[dsp + 262176 >> 2] | 0))))));
		HEAPF[dsp + 262184 >> 2] = +(1000. / +(HEAPF[dsp + 262180 >> 2]));
		HEAPF[dsp + 262200 >> 2] = +(1. / +(HEAPF[dsp + 262180 >> 2]));
		HEAPF[dsp + 262224 >> 2] = +(6.28318548 / +(HEAPF[dsp + 262180 >> 2]));
		HEAPF[dsp + 262272 >> 2] = +(3.14159274 / +(HEAPF[dsp + 262180 >> 2]));
		HEAPF[dsp + 262276 >> 2] = +(expf(+(0. - +(HEAPF[dsp + 262184 >> 2]))));
		HEAPF[dsp + 262280 >> 2] = +(1. - +(HEAPF[dsp + 262276 >> 2]));
		HEAPF[dsp + 262344 >> 2] = +(1. / +(HEAPF[dsp + 262180 >> 2]));
		
	}
	
	function instanceResetUserInterface(dsp) {
		dsp = dsp | 0;
		HEAPF[dsp + 262144 >> 2] = 0.5;
		HEAPF[dsp + 262156 >> 2] = 0.;
		HEAPF[dsp + 262160 >> 2] = 0.;
		HEAPF[dsp + 262172 >> 2] = 0.899999976;
		HEAPF[dsp + 262188 >> 2] = 10.;
		HEAPF[dsp + 262204 >> 2] = 440.;
		HEAPF[dsp + 262208 >> 2] = 1.;
		HEAPF[dsp + 262220 >> 2] = 0.5;
		HEAPF[dsp + 262228 >> 2] = 6.;
		HEAPF[dsp + 262284 >> 2] = 0.;
		HEAPF[dsp + 262296 >> 2] = 0.;
		
	}
	
	function instanceClear(dsp) {
		dsp = dsp | 0;
		var l0 = 0;
		var l1 = 0;
		var l2 = 0;
		var l3 = 0;
		var l4 = 0;
		var l5 = 0;
		var l6 = 0;
		var l7 = 0;
		var l8 = 0;
		var l9 = 0;
		var l10 = 0;
		var l11 = 0;
		var l12 = 0;
		var l13 = 0;
		var l14 = 0;
		var l16 = 0;
		var l17 = 0;
		var l18 = 0;
		var l19 = 0;
		var l20 = 0;
		var l21 = 0;
		var l22 = 0;
		var l23 = 0;
		var l24 = 0;
		var l25 = 0;
		var l26 = 0;
		var l27 = 0;
		var l28 = 0;
		var l29 = 0;
		var l30 = 0;
		var l31 = 0;
		var l32 = 0;
		var l33 = 0;
		for (l0 = 0; (((l0 | 0) < 2) | 0); l0 = (((l0 | 0) + 1) | 0)) {
			HEAP32[dsp + 262148 + ((l0 | 0) << 2) >> 2] = 0;
			
		}
		for (l1 = 0; (((l1 | 0) < 2) | 0); l1 = (((l1 | 0) + 1) | 0)) {
			HEAPF[dsp + 262164 + ((l1 | 0) << 2) >> 2] = 0.;
			
		}
		for (l2 = 0; (((l2 | 0) < 2) | 0); l2 = (((l2 | 0) + 1) | 0)) {
			HEAPF[dsp + 262192 + ((l2 | 0) << 2) >> 2] = 0.;
			
		}
		for (l3 = 0; (((l3 | 0) < 2) | 0); l3 = (((l3 | 0) + 1) | 0)) {
			HEAPF[dsp + 262212 + ((l3 | 0) << 2) >> 2] = 0.;
			
		}
		for (l4 = 0; (((l4 | 0) < 2) | 0); l4 = (((l4 | 0) + 1) | 0)) {
			HEAPF[dsp + 262232 + ((l4 | 0) << 2) >> 2] = 0.;
			
		}
		for (l5 = 0; (((l5 | 0) < 2) | 0); l5 = (((l5 | 0) + 1) | 0)) {
			HEAPF[dsp + 262240 + ((l5 | 0) << 2) >> 2] = 0.;
			
		}
		for (l6 = 0; (((l6 | 0) < 2) | 0); l6 = (((l6 | 0) + 1) | 0)) {
			HEAPF[dsp + 262248 + ((l6 | 0) << 2) >> 2] = 0.;
			
		}
		for (l7 = 0; (((l7 | 0) < 2) | 0); l7 = (((l7 | 0) + 1) | 0)) {
			HEAPF[dsp + 262256 + ((l7 | 0) << 2) >> 2] = 0.;
			
		}
		for (l8 = 0; (((l8 | 0) < 2) | 0); l8 = (((l8 | 0) + 1) | 0)) {
			HEAP32[dsp + 262264 + ((l8 | 0) << 2) >> 2] = 0;
			
		}
		for (l9 = 0; (((l9 | 0) < 2) | 0); l9 = (((l9 | 0) + 1) | 0)) {
			HEAPF[dsp + 262288 + ((l9 | 0) << 2) >> 2] = 0.;
			
		}
		for (l10 = 0; (((l10 | 0) < 2) | 0); l10 = (((l10 | 0) + 1) | 0)) {
			HEAPF[dsp + 262300 + ((l10 | 0) << 2) >> 2] = 0.;
			
		}
		for (l11 = 0; (((l11 | 0) < 2) | 0); l11 = (((l11 | 0) + 1) | 0)) {
			HEAPF[dsp + 262308 + ((l11 | 0) << 2) >> 2] = 0.;
			
		}
		for (l12 = 0; (((l12 | 0) < 2) | 0); l12 = (((l12 | 0) + 1) | 0)) {
			HEAPF[dsp + 262316 + ((l12 | 0) << 2) >> 2] = 0.;
			
		}
		for (l13 = 0; (((l13 | 0) < 2) | 0); l13 = (((l13 | 0) + 1) | 0)) {
			HEAPF[dsp + 262324 + ((l13 | 0) << 2) >> 2] = 0.;
			
		}
		for (l14 = 0; (((l14 | 0) < 3) | 0); l14 = (((l14 | 0) + 1) | 0)) {
			HEAPF[dsp + 262332 + ((l14 | 0) << 2) >> 2] = 0.;
			
		}
		for (l16 = 0; (((l16 | 0) < 2) | 0); l16 = (((l16 | 0) + 1) | 0)) {
			HEAPF[dsp + 262348 + ((l16 | 0) << 2) >> 2] = 0.;
			
		}
		for (l17 = 0; (((l17 | 0) < 2) | 0); l17 = (((l17 | 0) + 1) | 0)) {
			HEAPF[dsp + 262356 + ((l17 | 0) << 2) >> 2] = 0.;
			
		}
		for (l18 = 0; (((l18 | 0) < 2) | 0); l18 = (((l18 | 0) + 1) | 0)) {
			HEAPF[dsp + 262364 + ((l18 | 0) << 2) >> 2] = 0.;
			
		}
		for (l19 = 0; (((l19 | 0) < 2) | 0); l19 = (((l19 | 0) + 1) | 0)) {
			HEAPF[dsp + 262372 + ((l19 | 0) << 2) >> 2] = 0.;
			
		}
		for (l20 = 0; (((l20 | 0) < 3) | 0); l20 = (((l20 | 0) + 1) | 0)) {
			HEAPF[dsp + 262380 + ((l20 | 0) << 2) >> 2] = 0.;
			
		}
		for (l21 = 0; (((l21 | 0) < 2) | 0); l21 = (((l21 | 0) + 1) | 0)) {
			HEAPF[dsp + 262392 + ((l21 | 0) << 2) >> 2] = 0.;
			
		}
		for (l22 = 0; (((l22 | 0) < 2) | 0); l22 = (((l22 | 0) + 1) | 0)) {
			HEAPF[dsp + 262400 + ((l22 | 0) << 2) >> 2] = 0.;
			
		}
		for (l23 = 0; (((l23 | 0) < 2) | 0); l23 = (((l23 | 0) + 1) | 0)) {
			HEAPF[dsp + 262408 + ((l23 | 0) << 2) >> 2] = 0.;
			
		}
		for (l24 = 0; (((l24 | 0) < 3) | 0); l24 = (((l24 | 0) + 1) | 0)) {
			HEAPF[dsp + 262416 + ((l24 | 0) << 2) >> 2] = 0.;
			
		}
		for (l25 = 0; (((l25 | 0) < 2) | 0); l25 = (((l25 | 0) + 1) | 0)) {
			HEAPF[dsp + 262428 + ((l25 | 0) << 2) >> 2] = 0.;
			
		}
		for (l26 = 0; (((l26 | 0) < 2) | 0); l26 = (((l26 | 0) + 1) | 0)) {
			HEAPF[dsp + 262436 + ((l26 | 0) << 2) >> 2] = 0.;
			
		}
		for (l27 = 0; (((l27 | 0) < 2) | 0); l27 = (((l27 | 0) + 1) | 0)) {
			HEAPF[dsp + 262444 + ((l27 | 0) << 2) >> 2] = 0.;
			
		}
		for (l28 = 0; (((l28 | 0) < 3) | 0); l28 = (((l28 | 0) + 1) | 0)) {
			HEAPF[dsp + 262452 + ((l28 | 0) << 2) >> 2] = 0.;
			
		}
		for (l29 = 0; (((l29 | 0) < 2) | 0); l29 = (((l29 | 0) + 1) | 0)) {
			HEAPF[dsp + 262464 + ((l29 | 0) << 2) >> 2] = 0.;
			
		}
		for (l30 = 0; (((l30 | 0) < 2) | 0); l30 = (((l30 | 0) + 1) | 0)) {
			HEAPF[dsp + 262472 + ((l30 | 0) << 2) >> 2] = 0.;
			
		}
		for (l31 = 0; (((l31 | 0) < 2) | 0); l31 = (((l31 | 0) + 1) | 0)) {
			HEAPF[dsp + 262480 + ((l31 | 0) << 2) >> 2] = 0.;
			
		}
		for (l32 = 0; (((l32 | 0) < 3) | 0); l32 = (((l32 | 0) + 1) | 0)) {
			HEAPF[dsp + 262488 + ((l32 | 0) << 2) >> 2] = 0.;
			
		}
		for (l33 = 0; (((l33 | 0) < 2) | 0); l33 = (((l33 | 0) + 1) | 0)) {
			HEAPF[dsp + 262500 + ((l33 | 0) << 2) >> 2] = 0.;
			
		}
		
	}
	
	function init(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		classInit(dsp, samplingFreq);
		instanceInit(dsp, samplingFreq);
	}
	
	function instanceInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceConstants(dsp, samplingFreq);
		instanceResetUserInterface(dsp);
		instanceClear(dsp);
	}
	
	function getSampleRate(dsp) {
		dsp = dsp | 0;
		return HEAP32[dsp + 262176 >> 2] | 0;
	}
	
	function setParamValue(dsp, offset, value) {
		dsp = dsp | 0;
		offset = offset | 0;
		value = +value;
		HEAPF[dsp + offset >> 2] = value;
	}
	
	function getParamValue(dsp, offset) {
		dsp = dsp | 0;
		offset = offset | 0;
		return +(HEAPF[dsp + offset >> 2]);
	}
	
	function compute(dsp, count, inputs, outputs) {
		dsp = dsp | 0;
		count = count | 0;
		inputs = inputs | 0;
		outputs = outputs | 0;
		var output0 = 0;
		var output1 = 0;
		var fSlow0 = 0.;
		var fSlow1 = 0.;
		var fSlow2 = 0.;
		var fSlow3 = 0.;
		var fSlow4 = 0.;
		var iSlow5 = 0;
		var fSlow6 = 0.;
		var fSlow7 = 0.;
		var fSlow8 = 0.;
		var fSlow9 = 0.;
		var fSlow10 = 0.;
		var fSlow11 = 0.;
		var fSlow12 = 0.;
		var fSlow13 = 0.;
		var iSlow14 = 0;
		var iSlow15 = 0;
		var iSlow16 = 0;
		var fSlow17 = 0.;
		var fSlow18 = 0.;
		var fSlow19 = 0.;
		var fSlow20 = 0.;
		var fSlow21 = 0.;
		var iSlow22 = 0;
		var iSlow23 = 0;
		var fSlow24 = 0.;
		var i = 0;
		var iTemp0 = 0;
		var iTemp1 = 0;
		var fTemp2 = 0.;
		var fTemp3 = 0.;
		var fTemp4 = 0.;
		var iTemp5 = 0;
		var fTemp6 = 0.;
		var iTemp7 = 0;
		var iTemp8 = 0;
		var iTemp9 = 0;
		var iTemp10 = 0;
		var iTemp11 = 0;
		var iTemp12 = 0;
		var iTemp13 = 0;
		var iTemp14 = 0;
		var fTemp15 = 0.;
		var fTemp16 = 0.;
		var fTemp17 = 0.;
		var fTemp18 = 0.;
		var iTemp19 = 0;
		var iTemp20 = 0;
		var fTemp21 = 0.;
		var iTemp22 = 0;
		var fTemp23 = 0.;
		var iTemp24 = 0;
		var fTemp25 = 0.;
		var iTemp26 = 0;
		var fTemp27 = 0.;
		var fTemp28 = 0.;
		var iTemp29 = 0;
		var iTemp30 = 0;
		var fTemp31 = 0.;
		var iTemp32 = 0;
		var fTemp33 = 0.;
		var iTemp34 = 0;
		var iTemp35 = 0;
		var fTemp36 = 0.;
		var fTemp37 = 0.;
		var iTemp38 = 0;
		var fTemp39 = 0.;
		var iTemp40 = 0;
		var iTemp41 = 0;
		var iTemp42 = 0;
		var fTemp43 = 0.;
		var iTemp44 = 0;
		var fTemp45 = 0.;
		var fTemp46 = 0.;
		var iTemp47 = 0;
		var fTemp48 = 0.;
		var iTemp49 = 0;
		var iTemp50 = 0;
		var fTemp51 = 0.;
		var iTemp52 = 0;
		var fTemp53 = 0.;
		var iTemp54 = 0;
		var fTemp55 = 0.;
		var iTemp56 = 0;
		var fTemp57 = 0.;
		var fTemp58 = 0.;
		var iTemp59 = 0;
		var fTemp60 = 0.;
		var fTemp61 = 0.;
		var iTemp62 = 0;
		var fTemp63 = 0.;
		var fTemp64 = 0.;
		var iTemp65 = 0;
		var fTemp66 = 0.;
		var iTemp67 = 0;
		var fTemp68 = 0.;
		var fTemp69 = 0.;
		var fTemp70 = 0.;
		var fTemp71 = 0.;
		var fTemp72 = 0.;
		var fTemp73 = 0.;
		var iTemp74 = 0;
		var fTemp75 = 0.;
		var iTemp76 = 0;
		var iTemp77 = 0;
		var fTemp78 = 0.;
		var iTemp79 = 0;
		var fTemp80 = 0.;
		var iTemp81 = 0;
		var fTemp82 = 0.;
		var iTemp83 = 0;
		var fTemp84 = 0.;
		var iTemp85 = 0;
		var fTemp86 = 0.;
		var iTemp87 = 0;
		var fTemp88 = 0.;
		var iTemp89 = 0;
		var fTemp90 = 0.;
		var iTemp91 = 0;
		var fTemp92 = 0.;
		var iTemp93 = 0;
		var fTemp94 = 0.;
		var iTemp95 = 0;
		var fTemp96 = 0.;
		var iTemp97 = 0;
		var fTemp98 = 0.;
		var iTemp99 = 0;
		var fTemp100 = 0.;
		var iTemp101 = 0;
		var fTemp102 = 0.;
		var iTemp103 = 0;
		var fTemp104 = 0.;
		var iTemp105 = 0;
		var fTemp106 = 0.;
		var iTemp107 = 0;
		var fTemp108 = 0.;
		var fTemp109 = 0.;
		var iTemp110 = 0;
		var fTemp111 = 0.;
		var iTemp112 = 0;
		var fTemp113 = 0.;
		var iTemp114 = 0;
		var fTemp115 = 0.;
		var iTemp116 = 0;
		var fTemp117 = 0.;
		var iTemp118 = 0;
		var fTemp119 = 0.;
		var iTemp120 = 0;
		var fTemp121 = 0.;
		var iTemp122 = 0;
		var fTemp123 = 0.;
		var iTemp124 = 0;
		var fTemp125 = 0.;
		var fTemp126 = 0.;
		var fTemp127 = 0.;
		var fTemp128 = 0.;
		var fTemp129 = 0.;
		var fTemp130 = 0.;
		var fTemp131 = 0.;
		var fTemp132 = 0.;
		var fTemp133 = 0.;
		var fTemp134 = 0.;
		var fTemp135 = 0.;
		var fTemp136 = 0.;
		var fTemp137 = 0.;
		var fTemp138 = 0.;
		var fTemp139 = 0.;
		var fTemp140 = 0.;
		var fTemp141 = 0.;
		var fTemp142 = 0.;
		var fTemp143 = 0.;
		var fTemp144 = 0.;
		var fTemp145 = 0.;
		var fTemp146 = 0.;
		var fTemp147 = 0.;
		var fTemp148 = 0.;
		var fTemp149 = 0.;
		var fTemp150 = 0.;
		var fTemp151 = 0.;
		var fTemp152 = 0.;
		var fTemp153 = 0.;
		var fTemp154 = 0.;
		var fTemp155 = 0.;
		var fTemp156 = 0.;
		var fTemp157 = 0.;
		var fTemp158 = 0.;
		var fTemp159 = 0.;
		var fTemp160 = 0.;
		var fTemp161 = 0.;
		var fTemp162 = 0.;
		var fTemp163 = 0.;
		var fTemp164 = 0.;
		var fTemp165 = 0.;
		var fTemp166 = 0.;
		var fTemp167 = 0.;
		var fTemp168 = 0.;
		output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);
		output1 = (HEAP32[outputs + (1 << 2) >> 2] | 0);
		fSlow0 = +(+(HEAPF[dsp + 262144 >> 2]));
		fSlow1 = +(min_f(1., +(+(+(HEAPF[dsp + 262156 >> 2])) + +(+(HEAPF[dsp + 262160 >> 2])))));
		fSlow2 = +(expf(+(0. - +(+(HEAPF[dsp + 262184 >> 2]) / +(+(HEAPF[dsp + 262188 >> 2]))))));
		fSlow3 = +(25. * +(+(+(fSlow1) * +(+(HEAPF[dsp + 262172 >> 2]))) * +(1. - +(fSlow2))));
		fSlow4 = +(+(HEAPF[dsp + 262204 >> 2]));
		iSlow5 = ((+(fSlow1) == 0.) | 0);
		fSlow6 = +(+(HEAPF[dsp + 262208 >> 2]));
		fSlow7 = +(0.100000001 * +(+(HEAPF[dsp + 262220 >> 2])));
		fSlow8 = +(+(HEAPF[dsp + 262224 >> 2]) * +(+(HEAPF[dsp + 262228 >> 2])));
		fSlow9 = +(sinf(+(fSlow8)));
		fSlow10 = +(cosf(+(fSlow8)));
		fSlow11 = +(0. - +(fSlow9));
		fSlow12 = +(0.00100000005 * +(+(HEAPF[dsp + 262284 >> 2])));
		fSlow13 = +(+(HEAPF[dsp + 262296 >> 2]));
		iSlow14 = ((((+(fSlow13) == 0.) | 0)?1:((((+(fSlow13) == 3.) | 0)?1:0) | 0)) | 0);
		iSlow15 = (imul(5, (iSlow14 | 0)) | 0);
		iSlow16 = (((iSlow14 | 0) >= 1) | 0);
		fSlow17 = +((iSlow16 | 0)?174.610001:82.4100037);
		fSlow18 = +((iSlow16 | 0)?1046.5:523.25);
		fSlow19 = +(+(fSlow18) - +(fSlow17));
		fSlow20 = +(5. * +(fSlow13));
		fSlow21 = +(5. * +(1. - +(fSlow13)));
		iSlow22 = (((iSlow14 | 0) == 0) | 0);
		iSlow23 = ((+(fSlow13) != 2.) | 0);
		fSlow24 = +(2. * +(fSlow4));
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAP32[dsp + 262148 + (0 << 2) >> 2] = 1;
			HEAPF[dsp + 262164 + (0 << 2) >> 2] = +(fSlow1);
			HEAPF[dsp + 262192 + (0 << 2) >> 2] = +(+(fSlow3) + +(+(fSlow2) * +(HEAPF[dsp + 262192 + (1 << 2) >> 2])));
			iTemp0 = ((((+(fSlow1) == +(HEAPF[dsp + 262164 + (1 << 2) >> 2])) | 0) | (iSlow5 | 0)) | 0);
			HEAPF[dsp + 262212 + (0 << 2) >> 2] = +(+(0.999000013 * +(+(HEAPF[dsp + 262212 + (1 << 2) >> 2]) * +((iTemp0 | 0)))) + +(+(fSlow6) * +(1. - +(0.999000013 * +((iTemp0 | 0))))));
			HEAPF[dsp + 262232 + (0 << 2) >> 2] = +(+(+(fSlow9) * +(HEAPF[dsp + 262240 + (1 << 2) >> 2])) + +(+(fSlow10) * +(HEAPF[dsp + 262232 + (1 << 2) >> 2])));
			iTemp1 = ((1 - (HEAP32[dsp + 262148 + (1 << 2) >> 2] | 0)) | 0);
			HEAPF[dsp + 262240 + (0 << 2) >> 2] = +(+(+(+(fSlow10) * +(HEAPF[dsp + 262240 + (1 << 2) >> 2])) + +(+(fSlow11) * +(HEAPF[dsp + 262232 + (1 << 2) >> 2]))) + +((iTemp1 | 0)));
			fTemp2 = +(+(HEAPF[dsp + 262212 + (0 << 2) >> 2]) * +(+(+(fSlow7) * +(HEAPF[dsp + 262232 + (0 << 2) >> 2])) + 1.));
			fTemp3 = +(+(fSlow4) * +(fTemp2));
			HEAPF[dsp + 262248 + (0 << 2) >> 2] = +(fTemp3);
			fTemp4 = +(+(HEAPF[dsp + 262256 + (1 << 2) >> 2]) + +(+(HEAPF[dsp + 262200 >> 2]) * +(HEAPF[dsp + 262248 + (1 << 2) >> 2])));
			HEAPF[dsp + 262256 + (0 << 2) >> 2] = +(+(fTemp4) - +(floorf(+(fTemp4))));
			iTemp5 = ((+(+(HEAPF[dsp + 262256 + (0 << 2) >> 2]) - +(HEAPF[dsp + 262256 + (1 << 2) >> 2])) < 0.) | 0);
			HEAP32[dsp + 262264 + (0 << 2) >> 2] = (iTemp5 | 0);
			HEAPF[dsp + 262288 + (0 << 2) >> 2] = +(+(fSlow12) + +(0.999000013 * +(HEAPF[dsp + 262288 + (1 << 2) >> 2])));
			fTemp6 = +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + +((iSlow15 | 0)));
			iTemp7 = ((+(fTemp6) >= 5.) | 0);
			iTemp8 = ((+(fTemp6) >= 3.) | 0);
			iTemp9 = ((+(fTemp6) >= 2.) | 0);
			iTemp10 = ((+(fTemp6) >= 1.) | 0);
			iTemp11 = ((+(fTemp6) >= 4.) | 0);
			iTemp12 = ((+(fTemp6) >= 8.) | 0);
			iTemp13 = ((+(fTemp6) >= 7.) | 0);
			iTemp14 = ((+(fTemp6) >= 6.) | 0);
			fTemp15 = +((iTemp7 | 0)?+((iTemp12 | 0)?2.:+((iTemp13 | 0)?3.:+((iTemp14 | 0)?3.:2.))):+((iTemp8 | 0)?+((iTemp11 | 0)?1.5:1.):+((iTemp9 | 0)?1.25:+((iTemp10 | 0)?1.25:1.))));
			HEAPF[dsp + 262300 + (0 << 2) >> 2] = +(+(+(fSlow9) * +(HEAPF[dsp + 262308 + (1 << 2) >> 2])) + +(+(fSlow10) * +(HEAPF[dsp + 262300 + (1 << 2) >> 2])));
			HEAPF[dsp + 262308 + (0 << 2) >> 2] = +(+(+(+(fSlow10) * +(HEAPF[dsp + 262308 + (1 << 2) >> 2])) + +(+(fSlow11) * +(HEAPF[dsp + 262300 + (1 << 2) >> 2]))) + +((iTemp1 | 0)));
			fTemp16 = +(+(fSlow4) * +(+(HEAPF[dsp + 262212 + (0 << 2) >> 2]) * +(+(+(fSlow7) * +(HEAPF[dsp + 262300 + (0 << 2) >> 2])) + 1.)));
			fTemp17 = +(+(fTemp15) + +(+(+((iTemp7 | 0)?+((iTemp12 | 0)?12.:+((iTemp13 | 0)?12.:+((iTemp14 | 0)?12.:15.))):+((iTemp8 | 0)?+((iTemp11 | 0)?4.:10.):+((iTemp9 | 0)?2.5:+((iTemp10 | 0)?2.5:10.)))) - +(fTemp15)) * +(((+(fTemp16) <= +(fSlow17)) | 0)?0.:+(((+(fTemp16) >= +(fSlow18)) | 0)?1.:+(+(+(fTemp16) - +(fSlow17)) / +(fSlow19))))));
			fTemp18 = +(+(fSlow20) + +(HEAPF[dsp + 262288 + (0 << 2) >> 2]));
			iTemp19 = ((+(fTemp18) < 23.) | 0);
			iTemp20 = ((+(fTemp18) < 24.) | 0);
			fTemp21 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -23.));
			iTemp22 = ((+(fTemp18) < 22.) | 0);
			fTemp23 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -22.));
			iTemp24 = ((+(fTemp18) < 21.) | 0);
			fTemp25 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -21.));
			iTemp26 = ((+(fTemp18) < 20.) | 0);
			fTemp27 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -20.));
			fTemp28 = +(20. * +(fTemp27));
			iTemp29 = ((+(fTemp18) < 19.) | 0);
			iTemp30 = ((+(fTemp18) < 18.) | 0);
			fTemp31 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -18.));
			iTemp32 = ((+(fTemp18) < 17.) | 0);
			fTemp33 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -17.));
			iTemp34 = ((+(fTemp18) < 16.) | 0);
			iTemp35 = ((+(fTemp18) < 15.) | 0);
			fTemp36 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -15.));
			fTemp37 = +(20. * +(fTemp36));
			iTemp38 = ((+(fTemp18) < 14.) | 0);
			fTemp39 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -14.));
			iTemp40 = ((+(fTemp18) < 13.) | 0);
			iTemp41 = ((+(fTemp18) < 12.) | 0);
			iTemp42 = ((+(fTemp18) < 11.) | 0);
			fTemp43 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -11.));
			iTemp44 = ((+(fTemp18) < 10.) | 0);
			fTemp45 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -10.));
			fTemp46 = +(10. * +(fTemp45));
			iTemp47 = ((+(fTemp18) < 9.) | 0);
			fTemp48 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -9.));
			iTemp49 = ((+(fTemp18) < 8.) | 0);
			iTemp50 = ((+(fTemp18) < 7.) | 0);
			fTemp51 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -7.));
			iTemp52 = ((+(fTemp18) < 6.) | 0);
			fTemp53 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -6.));
			iTemp54 = ((+(fTemp18) < 5.) | 0);
			fTemp55 = +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) - +(fSlow21));
			iTemp56 = ((+(fTemp18) < 4.) | 0);
			fTemp57 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -4.));
			fTemp58 = +(10. * +(fTemp57));
			iTemp59 = ((+(fTemp18) < 3.) | 0);
			fTemp60 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -3.));
			fTemp61 = +(20. * +(fTemp60));
			iTemp62 = ((+(fTemp18) < 2.) | 0);
			fTemp63 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -2.));
			fTemp64 = +(20. * +(fTemp63));
			iTemp65 = ((+(fTemp18) < 1.) | 0);
			fTemp66 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -1.));
			iTemp67 = ((+(fTemp18) < 0.) | 0);
			fTemp68 = +(20. * +(fTemp18));
			fTemp69 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?80.:+((iTemp65 | 0)?+(80. - +(fTemp68)):60.)):+((iTemp62 | 0)?+(60. - +(10. * +(fTemp66))):50.)):+((iTemp59 | 0)?+(+(fTemp64) + 50.):70.)):+((iTemp56 | 0)?+(70. - +(fTemp61)):50.)):+((iTemp54 | 0)?+(+(fTemp58) + 50.):60.)):+((iTemp52 | 0)?+(60. - +(20. * +(fTemp55))):40.)):+((iTemp50 | 0)?+(+(20. * +(fTemp53)) + 40.):60.)):+((iTemp49 | 0)?+(60. - +(20. * +(fTemp51))):40.)):40.):+((iTemp44 | 0)?+(40. * +(+(fTemp48) + 1.)):80.)):+((iTemp42 | 0)?+(80. - +(fTemp46)):70.)):+((iTemp41 | 0)?+(70. - +(30. * +(fTemp43))):40.)):40.):40.):+((iTemp35 | 0)?+(40. * +(+(fTemp39) + 1.)):80.)):+((iTemp34 | 0)?+(80. - +(fTemp37)):60.)):60.):+((iTemp30 | 0)?+(60. - +(20. * +(fTemp33))):40.)):+((iTemp29 | 0)?+(+(10. * +(fTemp31)) + 40.):50.)):50.):+((iTemp24 | 0)?+(+(fTemp28) + 50.):70.)):+((iTemp22 | 0)?+(70. - +(30. * +(fTemp25))):40.)):+((iTemp19 | 0)?+(+(30. * +(fTemp23)) + 40.):70.)):+((iTemp20 | 0)?+(70. - +(30. * +(fTemp21))):40.));
			HEAPF[dsp + 262316 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262316 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(+(fTemp17) * +(fTemp69))));
			fTemp70 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262316 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262324 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262324 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(fTemp69)));
			fTemp71 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262324 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262332 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262264 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262332 + (1 << 2) >> 2]) * +(0. - +(+(fTemp70) + +(fTemp71)))) + +(+(+(fTemp70) * +(fTemp71)) * +(HEAPF[dsp + 262332 + (2 << 2) >> 2]))));
			fTemp72 = +(+(0.000839999993 * +(1000. - +(fTemp16))) + 0.800000012);
			fTemp73 = +(+(0.00366666657 * +(400. - +(fTemp16))) + 3.);
			iTemp74 = ((1 - (((iTemp5 | 0) > 0) | 0)) | 0);
			HEAPF[dsp + 262348 + (0 << 2) >> 2] = +(+(fSlow12) + +(0.999000013 * +(HEAPF[dsp + 262348 + (1 << 2) >> 2])));
			fTemp75 = +(+(fSlow20) + +(HEAPF[dsp + 262348 + (0 << 2) >> 2]));
			iTemp76 = ((+(fTemp75) < 23.) | 0);
			iTemp77 = ((+(fTemp75) < 24.) | 0);
			fTemp78 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -23.));
			iTemp79 = ((+(fTemp75) < 22.) | 0);
			fTemp80 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -22.));
			iTemp81 = ((+(fTemp75) < 21.) | 0);
			fTemp82 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -21.));
			iTemp83 = ((+(fTemp75) < 20.) | 0);
			fTemp84 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -20.));
			iTemp85 = ((+(fTemp75) < 19.) | 0);
			fTemp86 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -19.));
			iTemp87 = ((+(fTemp75) < 18.) | 0);
			fTemp88 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -18.));
			iTemp89 = ((+(fTemp75) < 17.) | 0);
			fTemp90 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -17.));
			iTemp91 = ((+(fTemp75) < 16.) | 0);
			fTemp92 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -16.));
			iTemp93 = ((+(fTemp75) < 15.) | 0);
			fTemp94 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -15.));
			iTemp95 = ((+(fTemp75) < 14.) | 0);
			fTemp96 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -14.));
			iTemp97 = ((+(fTemp75) < 13.) | 0);
			fTemp98 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -13.));
			iTemp99 = ((+(fTemp75) < 12.) | 0);
			fTemp100 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -12.));
			iTemp101 = ((+(fTemp75) < 11.) | 0);
			fTemp102 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -11.));
			iTemp103 = ((+(fTemp75) < 10.) | 0);
			fTemp104 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -10.));
			iTemp105 = ((+(fTemp75) < 9.) | 0);
			fTemp106 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -9.));
			iTemp107 = ((+(fTemp75) < 8.) | 0);
			fTemp108 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -8.));
			fTemp109 = +(50. * +(fTemp108));
			iTemp110 = ((+(fTemp75) < 7.) | 0);
			fTemp111 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -7.));
			iTemp112 = ((+(fTemp75) < 6.) | 0);
			fTemp113 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -6.));
			iTemp114 = ((+(fTemp75) < 5.) | 0);
			fTemp115 = +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) - +(fSlow21));
			iTemp116 = ((+(fTemp75) < 4.) | 0);
			fTemp117 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -4.));
			iTemp118 = ((+(fTemp75) < 3.) | 0);
			fTemp119 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -3.));
			iTemp120 = ((+(fTemp75) < 2.) | 0);
			fTemp121 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -2.));
			iTemp122 = ((+(fTemp75) < 1.) | 0);
			fTemp123 = +(+(fSlow20) + +(+(HEAPF[dsp + 262348 + (0 << 2) >> 2]) + -1.));
			iTemp124 = ((+(fTemp75) < 0.) | 0);
			fTemp125 = +((iTemp76 | 0)?+((iTemp79 | 0)?+((iTemp81 | 0)?+((iTemp83 | 0)?+((iTemp85 | 0)?+((iTemp87 | 0)?+((iTemp89 | 0)?+((iTemp91 | 0)?+((iTemp93 | 0)?+((iTemp95 | 0)?+((iTemp97 | 0)?+((iTemp99 | 0)?+((iTemp101 | 0)?+((iTemp103 | 0)?+((iTemp105 | 0)?+((iTemp107 | 0)?+((iTemp110 | 0)?+((iTemp112 | 0)?+((iTemp114 | 0)?+((iTemp116 | 0)?+((iTemp118 | 0)?+((iTemp120 | 0)?+((iTemp122 | 0)?+((iTemp124 | 0)?800.:+((iTemp122 | 0)?+(800. - +(400. * +(fTemp75))):400.)):+((iTemp120 | 0)?+(400. - +(50. * +(fTemp123))):350.)):+((iTemp118 | 0)?+(+(100. * +(fTemp121)) + 350.):450.)):+((iTemp116 | 0)?+(450. - +(125. * +(fTemp119))):325.)):+((iTemp114 | 0)?+(+(275. * +(fTemp117)) + 325.):600.)):+((iTemp112 | 0)?+(600. - +(200. * +(fTemp115))):400.)):+((iTemp110 | 0)?+(400. - +(150. * +(fTemp113))):250.)):+((iTemp107 | 0)?+(+(150. * +(fTemp111)) + 250.):400.)):+((iTemp105 | 0)?+(400. - +(fTemp109)):350.)):+((iTemp103 | 0)?+(+(310. * +(fTemp106)) + 350.):660.)):+((iTemp101 | 0)?+(660. - +(220. * +(fTemp104))):440.)):+((iTemp99 | 0)?+(440. - +(170. * +(fTemp102))):270.)):+((iTemp97 | 0)?+(+(160. * +(fTemp100)) + 270.):430.)):+((iTemp95 | 0)?+(430. - +(60. * +(fTemp98))):370.)):+((iTemp93 | 0)?+(+(430. * +(fTemp96)) + 370.):800.)):+((iTemp91 | 0)?+(800. - +(450. * +(fTemp94))):350.)):+((iTemp89 | 0)?+(350. - +(80. * +(fTemp92))):270.)):+((iTemp87 | 0)?+(+(180. * +(fTemp90)) + 270.):450.)):+((iTemp85 | 0)?+(450. - +(125. * +(fTemp88))):325.)):+((iTemp83 | 0)?+(325. * +(+(fTemp86) + 1.)):650.)):+((iTemp81 | 0)?+(650. - +(250. * +(fTemp84))):400.)):+((iTemp79 | 0)?+(400. - +(110. * +(fTemp82))):290.)):+((iTemp76 | 0)?+(+(110. * +(fTemp80)) + 290.):400.)):+((iTemp77 | 0)?+(400. - +(50. * +(fTemp78))):350.));
			fTemp126 = +(+(+(HEAPF[dsp + 262356 + (1 << 2) >> 2]) * +((iTemp74 | 0))) + +(+(HEAPF[dsp + 262344 >> 2]) * +(((+(fTemp125) <= +(fTemp3)) | 0)?+(fTemp3):+(fTemp125))));
			HEAPF[dsp + 262356 + (0 << 2) >> 2] = +(+(fTemp126) - +(floorf(+(fTemp126))));
			fTemp127 = +(10. * +(fTemp23));
			fTemp128 = +(10. * +(fTemp27));
			fTemp129 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -19.));
			fTemp130 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -16.));
			fTemp131 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -13.));
			fTemp132 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -12.));
			fTemp133 = +(10. * +(fTemp48));
			fTemp134 = +(10. * +(fTemp55));
			fTemp135 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?90.:+((iTemp65 | 0)?+(90. - +(10. * +(fTemp18))):80.)):+((iTemp62 | 0)?+(+(20. * +(fTemp66)) + 80.):100.)):+((iTemp59 | 0)?+(100. - +(fTemp64)):80.)):+((iTemp56 | 0)?+(80. - +(fTemp61)):60.)):+((iTemp54 | 0)?+(+(fTemp58) + 60.):70.)):+((iTemp52 | 0)?+(+(fTemp134) + 70.):80.)):+((iTemp50 | 0)?+(+(10. * +(fTemp53)) + 80.):90.)):+((iTemp49 | 0)?+(90. - +(10. * +(fTemp51))):80.)):80.):+((iTemp44 | 0)?+(+(fTemp133) + 80.):90.)):+((iTemp42 | 0)?+(90. - +(fTemp46)):80.)):+((iTemp41 | 0)?+(+(10. * +(fTemp43)) + 80.):90.)):+((iTemp40 | 0)?+(90. - +(10. * +(fTemp132))):80.)):+((iTemp38 | 0)?+(80. - +(20. * +(fTemp131))):60.)):+((iTemp35 | 0)?+(+(30. * +(fTemp39)) + 60.):90.)):+((iTemp34 | 0)?+(+(10. * +(fTemp36)) + 90.):100.)):+((iTemp32 | 0)?+(100. - +(10. * +(fTemp130))):90.)):+((iTemp30 | 0)?+(90. - +(10. * +(fTemp33))):80.)):+((iTemp29 | 0)?+(80. - +(20. * +(fTemp31))):60.)):+((iTemp26 | 0)?+(+(30. * +(fTemp129)) + 60.):90.)):+((iTemp24 | 0)?+(90. - +(fTemp128)):80.)):+((iTemp22 | 0)?+(+(10. * +(fTemp25)) + 80.):90.)):+((iTemp19 | 0)?+(90. - +(fTemp127)):80.)):+((iTemp20 | 0)?+(80. - +(20. * +(fTemp21))):60.));
			HEAPF[dsp + 262364 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262364 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(+(fTemp17) * +(fTemp135))));
			fTemp136 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262364 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262372 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262372 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(fTemp135)));
			fTemp137 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262372 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262380 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262264 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262380 + (1 << 2) >> 2]) * +(0. - +(+(fTemp136) + +(fTemp137)))) + +(+(+(fTemp136) * +(fTemp137)) * +(HEAPF[dsp + 262380 + (2 << 2) >> 2]))));
			fTemp138 = +(+(fSlow20) + +(+(HEAPF[dsp + 262288 + (0 << 2) >> 2]) + -8.));
			fTemp139 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?0.630957007:+((iTemp65 | 0)?+(0.630957007 - +(0.567861021 * +(fTemp18))):0.0630960017)):+((iTemp62 | 0)?+(+(0.0369039997 * +(fTemp66)) + 0.0630960017):0.100000001)):+((iTemp59 | 0)?+(+(0.254812986 * +(fTemp63)) + 0.100000001):0.35481301)):+((iTemp56 | 0)?+(0.35481301 - +(0.103624001 * +(fTemp60))):0.251188993)):+((iTemp54 | 0)?+(+(0.195494995 * +(fTemp57)) + 0.251188993):0.446684003)):+((iTemp52 | 0)?+(0.446684003 - +(0.195494995 * +(fTemp55))):0.251188993)):+((iTemp50 | 0)?+(0.251188993 - +(0.219566002 * +(fTemp53))):0.0316229984)):+((iTemp49 | 0)?+(+(0.250214994 * +(fTemp51)) + 0.0316229984):0.281838)):+((iTemp47 | 0)?+(0.281838 - +(0.181838006 * +(fTemp138))):0.100000001)):+((iTemp44 | 0)?+(+(0.401187003 * +(fTemp48)) + 0.100000001):0.501187027)):+((iTemp42 | 0)?+(0.501187027 - +(0.301661015 * +(fTemp45))):0.199525997)):+((iTemp41 | 0)?+(0.199525997 - +(0.136429995 * +(fTemp43))):0.0630960017)):+((iTemp40 | 0)?+(+(0.253131986 * +(fTemp132)) + 0.0630960017):0.316228002)):+((iTemp38 | 0)?+(0.316228002 - +(0.216227993 * +(fTemp131))):0.100000001)):+((iTemp35 | 0)?+(+(0.401187003 * +(fTemp39)) + 0.100000001):0.501187027)):+((iTemp34 | 0)?+(0.501187027 - +(0.401187003 * +(fTemp36))):0.100000001)):+((iTemp32 | 0)?+(+(0.151188999 * +(fTemp130)) + 0.100000001):0.251188993)):+((iTemp30 | 0)?+(+(0.0306490008 * +(fTemp33)) + 0.251188993):0.281838)):+((iTemp29 | 0)?+(0.281838 - +(0.123349003 * +(fTemp31))):0.158489004)):+((iTemp26 | 0)?+(+(0.342698008 * +(fTemp129)) + 0.158489004):0.501187027)):+((iTemp24 | 0)?+(0.501187027 - +(0.301661015 * +(fTemp27))):0.199525997)):+((iTemp22 | 0)?+(0.199525997 - +(0.0216979999 * +(fTemp25))):0.177827999)):+((iTemp19 | 0)?+(+(0.138400003 * +(fTemp23)) + 0.177827999):0.316228002)):+((iTemp20 | 0)?+(0.316228002 - +(0.216227993 * +(fTemp21))):0.100000001));
			fTemp140 = +((iTemp76 | 0)?+((iTemp79 | 0)?+((iTemp81 | 0)?+((iTemp83 | 0)?+((iTemp85 | 0)?+((iTemp87 | 0)?+((iTemp89 | 0)?+((iTemp91 | 0)?+((iTemp93 | 0)?+((iTemp95 | 0)?+((iTemp97 | 0)?+((iTemp99 | 0)?+((iTemp101 | 0)?+((iTemp103 | 0)?+((iTemp105 | 0)?+((iTemp107 | 0)?+((iTemp110 | 0)?+((iTemp112 | 0)?+((iTemp114 | 0)?+((iTemp116 | 0)?+((iTemp118 | 0)?+((iTemp120 | 0)?+((iTemp122 | 0)?+((iTemp124 | 0)?1150.:+((iTemp122 | 0)?+(+(450. * +(fTemp75)) + 1150.):1600.)):+((iTemp120 | 0)?+(+(100. * +(fTemp123)) + 1600.):1700.)):+((iTemp118 | 0)?+(1700. - +(900. * +(fTemp121))):800.)):+((iTemp116 | 0)?+(800. - +(100. * +(fTemp119))):700.)):+((iTemp114 | 0)?+(+(340. * +(fTemp117)) + 700.):1040.)):+((iTemp112 | 0)?+(+(580. * +(fTemp115)) + 1040.):1620.)):+((iTemp110 | 0)?+(+(130. * +(fTemp113)) + 1620.):1750.)):+((iTemp107 | 0)?+(1750. - +(1000. * +(fTemp111))):750.)):+((iTemp105 | 0)?+(750. - +(150. * +(fTemp108))):600.)):+((iTemp103 | 0)?+(+(520. * +(fTemp106)) + 600.):1120.)):+((iTemp101 | 0)?+(+(680. * +(fTemp104)) + 1120.):1800.)):+((iTemp99 | 0)?+(+(50. * +(fTemp102)) + 1800.):1850.)):+((iTemp97 | 0)?+(1850. - +(1030. * +(fTemp100))):820.)):+((iTemp95 | 0)?+(820. - +(190. * +(fTemp98))):630.)):+((iTemp93 | 0)?+(+(520. * +(fTemp96)) + 630.):1150.)):+((iTemp91 | 0)?+(+(850. * +(fTemp94)) + 1150.):2000.)):+((iTemp89 | 0)?+(+(140. * +(fTemp92)) + 2000.):2140.)):+((iTemp87 | 0)?+(2140. - +(1340. * +(fTemp90))):800.)):+((iTemp85 | 0)?+(800. - +(100. * +(fTemp88))):700.)):+((iTemp83 | 0)?+(+(380. * +(fTemp86)) + 700.):1080.)):+((iTemp81 | 0)?+(+(620. * +(fTemp84)) + 1080.):1700.)):+((iTemp79 | 0)?+(+(170. * +(fTemp82)) + 1700.):1870.)):+((iTemp76 | 0)?+(1870. - +(1070. * +(fTemp80))):800.)):+((iTemp77 | 0)?+(800. - +(200. * +(fTemp78))):600.));
			fTemp141 = +(+(+(fSlow24) * +(fTemp2)) + 30.);
			fTemp142 = +(+(+((iTemp74 | 0)) * +(HEAPF[dsp + 262392 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262344 >> 2]) * +((iSlow23 | 0)?+(((((+(fTemp140) >= 1300.) | 0) & ((+(fTemp3) >= 200.) | 0)) | 0)?+(+(fTemp140) - +(0.000952380942 * +(+(+(fTemp3) + -200.) * +(+(fTemp140) + -1300.)))):+(((+(fTemp140) <= +(fTemp141)) | 0)?+(fTemp141):+(fTemp140))):+(fTemp140))));
			HEAPF[dsp + 262392 + (0 << 2) >> 2] = +(+(fTemp142) - +(floorf(+(fTemp142))));
			fTemp143 = +(50. * +(fTemp129));
			fTemp144 = +(20. * +(fTemp39));
			fTemp145 = +(20. * +(fTemp45));
			fTemp146 = +(20. * +(fTemp48));
			fTemp147 = +(60. * +(fTemp57));
			fTemp148 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?120.:+((iTemp59 | 0)?+(120. - +(fTemp64)):100.)):+((iTemp56 | 0)?+(+(70. * +(fTemp60)) + 100.):170.)):+((iTemp54 | 0)?+(170. - +(fTemp147)):110.)):+((iTemp52 | 0)?+(110. - +(fTemp134)):100.)):100.):100.):100.):+((iTemp44 | 0)?+(+(fTemp146) + 100.):120.)):+((iTemp42 | 0)?+(120. - +(fTemp145)):100.)):100.):100.):100.):+((iTemp35 | 0)?+(+(fTemp144) + 100.):120.)):120.):+((iTemp32 | 0)?+(120. - +(20. * +(fTemp130))):100.)):100.):+((iTemp29 | 0)?+(+(70. * +(fTemp31)) + 100.):170.)):+((iTemp26 | 0)?+(170. - +(fTemp143)):120.)):+((iTemp24 | 0)?+(120. - +(fTemp28)):100.)):100.):100.):100.);
			HEAPF[dsp + 262400 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262400 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(+(fTemp17) * +(fTemp148))));
			fTemp149 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262400 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262408 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262408 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(fTemp148)));
			fTemp150 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262408 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262416 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262264 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262416 + (1 << 2) >> 2]) * +(0. - +(+(fTemp149) + +(fTemp150)))) + +(+(+(fTemp149) * +(fTemp150)) * +(HEAPF[dsp + 262416 + (2 << 2) >> 2]))));
			fTemp151 = +((iTemp30 | 0)?+(+(0.0293140002 * +(fTemp33)) + 0.0501190014):0.0794330016);
			fTemp152 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?0.100000001:+((iTemp65 | 0)?+(0.100000001 - +(0.0683770031 * +(fTemp18))):0.0316229984)):0.0316229984):+((iTemp59 | 0)?+(+(0.126865998 * +(fTemp63)) + 0.0316229984):0.158489004)):+((iTemp56 | 0)?+(0.158489004 - +(0.126865998 * +(fTemp60))):0.0316229984)):+((iTemp54 | 0)?+(+(0.323190004 * +(fTemp57)) + 0.0316229984):0.35481301)):0.35481301):+((iTemp50 | 0)?+(0.35481301 - +(0.196324006 * +(fTemp53))):0.158489004)):+((iTemp49 | 0)?+(0.158489004 - +(0.0693639964 * +(fTemp51))):0.0891249999)):+((iTemp47 | 0)?+(0.0891249999 - +(0.0640060008 * +(fTemp138))):0.0251189992)):+((iTemp44 | 0)?+(+(0.0456760004 * +(fTemp48)) + 0.0251189992):0.0707949996)):+((iTemp42 | 0)?+(+(0.0550980009 * +(fTemp45)) + 0.0707949996):0.125892997)):+((iTemp41 | 0)?+(0.125892997 - +(0.0627970025 * +(fTemp43))):0.0630960017)):+((iTemp40 | 0)?+(0.0630960017 - +(0.0129770003 * +(fTemp132))):0.0501190014)):+((iTemp38 | 0)?+(+(0.020676 * +(fTemp131)) + 0.0501190014):0.0707949996)):+((iTemp35 | 0)?+(0.0707949996 - +(0.0456760004 * +(fTemp39))):0.0251189992)):+((iTemp34 | 0)?+(+(0.152709007 * +(fTemp36)) + 0.0251189992):0.177827999)):+((iTemp32 | 0)?+(0.177827999 - +(0.127709001 * +(fTemp130))):0.0501190014)):+(fTemp151)):+((iTemp29 | 0)?+(0.0794330016 - +(0.0616500005 * +(fTemp31))):0.0177829992)):+((iTemp26 | 0)?+(+(0.428900987 * +(fTemp129)) + 0.0177829992):0.446684003)):+((iTemp24 | 0)?+(0.446684003 - +(0.195494995 * +(fTemp27))):0.251188993)):+((iTemp22 | 0)?+(0.251188993 - +(0.125295997 * +(fTemp25))):0.125892997)):+((iTemp19 | 0)?+(+(0.125295997 * +(fTemp23)) + 0.125892997):0.251188993)):+((iTemp20 | 0)?+(0.251188993 - +(0.109935001 * +(fTemp21))):0.141253993));
			fTemp153 = +(100. * +(fTemp78));
			fTemp154 = +(50. * +(fTemp104));
			fTemp155 = +(+(+((iTemp74 | 0)) * +(HEAPF[dsp + 262428 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262344 >> 2]) * +((iTemp76 | 0)?+((iTemp79 | 0)?+((iTemp81 | 0)?+((iTemp83 | 0)?+((iTemp85 | 0)?+((iTemp87 | 0)?+((iTemp89 | 0)?+((iTemp91 | 0)?+((iTemp93 | 0)?+((iTemp95 | 0)?+((iTemp97 | 0)?+((iTemp99 | 0)?+((iTemp101 | 0)?+((iTemp103 | 0)?+((iTemp105 | 0)?+((iTemp107 | 0)?+((iTemp110 | 0)?+((iTemp112 | 0)?+((iTemp114 | 0)?+((iTemp116 | 0)?+((iTemp118 | 0)?+((iTemp120 | 0)?+((iTemp122 | 0)?+((iTemp124 | 0)?2800.:+((iTemp122 | 0)?+(2800. - +(100. * +(fTemp75))):2700.)):2700.):+((iTemp118 | 0)?+(+(130. * +(fTemp121)) + 2700.):2830.)):+((iTemp116 | 0)?+(2830. - +(300. * +(fTemp119))):2530.)):+((iTemp114 | 0)?+(2530. - +(280. * +(fTemp117))):2250.)):+((iTemp112 | 0)?+(+(150. * +(fTemp115)) + 2250.):2400.)):+((iTemp110 | 0)?+(+(200. * +(fTemp113)) + 2400.):2600.)):+((iTemp107 | 0)?+(2600. - +(200. * +(fTemp111))):2400.)):2400.):+((iTemp103 | 0)?+(+(350. * +(fTemp106)) + 2400.):2750.)):+((iTemp101 | 0)?+(2750. - +(fTemp154)):2700.)):+((iTemp99 | 0)?+(+(200. * +(fTemp102)) + 2700.):2900.)):+((iTemp97 | 0)?+(2900. - +(200. * +(fTemp100))):2700.)):+((iTemp95 | 0)?+(+(50. * +(fTemp98)) + 2700.):2750.)):+((iTemp93 | 0)?+(+(150. * +(fTemp96)) + 2750.):2900.)):+((iTemp91 | 0)?+(2900. - +(100. * +(fTemp94))):2800.)):+((iTemp89 | 0)?+(+(150. * +(fTemp92)) + 2800.):2950.)):+((iTemp87 | 0)?+(2950. - +(120. * +(fTemp90))):2830.)):+((iTemp85 | 0)?+(2830. - +(130. * +(fTemp88))):2700.)):+((iTemp83 | 0)?+(2700. - +(50. * +(fTemp86))):2650.)):+((iTemp81 | 0)?+(2650. - +(50. * +(fTemp84))):2600.)):+((iTemp79 | 0)?+(+(200. * +(fTemp82)) + 2600.):2800.)):+((iTemp76 | 0)?+(2800. - +(200. * +(fTemp80))):2600.)):+((iTemp77 | 0)?+(+(fTemp153) + 2600.):2700.))));
			HEAPF[dsp + 262428 + (0 << 2) >> 2] = +(+(fTemp155) - +(floorf(+(fTemp155))));
			fTemp156 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?130.:+((iTemp65 | 0)?+(+(fTemp68) + 130.):150.)):150.):+((iTemp59 | 0)?+(150. - +(fTemp64)):130.)):+((iTemp56 | 0)?+(+(50. * +(fTemp60)) + 130.):180.)):+((iTemp54 | 0)?+(180. - +(fTemp147)):120.)):120.):120.):120.):120.):+((iTemp44 | 0)?+(+(fTemp133) + 120.):130.)):+((iTemp42 | 0)?+(130. - +(fTemp46)):120.)):120.):120.):120.):+((iTemp35 | 0)?+(+(10. * +(fTemp39)) + 120.):130.)):+((iTemp34 | 0)?+(+(fTemp37) + 130.):150.)):+((iTemp32 | 0)?+(150. - +(30. * +(fTemp130))):120.)):120.):+((iTemp29 | 0)?+(+(60. * +(fTemp31)) + 120.):180.)):+((iTemp26 | 0)?+(180. - +(fTemp143)):130.)):+((iTemp24 | 0)?+(130. - +(fTemp128)):120.)):120.):+((iTemp19 | 0)?+(+(fTemp127) + 120.):130.)):+((iTemp20 | 0)?+(130. - +(10. * +(fTemp21))):120.));
			HEAPF[dsp + 262436 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262436 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(+(fTemp17) * +(fTemp156))));
			fTemp157 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262436 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262444 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262444 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(fTemp156)));
			fTemp158 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262444 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262452 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262264 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262452 + (1 << 2) >> 2]) * +(0. - +(+(fTemp157) + +(fTemp158)))) + +(+(+(fTemp157) * +(fTemp158)) * +(HEAPF[dsp + 262452 + (2 << 2) >> 2]))));
			fTemp159 = +((iTemp41 | 0)?+(0.100000001 - +(0.0841509998 * +(fTemp43))):0.0158489998);
			fTemp160 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?0.0158489998:+((iTemp65 | 0)?+(+(0.00193400006 * +(fTemp18)) + 0.0158489998):0.0177829992)):+((iTemp62 | 0)?+(0.0177829992 - +(0.00193400006 * +(fTemp66))):0.0158489998)):+((iTemp59 | 0)?+(+(0.0239620004 * +(fTemp63)) + 0.0158489998):0.0398110002)):+((iTemp56 | 0)?+(0.0398110002 - +(0.0298110005 * +(fTemp60))):0.00999999978)):+((iTemp54 | 0)?+(+(0.344812989 * +(fTemp57)) + 0.00999999978):0.35481301)):+((iTemp52 | 0)?+(0.35481301 - +(0.103624001 * +(fTemp55))):0.251188993)):+((iTemp50 | 0)?+(0.251188993 - +(0.171755999 * +(fTemp53))):0.0794330016)):+((iTemp49 | 0)?+(+(0.0205669999 * +(fTemp51)) + 0.0794330016):0.100000001)):+((iTemp47 | 0)?+(0.100000001 - +(0.0601890013 * +(fTemp138))):0.0398110002)):+((iTemp44 | 0)?+(+(0.0232849997 * +(fTemp48)) + 0.0398110002):0.0630960017)):+((iTemp42 | 0)?+(+(0.0369039997 * +(fTemp45)) + 0.0630960017):0.100000001)):+(fTemp159)):+((iTemp40 | 0)?+(+(0.0635839999 * +(fTemp132)) + 0.0158489998):0.0794330016)):+((iTemp38 | 0)?+(0.0794330016 - +(0.0478099994 * +(fTemp131))):0.0316229984)):+((iTemp35 | 0)?+(+(0.0683770031 * +(fTemp39)) + 0.0316229984):0.100000001)):+((iTemp34 | 0)?+(0.100000001 - +(0.0900000036 * +(fTemp36))):0.00999999978)):+((iTemp32 | 0)?+(+(0.0401189998 * +(fTemp130)) + 0.00999999978):0.0501190014)):+(fTemp151)):+((iTemp29 | 0)?+(0.0794330016 - +(0.0694330037 * +(fTemp31))):0.00999999978)):+((iTemp26 | 0)?+(+(0.388107002 * +(fTemp129)) + 0.00999999978):0.398106992)):+((iTemp24 | 0)?+(0.398106992 - +(0.198580995 * +(fTemp27))):0.199525997)):+((iTemp22 | 0)?+(0.199525997 - +(0.099526003 * +(fTemp25))):0.100000001)):+((iTemp19 | 0)?+(+(0.151188999 * +(fTemp23)) + 0.100000001):0.251188993)):+((iTemp20 | 0)?+(0.251188993 - +(0.0516630001 * +(fTemp21))):0.199525997));
			fTemp161 = +(350. * +(fTemp115));
			fTemp162 = +(+(+((iTemp74 | 0)) * +(HEAPF[dsp + 262464 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262344 >> 2]) * +((iTemp76 | 0)?+((iTemp79 | 0)?+((iTemp81 | 0)?+((iTemp83 | 0)?+((iTemp85 | 0)?+((iTemp87 | 0)?+((iTemp89 | 0)?+((iTemp91 | 0)?+((iTemp93 | 0)?+((iTemp95 | 0)?+((iTemp97 | 0)?+((iTemp99 | 0)?+((iTemp101 | 0)?+((iTemp103 | 0)?+((iTemp105 | 0)?+((iTemp107 | 0)?+((iTemp110 | 0)?+((iTemp112 | 0)?+((iTemp114 | 0)?+((iTemp116 | 0)?+((iTemp118 | 0)?+((iTemp120 | 0)?+((iTemp122 | 0)?+((iTemp124 | 0)?3500.:+((iTemp122 | 0)?+(3500. - +(200. * +(fTemp75))):3300.)):+((iTemp120 | 0)?+(+(400. * +(fTemp123)) + 3300.):3700.)):+((iTemp118 | 0)?+(3700. - +(200. * +(fTemp121))):3500.)):3500.):+((iTemp114 | 0)?+(3500. - +(1050. * +(fTemp117))):2450.)):+((iTemp112 | 0)?+(+(fTemp161) + 2450.):2800.)):+((iTemp110 | 0)?+(+(250. * +(fTemp113)) + 2800.):3050.)):+((iTemp107 | 0)?+(3050. - +(450. * +(fTemp111))):2600.)):+((iTemp105 | 0)?+(+(75. * +(fTemp108)) + 2600.):2675.)):+((iTemp103 | 0)?+(+(325. * +(fTemp106)) + 2675.):3000.)):3000.):+((iTemp99 | 0)?+(+(350. * +(fTemp102)) + 3000.):3350.)):+((iTemp97 | 0)?+(3350. - +(350. * +(fTemp100))):3000.)):3000.):+((iTemp93 | 0)?+(+(900. * +(fTemp96)) + 3000.):3900.)):+((iTemp91 | 0)?+(3900. - +(300. * +(fTemp94))):3600.)):+((iTemp89 | 0)?+(+(300. * +(fTemp92)) + 3600.):3900.)):+((iTemp87 | 0)?+(3900. - +(100. * +(fTemp90))):3800.)):3800.):+((iTemp83 | 0)?+(3800. - +(900. * +(fTemp86))):2900.)):+((iTemp81 | 0)?+(+(300. * +(fTemp84)) + 2900.):3200.)):+((iTemp79 | 0)?+(+(50. * +(fTemp82)) + 3200.):3250.)):+((iTemp76 | 0)?+(3250. - +(450. * +(fTemp80))):2800.)):+((iTemp77 | 0)?+(+(fTemp153) + 2800.):2900.))));
			HEAPF[dsp + 262464 + (0 << 2) >> 2] = +(+(fTemp162) - +(floorf(+(fTemp162))));
			fTemp163 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?+((iTemp65 | 0)?+((iTemp67 | 0)?140.:+((iTemp65 | 0)?+(+(60. * +(fTemp18)) + 140.):200.)):200.):+((iTemp59 | 0)?+(200. - +(65. * +(fTemp63))):135.)):+((iTemp56 | 0)?+(+(65. * +(fTemp60)) + 135.):200.)):+((iTemp54 | 0)?+(200. - +(70. * +(fTemp57))):130.)):+((iTemp52 | 0)?+(130. - +(fTemp134)):120.)):120.):120.):120.):+((iTemp44 | 0)?+(+(fTemp146) + 120.):140.)):+((iTemp42 | 0)?+(140. - +(fTemp145)):120.)):120.):120.):120.):+((iTemp35 | 0)?+(+(fTemp144) + 120.):140.)):+((iTemp34 | 0)?+(+(60. * +(fTemp36)) + 140.):200.)):+((iTemp32 | 0)?+(200. - +(80. * +(fTemp130))):120.)):120.):+((iTemp29 | 0)?+(+(80. * +(fTemp31)) + 120.):200.)):+((iTemp26 | 0)?+(200. - +(60. * +(fTemp129))):140.)):+((iTemp24 | 0)?+(140. - +(fTemp28)):120.)):120.):+((iTemp19 | 0)?+(+(15. * +(fTemp23)) + 120.):135.)):+((iTemp20 | 0)?+(135. - +(15. * +(fTemp21))):120.));
			HEAPF[dsp + 262472 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262472 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(+(fTemp17) * +(fTemp163))));
			fTemp164 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262472 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262480 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 262276 >> 2]) * +(HEAPF[dsp + 262480 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262280 >> 2]) * +(fTemp163)));
			fTemp165 = +(expf(+(+(HEAPF[dsp + 262272 >> 2]) * +(0. - +(HEAPF[dsp + 262480 + (0 << 2) >> 2])))));
			HEAPF[dsp + 262488 + (0 << 2) >> 2] = +(+((HEAP32[dsp + 262264 + (1 << 2) >> 2] | 0)) - +(+(+(HEAPF[dsp + 262488 + (1 << 2) >> 2]) * +(0. - +(+(fTemp164) + +(fTemp165)))) + +(+(+(fTemp164) * +(fTemp165)) * +(HEAPF[dsp + 262488 + (2 << 2) >> 2]))));
			fTemp166 = +((iTemp19 | 0)?+((iTemp22 | 0)?+((iTemp24 | 0)?+((iTemp26 | 0)?+((iTemp29 | 0)?+((iTemp30 | 0)?+((iTemp32 | 0)?+((iTemp34 | 0)?+((iTemp35 | 0)?+((iTemp38 | 0)?+((iTemp40 | 0)?+((iTemp41 | 0)?+((iTemp42 | 0)?+((iTemp44 | 0)?+((iTemp47 | 0)?+((iTemp49 | 0)?+((iTemp50 | 0)?+((iTemp52 | 0)?+((iTemp54 | 0)?+((iTemp56 | 0)?+((iTemp59 | 0)?+((iTemp62 | 0)?0.00100000005:+((iTemp59 | 0)?+(+(0.000777999987 * +(fTemp63)) + 0.00100000005):0.00177800003)):+((iTemp56 | 0)?+(0.00177800003 - +(0.001147 * +(fTemp60))):0.000630999974)):+((iTemp54 | 0)?+(+(0.0993689969 * +(fTemp57)) + 0.000630999974):0.100000001)):+((iTemp52 | 0)?+(+(0.0258930009 * +(fTemp55)) + 0.100000001):0.125892997)):+((iTemp50 | 0)?+(0.125892997 - +(0.0860819966 * +(fTemp53))):0.0398110002)):+((iTemp49 | 0)?+(0.0398110002 - +(0.0298110005 * +(fTemp51))):0.00999999978)):+((iTemp47 | 0)?+(+(0.00584900007 * +(fTemp138)) + 0.00999999978):0.0158489998)):+((iTemp44 | 0)?+(0.0158489998 - +(0.00325999991 * +(fTemp48))):0.0125890002)):+((iTemp42 | 0)?+(+(0.0874110013 * +(fTemp45)) + 0.0125890002):0.100000001)):+(fTemp159)):+((iTemp40 | 0)?+(+(0.00410400005 * +(fTemp132)) + 0.0158489998):0.0199529994)):0.0199529994):+((iTemp35 | 0)?+(0.0199529994 - +(0.0167909991 * +(fTemp39))):0.0031620001)):+((iTemp34 | 0)?+(0.0031620001 - +(0.00157700002 * +(fTemp36))):0.00158499996)):+((iTemp32 | 0)?+(+(0.00472499989 * +(fTemp130)) + 0.00158499996):0.00631000008)):+((iTemp30 | 0)?+(0.00631000008 - +(0.00314799999 * +(fTemp33))):0.0031620001)):+((iTemp29 | 0)?+(0.0031620001 - +(0.00216199993 * +(fTemp31))):0.00100000005)):+((iTemp26 | 0)?+(+(0.0784329996 * +(fTemp129)) + 0.00100000005):0.0794330016)):+((iTemp24 | 0)?+(+(0.0205669999 * +(fTemp27)) + 0.0794330016):0.100000001)):+((iTemp22 | 0)?+(0.100000001 - +(0.0683770031 * +(fTemp25))):0.0316229984)):+((iTemp19 | 0)?+(+(0.0184959993 * +(fTemp23)) + 0.0316229984):0.0501190014)):0.0501190014);
			fTemp167 = +(+(+((iTemp74 | 0)) * +(HEAPF[dsp + 262500 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 262344 >> 2]) * +((iTemp76 | 0)?+((iTemp79 | 0)?+((iTemp81 | 0)?+((iTemp83 | 0)?+((iTemp85 | 0)?+((iTemp87 | 0)?+((iTemp89 | 0)?+((iTemp91 | 0)?+((iTemp93 | 0)?+((iTemp95 | 0)?+((iTemp97 | 0)?+((iTemp99 | 0)?+((iTemp101 | 0)?+((iTemp103 | 0)?+((iTemp105 | 0)?+((iTemp107 | 0)?+((iTemp110 | 0)?+((iTemp112 | 0)?+((iTemp114 | 0)?+((iTemp116 | 0)?4950.:+((iTemp114 | 0)?+(4950. - +(2200. * +(fTemp117))):2750.)):+((iTemp112 | 0)?+(+(fTemp161) + 2750.):3100.)):+((iTemp110 | 0)?+(+(240. * +(fTemp113)) + 3100.):3340.)):+((iTemp107 | 0)?+(3340. - +(440. * +(fTemp111))):2900.)):+((iTemp105 | 0)?+(+(fTemp109) + 2900.):2950.)):+((iTemp103 | 0)?+(+(400. * +(fTemp106)) + 2950.):3350.)):+((iTemp101 | 0)?+(3350. - +(fTemp154)):3300.)):+((iTemp99 | 0)?+(+(290. * +(fTemp102)) + 3300.):3590.)):+((iTemp97 | 0)?+(3590. - +(290. * +(fTemp100))):3300.)):+((iTemp95 | 0)?+(+(100. * +(fTemp98)) + 3300.):3400.)):+((iTemp93 | 0)?+(+(1550. * +(fTemp96)) + 3400.):4950.)):4950.):4950.):4950.):4950.):+((iTemp83 | 0)?+(4950. - +(1700. * +(fTemp86))):3250.)):+((iTemp81 | 0)?+(+(330. * +(fTemp84)) + 3250.):3580.)):+((iTemp79 | 0)?+(3580. - +(40. * +(fTemp82))):3540.)):+((iTemp76 | 0)?+(3540. - +(540. * +(fTemp80))):3000.)):+((iTemp77 | 0)?+(+(300. * +(fTemp78)) + 3000.):3300.))));
			HEAPF[dsp + 262500 + (0 << 2) >> 2] = +(+(fTemp167) - +(floorf(+(fTemp167))));
			fTemp168 = +(+(fSlow0) * +(+(HEAPF[dsp + 262192 + (0 << 2) >> 2]) * +(+(+(+(+(+(+(+(HEAPF[dsp + 262332 + (0 << 2) >> 2]) * +((iSlow22 | 0)?+(fTemp73):+(fTemp72))) * +(1. - +(+(fTemp71) + +(+(fTemp70) * +(1. - +(fTemp71)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262356 + (0 << 2) >> 2]))) << 2) >> 2])) + +(+(+(+(HEAPF[dsp + 262380 + (0 << 2) >> 2]) * +((iSlow22 | 0)?+(+(fTemp73) * +(fTemp139)):+(+(fTemp72) * +(fTemp139)))) * +(1. - +(+(fTemp137) + +(+(fTemp136) * +(1. - +(fTemp137)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262392 + (0 << 2) >> 2]))) << 2) >> 2]))) + +(+(+(+(HEAPF[dsp + 262416 + (0 << 2) >> 2]) * +((iSlow22 | 0)?+(+(fTemp73) * +(fTemp152)):+(+(fTemp72) * +(fTemp152)))) * +(1. - +(+(fTemp150) + +(+(fTemp149) * +(1. - +(fTemp150)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262428 + (0 << 2) >> 2]))) << 2) >> 2]))) + +(+(+(+(HEAPF[dsp + 262452 + (0 << 2) >> 2]) * +((iSlow22 | 0)?+(+(fTemp73) * +(fTemp160)):+(+(fTemp72) * +(fTemp160)))) * +(1. - +(+(fTemp158) + +(+(fTemp157) * +(1. - +(fTemp158)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262464 + (0 << 2) >> 2]))) << 2) >> 2]))) + +(+(+(+(HEAPF[dsp + 262488 + (0 << 2) >> 2]) * +((iSlow22 | 0)?+(+(fTemp73) * +(fTemp166)):+(+(fTemp72) * +(fTemp166)))) * +(1. - +(+(fTemp165) + +(+(fTemp164) * +(1. - +(fTemp165)))))) * +(HEAPF[dsp + 0 + (~~(+(65536. * +(HEAPF[dsp + 262500 + (0 << 2) >> 2]))) << 2) >> 2])))));
			HEAPF[output0 + ((i | 0) << 2) >> 2] = +(+(fTemp168));
			HEAPF[output1 + ((i | 0) << 2) >> 2] = +(+(fTemp168));
			HEAP32[dsp + 262148 + (1 << 2) >> 2] = (HEAP32[dsp + 262148 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 262164 + (1 << 2) >> 2] = +(HEAPF[dsp + 262164 + (0 << 2) >> 2]);
			HEAPF[dsp + 262192 + (1 << 2) >> 2] = +(HEAPF[dsp + 262192 + (0 << 2) >> 2]);
			HEAPF[dsp + 262212 + (1 << 2) >> 2] = +(HEAPF[dsp + 262212 + (0 << 2) >> 2]);
			HEAPF[dsp + 262232 + (1 << 2) >> 2] = +(HEAPF[dsp + 262232 + (0 << 2) >> 2]);
			HEAPF[dsp + 262240 + (1 << 2) >> 2] = +(HEAPF[dsp + 262240 + (0 << 2) >> 2]);
			HEAPF[dsp + 262248 + (1 << 2) >> 2] = +(HEAPF[dsp + 262248 + (0 << 2) >> 2]);
			HEAPF[dsp + 262256 + (1 << 2) >> 2] = +(HEAPF[dsp + 262256 + (0 << 2) >> 2]);
			HEAP32[dsp + 262264 + (1 << 2) >> 2] = (HEAP32[dsp + 262264 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 262288 + (1 << 2) >> 2] = +(HEAPF[dsp + 262288 + (0 << 2) >> 2]);
			HEAPF[dsp + 262300 + (1 << 2) >> 2] = +(HEAPF[dsp + 262300 + (0 << 2) >> 2]);
			HEAPF[dsp + 262308 + (1 << 2) >> 2] = +(HEAPF[dsp + 262308 + (0 << 2) >> 2]);
			HEAPF[dsp + 262316 + (1 << 2) >> 2] = +(HEAPF[dsp + 262316 + (0 << 2) >> 2]);
			HEAPF[dsp + 262324 + (1 << 2) >> 2] = +(HEAPF[dsp + 262324 + (0 << 2) >> 2]);
			HEAPF[dsp + 262332 + (2 << 2) >> 2] = +(HEAPF[dsp + 262332 + (1 << 2) >> 2]);
			HEAPF[dsp + 262332 + (1 << 2) >> 2] = +(HEAPF[dsp + 262332 + (0 << 2) >> 2]);
			HEAPF[dsp + 262348 + (1 << 2) >> 2] = +(HEAPF[dsp + 262348 + (0 << 2) >> 2]);
			HEAPF[dsp + 262356 + (1 << 2) >> 2] = +(HEAPF[dsp + 262356 + (0 << 2) >> 2]);
			HEAPF[dsp + 262364 + (1 << 2) >> 2] = +(HEAPF[dsp + 262364 + (0 << 2) >> 2]);
			HEAPF[dsp + 262372 + (1 << 2) >> 2] = +(HEAPF[dsp + 262372 + (0 << 2) >> 2]);
			HEAPF[dsp + 262380 + (2 << 2) >> 2] = +(HEAPF[dsp + 262380 + (1 << 2) >> 2]);
			HEAPF[dsp + 262380 + (1 << 2) >> 2] = +(HEAPF[dsp + 262380 + (0 << 2) >> 2]);
			HEAPF[dsp + 262392 + (1 << 2) >> 2] = +(HEAPF[dsp + 262392 + (0 << 2) >> 2]);
			HEAPF[dsp + 262400 + (1 << 2) >> 2] = +(HEAPF[dsp + 262400 + (0 << 2) >> 2]);
			HEAPF[dsp + 262408 + (1 << 2) >> 2] = +(HEAPF[dsp + 262408 + (0 << 2) >> 2]);
			HEAPF[dsp + 262416 + (2 << 2) >> 2] = +(HEAPF[dsp + 262416 + (1 << 2) >> 2]);
			HEAPF[dsp + 262416 + (1 << 2) >> 2] = +(HEAPF[dsp + 262416 + (0 << 2) >> 2]);
			HEAPF[dsp + 262428 + (1 << 2) >> 2] = +(HEAPF[dsp + 262428 + (0 << 2) >> 2]);
			HEAPF[dsp + 262436 + (1 << 2) >> 2] = +(HEAPF[dsp + 262436 + (0 << 2) >> 2]);
			HEAPF[dsp + 262444 + (1 << 2) >> 2] = +(HEAPF[dsp + 262444 + (0 << 2) >> 2]);
			HEAPF[dsp + 262452 + (2 << 2) >> 2] = +(HEAPF[dsp + 262452 + (1 << 2) >> 2]);
			HEAPF[dsp + 262452 + (1 << 2) >> 2] = +(HEAPF[dsp + 262452 + (0 << 2) >> 2]);
			HEAPF[dsp + 262464 + (1 << 2) >> 2] = +(HEAPF[dsp + 262464 + (0 << 2) >> 2]);
			HEAPF[dsp + 262472 + (1 << 2) >> 2] = +(HEAPF[dsp + 262472 + (0 << 2) >> 2]);
			HEAPF[dsp + 262480 + (1 << 2) >> 2] = +(HEAPF[dsp + 262480 + (0 << 2) >> 2]);
			HEAPF[dsp + 262488 + (2 << 2) >> 2] = +(HEAPF[dsp + 262488 + (1 << 2) >> 2]);
			HEAPF[dsp + 262488 + (1 << 2) >> 2] = +(HEAPF[dsp + 262488 + (0 << 2) >> 2]);
			HEAPF[dsp + 262500 + (1 << 2) >> 2] = +(HEAPF[dsp + 262500 + (0 << 2) >> 2]);
			
		}
		
	}
	
	return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, instanceConstants : instanceConstants, instanceResetUserInterface : instanceResetUserInterface, instanceClear : instanceClear, init : init, getSampleRate : getSampleRate, setParamValue : setParamValue, getParamValue : getParamValue, compute : compute };
}

function getSizemydsp() {
	return 262516;
}

function getPathTablemydsp() {
	var pathTable = [];
	pathTable["/vocal/gate"] = 262156;
	pathTable["/vocal/otherParams/outGain"] = 262144;
	pathTable["/vocal/midi/sustain"] = 262160;
	pathTable["/vocal/midi/gain"] = 262172;
	pathTable["/vocal/midi/envAttack"] = 262188;
	pathTable["/vocal/midi/freq"] = 262204;
	pathTable["/vocal/midi/bend"] = 262208;
	pathTable["/vocal/otherParams/vibratoGain"] = 262220;
	pathTable["/vocal/otherParams/vibratoFreq"] = 262228;
	pathTable["/vocal/otherParams/vowel"] = 262284;
	pathTable["/vocal/otherParams/voiceType"] = 262296;
	return pathTable;
}

function getJSONmydsp() {
	return "{\"name\":\"Vocal FOF MIDI\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"(c)Mike Olsen, CCRMA (Stanford University)\"},{\"description\":\"MIDI-controllable FOF vocal synthesizer.\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"MIT\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Vocal FOF MIDI\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"vocal\",\"items\":[{\"type\":\"hgroup\",\"label\":\"midi\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"freq\",\"address\":\"/vocal/midi/freq\",\"meta\":[{\"0\":\"\"},{\"style\":\"knob\"}],\"init\":\"440\",\"min\":\"50\",\"max\":\"1000\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"bend\",\"address\":\"/vocal/midi/bend\",\"meta\":[{\"1\":\"\"},{\"hidden\":\"1\"},{\"midi\":\"pitchwheel\"},{\"style\":\"knob\"}],\"init\":\"1\",\"min\":\"0\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"gain\",\"address\":\"/vocal/midi/gain\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.9\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"envAttack\",\"address\":\"/vocal/midi/envAttack\",\"meta\":[{\"3\":\"\"},{\"style\":\"knob\"}],\"init\":\"10\",\"min\":\"0\",\"max\":\"30\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"sustain\",\"address\":\"/vocal/midi/sustain\",\"meta\":[{\"4\":\"\"},{\"hidden\":\"1\"},{\"midi\":\"ctrl 64\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"otherParams\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"voiceType\",\"address\":\"/vocal/otherParams/voiceType\",\"meta\":[{\"0\":\"\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"vowel\",\"address\":\"/vocal/otherParams/vowel\",\"meta\":[{\"1\":\"\"},{\"midi\":\"ctrl 1\"},{\"style\":\"knob\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"vibratoFreq\",\"address\":\"/vocal/otherParams/vibratoFreq\",\"meta\":[{\"3\":\"\"},{\"style\":\"knob\"}],\"init\":\"6\",\"min\":\"1\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"vibratoGain\",\"address\":\"/vocal/otherParams/vibratoGain\",\"meta\":[{\"4\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"outGain\",\"address\":\"/vocal/otherParams/outGain\",\"meta\":[{\"5\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"button\",\"label\":\"gate\",\"address\":\"/vocal/gate\",\"meta\":[{\"2\":\"\"}]}]}]}";
}

function metadatamydsp(m) {
	m.declare("basics.lib/name", "Faust Basic Element Library");
	m.declare("basics.lib/version", "0.0");
	m.declare("copyright", "(c)Mike Olsen, CCRMA (Stanford University)");
	m.declare("description", "MIDI-controllable FOF vocal synthesizer.");
	m.declare("filters.lib/name", "Faust Filters Library");
	m.declare("filters.lib/version", "0.0");
	m.declare("license", "MIT");
	m.declare("maths.lib/author", "GRAME");
	m.declare("maths.lib/copyright", "GRAME");
	m.declare("maths.lib/license", "LGPL with exception");
	m.declare("maths.lib/name", "Faust Math Library");
	m.declare("maths.lib/version", "2.1");
	m.declare("name", "Vocal FOF MIDI");
	m.declare("noises.lib/name", "Faust Noise Generator Library");
	m.declare("noises.lib/version", "0.0");
	m.declare("oscillators.lib/name", "Faust Oscillator Library");
	m.declare("oscillators.lib/version", "0.0");
	m.declare("signals.lib/name", "Faust Signal Routing Library");
	m.declare("signals.lib/version", "0.0");
}

