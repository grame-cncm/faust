/* ------------------------------------------------------------
copyright: "(c)Romain Michon, CCRMA (Stanford University), GRAME"
license: "MIT"
name: "MarimbaMIDI"
Code generated with Faust 2.5.15 (https://faust.grame.fr)
Compilation options: ajs, -scal -ftz 0
------------------------------------------------------------ */


function mydspModule(global, foreign, buffer) {
	
	'use asm';
	
	var HEAP32 = new global.Int32Array(buffer);
	var HEAPF = new global.Float32Array(buffer);
	
	var imul = foreign.imul;
	var log = foreign.log;
	var round = foreign.round;
	
	var cosf = foreign.cos;
	var floorf = foreign.floor;
	var max_f = foreign.max;
	var max_i = foreign.max;
	var min_f = foreign.min;
	var powf = foreign.pow;
	var tanf = foreign.tan;
	function fmodf(x, y) { x = +x; y = +y; return +(x % y); }
	function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }
	function remainderf(x, y) { x = +x; y = +y; return +(x - +round(x/y) * y); }

	function getNumInputsmydspSIG0(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputsmydspSIG0(dsp) {
		dsp = dsp | 0;
		return 1;
	}
	
	function instanceInitmydspSIG0(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAPF[dsp + 18996 + (0 << 2) >> 2] = 1.;
		HEAPF[dsp + 18996 + (1 << 2) >> 2] = 0.776724994;
		HEAPF[dsp + 18996 + (2 << 2) >> 2] = 0.625723004;
		HEAPF[dsp + 18996 + (3 << 2) >> 2] = 0.855223;
		HEAPF[dsp + 18996 + (4 << 2) >> 2] = 0.760159016;
		HEAPF[dsp + 18996 + (5 << 2) >> 2] = 0.69837302;
		HEAPF[dsp + 18996 + (6 << 2) >> 2] = 0.768010974;
		HEAPF[dsp + 18996 + (7 << 2) >> 2] = 0.64112699;
		HEAPF[dsp + 18996 + (8 << 2) >> 2] = 0.244034007;
		HEAPF[dsp + 18996 + (9 << 2) >> 2] = 0.707754016;
		HEAPF[dsp + 18996 + (10 << 2) >> 2] = 0.634012997;
		HEAPF[dsp + 18996 + (11 << 2) >> 2] = 0.247527003;
		HEAPF[dsp + 18996 + (12 << 2) >> 2] = 0.660848975;
		HEAPF[dsp + 18996 + (13 << 2) >> 2] = 0.450396001;
		HEAPF[dsp + 18996 + (14 << 2) >> 2] = 0.567782998;
		HEAPF[dsp + 18996 + (15 << 2) >> 2] = 0.106361002;
		HEAPF[dsp + 18996 + (16 << 2) >> 2] = 0.716813982;
		HEAPF[dsp + 18996 + (17 << 2) >> 2] = 0.663919985;
		HEAPF[dsp + 18996 + (18 << 2) >> 2] = 0.291207999;
		HEAPF[dsp + 18996 + (19 << 2) >> 2] = 0.310598999;
		HEAPF[dsp + 18996 + (20 << 2) >> 2] = 0.801495016;
		HEAPF[dsp + 18996 + (21 << 2) >> 2] = 0.635291994;
		HEAPF[dsp + 18996 + (22 << 2) >> 2] = 0.307435006;
		HEAPF[dsp + 18996 + (23 << 2) >> 2] = 0.874123991;
		HEAPF[dsp + 18996 + (24 << 2) >> 2] = 0.497667998;
		HEAPF[dsp + 18996 + (25 << 2) >> 2] = 0.487087995;
		HEAPF[dsp + 18996 + (26 << 2) >> 2] = 0.459114999;
		HEAPF[dsp + 18996 + (27 << 2) >> 2] = 0.733455002;
		HEAPF[dsp + 18996 + (28 << 2) >> 2] = 0.541818023;
		HEAPF[dsp + 18996 + (29 << 2) >> 2] = 0.441318005;
		HEAPF[dsp + 18996 + (30 << 2) >> 2] = 0.313919991;
		HEAPF[dsp + 18996 + (31 << 2) >> 2] = 0.40309;
		HEAPF[dsp + 18996 + (32 << 2) >> 2] = 0.685352981;
		HEAPF[dsp + 18996 + (33 << 2) >> 2] = 0.603139997;
		HEAPF[dsp + 18996 + (34 << 2) >> 2] = 0.400552005;
		HEAPF[dsp + 18996 + (35 << 2) >> 2] = 0.453511;
		HEAPF[dsp + 18996 + (36 << 2) >> 2] = 0.634386003;
		HEAPF[dsp + 18996 + (37 << 2) >> 2] = 0.291547;
		HEAPF[dsp + 18996 + (38 << 2) >> 2] = 0.131604999;
		HEAPF[dsp + 18996 + (39 << 2) >> 2] = 0.368506998;
		HEAPF[dsp + 18996 + (40 << 2) >> 2] = 0.839906991;
		HEAPF[dsp + 18996 + (41 << 2) >> 2] = 0.602159977;
		HEAPF[dsp + 18996 + (42 << 2) >> 2] = 0.288296014;
		HEAPF[dsp + 18996 + (43 << 2) >> 2] = 0.579670012;
		HEAPF[dsp + 18996 + (44 << 2) >> 2] = 0.0242493004;
		HEAPF[dsp + 18996 + (45 << 2) >> 2] = 0.262746006;
		HEAPF[dsp + 18996 + (46 << 2) >> 2] = 0.368588001;
		HEAPF[dsp + 18996 + (47 << 2) >> 2] = 0.890284002;
		HEAPF[dsp + 18996 + (48 << 2) >> 2] = 0.408962995;
		HEAPF[dsp + 18996 + (49 << 2) >> 2] = 0.556071997;
		HEAPF[dsp + 18996 + (50 << 2) >> 2] = 0.884427011;
		HEAPF[dsp + 18996 + (51 << 2) >> 2] = 0.832109988;
		HEAPF[dsp + 18996 + (52 << 2) >> 2] = 0.612015009;
		HEAPF[dsp + 18996 + (53 << 2) >> 2] = 0.757175982;
		HEAPF[dsp + 18996 + (54 << 2) >> 2] = 0.919476986;
		HEAPF[dsp + 18996 + (55 << 2) >> 2] = 1.;
		HEAPF[dsp + 18996 + (56 << 2) >> 2] = 0.827962995;
		HEAPF[dsp + 18996 + (57 << 2) >> 2] = 0.89240998;
		HEAPF[dsp + 18996 + (58 << 2) >> 2] = 0.0357408002;
		HEAPF[dsp + 18996 + (59 << 2) >> 2] = 0.480789006;
		HEAPF[dsp + 18996 + (60 << 2) >> 2] = 0.75287199;
		HEAPF[dsp + 18996 + (61 << 2) >> 2] = 0.0546301007;
		HEAPF[dsp + 18996 + (62 << 2) >> 2] = 0.235936999;
		HEAPF[dsp + 18996 + (63 << 2) >> 2] = 0.362937987;
		HEAPF[dsp + 18996 + (64 << 2) >> 2] = 0.444471985;
		HEAPF[dsp + 18996 + (65 << 2) >> 2] = 0.101751;
		HEAPF[dsp + 18996 + (66 << 2) >> 2] = 0.703418016;
		HEAPF[dsp + 18996 + (67 << 2) >> 2] = 0.453135997;
		HEAPF[dsp + 18996 + (68 << 2) >> 2] = 0.316628993;
		HEAPF[dsp + 18996 + (69 << 2) >> 2] = 0.490393996;
		HEAPF[dsp + 18996 + (70 << 2) >> 2] = 0.982508004;
		HEAPF[dsp + 18996 + (71 << 2) >> 2] = 0.551621974;
		HEAPF[dsp + 18996 + (72 << 2) >> 2] = 0.602008998;
		HEAPF[dsp + 18996 + (73 << 2) >> 2] = 0.666957021;
		HEAPF[dsp + 18996 + (74 << 2) >> 2] = 0.776830018;
		HEAPF[dsp + 18996 + (75 << 2) >> 2] = 0.905662;
		HEAPF[dsp + 18996 + (76 << 2) >> 2] = 0.0987197012;
		HEAPF[dsp + 18996 + (77 << 2) >> 2] = 0.402967989;
		HEAPF[dsp + 18996 + (78 << 2) >> 2] = 0.829451978;
		HEAPF[dsp + 18996 + (79 << 2) >> 2] = 0.307644993;
		HEAPF[dsp + 18996 + (80 << 2) >> 2] = 0.640479982;
		HEAPF[dsp + 18996 + (81 << 2) >> 2] = 0.983971;
		HEAPF[dsp + 18996 + (82 << 2) >> 2] = 0.584204972;
		HEAPF[dsp + 18996 + (83 << 2) >> 2] = 0.650364995;
		HEAPF[dsp + 18996 + (84 << 2) >> 2] = 0.334446996;
		HEAPF[dsp + 18996 + (85 << 2) >> 2] = 0.583570004;
		HEAPF[dsp + 18996 + (86 << 2) >> 2] = 0.540190995;
		HEAPF[dsp + 18996 + (87 << 2) >> 2] = 0.672533989;
		HEAPF[dsp + 18996 + (88 << 2) >> 2] = 0.245711997;
		HEAPF[dsp + 18996 + (89 << 2) >> 2] = 0.687298;
		HEAPF[dsp + 18996 + (90 << 2) >> 2] = 0.883058012;
		HEAPF[dsp + 18996 + (91 << 2) >> 2] = 0.792949975;
		HEAPF[dsp + 18996 + (92 << 2) >> 2] = 0.600619018;
		HEAPF[dsp + 18996 + (93 << 2) >> 2] = 0.572682023;
		HEAPF[dsp + 18996 + (94 << 2) >> 2] = 0.122612;
		HEAPF[dsp + 18996 + (95 << 2) >> 2] = 0.388247997;
		HEAPF[dsp + 18996 + (96 << 2) >> 2] = 0.290657997;
		HEAPF[dsp + 18996 + (97 << 2) >> 2] = 0.380255014;
		HEAPF[dsp + 18996 + (98 << 2) >> 2] = 0.290966988;
		HEAPF[dsp + 18996 + (99 << 2) >> 2] = 0.567818999;
		HEAPF[dsp + 18996 + (100 << 2) >> 2] = 0.0737721026;
		HEAPF[dsp + 18996 + (101 << 2) >> 2] = 0.42098999;
		HEAPF[dsp + 18996 + (102 << 2) >> 2] = 0.0786577985;
		HEAPF[dsp + 18996 + (103 << 2) >> 2] = 0.393994987;
		HEAPF[dsp + 18996 + (104 << 2) >> 2] = 0.268983006;
		HEAPF[dsp + 18996 + (105 << 2) >> 2] = 0.260614008;
		HEAPF[dsp + 18996 + (106 << 2) >> 2] = 0.494085997;
		HEAPF[dsp + 18996 + (107 << 2) >> 2] = 0.238025993;
		HEAPF[dsp + 18996 + (108 << 2) >> 2] = 0.0987823978;
		HEAPF[dsp + 18996 + (109 << 2) >> 2] = 0.277879;
		HEAPF[dsp + 18996 + (110 << 2) >> 2] = 0.440562993;
		HEAPF[dsp + 18996 + (111 << 2) >> 2] = 0.0770211965;
		HEAPF[dsp + 18996 + (112 << 2) >> 2] = 0.450590998;
		HEAPF[dsp + 18996 + (113 << 2) >> 2] = 0.128137007;
		HEAPF[dsp + 18996 + (114 << 2) >> 2] = 0.0368275009;
		HEAPF[dsp + 18996 + (115 << 2) >> 2] = 0.128699005;
		HEAPF[dsp + 18996 + (116 << 2) >> 2] = 0.329605013;
		HEAPF[dsp + 18996 + (117 << 2) >> 2] = 0.374511987;
		HEAPF[dsp + 18996 + (118 << 2) >> 2] = 0.363590002;
		HEAPF[dsp + 18996 + (119 << 2) >> 2] = 0.272594005;
		HEAPF[dsp + 18996 + (120 << 2) >> 2] = 0.379052013;
		HEAPF[dsp + 18996 + (121 << 2) >> 2] = 0.305240989;
		HEAPF[dsp + 18996 + (122 << 2) >> 2] = 0.0741128996;
		HEAPF[dsp + 18996 + (123 << 2) >> 2] = 0.34572801;
		HEAPF[dsp + 18996 + (124 << 2) >> 2] = 0.299349993;
		HEAPF[dsp + 18996 + (125 << 2) >> 2] = 0.221284002;
		HEAPF[dsp + 18996 + (126 << 2) >> 2] = 0.0261390992;
		HEAPF[dsp + 18996 + (127 << 2) >> 2] = 0.293202013;
		HEAPF[dsp + 18996 + (128 << 2) >> 2] = 0.361885011;
		HEAPF[dsp + 18996 + (129 << 2) >> 2] = 0.114330001;
		HEAPF[dsp + 18996 + (130 << 2) >> 2] = 0.239004999;
		HEAPF[dsp + 18996 + (131 << 2) >> 2] = 0.434156001;
		HEAPF[dsp + 18996 + (132 << 2) >> 2] = 0.329582989;
		HEAPF[dsp + 18996 + (133 << 2) >> 2] = 0.219459996;
		HEAPF[dsp + 18996 + (134 << 2) >> 2] = 0.284175009;
		HEAPF[dsp + 18996 + (135 << 2) >> 2] = 0.198554993;
		HEAPF[dsp + 18996 + (136 << 2) >> 2] = 0.431975991;
		HEAPF[dsp + 18996 + (137 << 2) >> 2] = 0.302985013;
		HEAPF[dsp + 18996 + (138 << 2) >> 2] = 1.;
		HEAPF[dsp + 18996 + (139 << 2) >> 2] = 0.146220997;
		HEAPF[dsp + 18996 + (140 << 2) >> 2] = 0.140700996;
		HEAPF[dsp + 18996 + (141 << 2) >> 2] = 0.264243007;
		HEAPF[dsp + 18996 + (142 << 2) >> 2] = 0.185996994;
		HEAPF[dsp + 18996 + (143 << 2) >> 2] = 0.426322013;
		HEAPF[dsp + 18996 + (144 << 2) >> 2] = 0.304780006;
		HEAPF[dsp + 18996 + (145 << 2) >> 2] = 0.343989998;
		HEAPF[dsp + 18996 + (146 << 2) >> 2] = 0.195429996;
		HEAPF[dsp + 18996 + (147 << 2) >> 2] = 0.386954993;
		HEAPF[dsp + 18996 + (148 << 2) >> 2] = 0.187600002;
		HEAPF[dsp + 18996 + (149 << 2) >> 2] = 0.172812;
		HEAPF[dsp + 18996 + (150 << 2) >> 2] = 0.0434115008;
		HEAPF[dsp + 18996 + (151 << 2) >> 2] = 0.303761005;
		HEAPF[dsp + 18996 + (152 << 2) >> 2] = 0.0694539994;
		HEAPF[dsp + 18996 + (153 << 2) >> 2] = 0.453943014;
		HEAPF[dsp + 18996 + (154 << 2) >> 2] = 0.832450986;
		HEAPF[dsp + 18996 + (155 << 2) >> 2] = 0.317817003;
		HEAPF[dsp + 18996 + (156 << 2) >> 2] = 0.940600991;
		HEAPF[dsp + 18996 + (157 << 2) >> 2] = 1.;
		HEAPF[dsp + 18996 + (158 << 2) >> 2] = 0.180657998;
		HEAPF[dsp + 18996 + (159 << 2) >> 2] = 0.737921;
		HEAPF[dsp + 18996 + (160 << 2) >> 2] = 0.832297027;
		HEAPF[dsp + 18996 + (161 << 2) >> 2] = 0.402352005;
		HEAPF[dsp + 18996 + (162 << 2) >> 2] = 0.126785994;
		HEAPF[dsp + 18996 + (163 << 2) >> 2] = 0.594398022;
		HEAPF[dsp + 18996 + (164 << 2) >> 2] = 0.485455006;
		HEAPF[dsp + 18996 + (165 << 2) >> 2] = 0.324470013;
		HEAPF[dsp + 18996 + (166 << 2) >> 2] = 0.365101993;
		HEAPF[dsp + 18996 + (167 << 2) >> 2] = 0.777921975;
		HEAPF[dsp + 18996 + (168 << 2) >> 2] = 0.588271976;
		HEAPF[dsp + 18996 + (169 << 2) >> 2] = 0.401353002;
		HEAPF[dsp + 18996 + (170 << 2) >> 2] = 0.610734999;
		HEAPF[dsp + 18996 + (171 << 2) >> 2] = 0.158693001;
		HEAPF[dsp + 18996 + (172 << 2) >> 2] = 0.0746072009;
		HEAPF[dsp + 18996 + (173 << 2) >> 2] = 0.825098991;
		HEAPF[dsp + 18996 + (174 << 2) >> 2] = 0.925459027;
		HEAPF[dsp + 18996 + (175 << 2) >> 2] = 0.65377003;
		HEAPF[dsp + 18996 + (176 << 2) >> 2] = 0.260791987;
		HEAPF[dsp + 18996 + (177 << 2) >> 2] = 0.719384015;
		HEAPF[dsp + 18996 + (178 << 2) >> 2] = 0.559907973;
		HEAPF[dsp + 18996 + (179 << 2) >> 2] = 0.372590005;
		HEAPF[dsp + 18996 + (180 << 2) >> 2] = 0.360035002;
		HEAPF[dsp + 18996 + (181 << 2) >> 2] = 0.622938991;
		HEAPF[dsp + 18996 + (182 << 2) >> 2] = 0.210271001;
		HEAPF[dsp + 18996 + (183 << 2) >> 2] = 0.444595009;
		HEAPF[dsp + 18996 + (184 << 2) >> 2] = 0.311286002;
		HEAPF[dsp + 18996 + (185 << 2) >> 2] = 0.464309007;
		HEAPF[dsp + 18996 + (186 << 2) >> 2] = 0.557231009;
		HEAPF[dsp + 18996 + (187 << 2) >> 2] = 0.524079978;
		HEAPF[dsp + 18996 + (188 << 2) >> 2] = 0.0701055974;
		HEAPF[dsp + 18996 + (189 << 2) >> 2] = 0.320749015;
		HEAPF[dsp + 18996 + (190 << 2) >> 2] = 0.194460005;
		HEAPF[dsp + 18996 + (191 << 2) >> 2] = 0.727608979;
		HEAPF[dsp + 18996 + (192 << 2) >> 2] = 0.522062004;
		HEAPF[dsp + 18996 + (193 << 2) >> 2] = 0.394003987;
		HEAPF[dsp + 18996 + (194 << 2) >> 2] = 0.235035002;
		HEAPF[dsp + 18996 + (195 << 2) >> 2] = 0.395646006;
		HEAPF[dsp + 18996 + (196 << 2) >> 2] = 0.494796008;
		HEAPF[dsp + 18996 + (197 << 2) >> 2] = 0.51731801;
		HEAPF[dsp + 18996 + (198 << 2) >> 2] = 0.109751999;
		HEAPF[dsp + 18996 + (199 << 2) >> 2] = 0.69284898;
		HEAPF[dsp + 18996 + (200 << 2) >> 2] = 0.00632009003;
		HEAPF[dsp + 18996 + (201 << 2) >> 2] = 0.0207582992;
		HEAPF[dsp + 18996 + (202 << 2) >> 2] = 0.00306107011;
		HEAPF[dsp + 18996 + (203 << 2) >> 2] = 0.0637191013;
		HEAPF[dsp + 18996 + (204 << 2) >> 2] = 0.0816610008;
		HEAPF[dsp + 18996 + (205 << 2) >> 2] = 0.0351100005;
		HEAPF[dsp + 18996 + (206 << 2) >> 2] = 0.127813995;
		HEAPF[dsp + 18996 + (207 << 2) >> 2] = 0.202294007;
		HEAPF[dsp + 18996 + (208 << 2) >> 2] = 0.0764145032;
		HEAPF[dsp + 18996 + (209 << 2) >> 2] = 0.263126999;
		HEAPF[dsp + 18996 + (210 << 2) >> 2] = 0.400198996;
		HEAPF[dsp + 18996 + (211 << 2) >> 2] = 0.267277986;
		HEAPF[dsp + 18996 + (212 << 2) >> 2] = 0.633385003;
		HEAPF[dsp + 18996 + (213 << 2) >> 2] = 1.;
		HEAPF[dsp + 18996 + (214 << 2) >> 2] = 0.73990202;
		HEAPF[dsp + 18996 + (215 << 2) >> 2] = 0.413762987;
		HEAPF[dsp + 18996 + (216 << 2) >> 2] = 0.418110013;
		HEAPF[dsp + 18996 + (217 << 2) >> 2] = 0.612715006;
		HEAPF[dsp + 18996 + (218 << 2) >> 2] = 0.67237401;
		HEAPF[dsp + 18996 + (219 << 2) >> 2] = 0.339673996;
		HEAPF[dsp + 18996 + (220 << 2) >> 2] = 0.211720005;
		HEAPF[dsp + 18996 + (221 << 2) >> 2] = 0.459645003;
		HEAPF[dsp + 18996 + (222 << 2) >> 2] = 0.102499999;
		HEAPF[dsp + 18996 + (223 << 2) >> 2] = 0.325890005;
		HEAPF[dsp + 18996 + (224 << 2) >> 2] = 0.148154005;
		HEAPF[dsp + 18996 + (225 << 2) >> 2] = 0.265442014;
		HEAPF[dsp + 18996 + (226 << 2) >> 2] = 0.0974304974;
		HEAPF[dsp + 18996 + (227 << 2) >> 2] = 0.286437988;
		HEAPF[dsp + 18996 + (228 << 2) >> 2] = 0.275213003;
		HEAPF[dsp + 18996 + (229 << 2) >> 2] = 0.109111004;
		HEAPF[dsp + 18996 + (230 << 2) >> 2] = 0.575088978;
		HEAPF[dsp + 18996 + (231 << 2) >> 2] = 0.370283008;
		HEAPF[dsp + 18996 + (232 << 2) >> 2] = 0.29411;
		HEAPF[dsp + 18996 + (233 << 2) >> 2] = 0.259826005;
		HEAPF[dsp + 18996 + (234 << 2) >> 2] = 0.0648718998;
		HEAPF[dsp + 18996 + (235 << 2) >> 2] = 0.583418012;
		HEAPF[dsp + 18996 + (236 << 2) >> 2] = 0.282662988;
		HEAPF[dsp + 18996 + (237 << 2) >> 2] = 0.182004005;
		HEAPF[dsp + 18996 + (238 << 2) >> 2] = 0.117421001;
		HEAPF[dsp + 18996 + (239 << 2) >> 2] = 0.417726994;
		HEAPF[dsp + 18996 + (240 << 2) >> 2] = 0.169650003;
		HEAPF[dsp + 18996 + (241 << 2) >> 2] = 0.24853;
		HEAPF[dsp + 18996 + (242 << 2) >> 2] = 0.122818999;
		HEAPF[dsp + 18996 + (243 << 2) >> 2] = 0.185486004;
		HEAPF[dsp + 18996 + (244 << 2) >> 2] = 0.0433618017;
		HEAPF[dsp + 18996 + (245 << 2) >> 2] = 0.373849005;
		HEAPF[dsp + 18996 + (246 << 2) >> 2] = 0.25276801;
		HEAPF[dsp + 18996 + (247 << 2) >> 2] = 0.195103005;
		HEAPF[dsp + 18996 + (248 << 2) >> 2] = 0.0927835032;
		HEAPF[dsp + 18996 + (249 << 2) >> 2] = 0.166543007;
		HEAP32[dsp + 18992 >> 2] = 0;
		
	}
	
	function fillmydspSIG0(dsp, count, output) {
		dsp = dsp | 0;
		count = count | 0;
		output = output | 0;
		var i = 0;
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAPF[output + ((i | 0) << 2) >> 2] = +(HEAPF[dsp + 18996 + ((HEAP32[dsp + 18992 >> 2] | 0) << 2) >> 2]);
			HEAP32[dsp + 18992 >> 2] = ((((1 + (HEAP32[dsp + 18992 >> 2] | 0)) | 0) % 250) | 0);
			
		}
		
	}
	
	function getNumInputs(dsp) {
		dsp = dsp | 0;
		return 0;
	}
	
	function getNumOutputs(dsp) {
		dsp = dsp | 0;
		return 2;
	}
	
	function classInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceInitmydspSIG0(dsp, (samplingFreq | 0));
		fillmydspSIG0(dsp, 250, (dsp + 0 | 0));
		
	}
	
	function instanceConstants(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAP32[dsp + 1012 >> 2] = (samplingFreq | 0);
		HEAPF[dsp + 1016 >> 2] = +(min_f(192000., +(max_f(1., +((HEAP32[dsp + 1012 >> 2] | 0))))));
		HEAPF[dsp + 1020 >> 2] = +(0.00147058826 * +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9232 >> 2] = +(0.00882352982 * +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9252 >> 2] = +(+(0.5 * +(HEAPF[dsp + 1016 >> 2])) + -1.);
		HEAPF[dsp + 9264 >> 2] = +(3.14159274 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9272 >> 2] = +(tanf(+(31.415926 / +(HEAPF[dsp + 1016 >> 2]))));
		HEAPF[dsp + 9276 >> 2] = +(1. / +(HEAPF[dsp + 9272 >> 2]));
		HEAPF[dsp + 9280 >> 2] = +(1. / +(+(+(+(HEAPF[dsp + 9276 >> 2]) + 1.41421354) / +(HEAPF[dsp + 9272 >> 2])) + 1.));
		HEAPF[dsp + 9284 >> 2] = +(1. / +(powf(+(HEAPF[dsp + 9272 >> 2]), 2.)));
		HEAPF[dsp + 9296 >> 2] = +(+(+(+(HEAPF[dsp + 9276 >> 2]) + -1.41421354) / +(HEAPF[dsp + 9272 >> 2])) + 1.);
		HEAPF[dsp + 9300 >> 2] = +(2. * +(1. - +(HEAPF[dsp + 9284 >> 2])));
		HEAPF[dsp + 9316 >> 2] = +(2. * +(0. - +(HEAPF[dsp + 9284 >> 2])));
		HEAPF[dsp + 9344 >> 2] = +(0.00400000019 * +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9368 >> 2] = +(0.00200000009 * +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9372 >> 2] = +(500. / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9376 >> 2] = +(powf(0.00100000005, +(1. / +(2.61844324e-10 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9380 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9376 >> 2])));
		HEAPF[dsp + 9384 >> 2] = +(1207.56543 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9388 >> 2] = +(powf(+(HEAPF[dsp + 9376 >> 2]), 2.));
		HEAPF[dsp + 9404 >> 2] = +(powf(0.00100000005, +(1. / +(7.53835775e-05 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9408 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9404 >> 2])));
		HEAPF[dsp + 9412 >> 2] = +(938.946655 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9416 >> 2] = +(powf(+(HEAPF[dsp + 9404 >> 2]), 2.));
		HEAPF[dsp + 9432 >> 2] = +(powf(0.00100000005, +(1. / +(0.000124247395 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9436 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9432 >> 2])));
		HEAPF[dsp + 9440 >> 2] = +(908.228149 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9444 >> 2] = +(powf(+(HEAPF[dsp + 9432 >> 2]), 2.));
		HEAPF[dsp + 9460 >> 2] = +(powf(0.00100000005, +(1. / +(0.000329498813 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9464 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9460 >> 2])));
		HEAPF[dsp + 9468 >> 2] = +(838.660706 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9472 >> 2] = +(powf(+(HEAPF[dsp + 9460 >> 2]), 2.));
		HEAPF[dsp + 9488 >> 2] = +(powf(0.00100000005, +(1. / +(0.000362893392 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9492 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9488 >> 2])));
		HEAPF[dsp + 9496 >> 2] = +(831.007812 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9500 >> 2] = +(powf(+(HEAPF[dsp + 9488 >> 2]), 2.));
		HEAPF[dsp + 9516 >> 2] = +(powf(0.00100000005, +(1. / +(0.000432563043 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9520 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9516 >> 2])));
		HEAPF[dsp + 9524 >> 2] = +(816.700989 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9528 >> 2] = +(powf(+(HEAPF[dsp + 9516 >> 2]), 2.));
		HEAPF[dsp + 9544 >> 2] = +(powf(0.00100000005, +(1. / +(0.000537810789 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9548 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9544 >> 2])));
		HEAPF[dsp + 9552 >> 2] = +(798.247253 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9556 >> 2] = +(powf(+(HEAPF[dsp + 9544 >> 2]), 2.));
		HEAPF[dsp + 9572 >> 2] = +(powf(0.00100000005, +(1. / +(0.000912711956 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9576 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9572 >> 2])));
		HEAPF[dsp + 9580 >> 2] = +(749.935852 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9584 >> 2] = +(powf(+(HEAPF[dsp + 9572 >> 2]), 2.));
		HEAPF[dsp + 9600 >> 2] = +(powf(0.00100000005, +(1. / +(0.00129330496 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9604 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9600 >> 2])));
		HEAPF[dsp + 9608 >> 2] = +(715.18988 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9612 >> 2] = +(powf(+(HEAPF[dsp + 9600 >> 2]), 2.));
		HEAPF[dsp + 9628 >> 2] = +(powf(0.00100000005, +(1. / +(0.00143769139 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9632 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9628 >> 2])));
		HEAPF[dsp + 9636 >> 2] = +(704.150269 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9640 >> 2] = +(powf(+(HEAPF[dsp + 9628 >> 2]), 2.));
		HEAPF[dsp + 9656 >> 2] = +(powf(0.00100000005, +(1. / +(0.0015662252 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9660 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9656 >> 2])));
		HEAPF[dsp + 9664 >> 2] = +(695.045959 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9668 >> 2] = +(powf(+(HEAPF[dsp + 9656 >> 2]), 2.));
		HEAPF[dsp + 9684 >> 2] = +(powf(0.00100000005, +(1. / +(0.00320503488 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9688 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9684 >> 2])));
		HEAPF[dsp + 9692 >> 2] = +(612.489319 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9696 >> 2] = +(powf(+(HEAPF[dsp + 9684 >> 2]), 2.));
		HEAPF[dsp + 9712 >> 2] = +(powf(0.00100000005, +(1. / +(0.00359531236 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9716 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9712 >> 2])));
		HEAPF[dsp + 9720 >> 2] = +(598.105225 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9724 >> 2] = +(powf(+(HEAPF[dsp + 9712 >> 2]), 2.));
		HEAPF[dsp + 9740 >> 2] = +(powf(0.00100000005, +(1. / +(0.00401024008 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9744 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9740 >> 2])));
		HEAPF[dsp + 9748 >> 2] = +(584.12323 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9752 >> 2] = +(powf(+(HEAPF[dsp + 9740 >> 2]), 2.));
		HEAPF[dsp + 9768 >> 2] = +(powf(0.00100000005, +(1. / +(0.00462675327 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9772 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9768 >> 2])));
		HEAPF[dsp + 9776 >> 2] = +(565.34845 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9780 >> 2] = +(powf(+(HEAPF[dsp + 9768 >> 2]), 2.));
		HEAPF[dsp + 9796 >> 2] = +(powf(0.00100000005, +(1. / +(0.00699721137 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9800 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9796 >> 2])));
		HEAPF[dsp + 9804 >> 2] = +(507.916992 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9808 >> 2] = +(powf(+(HEAPF[dsp + 9796 >> 2]), 2.));
		HEAPF[dsp + 9824 >> 2] = +(powf(0.00100000005, +(1. / +(0.00767402584 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9828 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9824 >> 2])));
		HEAPF[dsp + 9832 >> 2] = +(494.436432 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9836 >> 2] = +(powf(+(HEAPF[dsp + 9824 >> 2]), 2.));
		HEAPF[dsp + 9852 >> 2] = +(powf(0.00100000005, +(1. / +(0.00913601927 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9856 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9852 >> 2])));
		HEAPF[dsp + 9860 >> 2] = +(468.286438 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9864 >> 2] = +(powf(+(HEAPF[dsp + 9852 >> 2]), 2.));
		HEAPF[dsp + 9880 >> 2] = +(powf(0.00100000005, +(1. / +(0.0123624494 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9884 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9880 >> 2])));
		HEAPF[dsp + 9888 >> 2] = +(420.713928 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9892 >> 2] = +(powf(+(HEAPF[dsp + 9880 >> 2]), 2.));
		HEAPF[dsp + 9908 >> 2] = +(powf(0.00100000005, +(1. / +(1.88244775e-09 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9912 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9908 >> 2])));
		HEAPF[dsp + 9916 >> 2] = +(1196.12366 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9920 >> 2] = +(powf(+(HEAPF[dsp + 9908 >> 2]), 2.));
		HEAPF[dsp + 9936 >> 2] = +(powf(0.00100000005, +(1. / +(4.53858888e-08 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9940 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9936 >> 2])));
		HEAPF[dsp + 9944 >> 2] = +(1164.89001 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9948 >> 2] = +(powf(+(HEAPF[dsp + 9936 >> 2]), 2.));
		HEAPF[dsp + 9964 >> 2] = +(powf(0.00100000005, +(1. / +(2.19791588e-07 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9968 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9964 >> 2])));
		HEAPF[dsp + 9972 >> 2] = +(1140.28503 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 9976 >> 2] = +(powf(+(HEAPF[dsp + 9964 >> 2]), 2.));
		HEAPF[dsp + 9992 >> 2] = +(powf(0.00100000005, +(1. / +(1.5867239e-06 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 9996 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 9992 >> 2])));
		HEAPF[dsp + 10000 >> 2] = +(1096.1897 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10004 >> 2] = +(powf(+(HEAPF[dsp + 9992 >> 2]), 2.));
		HEAPF[dsp + 10020 >> 2] = +(powf(0.00100000005, +(1. / +(2.80919903e-06 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10024 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10020 >> 2])));
		HEAPF[dsp + 10028 >> 2] = +(1079.84705 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10032 >> 2] = +(powf(+(HEAPF[dsp + 10020 >> 2]), 2.));
		HEAPF[dsp + 10048 >> 2] = +(powf(0.00100000005, +(1. / +(0.0974743068 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10052 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10048 >> 2])));
		HEAPF[dsp + 10056 >> 2] = +(6.28318548 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10060 >> 2] = +(powf(+(HEAPF[dsp + 10048 >> 2]), 2.));
		HEAPF[dsp + 10076 >> 2] = +(powf(0.00100000005, +(1. / +(0.0918262452 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10080 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10076 >> 2])));
		HEAPF[dsp + 10084 >> 2] = +(20.8197117 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10088 >> 2] = +(powf(+(HEAPF[dsp + 10076 >> 2]), 2.));
		HEAPF[dsp + 10104 >> 2] = +(powf(0.00100000005, +(1. / +(0.0905909166 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10108 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10104 >> 2])));
		HEAPF[dsp + 10112 >> 2] = +(24.0940685 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10116 >> 2] = +(powf(+(HEAPF[dsp + 10104 >> 2]), 2.));
		HEAPF[dsp + 10132 >> 2] = +(powf(0.00100000005, +(1. / +(0.0810509697 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10136 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10132 >> 2])));
		HEAPF[dsp + 10140 >> 2] = +(50.6621399 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10144 >> 2] = +(powf(+(HEAPF[dsp + 10132 >> 2]), 2.));
		HEAPF[dsp + 10160 >> 2] = +(powf(0.00100000005, +(1. / +(0.0781081766 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10164 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10160 >> 2])));
		HEAPF[dsp + 10168 >> 2] = +(59.3621521 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10172 >> 2] = +(powf(+(HEAPF[dsp + 10160 >> 2]), 2.));
		HEAPF[dsp + 10188 >> 2] = +(powf(0.00100000005, +(1. / +(0.0688085929 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10192 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10188 >> 2])));
		HEAPF[dsp + 10196 >> 2] = +(88.6990967 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10200 >> 2] = +(powf(+(HEAPF[dsp + 10188 >> 2]), 2.));
		HEAPF[dsp + 10216 >> 2] = +(powf(0.00100000005, +(1. / +(0.0611052401 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10220 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10216 >> 2])));
		HEAPF[dsp + 10224 >> 2] = +(115.510078 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10228 >> 2] = +(powf(+(HEAPF[dsp + 10216 >> 2]), 2.));
		HEAPF[dsp + 10244 >> 2] = +(powf(0.00100000005, +(1. / +(0.0567183308 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10248 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10244 >> 2])));
		HEAPF[dsp + 10252 >> 2] = +(132.010986 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10256 >> 2] = +(powf(+(HEAPF[dsp + 10244 >> 2]), 2.));
		HEAPF[dsp + 10272 >> 2] = +(powf(0.00100000005, +(1. / +(0.0488223769 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10276 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10272 >> 2])));
		HEAPF[dsp + 10280 >> 2] = +(164.478088 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10284 >> 2] = +(powf(+(HEAPF[dsp + 10272 >> 2]), 2.));
		HEAPF[dsp + 10300 >> 2] = +(powf(0.00100000005, +(1. / +(0.0449043326 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10304 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10300 >> 2])));
		HEAPF[dsp + 10308 >> 2] = +(182.177185 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10312 >> 2] = +(powf(+(HEAPF[dsp + 10300 >> 2]), 2.));
		HEAPF[dsp + 10328 >> 2] = +(powf(0.00100000005, +(1. / +(0.0350424498 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10332 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10328 >> 2])));
		HEAPF[dsp + 10336 >> 2] = +(232.935272 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10340 >> 2] = +(powf(+(HEAPF[dsp + 10328 >> 2]), 2.));
		HEAPF[dsp + 10356 >> 2] = +(powf(0.00100000005, +(1. / +(0.0341717675 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10360 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10356 >> 2])));
		HEAPF[dsp + 10364 >> 2] = +(237.946106 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10368 >> 2] = +(powf(+(HEAPF[dsp + 10356 >> 2]), 2.));
		HEAPF[dsp + 10384 >> 2] = +(powf(0.00100000005, +(1. / +(0.031866312 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10388 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10384 >> 2])));
		HEAPF[dsp + 10392 >> 2] = +(251.725769 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10396 >> 2] = +(powf(+(HEAPF[dsp + 10384 >> 2]), 2.));
		HEAPF[dsp + 10412 >> 2] = +(powf(0.00100000005, +(1. / +(0.0248362795 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10416 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10412 >> 2])));
		HEAPF[dsp + 10420 >> 2] = +(299.355438 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10424 >> 2] = +(powf(+(HEAPF[dsp + 10412 >> 2]), 2.));
		HEAPF[dsp + 10440 >> 2] = +(powf(0.00100000005, +(1. / +(0.0221360233 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10444 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10440 >> 2])));
		HEAPF[dsp + 10448 >> 2] = +(320.561829 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10452 >> 2] = +(powf(+(HEAPF[dsp + 10440 >> 2]), 2.));
		HEAPF[dsp + 10468 >> 2] = +(powf(0.00100000005, +(1. / +(0.0210792925 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10472 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10468 >> 2])));
		HEAPF[dsp + 10476 >> 2] = +(329.427399 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10480 >> 2] = +(powf(+(HEAPF[dsp + 10468 >> 2]), 2.));
		HEAPF[dsp + 10496 >> 2] = +(powf(0.00100000005, +(1. / +(0.0171158724 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10500 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10496 >> 2])));
		HEAPF[dsp + 10504 >> 2] = +(366.221741 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10508 >> 2] = +(powf(+(HEAPF[dsp + 10496 >> 2]), 2.));
		HEAPF[dsp + 10524 >> 2] = +(powf(0.00100000005, +(1. / +(0.0140852043 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10528 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10524 >> 2])));
		HEAPF[dsp + 10532 >> 2] = +(399.287628 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10536 >> 2] = +(powf(+(HEAPF[dsp + 10524 >> 2]), 2.));
		HEAPF[dsp + 10552 >> 2] = +(powf(0.00100000005, +(1. / +(5.65755508e-05 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10556 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10552 >> 2])));
		HEAPF[dsp + 10560 >> 2] = +(955.251526 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10564 >> 2] = +(powf(+(HEAPF[dsp + 10552 >> 2]), 2.));
		HEAPF[dsp + 10580 >> 2] = +(powf(0.00100000005, +(1. / +(4.96453904e-05 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10584 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10580 >> 2])));
		HEAPF[dsp + 10588 >> 2] = +(962.370361 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10592 >> 2] = +(powf(+(HEAPF[dsp + 10580 >> 2]), 2.));
		HEAPF[dsp + 10608 >> 2] = +(powf(0.00100000005, +(1. / +(3.7056674e-05 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10612 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10608 >> 2])));
		HEAPF[dsp + 10616 >> 2] = +(977.644775 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10620 >> 2] = +(powf(+(HEAPF[dsp + 10608 >> 2]), 2.));
		HEAPF[dsp + 10636 >> 2] = +(powf(0.00100000005, +(1. / +(2.66114275e-05 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10640 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10636 >> 2])));
		HEAPF[dsp + 10644 >> 2] = +(993.893127 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10648 >> 2] = +(powf(+(HEAPF[dsp + 10636 >> 2]), 2.));
		HEAPF[dsp + 10664 >> 2] = +(powf(0.00100000005, +(1. / +(5.79888183e-06 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10668 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10664 >> 2])));
		HEAPF[dsp + 10672 >> 2] = +(1056.23486 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10676 >> 2] = +(powf(+(HEAPF[dsp + 10664 >> 2]), 2.));
		HEAPF[dsp + 10692 >> 2] = +(powf(0.00100000005, +(1. / +(4.94038545e-07 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10696 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10692 >> 2])));
		HEAPF[dsp + 10700 >> 2] = +(1124.29431 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10704 >> 2] = +(powf(+(HEAPF[dsp + 10692 >> 2]), 2.));
		HEAPF[dsp + 10720 >> 2] = +(powf(0.00100000005, +(1. / +(0.0131463278 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10724 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10720 >> 2])));
		HEAPF[dsp + 10728 >> 2] = +(410.686584 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10732 >> 2] = +(powf(+(HEAPF[dsp + 10720 >> 2]), 2.));
		HEAPF[dsp + 10748 >> 2] = +(powf(0.00100000005, +(1. / +(6.3867631e-15 * +(HEAPF[dsp + 1016 >> 2])))));
		HEAPF[dsp + 10752 >> 2] = +(0. - +(2. * +(HEAPF[dsp + 10748 >> 2])));
		HEAPF[dsp + 10756 >> 2] = +(1228.39417 / +(HEAPF[dsp + 1016 >> 2]));
		HEAPF[dsp + 10760 >> 2] = +(powf(+(HEAPF[dsp + 10748 >> 2]), 2.));
		
	}
	
	function instanceResetUserInterface(dsp) {
		dsp = dsp | 0;
		HEAPF[dsp + 1000 >> 2] = 0.800000012;
		HEAPF[dsp + 1024 >> 2] = 440.;
		HEAPF[dsp + 9256 >> 2] = 0.;
		HEAPF[dsp + 9260 >> 2] = 1.;
		HEAPF[dsp + 9268 >> 2] = 6500.;
		HEAPF[dsp + 9332 >> 2] = 0.;
		HEAPF[dsp + 9348 >> 2] = 0.5;
		
	}
	
	function instanceClear(dsp) {
		dsp = dsp | 0;
		var l0 = 0;
		var l1 = 0;
		var l2 = 0;
		var l3 = 0;
		var l4 = 0;
		var l5 = 0;
		var l6 = 0;
		var l7 = 0;
		var l8 = 0;
		var l9 = 0;
		var l10 = 0;
		var l11 = 0;
		var l12 = 0;
		var l13 = 0;
		var l14 = 0;
		var l15 = 0;
		var l16 = 0;
		var l17 = 0;
		var l18 = 0;
		var l19 = 0;
		var l20 = 0;
		var l21 = 0;
		var l22 = 0;
		var l23 = 0;
		var l24 = 0;
		var l25 = 0;
		var l26 = 0;
		var l27 = 0;
		var l28 = 0;
		var l29 = 0;
		var l30 = 0;
		var l31 = 0;
		var l32 = 0;
		var l33 = 0;
		var l34 = 0;
		var l35 = 0;
		var l36 = 0;
		var l37 = 0;
		var l38 = 0;
		var l39 = 0;
		var l40 = 0;
		var l41 = 0;
		var l42 = 0;
		var l43 = 0;
		var l44 = 0;
		var l45 = 0;
		var l46 = 0;
		var l47 = 0;
		var l48 = 0;
		var l49 = 0;
		var l50 = 0;
		var l51 = 0;
		var l52 = 0;
		var l53 = 0;
		var l54 = 0;
		var l55 = 0;
		var l56 = 0;
		var l57 = 0;
		var l58 = 0;
		var l59 = 0;
		var l60 = 0;
		var l61 = 0;
		var l62 = 0;
		var l63 = 0;
		var l64 = 0;
		for (l0 = 0; (((l0 | 0) < 2) | 0); l0 = (((l0 | 0) + 1) | 0)) {
			HEAP32[dsp + 1004 + ((l0 | 0) << 2) >> 2] = 0;
			
		}
		for (l1 = 0; (((l1 | 0) < 2) | 0); l1 = (((l1 | 0) + 1) | 0)) {
			HEAPF[dsp + 1028 + ((l1 | 0) << 2) >> 2] = 0.;
			
		}
		HEAP32[dsp + 1036 >> 2] = 0;
		for (l2 = 0; (((l2 | 0) < 2048) | 0); l2 = (((l2 | 0) + 1) | 0)) {
			HEAPF[dsp + 1040 + ((l2 | 0) << 2) >> 2] = 0.;
			
		}
		for (l3 = 0; (((l3 | 0) < 2) | 0); l3 = (((l3 | 0) + 1) | 0)) {
			HEAPF[dsp + 9236 + ((l3 | 0) << 2) >> 2] = 0.;
			
		}
		for (l4 = 0; (((l4 | 0) < 2) | 0); l4 = (((l4 | 0) + 1) | 0)) {
			HEAPF[dsp + 9244 + ((l4 | 0) << 2) >> 2] = 0.;
			
		}
		for (l5 = 0; (((l5 | 0) < 2) | 0); l5 = (((l5 | 0) + 1) | 0)) {
			HEAP32[dsp + 9288 + ((l5 | 0) << 2) >> 2] = 0;
			
		}
		for (l6 = 0; (((l6 | 0) < 3) | 0); l6 = (((l6 | 0) + 1) | 0)) {
			HEAPF[dsp + 9304 + ((l6 | 0) << 2) >> 2] = 0.;
			
		}
		for (l7 = 0; (((l7 | 0) < 3) | 0); l7 = (((l7 | 0) + 1) | 0)) {
			HEAPF[dsp + 9320 + ((l7 | 0) << 2) >> 2] = 0.;
			
		}
		for (l8 = 0; (((l8 | 0) < 2) | 0); l8 = (((l8 | 0) + 1) | 0)) {
			HEAPF[dsp + 9336 + ((l8 | 0) << 2) >> 2] = 0.;
			
		}
		for (l9 = 0; (((l9 | 0) < 2) | 0); l9 = (((l9 | 0) + 1) | 0)) {
			HEAPF[dsp + 9352 + ((l9 | 0) << 2) >> 2] = 0.;
			
		}
		for (l10 = 0; (((l10 | 0) < 2) | 0); l10 = (((l10 | 0) + 1) | 0)) {
			HEAPF[dsp + 9360 + ((l10 | 0) << 2) >> 2] = 0.;
			
		}
		for (l11 = 0; (((l11 | 0) < 3) | 0); l11 = (((l11 | 0) + 1) | 0)) {
			HEAPF[dsp + 9392 + ((l11 | 0) << 2) >> 2] = 0.;
			
		}
		for (l12 = 0; (((l12 | 0) < 3) | 0); l12 = (((l12 | 0) + 1) | 0)) {
			HEAPF[dsp + 9420 + ((l12 | 0) << 2) >> 2] = 0.;
			
		}
		for (l13 = 0; (((l13 | 0) < 3) | 0); l13 = (((l13 | 0) + 1) | 0)) {
			HEAPF[dsp + 9448 + ((l13 | 0) << 2) >> 2] = 0.;
			
		}
		for (l14 = 0; (((l14 | 0) < 3) | 0); l14 = (((l14 | 0) + 1) | 0)) {
			HEAPF[dsp + 9476 + ((l14 | 0) << 2) >> 2] = 0.;
			
		}
		for (l15 = 0; (((l15 | 0) < 3) | 0); l15 = (((l15 | 0) + 1) | 0)) {
			HEAPF[dsp + 9504 + ((l15 | 0) << 2) >> 2] = 0.;
			
		}
		for (l16 = 0; (((l16 | 0) < 3) | 0); l16 = (((l16 | 0) + 1) | 0)) {
			HEAPF[dsp + 9532 + ((l16 | 0) << 2) >> 2] = 0.;
			
		}
		for (l17 = 0; (((l17 | 0) < 3) | 0); l17 = (((l17 | 0) + 1) | 0)) {
			HEAPF[dsp + 9560 + ((l17 | 0) << 2) >> 2] = 0.;
			
		}
		for (l18 = 0; (((l18 | 0) < 3) | 0); l18 = (((l18 | 0) + 1) | 0)) {
			HEAPF[dsp + 9588 + ((l18 | 0) << 2) >> 2] = 0.;
			
		}
		for (l19 = 0; (((l19 | 0) < 3) | 0); l19 = (((l19 | 0) + 1) | 0)) {
			HEAPF[dsp + 9616 + ((l19 | 0) << 2) >> 2] = 0.;
			
		}
		for (l20 = 0; (((l20 | 0) < 3) | 0); l20 = (((l20 | 0) + 1) | 0)) {
			HEAPF[dsp + 9644 + ((l20 | 0) << 2) >> 2] = 0.;
			
		}
		for (l21 = 0; (((l21 | 0) < 3) | 0); l21 = (((l21 | 0) + 1) | 0)) {
			HEAPF[dsp + 9672 + ((l21 | 0) << 2) >> 2] = 0.;
			
		}
		for (l22 = 0; (((l22 | 0) < 3) | 0); l22 = (((l22 | 0) + 1) | 0)) {
			HEAPF[dsp + 9700 + ((l22 | 0) << 2) >> 2] = 0.;
			
		}
		for (l23 = 0; (((l23 | 0) < 3) | 0); l23 = (((l23 | 0) + 1) | 0)) {
			HEAPF[dsp + 9728 + ((l23 | 0) << 2) >> 2] = 0.;
			
		}
		for (l24 = 0; (((l24 | 0) < 3) | 0); l24 = (((l24 | 0) + 1) | 0)) {
			HEAPF[dsp + 9756 + ((l24 | 0) << 2) >> 2] = 0.;
			
		}
		for (l25 = 0; (((l25 | 0) < 3) | 0); l25 = (((l25 | 0) + 1) | 0)) {
			HEAPF[dsp + 9784 + ((l25 | 0) << 2) >> 2] = 0.;
			
		}
		for (l26 = 0; (((l26 | 0) < 3) | 0); l26 = (((l26 | 0) + 1) | 0)) {
			HEAPF[dsp + 9812 + ((l26 | 0) << 2) >> 2] = 0.;
			
		}
		for (l27 = 0; (((l27 | 0) < 3) | 0); l27 = (((l27 | 0) + 1) | 0)) {
			HEAPF[dsp + 9840 + ((l27 | 0) << 2) >> 2] = 0.;
			
		}
		for (l28 = 0; (((l28 | 0) < 3) | 0); l28 = (((l28 | 0) + 1) | 0)) {
			HEAPF[dsp + 9868 + ((l28 | 0) << 2) >> 2] = 0.;
			
		}
		for (l29 = 0; (((l29 | 0) < 3) | 0); l29 = (((l29 | 0) + 1) | 0)) {
			HEAPF[dsp + 9896 + ((l29 | 0) << 2) >> 2] = 0.;
			
		}
		for (l30 = 0; (((l30 | 0) < 3) | 0); l30 = (((l30 | 0) + 1) | 0)) {
			HEAPF[dsp + 9924 + ((l30 | 0) << 2) >> 2] = 0.;
			
		}
		for (l31 = 0; (((l31 | 0) < 3) | 0); l31 = (((l31 | 0) + 1) | 0)) {
			HEAPF[dsp + 9952 + ((l31 | 0) << 2) >> 2] = 0.;
			
		}
		for (l32 = 0; (((l32 | 0) < 3) | 0); l32 = (((l32 | 0) + 1) | 0)) {
			HEAPF[dsp + 9980 + ((l32 | 0) << 2) >> 2] = 0.;
			
		}
		for (l33 = 0; (((l33 | 0) < 3) | 0); l33 = (((l33 | 0) + 1) | 0)) {
			HEAPF[dsp + 10008 + ((l33 | 0) << 2) >> 2] = 0.;
			
		}
		for (l34 = 0; (((l34 | 0) < 3) | 0); l34 = (((l34 | 0) + 1) | 0)) {
			HEAPF[dsp + 10036 + ((l34 | 0) << 2) >> 2] = 0.;
			
		}
		for (l35 = 0; (((l35 | 0) < 3) | 0); l35 = (((l35 | 0) + 1) | 0)) {
			HEAPF[dsp + 10064 + ((l35 | 0) << 2) >> 2] = 0.;
			
		}
		for (l36 = 0; (((l36 | 0) < 3) | 0); l36 = (((l36 | 0) + 1) | 0)) {
			HEAPF[dsp + 10092 + ((l36 | 0) << 2) >> 2] = 0.;
			
		}
		for (l37 = 0; (((l37 | 0) < 3) | 0); l37 = (((l37 | 0) + 1) | 0)) {
			HEAPF[dsp + 10120 + ((l37 | 0) << 2) >> 2] = 0.;
			
		}
		for (l38 = 0; (((l38 | 0) < 3) | 0); l38 = (((l38 | 0) + 1) | 0)) {
			HEAPF[dsp + 10148 + ((l38 | 0) << 2) >> 2] = 0.;
			
		}
		for (l39 = 0; (((l39 | 0) < 3) | 0); l39 = (((l39 | 0) + 1) | 0)) {
			HEAPF[dsp + 10176 + ((l39 | 0) << 2) >> 2] = 0.;
			
		}
		for (l40 = 0; (((l40 | 0) < 3) | 0); l40 = (((l40 | 0) + 1) | 0)) {
			HEAPF[dsp + 10204 + ((l40 | 0) << 2) >> 2] = 0.;
			
		}
		for (l41 = 0; (((l41 | 0) < 3) | 0); l41 = (((l41 | 0) + 1) | 0)) {
			HEAPF[dsp + 10232 + ((l41 | 0) << 2) >> 2] = 0.;
			
		}
		for (l42 = 0; (((l42 | 0) < 3) | 0); l42 = (((l42 | 0) + 1) | 0)) {
			HEAPF[dsp + 10260 + ((l42 | 0) << 2) >> 2] = 0.;
			
		}
		for (l43 = 0; (((l43 | 0) < 3) | 0); l43 = (((l43 | 0) + 1) | 0)) {
			HEAPF[dsp + 10288 + ((l43 | 0) << 2) >> 2] = 0.;
			
		}
		for (l44 = 0; (((l44 | 0) < 3) | 0); l44 = (((l44 | 0) + 1) | 0)) {
			HEAPF[dsp + 10316 + ((l44 | 0) << 2) >> 2] = 0.;
			
		}
		for (l45 = 0; (((l45 | 0) < 3) | 0); l45 = (((l45 | 0) + 1) | 0)) {
			HEAPF[dsp + 10344 + ((l45 | 0) << 2) >> 2] = 0.;
			
		}
		for (l46 = 0; (((l46 | 0) < 3) | 0); l46 = (((l46 | 0) + 1) | 0)) {
			HEAPF[dsp + 10372 + ((l46 | 0) << 2) >> 2] = 0.;
			
		}
		for (l47 = 0; (((l47 | 0) < 3) | 0); l47 = (((l47 | 0) + 1) | 0)) {
			HEAPF[dsp + 10400 + ((l47 | 0) << 2) >> 2] = 0.;
			
		}
		for (l48 = 0; (((l48 | 0) < 3) | 0); l48 = (((l48 | 0) + 1) | 0)) {
			HEAPF[dsp + 10428 + ((l48 | 0) << 2) >> 2] = 0.;
			
		}
		for (l49 = 0; (((l49 | 0) < 3) | 0); l49 = (((l49 | 0) + 1) | 0)) {
			HEAPF[dsp + 10456 + ((l49 | 0) << 2) >> 2] = 0.;
			
		}
		for (l50 = 0; (((l50 | 0) < 3) | 0); l50 = (((l50 | 0) + 1) | 0)) {
			HEAPF[dsp + 10484 + ((l50 | 0) << 2) >> 2] = 0.;
			
		}
		for (l51 = 0; (((l51 | 0) < 3) | 0); l51 = (((l51 | 0) + 1) | 0)) {
			HEAPF[dsp + 10512 + ((l51 | 0) << 2) >> 2] = 0.;
			
		}
		for (l52 = 0; (((l52 | 0) < 3) | 0); l52 = (((l52 | 0) + 1) | 0)) {
			HEAPF[dsp + 10540 + ((l52 | 0) << 2) >> 2] = 0.;
			
		}
		for (l53 = 0; (((l53 | 0) < 3) | 0); l53 = (((l53 | 0) + 1) | 0)) {
			HEAPF[dsp + 10568 + ((l53 | 0) << 2) >> 2] = 0.;
			
		}
		for (l54 = 0; (((l54 | 0) < 3) | 0); l54 = (((l54 | 0) + 1) | 0)) {
			HEAPF[dsp + 10596 + ((l54 | 0) << 2) >> 2] = 0.;
			
		}
		for (l55 = 0; (((l55 | 0) < 3) | 0); l55 = (((l55 | 0) + 1) | 0)) {
			HEAPF[dsp + 10624 + ((l55 | 0) << 2) >> 2] = 0.;
			
		}
		for (l56 = 0; (((l56 | 0) < 3) | 0); l56 = (((l56 | 0) + 1) | 0)) {
			HEAPF[dsp + 10652 + ((l56 | 0) << 2) >> 2] = 0.;
			
		}
		for (l57 = 0; (((l57 | 0) < 3) | 0); l57 = (((l57 | 0) + 1) | 0)) {
			HEAPF[dsp + 10680 + ((l57 | 0) << 2) >> 2] = 0.;
			
		}
		for (l58 = 0; (((l58 | 0) < 3) | 0); l58 = (((l58 | 0) + 1) | 0)) {
			HEAPF[dsp + 10708 + ((l58 | 0) << 2) >> 2] = 0.;
			
		}
		for (l59 = 0; (((l59 | 0) < 3) | 0); l59 = (((l59 | 0) + 1) | 0)) {
			HEAPF[dsp + 10736 + ((l59 | 0) << 2) >> 2] = 0.;
			
		}
		for (l60 = 0; (((l60 | 0) < 3) | 0); l60 = (((l60 | 0) + 1) | 0)) {
			HEAPF[dsp + 10764 + ((l60 | 0) << 2) >> 2] = 0.;
			
		}
		for (l61 = 0; (((l61 | 0) < 2) | 0); l61 = (((l61 | 0) + 1) | 0)) {
			HEAPF[dsp + 10776 + ((l61 | 0) << 2) >> 2] = 0.;
			
		}
		for (l62 = 0; (((l62 | 0) < 2048) | 0); l62 = (((l62 | 0) + 1) | 0)) {
			HEAPF[dsp + 10784 + ((l62 | 0) << 2) >> 2] = 0.;
			
		}
		for (l63 = 0; (((l63 | 0) < 2) | 0); l63 = (((l63 | 0) + 1) | 0)) {
			HEAPF[dsp + 18976 + ((l63 | 0) << 2) >> 2] = 0.;
			
		}
		for (l64 = 0; (((l64 | 0) < 2) | 0); l64 = (((l64 | 0) + 1) | 0)) {
			HEAPF[dsp + 18984 + ((l64 | 0) << 2) >> 2] = 0.;
			
		}
		
	}
	
	function init(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		classInit(dsp, samplingFreq);
		instanceInit(dsp, samplingFreq);
	}
	
	function instanceInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceConstants(dsp, samplingFreq);
		instanceResetUserInterface(dsp);
		instanceClear(dsp);
	}
	
	function getSampleRate(dsp) {
		dsp = dsp | 0;
		return HEAP32[dsp + 1012 >> 2] | 0;
	}
	
	function setParamValue(dsp, offset, value) {
		dsp = dsp | 0;
		offset = offset | 0;
		value = +value;
		HEAPF[dsp + offset >> 2] = value;
	}
	
	function getParamValue(dsp, offset) {
		dsp = dsp | 0;
		offset = offset | 0;
		return +(HEAPF[dsp + offset >> 2]);
	}
	
	function compute(dsp, count, inputs, outputs) {
		dsp = dsp | 0;
		count = count | 0;
		inputs = inputs | 0;
		outputs = outputs | 0;
		var output0 = 0;
		var output1 = 0;
		var fSlow0 = 0.;
		var fSlow1 = 0.;
		var fSlow2 = 0.;
		var fSlow3 = 0.;
		var fSlow4 = 0.;
		var fSlow5 = 0.;
		var fSlow6 = 0.;
		var fSlow7 = 0.;
		var fSlow8 = 0.;
		var fSlow9 = 0.;
		var iSlow10 = 0;
		var iSlow11 = 0;
		var fSlow12 = 0.;
		var fSlow13 = 0.;
		var iSlow14 = 0;
		var fSlow15 = 0.;
		var iSlow16 = 0;
		var fSlow17 = 0.;
		var fSlow18 = 0.;
		var iSlow19 = 0;
		var fSlow20 = 0.;
		var iSlow21 = 0;
		var iSlow22 = 0;
		var fSlow23 = 0.;
		var fSlow24 = 0.;
		var fSlow25 = 0.;
		var fSlow26 = 0.;
		var fSlow27 = 0.;
		var fSlow28 = 0.;
		var fSlow29 = 0.;
		var fSlow30 = 0.;
		var fSlow31 = 0.;
		var fSlow32 = 0.;
		var fSlow33 = 0.;
		var fSlow34 = 0.;
		var fSlow35 = 0.;
		var fSlow36 = 0.;
		var fSlow37 = 0.;
		var fSlow38 = 0.;
		var fSlow39 = 0.;
		var fSlow40 = 0.;
		var fSlow41 = 0.;
		var fSlow42 = 0.;
		var fSlow43 = 0.;
		var fSlow44 = 0.;
		var fSlow45 = 0.;
		var fSlow46 = 0.;
		var fSlow47 = 0.;
		var fSlow48 = 0.;
		var fSlow49 = 0.;
		var fSlow50 = 0.;
		var fSlow51 = 0.;
		var fSlow52 = 0.;
		var fSlow53 = 0.;
		var fSlow54 = 0.;
		var fSlow55 = 0.;
		var fSlow56 = 0.;
		var fSlow57 = 0.;
		var fSlow58 = 0.;
		var fSlow59 = 0.;
		var fSlow60 = 0.;
		var fSlow61 = 0.;
		var fSlow62 = 0.;
		var fSlow63 = 0.;
		var fSlow64 = 0.;
		var fSlow65 = 0.;
		var fSlow66 = 0.;
		var fSlow67 = 0.;
		var fSlow68 = 0.;
		var fSlow69 = 0.;
		var fSlow70 = 0.;
		var fSlow71 = 0.;
		var fSlow72 = 0.;
		var fSlow73 = 0.;
		var fSlow74 = 0.;
		var fSlow75 = 0.;
		var fSlow76 = 0.;
		var fSlow77 = 0.;
		var fSlow78 = 0.;
		var fSlow79 = 0.;
		var fSlow80 = 0.;
		var fSlow81 = 0.;
		var fSlow82 = 0.;
		var fSlow83 = 0.;
		var fSlow84 = 0.;
		var fSlow85 = 0.;
		var fSlow86 = 0.;
		var fSlow87 = 0.;
		var fSlow88 = 0.;
		var fSlow89 = 0.;
		var fSlow90 = 0.;
		var fSlow91 = 0.;
		var fSlow92 = 0.;
		var fSlow93 = 0.;
		var fSlow94 = 0.;
		var fSlow95 = 0.;
		var fSlow96 = 0.;
		var fSlow97 = 0.;
		var fSlow98 = 0.;
		var fSlow99 = 0.;
		var fSlow100 = 0.;
		var fSlow101 = 0.;
		var fSlow102 = 0.;
		var fSlow103 = 0.;
		var fSlow104 = 0.;
		var fSlow105 = 0.;
		var fSlow106 = 0.;
		var fSlow107 = 0.;
		var fSlow108 = 0.;
		var fSlow109 = 0.;
		var fSlow110 = 0.;
		var fSlow111 = 0.;
		var fSlow112 = 0.;
		var fSlow113 = 0.;
		var fSlow114 = 0.;
		var fSlow115 = 0.;
		var fSlow116 = 0.;
		var fSlow117 = 0.;
		var fSlow118 = 0.;
		var fSlow119 = 0.;
		var fSlow120 = 0.;
		var fSlow121 = 0.;
		var fSlow122 = 0.;
		var fSlow123 = 0.;
		var fSlow124 = 0.;
		var fSlow125 = 0.;
		var fSlow126 = 0.;
		var fSlow127 = 0.;
		var fSlow128 = 0.;
		var fSlow129 = 0.;
		var fSlow130 = 0.;
		var fSlow131 = 0.;
		var fSlow132 = 0.;
		var fSlow133 = 0.;
		var fSlow134 = 0.;
		var i = 0;
		var fTemp0 = 0.;
		var iTemp1 = 0;
		var fTemp2 = 0.;
		var fTemp3 = 0.;
		var fTemp4 = 0.;
		var iRec8 = 0;
		var fRec3 = 0.;
		var fRec4 = 0.;
		var fRec5 = 0.;
		var fRec1 = 0.;
		var fTemp5 = 0.;
		output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);
		output1 = (HEAP32[outputs + (1 << 2) >> 2] | 0);
		fSlow0 = +(+(HEAPF[dsp + 1000 >> 2]));
		fSlow1 = +(+(HEAPF[dsp + 1024 >> 2]));
		fSlow2 = +(+(HEAPF[dsp + 1020 >> 2]) * +(+(340. / +(fSlow1)) + -0.0399999991));
		fSlow3 = +(+(fSlow2) + -1.49999499);
		fSlow4 = +(floorf(+(fSlow3)));
		fSlow5 = +(+(fSlow2) + +(-1. - +(fSlow4)));
		fSlow6 = +(+(fSlow2) + +(-2. - +(fSlow4)));
		fSlow7 = +(+(fSlow2) + +(-3. - +(fSlow4)));
		fSlow8 = +(+(fSlow2) + +(-4. - +(fSlow4)));
		fSlow9 = +(+(+(+(0. - +(fSlow5)) * +(0. - +(0.5 * +(fSlow6)))) * +(0. - +(0.333333343 * +(fSlow7)))) * +(0. - +(0.25 * +(fSlow8))));
		iSlow10 = ~~(+(fSlow3));
		iSlow11 = ~~(+(min_f(+(HEAPF[dsp + 9232 >> 2]), +(((max_i(0, (iSlow10 | 0))) | 0)))));
		fSlow12 = +(+(fSlow2) - +(fSlow4));
		fSlow13 = +(+(+(0. - +(fSlow6)) * +(0. - +(0.5 * +(fSlow7)))) * +(0. - +(0.333333343 * +(fSlow8))));
		iSlow14 = ~~(+(min_f(+(HEAPF[dsp + 9232 >> 2]), +(((max_i(0, (((iSlow10 | 0) + 1) | 0))) | 0)))));
		fSlow15 = +(0.5 * +(+(+(fSlow5) * +(0. - +(fSlow7))) * +(0. - +(0.5 * +(fSlow8)))));
		iSlow16 = ~~(+(min_f(+(HEAPF[dsp + 9232 >> 2]), +(((max_i(0, (((iSlow10 | 0) + 2) | 0))) | 0)))));
		fSlow17 = +(+(fSlow5) * +(fSlow6));
		fSlow18 = +(0.166666672 * +(+(fSlow17) * +(0. - +(fSlow8))));
		iSlow19 = ~~(+(min_f(+(HEAPF[dsp + 9232 >> 2]), +(((max_i(0, (((iSlow10 | 0) + 3) | 0))) | 0)))));
		fSlow20 = +(0.0416666679 * +(+(fSlow17) * +(fSlow7)));
		iSlow21 = ~~(+(min_f(+(HEAPF[dsp + 9232 >> 2]), +(((max_i(0, (((iSlow10 | 0) + 4) | 0))) | 0)))));
		iSlow22 = (imul(50, ~~(+(+(HEAPF[dsp + 9256 >> 2])))) | 0);
		fSlow23 = +(((+(192.190002 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 48) | 0) << 2) >> 2]):0.);
		fSlow24 = +(tanf(+(+(HEAPF[dsp + 9264 >> 2]) * +(+(HEAPF[dsp + 9268 >> 2])))));
		fSlow25 = +(1. / +(fSlow24));
		fSlow26 = +(+(+(+(fSlow25) + 1.41421354) / +(fSlow24)) + 1.);
		fSlow27 = +(+(+(HEAPF[dsp + 9260 >> 2])) / +(fSlow26));
		fSlow28 = +(1. / +(fSlow26));
		fSlow29 = +(2. * +(1. - +(1. / +(powf(+(fSlow24), 2.)))));
		fSlow30 = +(+(+(+(fSlow25) + -1.41421354) / +(fSlow24)) + 1.);
		fSlow31 = +(+(HEAPF[dsp + 9332 >> 2]));
		fSlow32 = +(+(HEAPF[dsp + 9348 >> 2]));
		fSlow33 = +(+(HEAPF[dsp + 9344 >> 2]) * +(fSlow32));
		fSlow34 = +(+(HEAPF[dsp + 9368 >> 2]) * +(fSlow32));
		fSlow35 = +(+(HEAPF[dsp + 9372 >> 2]) / +(fSlow32));
		fSlow36 = +(+(HEAPF[dsp + 9380 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9384 >> 2]) * +(fSlow1)))));
		fSlow37 = +(((+(149.438004 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 36) | 0) << 2) >> 2]):0.);
		fSlow38 = +(+(HEAPF[dsp + 9408 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9412 >> 2]) * +(fSlow1)))));
		fSlow39 = +(((+(144.548996 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 35) | 0) << 2) >> 2]):0.);
		fSlow40 = +(+(HEAPF[dsp + 9436 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9440 >> 2]) * +(fSlow1)))));
		fSlow41 = +(((+(133.477005 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 34) | 0) << 2) >> 2]):0.);
		fSlow42 = +(+(HEAPF[dsp + 9464 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9468 >> 2]) * +(fSlow1)))));
		fSlow43 = +(((+(132.259003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 33) | 0) << 2) >> 2]):0.);
		fSlow44 = +(+(HEAPF[dsp + 9492 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9496 >> 2]) * +(fSlow1)))));
		fSlow45 = +(((+(129.981995 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 32) | 0) << 2) >> 2]):0.);
		fSlow46 = +(+(HEAPF[dsp + 9520 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9524 >> 2]) * +(fSlow1)))));
		fSlow47 = +(((+(127.044998 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 31) | 0) << 2) >> 2]):0.);
		fSlow48 = +(+(HEAPF[dsp + 9548 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9552 >> 2]) * +(fSlow1)))));
		fSlow49 = +(((+(119.356003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 30) | 0) << 2) >> 2]):0.);
		fSlow50 = +(+(HEAPF[dsp + 9576 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9580 >> 2]) * +(fSlow1)))));
		fSlow51 = +(((+(113.825996 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 29) | 0) << 2) >> 2]):0.);
		fSlow52 = +(+(HEAPF[dsp + 9604 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9608 >> 2]) * +(fSlow1)))));
		fSlow53 = +(((+(112.069 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 28) | 0) << 2) >> 2]):0.);
		fSlow54 = +(+(HEAPF[dsp + 9632 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9636 >> 2]) * +(fSlow1)))));
		fSlow55 = +(((+(110.620003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 27) | 0) << 2) >> 2]):0.);
		fSlow56 = +(+(HEAPF[dsp + 9660 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9664 >> 2]) * +(fSlow1)))));
		fSlow57 = +(((+(97.4806976 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 26) | 0) << 2) >> 2]):0.);
		fSlow58 = +(+(HEAPF[dsp + 9688 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9692 >> 2]) * +(fSlow1)))));
		fSlow59 = +(((+(95.1913986 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 25) | 0) << 2) >> 2]):0.);
		fSlow60 = +(+(HEAPF[dsp + 9716 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9720 >> 2]) * +(fSlow1)))));
		fSlow61 = +(((+(92.9661026 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 24) | 0) << 2) >> 2]):0.);
		fSlow62 = +(+(HEAPF[dsp + 9744 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9748 >> 2]) * +(fSlow1)))));
		fSlow63 = +(((+(89.9779968 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 23) | 0) << 2) >> 2]):0.);
		fSlow64 = +(+(HEAPF[dsp + 9772 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9776 >> 2]) * +(fSlow1)))));
		fSlow65 = +(((+(80.8375015 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 22) | 0) << 2) >> 2]):0.);
		fSlow66 = +(+(HEAPF[dsp + 9800 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9804 >> 2]) * +(fSlow1)))));
		fSlow67 = +(((+(78.6920013 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 21) | 0) << 2) >> 2]):0.);
		fSlow68 = +(+(HEAPF[dsp + 9828 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9832 >> 2]) * +(fSlow1)))));
		fSlow69 = +(((+(74.530098 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 20) | 0) << 2) >> 2]):0.);
		fSlow70 = +(+(HEAPF[dsp + 9856 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9860 >> 2]) * +(fSlow1)))));
		fSlow71 = +(((+(66.9587021 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 19) | 0) << 2) >> 2]):0.);
		fSlow72 = +(+(HEAPF[dsp + 9884 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9888 >> 2]) * +(fSlow1)))));
		fSlow73 = +(((+(190.369003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 47) | 0) << 2) >> 2]):0.);
		fSlow74 = +(+(HEAPF[dsp + 9912 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9916 >> 2]) * +(fSlow1)))));
		fSlow75 = +(((+(185.397995 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 46) | 0) << 2) >> 2]):0.);
		fSlow76 = +(+(HEAPF[dsp + 9940 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9944 >> 2]) * +(fSlow1)))));
		fSlow77 = +(((+(181.481995 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 45) | 0) << 2) >> 2]):0.);
		fSlow78 = +(+(HEAPF[dsp + 9968 >> 2]) * +(cosf(+(+(HEAPF[dsp + 9972 >> 2]) * +(fSlow1)))));
		fSlow79 = +(((+(174.464005 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 43) | 0) << 2) >> 2]):0.);
		fSlow80 = +(+(HEAPF[dsp + 9996 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10000 >> 2]) * +(fSlow1)))));
		fSlow81 = +(((+(171.863007 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 42) | 0) << 2) >> 2]):0.);
		fSlow82 = +(+(HEAPF[dsp + 10024 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10028 >> 2]) * +(fSlow1)))));
		fSlow83 = +(((+(fSlow1) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((iSlow22 | 0) << 2) >> 2]):0.);
		fSlow84 = +(+(HEAPF[dsp + 10052 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10056 >> 2]) * +(fSlow1)))));
		fSlow85 = +(((+(3.31356001 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 1) | 0) << 2) >> 2]):0.);
		fSlow86 = +(+(HEAPF[dsp + 10080 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10084 >> 2]) * +(fSlow1)))));
		fSlow87 = +(((+(3.83469009 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 2) | 0) << 2) >> 2]):0.);
		fSlow88 = +(+(HEAPF[dsp + 10108 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10112 >> 2]) * +(fSlow1)))));
		fSlow89 = +(((+(8.06313038 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 3) | 0) << 2) >> 2]):0.);
		fSlow90 = +(+(HEAPF[dsp + 10136 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10140 >> 2]) * +(fSlow1)))));
		fSlow91 = +(((+(9.44777966 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 4) | 0) << 2) >> 2]):0.);
		fSlow92 = +(+(HEAPF[dsp + 10164 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10168 >> 2]) * +(fSlow1)))));
		fSlow93 = +(((+(14.1169004 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 5) | 0) << 2) >> 2]):0.);
		fSlow94 = +(+(HEAPF[dsp + 10192 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10196 >> 2]) * +(fSlow1)))));
		fSlow95 = +(((+(18.3840008 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 6) | 0) << 2) >> 2]):0.);
		fSlow96 = +(+(HEAPF[dsp + 10220 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10224 >> 2]) * +(fSlow1)))));
		fSlow97 = +(((+(21.0102005 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 7) | 0) << 2) >> 2]):0.);
		fSlow98 = +(+(HEAPF[dsp + 10248 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10252 >> 2]) * +(fSlow1)))));
		fSlow99 = +(((+(26.1774998 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 8) | 0) << 2) >> 2]):0.);
		fSlow100 = +(+(HEAPF[dsp + 10276 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10280 >> 2]) * +(fSlow1)))));
		fSlow101 = +(((+(28.9944 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 9) | 0) << 2) >> 2]):0.);
		fSlow102 = +(+(HEAPF[dsp + 10304 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10308 >> 2]) * +(fSlow1)))));
		fSlow103 = +(((+(37.0727997 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 10) | 0) << 2) >> 2]):0.);
		fSlow104 = +(+(HEAPF[dsp + 10332 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10336 >> 2]) * +(fSlow1)))));
		fSlow105 = +(((+(37.8703003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 11) | 0) << 2) >> 2]):0.);
		fSlow106 = +(+(HEAPF[dsp + 10360 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10364 >> 2]) * +(fSlow1)))));
		fSlow107 = +(((+(40.0634003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 12) | 0) << 2) >> 2]):0.);
		fSlow108 = +(+(HEAPF[dsp + 10388 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10392 >> 2]) * +(fSlow1)))));
		fSlow109 = +(((+(47.6439018 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 13) | 0) << 2) >> 2]):0.);
		fSlow110 = +(+(HEAPF[dsp + 10416 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10420 >> 2]) * +(fSlow1)))));
		fSlow111 = +(((+(51.019001 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 14) | 0) << 2) >> 2]):0.);
		fSlow112 = +(+(HEAPF[dsp + 10444 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10448 >> 2]) * +(fSlow1)))));
		fSlow113 = +(((+(52.4300003 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 15) | 0) << 2) >> 2]):0.);
		fSlow114 = +(+(HEAPF[dsp + 10472 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10476 >> 2]) * +(fSlow1)))));
		fSlow115 = +(((+(58.2859993 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 16) | 0) << 2) >> 2]):0.);
		fSlow116 = +(+(HEAPF[dsp + 10500 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10504 >> 2]) * +(fSlow1)))));
		fSlow117 = +(((+(63.5485992 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 17) | 0) << 2) >> 2]):0.);
		fSlow118 = +(+(HEAPF[dsp + 10528 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10532 >> 2]) * +(fSlow1)))));
		fSlow119 = +(((+(152.033005 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 37) | 0) << 2) >> 2]):0.);
		fSlow120 = +(+(HEAPF[dsp + 10556 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10560 >> 2]) * +(fSlow1)))));
		fSlow121 = +(((+(153.166 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 38) | 0) << 2) >> 2]):0.);
		fSlow122 = +(+(HEAPF[dsp + 10584 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10588 >> 2]) * +(fSlow1)))));
		fSlow123 = +(((+(155.597 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 39) | 0) << 2) >> 2]):0.);
		fSlow124 = +(+(HEAPF[dsp + 10612 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10616 >> 2]) * +(fSlow1)))));
		fSlow125 = +(((+(158.182999 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 40) | 0) << 2) >> 2]):0.);
		fSlow126 = +(+(HEAPF[dsp + 10640 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10644 >> 2]) * +(fSlow1)))));
		fSlow127 = +(((+(168.104996 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 41) | 0) << 2) >> 2]):0.);
		fSlow128 = +(+(HEAPF[dsp + 10668 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10672 >> 2]) * +(fSlow1)))));
		fSlow129 = +(((+(178.936996 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 44) | 0) << 2) >> 2]):0.);
		fSlow130 = +(+(HEAPF[dsp + 10696 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10700 >> 2]) * +(fSlow1)))));
		fSlow131 = +(((+(65.3628006 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 18) | 0) << 2) >> 2]):0.);
		fSlow132 = +(+(HEAPF[dsp + 10724 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10728 >> 2]) * +(fSlow1)))));
		fSlow133 = +(((+(195.505005 * +(fSlow1)) < +(HEAPF[dsp + 9252 >> 2])) | 0)?+(HEAPF[dsp + 0 + ((((iSlow22 | 0) + 49) | 0) << 2) >> 2]):0.);
		fSlow134 = +(+(HEAPF[dsp + 10752 >> 2]) * +(cosf(+(+(HEAPF[dsp + 10756 >> 2]) * +(fSlow1)))));
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAP32[dsp + 1004 + (0 << 2) >> 2] = 0;
			HEAPF[dsp + 1028 + (0 << 2) >> 2] = +(+(0.949999988 * +(HEAPF[dsp + 1028 + (1 << 2) >> 2])) + +(0.0500000007 * +(HEAPF[dsp + 18976 + (1 << 2) >> 2])));
			fTemp0 = +(+(0.99000001 * +(HEAPF[dsp + 1028 + (0 << 2) >> 2])) + +((HEAP32[dsp + 1004 + (1 << 2) >> 2] | 0)));
			HEAPF[dsp + 1040 + ((((HEAP32[dsp + 1036 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(fTemp0);
			HEAPF[dsp + 9236 + (0 << 2) >> 2] = +(+(+(fSlow9) * +(HEAPF[dsp + 1040 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow11 | 0)) | 0) & 2047) | 0) << 2) >> 2])) + +(+(fSlow12) * +(+(+(+(+(fSlow13) * +(HEAPF[dsp + 1040 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow14 | 0)) | 0) & 2047) | 0) << 2) >> 2])) + +(+(fSlow15) * +(HEAPF[dsp + 1040 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow16 | 0)) | 0) & 2047) | 0) << 2) >> 2]))) + +(+(fSlow18) * +(HEAPF[dsp + 1040 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow19 | 0)) | 0) & 2047) | 0) << 2) >> 2]))) + +(+(fSlow20) * +(HEAPF[dsp + 1040 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow21 | 0)) | 0) & 2047) | 0) << 2) >> 2])))));
			HEAPF[dsp + 9244 + (0 << 2) >> 2] = +(+(0.949999988 * +(HEAPF[dsp + 9244 + (1 << 2) >> 2])) + +(0.0500000007 * +(HEAPF[dsp + 9236 + (1 << 2) >> 2])));
			HEAP32[dsp + 9288 + (0 << 2) >> 2] = (((imul(1103515245, (HEAP32[dsp + 9288 + (1 << 2) >> 2] | 0)) | 0) + 12345) | 0);
			HEAPF[dsp + 9304 + (0 << 2) >> 2] = +(+(4.65661287e-10 * +((HEAP32[dsp + 9288 + (0 << 2) >> 2] | 0))) - +(+(HEAPF[dsp + 9280 >> 2]) * +(+(+(HEAPF[dsp + 9296 >> 2]) * +(HEAPF[dsp + 9304 + (2 << 2) >> 2])) + +(+(HEAPF[dsp + 9300 >> 2]) * +(HEAPF[dsp + 9304 + (1 << 2) >> 2])))));
			HEAPF[dsp + 9320 + (0 << 2) >> 2] = +(+(+(HEAPF[dsp + 9280 >> 2]) * +(+(+(+(HEAPF[dsp + 9284 >> 2]) * +(HEAPF[dsp + 9304 + (0 << 2) >> 2])) + +(+(HEAPF[dsp + 9316 >> 2]) * +(HEAPF[dsp + 9304 + (1 << 2) >> 2]))) + +(+(HEAPF[dsp + 9284 >> 2]) * +(HEAPF[dsp + 9304 + (2 << 2) >> 2])))) - +(+(fSlow28) * +(+(+(fSlow29) * +(HEAPF[dsp + 9320 + (1 << 2) >> 2])) + +(+(fSlow30) * +(HEAPF[dsp + 9320 + (2 << 2) >> 2])))));
			HEAPF[dsp + 9336 + (0 << 2) >> 2] = +(fSlow31);
			HEAPF[dsp + 9352 + (0 << 2) >> 2] = +(fSlow32);
			HEAPF[dsp + 9360 + (0 << 2) >> 2] = +(((((+(+(fSlow31) - +(HEAPF[dsp + 9336 + (1 << 2) >> 2])) > 0.) | 0) > 0) | 0)?0.:+(min_f(+(fSlow33), +(+(+(HEAPF[dsp + 9360 + (1 << 2) >> 2]) + +(+(HEAPF[dsp + 9344 >> 2]) * +(+(fSlow32) - +(HEAPF[dsp + 9352 + (1 << 2) >> 2])))) + 1.))));
			iTemp1 = ((+(HEAPF[dsp + 9360 + (0 << 2) >> 2]) < +(fSlow34)) | 0);
			fTemp2 = +(+(fSlow27) * +(+(+(HEAPF[dsp + 9320 + (2 << 2) >> 2]) + +(+(HEAPF[dsp + 9320 + (0 << 2) >> 2]) + +(2. * +(HEAPF[dsp + 9320 + (1 << 2) >> 2])))) * +((iTemp1 | 0)?+(((+(HEAPF[dsp + 9360 + (0 << 2) >> 2]) < 0.) | 0)?0.:+((iTemp1 | 0)?+(+(fSlow35) * +(HEAPF[dsp + 9360 + (0 << 2) >> 2])):1.)):+(((+(HEAPF[dsp + 9360 + (0 << 2) >> 2]) < +(fSlow33)) | 0)?+(+(+(fSlow35) * +(0. - +(+(HEAPF[dsp + 9360 + (0 << 2) >> 2]) - +(fSlow34)))) + 1.):0.))));
			HEAPF[dsp + 9392 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow36) * +(HEAPF[dsp + 9392 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9388 >> 2]) * +(HEAPF[dsp + 9392 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9420 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow38) * +(HEAPF[dsp + 9420 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9416 >> 2]) * +(HEAPF[dsp + 9420 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9448 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow40) * +(HEAPF[dsp + 9448 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9444 >> 2]) * +(HEAPF[dsp + 9448 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9476 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow42) * +(HEAPF[dsp + 9476 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9472 >> 2]) * +(HEAPF[dsp + 9476 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9504 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow44) * +(HEAPF[dsp + 9504 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9500 >> 2]) * +(HEAPF[dsp + 9504 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9532 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow46) * +(HEAPF[dsp + 9532 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9528 >> 2]) * +(HEAPF[dsp + 9532 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9560 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow48) * +(HEAPF[dsp + 9560 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9556 >> 2]) * +(HEAPF[dsp + 9560 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9588 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow50) * +(HEAPF[dsp + 9588 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9584 >> 2]) * +(HEAPF[dsp + 9588 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9616 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow52) * +(HEAPF[dsp + 9616 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9612 >> 2]) * +(HEAPF[dsp + 9616 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9644 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow54) * +(HEAPF[dsp + 9644 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9640 >> 2]) * +(HEAPF[dsp + 9644 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9672 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow56) * +(HEAPF[dsp + 9672 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9668 >> 2]) * +(HEAPF[dsp + 9672 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9700 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow58) * +(HEAPF[dsp + 9700 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9696 >> 2]) * +(HEAPF[dsp + 9700 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9728 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow60) * +(HEAPF[dsp + 9728 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9724 >> 2]) * +(HEAPF[dsp + 9728 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9756 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow62) * +(HEAPF[dsp + 9756 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9752 >> 2]) * +(HEAPF[dsp + 9756 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9784 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow64) * +(HEAPF[dsp + 9784 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9780 >> 2]) * +(HEAPF[dsp + 9784 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9812 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow66) * +(HEAPF[dsp + 9812 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9808 >> 2]) * +(HEAPF[dsp + 9812 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9840 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow68) * +(HEAPF[dsp + 9840 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9836 >> 2]) * +(HEAPF[dsp + 9840 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9868 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow70) * +(HEAPF[dsp + 9868 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9864 >> 2]) * +(HEAPF[dsp + 9868 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9896 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow72) * +(HEAPF[dsp + 9896 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9892 >> 2]) * +(HEAPF[dsp + 9896 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9924 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow74) * +(HEAPF[dsp + 9924 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9920 >> 2]) * +(HEAPF[dsp + 9924 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9952 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow76) * +(HEAPF[dsp + 9952 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9948 >> 2]) * +(HEAPF[dsp + 9952 + (2 << 2) >> 2]))));
			HEAPF[dsp + 9980 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow78) * +(HEAPF[dsp + 9980 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 9976 >> 2]) * +(HEAPF[dsp + 9980 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10008 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow80) * +(HEAPF[dsp + 10008 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10004 >> 2]) * +(HEAPF[dsp + 10008 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10036 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow82) * +(HEAPF[dsp + 10036 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10032 >> 2]) * +(HEAPF[dsp + 10036 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10064 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow84) * +(HEAPF[dsp + 10064 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10060 >> 2]) * +(HEAPF[dsp + 10064 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10092 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow86) * +(HEAPF[dsp + 10092 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10088 >> 2]) * +(HEAPF[dsp + 10092 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10120 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow88) * +(HEAPF[dsp + 10120 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10116 >> 2]) * +(HEAPF[dsp + 10120 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10148 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow90) * +(HEAPF[dsp + 10148 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10144 >> 2]) * +(HEAPF[dsp + 10148 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10176 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow92) * +(HEAPF[dsp + 10176 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10172 >> 2]) * +(HEAPF[dsp + 10176 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10204 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow94) * +(HEAPF[dsp + 10204 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10200 >> 2]) * +(HEAPF[dsp + 10204 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10232 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow96) * +(HEAPF[dsp + 10232 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10228 >> 2]) * +(HEAPF[dsp + 10232 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10260 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow98) * +(HEAPF[dsp + 10260 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10256 >> 2]) * +(HEAPF[dsp + 10260 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10288 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow100) * +(HEAPF[dsp + 10288 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10284 >> 2]) * +(HEAPF[dsp + 10288 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10316 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow102) * +(HEAPF[dsp + 10316 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10312 >> 2]) * +(HEAPF[dsp + 10316 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10344 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow104) * +(HEAPF[dsp + 10344 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10340 >> 2]) * +(HEAPF[dsp + 10344 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10372 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow106) * +(HEAPF[dsp + 10372 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10368 >> 2]) * +(HEAPF[dsp + 10372 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10400 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow108) * +(HEAPF[dsp + 10400 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10396 >> 2]) * +(HEAPF[dsp + 10400 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10428 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow110) * +(HEAPF[dsp + 10428 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10424 >> 2]) * +(HEAPF[dsp + 10428 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10456 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow112) * +(HEAPF[dsp + 10456 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10452 >> 2]) * +(HEAPF[dsp + 10456 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10484 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow114) * +(HEAPF[dsp + 10484 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10480 >> 2]) * +(HEAPF[dsp + 10484 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10512 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow116) * +(HEAPF[dsp + 10512 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10508 >> 2]) * +(HEAPF[dsp + 10512 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10540 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow118) * +(HEAPF[dsp + 10540 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10536 >> 2]) * +(HEAPF[dsp + 10540 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10568 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow120) * +(HEAPF[dsp + 10568 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10564 >> 2]) * +(HEAPF[dsp + 10568 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10596 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow122) * +(HEAPF[dsp + 10596 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10592 >> 2]) * +(HEAPF[dsp + 10596 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10624 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow124) * +(HEAPF[dsp + 10624 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10620 >> 2]) * +(HEAPF[dsp + 10624 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10652 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow126) * +(HEAPF[dsp + 10652 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10648 >> 2]) * +(HEAPF[dsp + 10652 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10680 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow128) * +(HEAPF[dsp + 10680 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10676 >> 2]) * +(HEAPF[dsp + 10680 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10708 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow130) * +(HEAPF[dsp + 10708 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10704 >> 2]) * +(HEAPF[dsp + 10708 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10736 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow132) * +(HEAPF[dsp + 10736 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10732 >> 2]) * +(HEAPF[dsp + 10736 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10764 + (0 << 2) >> 2] = +(+(fTemp2) - +(+(+(fSlow134) * +(HEAPF[dsp + 10764 + (1 << 2) >> 2])) + +(+(HEAPF[dsp + 10760 >> 2]) * +(HEAPF[dsp + 10764 + (2 << 2) >> 2]))));
			fTemp3 = +(+(+(+(fSlow23) * +(+(HEAPF[dsp + 9392 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9392 + (2 << 2) >> 2]))) + +(+(+(fSlow37) * +(+(HEAPF[dsp + 9420 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9420 + (2 << 2) >> 2]))) + +(+(+(fSlow39) * +(+(HEAPF[dsp + 9448 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9448 + (2 << 2) >> 2]))) + +(+(+(fSlow41) * +(+(HEAPF[dsp + 9476 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9476 + (2 << 2) >> 2]))) + +(+(+(fSlow43) * +(+(HEAPF[dsp + 9504 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9504 + (2 << 2) >> 2]))) + +(+(+(fSlow45) * +(+(HEAPF[dsp + 9532 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9532 + (2 << 2) >> 2]))) + +(+(+(fSlow47) * +(+(HEAPF[dsp + 9560 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9560 + (2 << 2) >> 2]))) + +(+(+(fSlow49) * +(+(HEAPF[dsp + 9588 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9588 + (2 << 2) >> 2]))) + +(+(+(fSlow51) * +(+(HEAPF[dsp + 9616 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9616 + (2 << 2) >> 2]))) + +(+(+(fSlow53) * +(+(HEAPF[dsp + 9644 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9644 + (2 << 2) >> 2]))) + +(+(+(fSlow55) * +(+(HEAPF[dsp + 9672 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9672 + (2 << 2) >> 2]))) + +(+(+(fSlow57) * +(+(HEAPF[dsp + 9700 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9700 + (2 << 2) >> 2]))) + +(+(+(fSlow59) * +(+(HEAPF[dsp + 9728 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9728 + (2 << 2) >> 2]))) + +(+(+(fSlow61) * +(+(HEAPF[dsp + 9756 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9756 + (2 << 2) >> 2]))) + +(+(+(fSlow63) * +(+(HEAPF[dsp + 9784 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9784 + (2 << 2) >> 2]))) + +(+(+(fSlow65) * +(+(HEAPF[dsp + 9812 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9812 + (2 << 2) >> 2]))) + +(+(+(fSlow67) * +(+(HEAPF[dsp + 9840 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9840 + (2 << 2) >> 2]))) + +(+(+(fSlow69) * +(+(HEAPF[dsp + 9868 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9868 + (2 << 2) >> 2]))) + +(+(+(fSlow71) * +(+(HEAPF[dsp + 9896 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9896 + (2 << 2) >> 2]))) + +(+(+(+(fSlow73) * +(+(HEAPF[dsp + 9924 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9924 + (2 << 2) >> 2]))) + +(+(+(fSlow75) * +(+(HEAPF[dsp + 9952 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9952 + (2 << 2) >> 2]))) + +(+(+(fSlow77) * +(+(HEAPF[dsp + 9980 + (0 << 2) >> 2]) - +(HEAPF[dsp + 9980 + (2 << 2) >> 2]))) + +(+(+(+(fSlow79) * +(+(HEAPF[dsp + 10008 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10008 + (2 << 2) >> 2]))) + +(+(+(fSlow81) * +(+(HEAPF[dsp + 10036 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10036 + (2 << 2) >> 2]))) + +(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(fSlow83) * +(+(HEAPF[dsp + 10064 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10064 + (2 << 2) >> 2]))) + +(+(fSlow85) * +(+(HEAPF[dsp + 10092 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10092 + (2 << 2) >> 2])))) + +(+(fSlow87) * +(+(HEAPF[dsp + 10120 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10120 + (2 << 2) >> 2])))) + +(+(fSlow89) * +(+(HEAPF[dsp + 10148 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10148 + (2 << 2) >> 2])))) + +(+(fSlow91) * +(+(HEAPF[dsp + 10176 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10176 + (2 << 2) >> 2])))) + +(+(fSlow93) * +(+(HEAPF[dsp + 10204 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10204 + (2 << 2) >> 2])))) + +(+(fSlow95) * +(+(HEAPF[dsp + 10232 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10232 + (2 << 2) >> 2])))) + +(+(fSlow97) * +(+(HEAPF[dsp + 10260 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10260 + (2 << 2) >> 2])))) + +(+(fSlow99) * +(+(HEAPF[dsp + 10288 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10288 + (2 << 2) >> 2])))) + +(+(fSlow101) * +(+(HEAPF[dsp + 10316 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10316 + (2 << 2) >> 2])))) + +(+(fSlow103) * +(+(HEAPF[dsp + 10344 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10344 + (2 << 2) >> 2])))) + +(+(fSlow105) * +(+(HEAPF[dsp + 10372 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10372 + (2 << 2) >> 2])))) + +(+(fSlow107) * +(+(HEAPF[dsp + 10400 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10400 + (2 << 2) >> 2])))) + +(+(fSlow109) * +(+(HEAPF[dsp + 10428 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10428 + (2 << 2) >> 2])))) + +(+(fSlow111) * +(+(HEAPF[dsp + 10456 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10456 + (2 << 2) >> 2])))) + +(+(fSlow113) * +(+(HEAPF[dsp + 10484 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10484 + (2 << 2) >> 2])))) + +(+(fSlow115) * +(+(HEAPF[dsp + 10512 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10512 + (2 << 2) >> 2])))) + +(+(fSlow117) * +(+(HEAPF[dsp + 10540 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10540 + (2 << 2) >> 2])))) + +(+(fSlow119) * +(+(HEAPF[dsp + 10568 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10568 + (2 << 2) >> 2])))) + +(+(fSlow121) * +(+(HEAPF[dsp + 10596 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10596 + (2 << 2) >> 2])))) + +(+(fSlow123) * +(+(HEAPF[dsp + 10624 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10624 + (2 << 2) >> 2])))) + +(+(fSlow125) * +(+(HEAPF[dsp + 10652 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10652 + (2 << 2) >> 2])))) + +(+(fSlow127) * +(+(HEAPF[dsp + 10680 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10680 + (2 << 2) >> 2])))))) + +(+(fSlow129) * +(+(HEAPF[dsp + 10708 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10708 + (2 << 2) >> 2]))))))) + +(+(fSlow131) * +(+(HEAPF[dsp + 10736 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10736 + (2 << 2) >> 2]))))))))))))))))))))))) + +(+(fSlow133) * +(+(HEAPF[dsp + 10764 + (0 << 2) >> 2]) - +(HEAPF[dsp + 10764 + (2 << 2) >> 2]))));
			HEAPF[dsp + 10776 + (0 << 2) >> 2] = +(fTemp3);
			fTemp4 = +(+(0.99000001 * +(HEAPF[dsp + 9244 + (0 << 2) >> 2])) + +(0.0199999996 * +(HEAPF[dsp + 10776 + (1 << 2) >> 2])));
			HEAPF[dsp + 10784 + ((((HEAP32[dsp + 1036 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(fTemp4);
			HEAPF[dsp + 18976 + (0 << 2) >> 2] = +(+(+(fSlow9) * +(HEAPF[dsp + 10784 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow11 | 0)) | 0) & 2047) | 0) << 2) >> 2])) + +(+(fSlow12) * +(+(+(+(+(fSlow13) * +(HEAPF[dsp + 10784 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow14 | 0)) | 0) & 2047) | 0) << 2) >> 2])) + +(+(fSlow15) * +(HEAPF[dsp + 10784 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow16 | 0)) | 0) & 2047) | 0) << 2) >> 2]))) + +(+(fSlow18) * +(HEAPF[dsp + 10784 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow19 | 0)) | 0) & 2047) | 0) << 2) >> 2]))) + +(+(fSlow20) * +(HEAPF[dsp + 10784 + ((((((HEAP32[dsp + 1036 >> 2] | 0) - (iSlow21 | 0)) | 0) & 2047) | 0) << 2) >> 2])))));
			iRec8 = 0;
			fRec3 = +(HEAPF[dsp + 9236 + (0 << 2) >> 2]);
			fRec4 = +(HEAPF[dsp + 18976 + (0 << 2) >> 2]);
			fRec5 = +(+(HEAPF[dsp + 18976 + (0 << 2) >> 2]) + +((iRec8 | 0)));
			HEAPF[dsp + 18984 + (0 << 2) >> 2] = +(fRec3);
			fRec1 = +(fRec5);
			fTemp5 = +(+(fSlow0) * +(fRec1));
			HEAPF[output0 + ((i | 0) << 2) >> 2] = +(+(fTemp5));
			HEAPF[output1 + ((i | 0) << 2) >> 2] = +(+(fTemp5));
			HEAP32[dsp + 1004 + (1 << 2) >> 2] = (HEAP32[dsp + 1004 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 1028 + (1 << 2) >> 2] = +(HEAPF[dsp + 1028 + (0 << 2) >> 2]);
			HEAP32[dsp + 1036 >> 2] = (((HEAP32[dsp + 1036 >> 2] | 0) + 1) | 0);
			HEAPF[dsp + 9236 + (1 << 2) >> 2] = +(HEAPF[dsp + 9236 + (0 << 2) >> 2]);
			HEAPF[dsp + 9244 + (1 << 2) >> 2] = +(HEAPF[dsp + 9244 + (0 << 2) >> 2]);
			HEAP32[dsp + 9288 + (1 << 2) >> 2] = (HEAP32[dsp + 9288 + (0 << 2) >> 2] | 0);
			HEAPF[dsp + 9304 + (2 << 2) >> 2] = +(HEAPF[dsp + 9304 + (1 << 2) >> 2]);
			HEAPF[dsp + 9304 + (1 << 2) >> 2] = +(HEAPF[dsp + 9304 + (0 << 2) >> 2]);
			HEAPF[dsp + 9320 + (2 << 2) >> 2] = +(HEAPF[dsp + 9320 + (1 << 2) >> 2]);
			HEAPF[dsp + 9320 + (1 << 2) >> 2] = +(HEAPF[dsp + 9320 + (0 << 2) >> 2]);
			HEAPF[dsp + 9336 + (1 << 2) >> 2] = +(HEAPF[dsp + 9336 + (0 << 2) >> 2]);
			HEAPF[dsp + 9352 + (1 << 2) >> 2] = +(HEAPF[dsp + 9352 + (0 << 2) >> 2]);
			HEAPF[dsp + 9360 + (1 << 2) >> 2] = +(HEAPF[dsp + 9360 + (0 << 2) >> 2]);
			HEAPF[dsp + 9392 + (2 << 2) >> 2] = +(HEAPF[dsp + 9392 + (1 << 2) >> 2]);
			HEAPF[dsp + 9392 + (1 << 2) >> 2] = +(HEAPF[dsp + 9392 + (0 << 2) >> 2]);
			HEAPF[dsp + 9420 + (2 << 2) >> 2] = +(HEAPF[dsp + 9420 + (1 << 2) >> 2]);
			HEAPF[dsp + 9420 + (1 << 2) >> 2] = +(HEAPF[dsp + 9420 + (0 << 2) >> 2]);
			HEAPF[dsp + 9448 + (2 << 2) >> 2] = +(HEAPF[dsp + 9448 + (1 << 2) >> 2]);
			HEAPF[dsp + 9448 + (1 << 2) >> 2] = +(HEAPF[dsp + 9448 + (0 << 2) >> 2]);
			HEAPF[dsp + 9476 + (2 << 2) >> 2] = +(HEAPF[dsp + 9476 + (1 << 2) >> 2]);
			HEAPF[dsp + 9476 + (1 << 2) >> 2] = +(HEAPF[dsp + 9476 + (0 << 2) >> 2]);
			HEAPF[dsp + 9504 + (2 << 2) >> 2] = +(HEAPF[dsp + 9504 + (1 << 2) >> 2]);
			HEAPF[dsp + 9504 + (1 << 2) >> 2] = +(HEAPF[dsp + 9504 + (0 << 2) >> 2]);
			HEAPF[dsp + 9532 + (2 << 2) >> 2] = +(HEAPF[dsp + 9532 + (1 << 2) >> 2]);
			HEAPF[dsp + 9532 + (1 << 2) >> 2] = +(HEAPF[dsp + 9532 + (0 << 2) >> 2]);
			HEAPF[dsp + 9560 + (2 << 2) >> 2] = +(HEAPF[dsp + 9560 + (1 << 2) >> 2]);
			HEAPF[dsp + 9560 + (1 << 2) >> 2] = +(HEAPF[dsp + 9560 + (0 << 2) >> 2]);
			HEAPF[dsp + 9588 + (2 << 2) >> 2] = +(HEAPF[dsp + 9588 + (1 << 2) >> 2]);
			HEAPF[dsp + 9588 + (1 << 2) >> 2] = +(HEAPF[dsp + 9588 + (0 << 2) >> 2]);
			HEAPF[dsp + 9616 + (2 << 2) >> 2] = +(HEAPF[dsp + 9616 + (1 << 2) >> 2]);
			HEAPF[dsp + 9616 + (1 << 2) >> 2] = +(HEAPF[dsp + 9616 + (0 << 2) >> 2]);
			HEAPF[dsp + 9644 + (2 << 2) >> 2] = +(HEAPF[dsp + 9644 + (1 << 2) >> 2]);
			HEAPF[dsp + 9644 + (1 << 2) >> 2] = +(HEAPF[dsp + 9644 + (0 << 2) >> 2]);
			HEAPF[dsp + 9672 + (2 << 2) >> 2] = +(HEAPF[dsp + 9672 + (1 << 2) >> 2]);
			HEAPF[dsp + 9672 + (1 << 2) >> 2] = +(HEAPF[dsp + 9672 + (0 << 2) >> 2]);
			HEAPF[dsp + 9700 + (2 << 2) >> 2] = +(HEAPF[dsp + 9700 + (1 << 2) >> 2]);
			HEAPF[dsp + 9700 + (1 << 2) >> 2] = +(HEAPF[dsp + 9700 + (0 << 2) >> 2]);
			HEAPF[dsp + 9728 + (2 << 2) >> 2] = +(HEAPF[dsp + 9728 + (1 << 2) >> 2]);
			HEAPF[dsp + 9728 + (1 << 2) >> 2] = +(HEAPF[dsp + 9728 + (0 << 2) >> 2]);
			HEAPF[dsp + 9756 + (2 << 2) >> 2] = +(HEAPF[dsp + 9756 + (1 << 2) >> 2]);
			HEAPF[dsp + 9756 + (1 << 2) >> 2] = +(HEAPF[dsp + 9756 + (0 << 2) >> 2]);
			HEAPF[dsp + 9784 + (2 << 2) >> 2] = +(HEAPF[dsp + 9784 + (1 << 2) >> 2]);
			HEAPF[dsp + 9784 + (1 << 2) >> 2] = +(HEAPF[dsp + 9784 + (0 << 2) >> 2]);
			HEAPF[dsp + 9812 + (2 << 2) >> 2] = +(HEAPF[dsp + 9812 + (1 << 2) >> 2]);
			HEAPF[dsp + 9812 + (1 << 2) >> 2] = +(HEAPF[dsp + 9812 + (0 << 2) >> 2]);
			HEAPF[dsp + 9840 + (2 << 2) >> 2] = +(HEAPF[dsp + 9840 + (1 << 2) >> 2]);
			HEAPF[dsp + 9840 + (1 << 2) >> 2] = +(HEAPF[dsp + 9840 + (0 << 2) >> 2]);
			HEAPF[dsp + 9868 + (2 << 2) >> 2] = +(HEAPF[dsp + 9868 + (1 << 2) >> 2]);
			HEAPF[dsp + 9868 + (1 << 2) >> 2] = +(HEAPF[dsp + 9868 + (0 << 2) >> 2]);
			HEAPF[dsp + 9896 + (2 << 2) >> 2] = +(HEAPF[dsp + 9896 + (1 << 2) >> 2]);
			HEAPF[dsp + 9896 + (1 << 2) >> 2] = +(HEAPF[dsp + 9896 + (0 << 2) >> 2]);
			HEAPF[dsp + 9924 + (2 << 2) >> 2] = +(HEAPF[dsp + 9924 + (1 << 2) >> 2]);
			HEAPF[dsp + 9924 + (1 << 2) >> 2] = +(HEAPF[dsp + 9924 + (0 << 2) >> 2]);
			HEAPF[dsp + 9952 + (2 << 2) >> 2] = +(HEAPF[dsp + 9952 + (1 << 2) >> 2]);
			HEAPF[dsp + 9952 + (1 << 2) >> 2] = +(HEAPF[dsp + 9952 + (0 << 2) >> 2]);
			HEAPF[dsp + 9980 + (2 << 2) >> 2] = +(HEAPF[dsp + 9980 + (1 << 2) >> 2]);
			HEAPF[dsp + 9980 + (1 << 2) >> 2] = +(HEAPF[dsp + 9980 + (0 << 2) >> 2]);
			HEAPF[dsp + 10008 + (2 << 2) >> 2] = +(HEAPF[dsp + 10008 + (1 << 2) >> 2]);
			HEAPF[dsp + 10008 + (1 << 2) >> 2] = +(HEAPF[dsp + 10008 + (0 << 2) >> 2]);
			HEAPF[dsp + 10036 + (2 << 2) >> 2] = +(HEAPF[dsp + 10036 + (1 << 2) >> 2]);
			HEAPF[dsp + 10036 + (1 << 2) >> 2] = +(HEAPF[dsp + 10036 + (0 << 2) >> 2]);
			HEAPF[dsp + 10064 + (2 << 2) >> 2] = +(HEAPF[dsp + 10064 + (1 << 2) >> 2]);
			HEAPF[dsp + 10064 + (1 << 2) >> 2] = +(HEAPF[dsp + 10064 + (0 << 2) >> 2]);
			HEAPF[dsp + 10092 + (2 << 2) >> 2] = +(HEAPF[dsp + 10092 + (1 << 2) >> 2]);
			HEAPF[dsp + 10092 + (1 << 2) >> 2] = +(HEAPF[dsp + 10092 + (0 << 2) >> 2]);
			HEAPF[dsp + 10120 + (2 << 2) >> 2] = +(HEAPF[dsp + 10120 + (1 << 2) >> 2]);
			HEAPF[dsp + 10120 + (1 << 2) >> 2] = +(HEAPF[dsp + 10120 + (0 << 2) >> 2]);
			HEAPF[dsp + 10148 + (2 << 2) >> 2] = +(HEAPF[dsp + 10148 + (1 << 2) >> 2]);
			HEAPF[dsp + 10148 + (1 << 2) >> 2] = +(HEAPF[dsp + 10148 + (0 << 2) >> 2]);
			HEAPF[dsp + 10176 + (2 << 2) >> 2] = +(HEAPF[dsp + 10176 + (1 << 2) >> 2]);
			HEAPF[dsp + 10176 + (1 << 2) >> 2] = +(HEAPF[dsp + 10176 + (0 << 2) >> 2]);
			HEAPF[dsp + 10204 + (2 << 2) >> 2] = +(HEAPF[dsp + 10204 + (1 << 2) >> 2]);
			HEAPF[dsp + 10204 + (1 << 2) >> 2] = +(HEAPF[dsp + 10204 + (0 << 2) >> 2]);
			HEAPF[dsp + 10232 + (2 << 2) >> 2] = +(HEAPF[dsp + 10232 + (1 << 2) >> 2]);
			HEAPF[dsp + 10232 + (1 << 2) >> 2] = +(HEAPF[dsp + 10232 + (0 << 2) >> 2]);
			HEAPF[dsp + 10260 + (2 << 2) >> 2] = +(HEAPF[dsp + 10260 + (1 << 2) >> 2]);
			HEAPF[dsp + 10260 + (1 << 2) >> 2] = +(HEAPF[dsp + 10260 + (0 << 2) >> 2]);
			HEAPF[dsp + 10288 + (2 << 2) >> 2] = +(HEAPF[dsp + 10288 + (1 << 2) >> 2]);
			HEAPF[dsp + 10288 + (1 << 2) >> 2] = +(HEAPF[dsp + 10288 + (0 << 2) >> 2]);
			HEAPF[dsp + 10316 + (2 << 2) >> 2] = +(HEAPF[dsp + 10316 + (1 << 2) >> 2]);
			HEAPF[dsp + 10316 + (1 << 2) >> 2] = +(HEAPF[dsp + 10316 + (0 << 2) >> 2]);
			HEAPF[dsp + 10344 + (2 << 2) >> 2] = +(HEAPF[dsp + 10344 + (1 << 2) >> 2]);
			HEAPF[dsp + 10344 + (1 << 2) >> 2] = +(HEAPF[dsp + 10344 + (0 << 2) >> 2]);
			HEAPF[dsp + 10372 + (2 << 2) >> 2] = +(HEAPF[dsp + 10372 + (1 << 2) >> 2]);
			HEAPF[dsp + 10372 + (1 << 2) >> 2] = +(HEAPF[dsp + 10372 + (0 << 2) >> 2]);
			HEAPF[dsp + 10400 + (2 << 2) >> 2] = +(HEAPF[dsp + 10400 + (1 << 2) >> 2]);
			HEAPF[dsp + 10400 + (1 << 2) >> 2] = +(HEAPF[dsp + 10400 + (0 << 2) >> 2]);
			HEAPF[dsp + 10428 + (2 << 2) >> 2] = +(HEAPF[dsp + 10428 + (1 << 2) >> 2]);
			HEAPF[dsp + 10428 + (1 << 2) >> 2] = +(HEAPF[dsp + 10428 + (0 << 2) >> 2]);
			HEAPF[dsp + 10456 + (2 << 2) >> 2] = +(HEAPF[dsp + 10456 + (1 << 2) >> 2]);
			HEAPF[dsp + 10456 + (1 << 2) >> 2] = +(HEAPF[dsp + 10456 + (0 << 2) >> 2]);
			HEAPF[dsp + 10484 + (2 << 2) >> 2] = +(HEAPF[dsp + 10484 + (1 << 2) >> 2]);
			HEAPF[dsp + 10484 + (1 << 2) >> 2] = +(HEAPF[dsp + 10484 + (0 << 2) >> 2]);
			HEAPF[dsp + 10512 + (2 << 2) >> 2] = +(HEAPF[dsp + 10512 + (1 << 2) >> 2]);
			HEAPF[dsp + 10512 + (1 << 2) >> 2] = +(HEAPF[dsp + 10512 + (0 << 2) >> 2]);
			HEAPF[dsp + 10540 + (2 << 2) >> 2] = +(HEAPF[dsp + 10540 + (1 << 2) >> 2]);
			HEAPF[dsp + 10540 + (1 << 2) >> 2] = +(HEAPF[dsp + 10540 + (0 << 2) >> 2]);
			HEAPF[dsp + 10568 + (2 << 2) >> 2] = +(HEAPF[dsp + 10568 + (1 << 2) >> 2]);
			HEAPF[dsp + 10568 + (1 << 2) >> 2] = +(HEAPF[dsp + 10568 + (0 << 2) >> 2]);
			HEAPF[dsp + 10596 + (2 << 2) >> 2] = +(HEAPF[dsp + 10596 + (1 << 2) >> 2]);
			HEAPF[dsp + 10596 + (1 << 2) >> 2] = +(HEAPF[dsp + 10596 + (0 << 2) >> 2]);
			HEAPF[dsp + 10624 + (2 << 2) >> 2] = +(HEAPF[dsp + 10624 + (1 << 2) >> 2]);
			HEAPF[dsp + 10624 + (1 << 2) >> 2] = +(HEAPF[dsp + 10624 + (0 << 2) >> 2]);
			HEAPF[dsp + 10652 + (2 << 2) >> 2] = +(HEAPF[dsp + 10652 + (1 << 2) >> 2]);
			HEAPF[dsp + 10652 + (1 << 2) >> 2] = +(HEAPF[dsp + 10652 + (0 << 2) >> 2]);
			HEAPF[dsp + 10680 + (2 << 2) >> 2] = +(HEAPF[dsp + 10680 + (1 << 2) >> 2]);
			HEAPF[dsp + 10680 + (1 << 2) >> 2] = +(HEAPF[dsp + 10680 + (0 << 2) >> 2]);
			HEAPF[dsp + 10708 + (2 << 2) >> 2] = +(HEAPF[dsp + 10708 + (1 << 2) >> 2]);
			HEAPF[dsp + 10708 + (1 << 2) >> 2] = +(HEAPF[dsp + 10708 + (0 << 2) >> 2]);
			HEAPF[dsp + 10736 + (2 << 2) >> 2] = +(HEAPF[dsp + 10736 + (1 << 2) >> 2]);
			HEAPF[dsp + 10736 + (1 << 2) >> 2] = +(HEAPF[dsp + 10736 + (0 << 2) >> 2]);
			HEAPF[dsp + 10764 + (2 << 2) >> 2] = +(HEAPF[dsp + 10764 + (1 << 2) >> 2]);
			HEAPF[dsp + 10764 + (1 << 2) >> 2] = +(HEAPF[dsp + 10764 + (0 << 2) >> 2]);
			HEAPF[dsp + 10776 + (1 << 2) >> 2] = +(HEAPF[dsp + 10776 + (0 << 2) >> 2]);
			HEAPF[dsp + 18976 + (1 << 2) >> 2] = +(HEAPF[dsp + 18976 + (0 << 2) >> 2]);
			HEAPF[dsp + 18984 + (1 << 2) >> 2] = +(HEAPF[dsp + 18984 + (0 << 2) >> 2]);
			
		}
		
	}
	
	return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, instanceConstants : instanceConstants, instanceResetUserInterface : instanceResetUserInterface, instanceClear : instanceClear, init : init, getSampleRate : getSampleRate, setParamValue : setParamValue, getParamValue : getParamValue, compute : compute };
}

function getSizemydsp() {
	return 19996;
}

function getPathTablemydsp() {
	var pathTable = [];
	pathTable["/marimba/gate"] = 9332;
	pathTable["/marimba/otherParams/strikePosition"] = 9256;
	pathTable["/marimba/otherParams/outGain"] = 1000;
	pathTable["/marimba/midi/freq"] = 1024;
	pathTable["/marimba/midi/gain"] = 9260;
	pathTable["/marimba/otherParams/strikeCutOff"] = 9268;
	pathTable["/marimba/otherParams/strikeSharpness"] = 9348;
	return pathTable;
}

function getJSONmydsp() {
	return "{\"name\":\"MarimbaMIDI\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"(c)Romain Michon, CCRMA (Stanford University), GRAME\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"description\":\"Simple MIDI-controllable marimba physical model.\"},{\"envelopes.lib/author\":\"GRAME\"},{\"envelopes.lib/copyright\":\"GRAME\"},{\"envelopes.lib/license\":\"LGPL with exception\"},{\"envelopes.lib/name\":\"Faust Envelope Library\"},{\"envelopes.lib/version\":\"0.0\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"MIT\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"MarimbaMIDI\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"marimba\",\"items\":[{\"type\":\"hgroup\",\"label\":\"midi\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"freq\",\"address\":\"/marimba/midi/freq\",\"meta\":[{\"0\":\"\"},{\"style\":\"knob\"}],\"init\":\"440\",\"min\":\"50\",\"max\":\"1000\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"gain\",\"address\":\"/marimba/midi/gain\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"1\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"hgroup\",\"label\":\"otherParams\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"nentry\",\"label\":\"strikePosition\",\"address\":\"/marimba/otherParams/strikePosition\",\"meta\":[{\"0\":\"\"},{\"midi\":\"ctrl 1\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"4\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"strikeCutOff\",\"address\":\"/marimba/otherParams/strikeCutOff\",\"meta\":[{\"1\":\"\"},{\"midi\":\"ctrl 1\"},{\"style\":\"knob\"}],\"init\":\"6500\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"outGain\",\"address\":\"/marimba/otherParams/outGain\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.8\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"strikeSharpness\",\"address\":\"/marimba/otherParams/strikeSharpness\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0.01\",\"max\":\"5\",\"step\":\"0.01\"}]},{\"type\":\"button\",\"label\":\"gate\",\"address\":\"/marimba/gate\",\"meta\":[{\"3\":\"\"}]}]}]}";
}

function metadatamydsp(m) {
	m.declare("basics.lib/name", "Faust Basic Element Library");
	m.declare("basics.lib/version", "0.0");
	m.declare("copyright", "(c)Romain Michon, CCRMA (Stanford University), GRAME");
	m.declare("delays.lib/name", "Faust Delay Library");
	m.declare("delays.lib/version", "0.0");
	m.declare("description", "Simple MIDI-controllable marimba physical model.");
	m.declare("envelopes.lib/author", "GRAME");
	m.declare("envelopes.lib/copyright", "GRAME");
	m.declare("envelopes.lib/license", "LGPL with exception");
	m.declare("envelopes.lib/name", "Faust Envelope Library");
	m.declare("envelopes.lib/version", "0.0");
	m.declare("filters.lib/name", "Faust Filters Library");
	m.declare("filters.lib/version", "0.0");
	m.declare("license", "MIT");
	m.declare("maths.lib/author", "GRAME");
	m.declare("maths.lib/copyright", "GRAME");
	m.declare("maths.lib/license", "LGPL with exception");
	m.declare("maths.lib/name", "Faust Math Library");
	m.declare("maths.lib/version", "2.1");
	m.declare("name", "MarimbaMIDI");
	m.declare("noises.lib/name", "Faust Noise Generator Library");
	m.declare("noises.lib/version", "0.0");
	m.declare("routes.lib/name", "Faust Signal Routing Library");
	m.declare("routes.lib/version", "0.0");
	m.declare("signals.lib/name", "Faust Signal Routing Library");
	m.declare("signals.lib/version", "0.0");
}

