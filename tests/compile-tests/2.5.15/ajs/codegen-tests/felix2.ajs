/* ------------------------------------------------------------
name: "felix2"
Code generated with Faust 2.5.15 (https://faust.grame.fr)
Compilation options: ajs, -scal -ftz 0
------------------------------------------------------------ */


function mydspModule(global, foreign, buffer) {
	
	'use asm';
	
	var HEAP32 = new global.Int32Array(buffer);
	var HEAPF = new global.Float32Array(buffer);
	
	var imul = foreign.imul;
	var log = foreign.log;
	var round = foreign.round;
	
	var fabsf = foreign.abs;
	var max_f = foreign.max;
	var min_f = foreign.min;
	function fmodf(x, y) { x = +x; y = +y; return +(x % y); }
	function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }
	function remainderf(x, y) { x = +x; y = +y; return +(x - +round(x/y) * y); }
	
	function getNumInputs(dsp) {
		dsp = dsp | 0;
		return 6;
	}
	
	function getNumOutputs(dsp) {
		dsp = dsp | 0;
		return 36;
	}
	
	function classInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		
	}
	
	function instanceConstants(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		HEAP32[dsp + 0 >> 2] = (samplingFreq | 0);
		HEAPF[dsp + 4 >> 2] = +(96. / +(min_f(192000., +(max_f(1., +((HEAP32[dsp + 0 >> 2] | 0)))))));
		
	}
	
	function instanceResetUserInterface(dsp) {
		dsp = dsp | 0;
		
	}
	
	function instanceClear(dsp) {
		dsp = dsp | 0;
		var l0 = 0;
		var l1 = 0;
		var l2 = 0;
		var l3 = 0;
		var l4 = 0;
		var l5 = 0;
		var l6 = 0;
		var l7 = 0;
		var l8 = 0;
		var l9 = 0;
		var l10 = 0;
		var l11 = 0;
		var l12 = 0;
		var l13 = 0;
		var l14 = 0;
		var l15 = 0;
		var l16 = 0;
		var l17 = 0;
		var l18 = 0;
		var l19 = 0;
		var l20 = 0;
		var l21 = 0;
		var l22 = 0;
		var l23 = 0;
		var l24 = 0;
		var l25 = 0;
		var l26 = 0;
		var l27 = 0;
		var l28 = 0;
		var l29 = 0;
		var l30 = 0;
		var l31 = 0;
		var l32 = 0;
		var l33 = 0;
		var l34 = 0;
		var l35 = 0;
		var l36 = 0;
		var l37 = 0;
		var l38 = 0;
		var l39 = 0;
		var l40 = 0;
		var l41 = 0;
		HEAP32[dsp + 8 >> 2] = 0;
		for (l0 = 0; (((l0 | 0) < 512) | 0); l0 = (((l0 | 0) + 1) | 0)) {
			HEAPF[dsp + 12 + ((l0 | 0) << 2) >> 2] = 0.;
			
		}
		for (l1 = 0; (((l1 | 0) < 512) | 0); l1 = (((l1 | 0) + 1) | 0)) {
			HEAPF[dsp + 2060 + ((l1 | 0) << 2) >> 2] = 0.;
			
		}
		for (l2 = 0; (((l2 | 0) < 512) | 0); l2 = (((l2 | 0) + 1) | 0)) {
			HEAPF[dsp + 4108 + ((l2 | 0) << 2) >> 2] = 0.;
			
		}
		for (l3 = 0; (((l3 | 0) < 512) | 0); l3 = (((l3 | 0) + 1) | 0)) {
			HEAPF[dsp + 6156 + ((l3 | 0) << 2) >> 2] = 0.;
			
		}
		for (l4 = 0; (((l4 | 0) < 512) | 0); l4 = (((l4 | 0) + 1) | 0)) {
			HEAPF[dsp + 8204 + ((l4 | 0) << 2) >> 2] = 0.;
			
		}
		for (l5 = 0; (((l5 | 0) < 512) | 0); l5 = (((l5 | 0) + 1) | 0)) {
			HEAPF[dsp + 10252 + ((l5 | 0) << 2) >> 2] = 0.;
			
		}
		for (l6 = 0; (((l6 | 0) < 2) | 0); l6 = (((l6 | 0) + 1) | 0)) {
			HEAPF[dsp + 12300 + ((l6 | 0) << 2) >> 2] = 0.;
			
		}
		for (l7 = 0; (((l7 | 0) < 2) | 0); l7 = (((l7 | 0) + 1) | 0)) {
			HEAPF[dsp + 12312 + ((l7 | 0) << 2) >> 2] = 0.;
			
		}
		for (l8 = 0; (((l8 | 0) < 2) | 0); l8 = (((l8 | 0) + 1) | 0)) {
			HEAPF[dsp + 12324 + ((l8 | 0) << 2) >> 2] = 0.;
			
		}
		for (l9 = 0; (((l9 | 0) < 2) | 0); l9 = (((l9 | 0) + 1) | 0)) {
			HEAPF[dsp + 12336 + ((l9 | 0) << 2) >> 2] = 0.;
			
		}
		for (l10 = 0; (((l10 | 0) < 2) | 0); l10 = (((l10 | 0) + 1) | 0)) {
			HEAPF[dsp + 12348 + ((l10 | 0) << 2) >> 2] = 0.;
			
		}
		for (l11 = 0; (((l11 | 0) < 2) | 0); l11 = (((l11 | 0) + 1) | 0)) {
			HEAPF[dsp + 12360 + ((l11 | 0) << 2) >> 2] = 0.;
			
		}
		for (l12 = 0; (((l12 | 0) < 2) | 0); l12 = (((l12 | 0) + 1) | 0)) {
			HEAPF[dsp + 12372 + ((l12 | 0) << 2) >> 2] = 0.;
			
		}
		for (l13 = 0; (((l13 | 0) < 2) | 0); l13 = (((l13 | 0) + 1) | 0)) {
			HEAPF[dsp + 12384 + ((l13 | 0) << 2) >> 2] = 0.;
			
		}
		for (l14 = 0; (((l14 | 0) < 2) | 0); l14 = (((l14 | 0) + 1) | 0)) {
			HEAPF[dsp + 12396 + ((l14 | 0) << 2) >> 2] = 0.;
			
		}
		for (l15 = 0; (((l15 | 0) < 2) | 0); l15 = (((l15 | 0) + 1) | 0)) {
			HEAPF[dsp + 12408 + ((l15 | 0) << 2) >> 2] = 0.;
			
		}
		for (l16 = 0; (((l16 | 0) < 2) | 0); l16 = (((l16 | 0) + 1) | 0)) {
			HEAPF[dsp + 12420 + ((l16 | 0) << 2) >> 2] = 0.;
			
		}
		for (l17 = 0; (((l17 | 0) < 2) | 0); l17 = (((l17 | 0) + 1) | 0)) {
			HEAPF[dsp + 12432 + ((l17 | 0) << 2) >> 2] = 0.;
			
		}
		for (l18 = 0; (((l18 | 0) < 2) | 0); l18 = (((l18 | 0) + 1) | 0)) {
			HEAPF[dsp + 12444 + ((l18 | 0) << 2) >> 2] = 0.;
			
		}
		for (l19 = 0; (((l19 | 0) < 2) | 0); l19 = (((l19 | 0) + 1) | 0)) {
			HEAPF[dsp + 12456 + ((l19 | 0) << 2) >> 2] = 0.;
			
		}
		for (l20 = 0; (((l20 | 0) < 2) | 0); l20 = (((l20 | 0) + 1) | 0)) {
			HEAPF[dsp + 12468 + ((l20 | 0) << 2) >> 2] = 0.;
			
		}
		for (l21 = 0; (((l21 | 0) < 2) | 0); l21 = (((l21 | 0) + 1) | 0)) {
			HEAPF[dsp + 12480 + ((l21 | 0) << 2) >> 2] = 0.;
			
		}
		for (l22 = 0; (((l22 | 0) < 2) | 0); l22 = (((l22 | 0) + 1) | 0)) {
			HEAPF[dsp + 12492 + ((l22 | 0) << 2) >> 2] = 0.;
			
		}
		for (l23 = 0; (((l23 | 0) < 2) | 0); l23 = (((l23 | 0) + 1) | 0)) {
			HEAPF[dsp + 12504 + ((l23 | 0) << 2) >> 2] = 0.;
			
		}
		for (l24 = 0; (((l24 | 0) < 2) | 0); l24 = (((l24 | 0) + 1) | 0)) {
			HEAPF[dsp + 12516 + ((l24 | 0) << 2) >> 2] = 0.;
			
		}
		for (l25 = 0; (((l25 | 0) < 2) | 0); l25 = (((l25 | 0) + 1) | 0)) {
			HEAPF[dsp + 12528 + ((l25 | 0) << 2) >> 2] = 0.;
			
		}
		for (l26 = 0; (((l26 | 0) < 2) | 0); l26 = (((l26 | 0) + 1) | 0)) {
			HEAPF[dsp + 12540 + ((l26 | 0) << 2) >> 2] = 0.;
			
		}
		for (l27 = 0; (((l27 | 0) < 2) | 0); l27 = (((l27 | 0) + 1) | 0)) {
			HEAPF[dsp + 12552 + ((l27 | 0) << 2) >> 2] = 0.;
			
		}
		for (l28 = 0; (((l28 | 0) < 2) | 0); l28 = (((l28 | 0) + 1) | 0)) {
			HEAPF[dsp + 12564 + ((l28 | 0) << 2) >> 2] = 0.;
			
		}
		for (l29 = 0; (((l29 | 0) < 2) | 0); l29 = (((l29 | 0) + 1) | 0)) {
			HEAPF[dsp + 12576 + ((l29 | 0) << 2) >> 2] = 0.;
			
		}
		for (l30 = 0; (((l30 | 0) < 2) | 0); l30 = (((l30 | 0) + 1) | 0)) {
			HEAPF[dsp + 12588 + ((l30 | 0) << 2) >> 2] = 0.;
			
		}
		for (l31 = 0; (((l31 | 0) < 2) | 0); l31 = (((l31 | 0) + 1) | 0)) {
			HEAPF[dsp + 12600 + ((l31 | 0) << 2) >> 2] = 0.;
			
		}
		for (l32 = 0; (((l32 | 0) < 2) | 0); l32 = (((l32 | 0) + 1) | 0)) {
			HEAPF[dsp + 12612 + ((l32 | 0) << 2) >> 2] = 0.;
			
		}
		for (l33 = 0; (((l33 | 0) < 2) | 0); l33 = (((l33 | 0) + 1) | 0)) {
			HEAPF[dsp + 12624 + ((l33 | 0) << 2) >> 2] = 0.;
			
		}
		for (l34 = 0; (((l34 | 0) < 2) | 0); l34 = (((l34 | 0) + 1) | 0)) {
			HEAPF[dsp + 12636 + ((l34 | 0) << 2) >> 2] = 0.;
			
		}
		for (l35 = 0; (((l35 | 0) < 2) | 0); l35 = (((l35 | 0) + 1) | 0)) {
			HEAPF[dsp + 12648 + ((l35 | 0) << 2) >> 2] = 0.;
			
		}
		for (l36 = 0; (((l36 | 0) < 2) | 0); l36 = (((l36 | 0) + 1) | 0)) {
			HEAPF[dsp + 12660 + ((l36 | 0) << 2) >> 2] = 0.;
			
		}
		for (l37 = 0; (((l37 | 0) < 2) | 0); l37 = (((l37 | 0) + 1) | 0)) {
			HEAPF[dsp + 12672 + ((l37 | 0) << 2) >> 2] = 0.;
			
		}
		for (l38 = 0; (((l38 | 0) < 2) | 0); l38 = (((l38 | 0) + 1) | 0)) {
			HEAPF[dsp + 12684 + ((l38 | 0) << 2) >> 2] = 0.;
			
		}
		for (l39 = 0; (((l39 | 0) < 2) | 0); l39 = (((l39 | 0) + 1) | 0)) {
			HEAPF[dsp + 12696 + ((l39 | 0) << 2) >> 2] = 0.;
			
		}
		for (l40 = 0; (((l40 | 0) < 2) | 0); l40 = (((l40 | 0) + 1) | 0)) {
			HEAPF[dsp + 12708 + ((l40 | 0) << 2) >> 2] = 0.;
			
		}
		for (l41 = 0; (((l41 | 0) < 2) | 0); l41 = (((l41 | 0) + 1) | 0)) {
			HEAPF[dsp + 12720 + ((l41 | 0) << 2) >> 2] = 0.;
			
		}
		
	}
	
	function init(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		classInit(dsp, samplingFreq);
		instanceInit(dsp, samplingFreq);
	}
	
	function instanceInit(dsp, samplingFreq) {
		dsp = dsp | 0;
		samplingFreq = samplingFreq | 0;
		instanceConstants(dsp, samplingFreq);
		instanceResetUserInterface(dsp);
		instanceClear(dsp);
	}
	
	function getSampleRate(dsp) {
		dsp = dsp | 0;
		return HEAP32[dsp + 0 >> 2] | 0;
	}
	
	function setParamValue(dsp, offset, value) {
		dsp = dsp | 0;
		offset = offset | 0;
		value = +value;
		HEAPF[dsp + offset >> 2] = value;
	}
	
	function getParamValue(dsp, offset) {
		dsp = dsp | 0;
		offset = offset | 0;
		return +(HEAPF[dsp + offset >> 2]);
	}
	
	function compute(dsp, count, inputs, outputs) {
		dsp = dsp | 0;
		count = count | 0;
		inputs = inputs | 0;
		outputs = outputs | 0;
		var input0 = 0;
		var input1 = 0;
		var input2 = 0;
		var input3 = 0;
		var input4 = 0;
		var input5 = 0;
		var output0 = 0;
		var output1 = 0;
		var output2 = 0;
		var output3 = 0;
		var output4 = 0;
		var output5 = 0;
		var output6 = 0;
		var output7 = 0;
		var output8 = 0;
		var output9 = 0;
		var output10 = 0;
		var output11 = 0;
		var output12 = 0;
		var output13 = 0;
		var output14 = 0;
		var output15 = 0;
		var output16 = 0;
		var output17 = 0;
		var output18 = 0;
		var output19 = 0;
		var output20 = 0;
		var output21 = 0;
		var output22 = 0;
		var output23 = 0;
		var output24 = 0;
		var output25 = 0;
		var output26 = 0;
		var output27 = 0;
		var output28 = 0;
		var output29 = 0;
		var output30 = 0;
		var output31 = 0;
		var output32 = 0;
		var output33 = 0;
		var output34 = 0;
		var output35 = 0;
		var i = 0;
		var fTemp0 = 0.;
		var fTemp1 = 0.;
		var fTemp2 = 0.;
		var fTemp3 = 0.;
		var fTemp4 = 0.;
		var fTemp5 = 0.;
		var fTemp6 = 0.;
		var fTemp7 = 0.;
		var fTemp8 = 0.;
		var fTemp9 = 0.;
		var fTemp10 = 0.;
		var fTemp11 = 0.;
		var fTemp12 = 0.;
		var fTemp13 = 0.;
		var fTemp14 = 0.;
		input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);
		input1 = (HEAP32[inputs + (1 << 2) >> 2] | 0);
		input2 = (HEAP32[inputs + (2 << 2) >> 2] | 0);
		input3 = (HEAP32[inputs + (3 << 2) >> 2] | 0);
		input4 = (HEAP32[inputs + (4 << 2) >> 2] | 0);
		input5 = (HEAP32[inputs + (5 << 2) >> 2] | 0);
		output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);
		output1 = (HEAP32[outputs + (1 << 2) >> 2] | 0);
		output2 = (HEAP32[outputs + (2 << 2) >> 2] | 0);
		output3 = (HEAP32[outputs + (3 << 2) >> 2] | 0);
		output4 = (HEAP32[outputs + (4 << 2) >> 2] | 0);
		output5 = (HEAP32[outputs + (5 << 2) >> 2] | 0);
		output6 = (HEAP32[outputs + (6 << 2) >> 2] | 0);
		output7 = (HEAP32[outputs + (7 << 2) >> 2] | 0);
		output8 = (HEAP32[outputs + (8 << 2) >> 2] | 0);
		output9 = (HEAP32[outputs + (9 << 2) >> 2] | 0);
		output10 = (HEAP32[outputs + (10 << 2) >> 2] | 0);
		output11 = (HEAP32[outputs + (11 << 2) >> 2] | 0);
		output12 = (HEAP32[outputs + (12 << 2) >> 2] | 0);
		output13 = (HEAP32[outputs + (13 << 2) >> 2] | 0);
		output14 = (HEAP32[outputs + (14 << 2) >> 2] | 0);
		output15 = (HEAP32[outputs + (15 << 2) >> 2] | 0);
		output16 = (HEAP32[outputs + (16 << 2) >> 2] | 0);
		output17 = (HEAP32[outputs + (17 << 2) >> 2] | 0);
		output18 = (HEAP32[outputs + (18 << 2) >> 2] | 0);
		output19 = (HEAP32[outputs + (19 << 2) >> 2] | 0);
		output20 = (HEAP32[outputs + (20 << 2) >> 2] | 0);
		output21 = (HEAP32[outputs + (21 << 2) >> 2] | 0);
		output22 = (HEAP32[outputs + (22 << 2) >> 2] | 0);
		output23 = (HEAP32[outputs + (23 << 2) >> 2] | 0);
		output24 = (HEAP32[outputs + (24 << 2) >> 2] | 0);
		output25 = (HEAP32[outputs + (25 << 2) >> 2] | 0);
		output26 = (HEAP32[outputs + (26 << 2) >> 2] | 0);
		output27 = (HEAP32[outputs + (27 << 2) >> 2] | 0);
		output28 = (HEAP32[outputs + (28 << 2) >> 2] | 0);
		output29 = (HEAP32[outputs + (29 << 2) >> 2] | 0);
		output30 = (HEAP32[outputs + (30 << 2) >> 2] | 0);
		output31 = (HEAP32[outputs + (31 << 2) >> 2] | 0);
		output32 = (HEAP32[outputs + (32 << 2) >> 2] | 0);
		output33 = (HEAP32[outputs + (33 << 2) >> 2] | 0);
		output34 = (HEAP32[outputs + (34 << 2) >> 2] | 0);
		output35 = (HEAP32[outputs + (35 << 2) >> 2] | 0);
		for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {
			HEAPF[dsp + 12 + ((((HEAP32[dsp + 8 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(HEAPF[input0 + ((i | 0) << 2) >> 2]));
			fTemp0 = +(+(HEAPF[input1 + ((i | 0) << 2) >> 2]));
			HEAPF[dsp + 2060 + ((((HEAP32[dsp + 8 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(fTemp0);
			fTemp1 = +(+(HEAPF[input2 + ((i | 0) << 2) >> 2]));
			HEAPF[dsp + 4108 + ((((HEAP32[dsp + 8 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(fTemp1);
			fTemp2 = +(+(HEAPF[input3 + ((i | 0) << 2) >> 2]));
			HEAPF[dsp + 6156 + ((((HEAP32[dsp + 8 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(fTemp2);
			fTemp3 = +(+(HEAPF[input4 + ((i | 0) << 2) >> 2]));
			HEAPF[dsp + 8204 + ((((HEAP32[dsp + 8 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(fTemp3);
			fTemp4 = +(+(HEAPF[input5 + ((i | 0) << 2) >> 2]));
			HEAPF[dsp + 10252 + ((((HEAP32[dsp + 8 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(fTemp4);
			HEAPF[dsp + 12300 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12300 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 244) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 233) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 221) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 209) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 197) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12308 >> 2] = +(+(HEAPF[dsp + 12300 + (0 << 2) >> 2]));
			HEAPF[output0 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12308 >> 2]));
			fTemp5 = +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 246) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12312 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12312 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp5) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 236) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 225) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 215) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 204) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12320 >> 2] = +(+(HEAPF[dsp + 12312 + (0 << 2) >> 2]));
			HEAPF[output1 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12320 >> 2]));
			HEAPF[dsp + 12324 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12324 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 247) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 239) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 230) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 220) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 211) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12332 >> 2] = +(+(HEAPF[dsp + 12324 + (0 << 2) >> 2]));
			HEAPF[output2 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12332 >> 2]));
			fTemp6 = +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 249) | 0) & 511) | 0) << 2) >> 2]));
			fTemp7 = +(+(fTemp6) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 241) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12336 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12336 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(fTemp7) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 233) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 225) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 217) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12344 >> 2] = +(+(HEAPF[dsp + 12336 + (0 << 2) >> 2]));
			HEAPF[output3 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12344 >> 2]));
			fTemp8 = +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 250) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12348 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12348 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp8) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 243) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 236) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 229) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 222) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12356 >> 2] = +(+(HEAPF[dsp + 12348 + (0 << 2) >> 2]));
			HEAPF[output4 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12356 >> 2]));
			HEAPF[dsp + 12360 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12360 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp8) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 245) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 239) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 232) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 225) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12368 >> 2] = +(+(HEAPF[dsp + 12360 + (0 << 2) >> 2]));
			HEAPF[output5 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12368 >> 2]));
			HEAPF[dsp + 12372 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12372 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp5) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 235) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 224) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 213) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 201) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12380 >> 2] = +(+(HEAPF[dsp + 12372 + (0 << 2) >> 2]));
			HEAPF[output6 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12380 >> 2]));
			HEAPF[dsp + 12384 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12384 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 221) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 248) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 211) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 230) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 239) | 0) & 511) | 0) << 2) >> 2]))))))))));
			HEAPF[dsp + 12392 >> 2] = +(+(HEAPF[dsp + 12384 + (0 << 2) >> 2]));
			HEAPF[output7 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12392 >> 2]));
			HEAPF[dsp + 12396 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12396 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp6) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 243) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 235) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 227) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 219) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12404 >> 2] = +(+(HEAPF[dsp + 12396 + (0 << 2) >> 2]));
			HEAPF[output8 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12404 >> 2]));
			HEAPF[dsp + 12408 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12408 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 251) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 225) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 232) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 239) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 245) | 0) & 511) | 0) << 2) >> 2]))))))))));
			HEAPF[dsp + 12416 >> 2] = +(+(HEAPF[dsp + 12408 + (0 << 2) >> 2]));
			HEAPF[output9 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12416 >> 2]));
			HEAPF[dsp + 12420 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12420 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 251) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 247) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 241) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 236) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 230) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12428 >> 2] = +(+(HEAPF[dsp + 12420 + (0 << 2) >> 2]));
			HEAPF[output10 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12428 >> 2]));
			fTemp9 = +(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 252) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 248) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12432 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12432 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(fTemp9) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 243) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 238) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 233) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12440 >> 2] = +(+(HEAPF[dsp + 12432 + (0 << 2) >> 2]));
			HEAPF[output11 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12440 >> 2]));
			HEAPF[dsp + 12444 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12444 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(fTemp7) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 232) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 223) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 212) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12452 >> 2] = +(+(HEAPF[dsp + 12444 + (0 << 2) >> 2]));
			HEAPF[output12 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12452 >> 2]));
			HEAPF[dsp + 12456 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12456 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 224) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 240) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 246) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 251) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 232) | 0) & 511) | 0) << 2) >> 2]))))))))));
			HEAPF[dsp + 12464 >> 2] = +(+(HEAPF[dsp + 12456 + (0 << 2) >> 2]));
			HEAPF[output13 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12464 >> 2]));
			HEAPF[dsp + 12468 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12468 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 231) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 244) | 0) & 511) | 0) << 2) >> 2]) + +(+(fTemp9) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 238) | 0) & 511) | 0) << 2) >> 2]))))))));
			HEAPF[dsp + 12476 >> 2] = +(+(HEAPF[dsp + 12468 + (0 << 2) >> 2]));
			HEAPF[output14 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12476 >> 2]));
			HEAPF[dsp + 12480 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12480 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 253) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 250) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 246) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 241) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 236) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12488 >> 2] = +(+(HEAPF[dsp + 12480 + (0 << 2) >> 2]));
			HEAPF[output15 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12488 >> 2]));
			fTemp10 = +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 254) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12492 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12492 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp10) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 251) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 248) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 244) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 239) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12500 >> 2] = +(+(HEAPF[dsp + 12492 + (0 << 2) >> 2]));
			HEAPF[output16 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12500 >> 2]));
			HEAPF[dsp + 12504 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12504 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp10) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 252) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 249) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 245) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 242) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12512 >> 2] = +(+(HEAPF[dsp + 12504 + (0 << 2) >> 2]));
			HEAPF[output17 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12512 >> 2]));
			HEAPF[dsp + 12516 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12516 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 246) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 252) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 257) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 239) | 0) & 511) | 0) << 2) >> 2]))))))))));
			HEAPF[dsp + 12524 >> 2] = +(+(HEAPF[dsp + 12516 + (0 << 2) >> 2]));
			HEAPF[output18 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12524 >> 2]));
			fTemp11 = +(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2])));
			HEAPF[dsp + 12528 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12528 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 245) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 250) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 253) | 0) & 511) | 0) << 2) >> 2]) + +(fTemp11))))))));
			HEAPF[dsp + 12536 >> 2] = +(+(HEAPF[dsp + 12528 + (0 << 2) >> 2]));
			HEAPF[output19 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12536 >> 2]));
			fTemp12 = +(+(fTemp11) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 254) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12540 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12540 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(fTemp12) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 251) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 247) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12548 >> 2] = +(+(HEAPF[dsp + 12540 + (0 << 2) >> 2]));
			HEAPF[output20 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12548 >> 2]));
			HEAPF[dsp + 12552 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12552 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(fTemp12) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 252) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 249) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12560 >> 2] = +(+(HEAPF[dsp + 12552 + (0 << 2) >> 2]));
			HEAPF[output21 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12560 >> 2]));
			HEAPF[dsp + 12564 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12564 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(fTemp12) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 253) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 250) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12572 >> 2] = +(+(HEAPF[dsp + 12564 + (0 << 2) >> 2]));
			HEAPF[output22 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12572 >> 2]));
			HEAPF[dsp + 12576 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12576 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 251) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 255) | 0) & 511) | 0) << 2) >> 2]) + +(+(fTemp11) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 253) | 0) & 511) | 0) << 2) >> 2]))))))));
			HEAPF[dsp + 12584 >> 2] = +(+(HEAPF[dsp + 12576 + (0 << 2) >> 2]));
			HEAPF[output23 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12584 >> 2]));
			HEAPF[dsp + 12588 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12588 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 263) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 270) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 274) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 276) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 276) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12596 >> 2] = +(+(HEAPF[dsp + 12588 + (0 << 2) >> 2]));
			HEAPF[output24 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12596 >> 2]));
			HEAPF[dsp + 12600 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12600 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 261) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 265) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 268) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 269) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 269) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12608 >> 2] = +(+(HEAPF[dsp + 12600 + (0 << 2) >> 2]));
			HEAPF[output25 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12608 >> 2]));
			fTemp13 = +(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 260) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 263) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12612 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12612 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(fTemp13) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 265) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 265) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 265) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12620 >> 2] = +(+(HEAPF[dsp + 12612 + (0 << 2) >> 2]));
			HEAPF[output26 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12620 >> 2]));
			HEAPF[dsp + 12624 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12624 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 259) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 261) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 263) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 263) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 263) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12632 >> 2] = +(+(HEAPF[dsp + 12624 + (0 << 2) >> 2]));
			HEAPF[output27 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12632 >> 2]));
			fTemp14 = +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 258) | 0) & 511) | 0) << 2) >> 2]));
			HEAPF[dsp + 12636 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12636 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp14) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 260) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 261) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 262) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 262) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12644 >> 2] = +(+(HEAPF[dsp + 12636 + (0 << 2) >> 2]));
			HEAPF[output28 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12644 >> 2]));
			HEAPF[dsp + 12648 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12648 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(fTemp14) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 259) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 260) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 261) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 261) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12656 >> 2] = +(+(HEAPF[dsp + 12648 + (0 << 2) >> 2]));
			HEAPF[output29 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12656 >> 2]));
			HEAPF[dsp + 12660 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12660 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 266) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 276) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 285) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 293) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 300) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12668 >> 2] = +(+(HEAPF[dsp + 12660 + (0 << 2) >> 2]));
			HEAPF[output30 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12668 >> 2]));
			HEAPF[dsp + 12672 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12672 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 264) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 272) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 278) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 284) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 289) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12680 >> 2] = +(+(HEAPF[dsp + 12672 + (0 << 2) >> 2]));
			HEAPF[output31 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12680 >> 2]));
			HEAPF[dsp + 12684 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12684 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(+(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 262) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 268) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 273) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 278) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 281) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12692 >> 2] = +(+(HEAPF[dsp + 12684 + (0 << 2) >> 2]));
			HEAPF[output32 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12692 >> 2]));
			HEAPF[dsp + 12696 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12696 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 274) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 270) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 266) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 261) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 276) | 0) & 511) | 0) << 2) >> 2]))))))))));
			HEAPF[dsp + 12704 >> 2] = +(+(HEAPF[dsp + 12696 + (0 << 2) >> 2]));
			HEAPF[output33 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12704 >> 2]));
			HEAPF[dsp + 12708 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12708 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(HEAPF[dsp + 4108 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 264) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 2060 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 260) | 0) & 511) | 0) << 2) >> 2]) + +(+(HEAPF[dsp + 12 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 256) | 0) & 511) | 0) << 2) >> 2]) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 268) | 0) & 511) | 0) << 2) >> 2])))) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 271) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 273) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12716 >> 2] = +(+(HEAPF[dsp + 12708 + (0 << 2) >> 2]));
			HEAPF[output34 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12716 >> 2]));
			HEAPF[dsp + 12720 + (0 << 2) >> 2] = +(max_f(+(+(HEAPF[dsp + 12720 + (1 << 2) >> 2]) - +(HEAPF[dsp + 4 >> 2])), +(fabsf(+(+(+(+(fTemp13) + +(HEAPF[dsp + 6156 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 266) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 8204 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 268) | 0) & 511) | 0) << 2) >> 2])) + +(HEAPF[dsp + 10252 + ((((((HEAP32[dsp + 8 >> 2] | 0) - 270) | 0) & 511) | 0) << 2) >> 2]))))));
			HEAPF[dsp + 12728 >> 2] = +(+(HEAPF[dsp + 12720 + (0 << 2) >> 2]));
			HEAPF[output35 + ((i | 0) << 2) >> 2] = +(+(HEAPF[dsp + 12728 >> 2]));
			HEAP32[dsp + 8 >> 2] = (((HEAP32[dsp + 8 >> 2] | 0) + 1) | 0);
			HEAPF[dsp + 12300 + (1 << 2) >> 2] = +(HEAPF[dsp + 12300 + (0 << 2) >> 2]);
			HEAPF[dsp + 12312 + (1 << 2) >> 2] = +(HEAPF[dsp + 12312 + (0 << 2) >> 2]);
			HEAPF[dsp + 12324 + (1 << 2) >> 2] = +(HEAPF[dsp + 12324 + (0 << 2) >> 2]);
			HEAPF[dsp + 12336 + (1 << 2) >> 2] = +(HEAPF[dsp + 12336 + (0 << 2) >> 2]);
			HEAPF[dsp + 12348 + (1 << 2) >> 2] = +(HEAPF[dsp + 12348 + (0 << 2) >> 2]);
			HEAPF[dsp + 12360 + (1 << 2) >> 2] = +(HEAPF[dsp + 12360 + (0 << 2) >> 2]);
			HEAPF[dsp + 12372 + (1 << 2) >> 2] = +(HEAPF[dsp + 12372 + (0 << 2) >> 2]);
			HEAPF[dsp + 12384 + (1 << 2) >> 2] = +(HEAPF[dsp + 12384 + (0 << 2) >> 2]);
			HEAPF[dsp + 12396 + (1 << 2) >> 2] = +(HEAPF[dsp + 12396 + (0 << 2) >> 2]);
			HEAPF[dsp + 12408 + (1 << 2) >> 2] = +(HEAPF[dsp + 12408 + (0 << 2) >> 2]);
			HEAPF[dsp + 12420 + (1 << 2) >> 2] = +(HEAPF[dsp + 12420 + (0 << 2) >> 2]);
			HEAPF[dsp + 12432 + (1 << 2) >> 2] = +(HEAPF[dsp + 12432 + (0 << 2) >> 2]);
			HEAPF[dsp + 12444 + (1 << 2) >> 2] = +(HEAPF[dsp + 12444 + (0 << 2) >> 2]);
			HEAPF[dsp + 12456 + (1 << 2) >> 2] = +(HEAPF[dsp + 12456 + (0 << 2) >> 2]);
			HEAPF[dsp + 12468 + (1 << 2) >> 2] = +(HEAPF[dsp + 12468 + (0 << 2) >> 2]);
			HEAPF[dsp + 12480 + (1 << 2) >> 2] = +(HEAPF[dsp + 12480 + (0 << 2) >> 2]);
			HEAPF[dsp + 12492 + (1 << 2) >> 2] = +(HEAPF[dsp + 12492 + (0 << 2) >> 2]);
			HEAPF[dsp + 12504 + (1 << 2) >> 2] = +(HEAPF[dsp + 12504 + (0 << 2) >> 2]);
			HEAPF[dsp + 12516 + (1 << 2) >> 2] = +(HEAPF[dsp + 12516 + (0 << 2) >> 2]);
			HEAPF[dsp + 12528 + (1 << 2) >> 2] = +(HEAPF[dsp + 12528 + (0 << 2) >> 2]);
			HEAPF[dsp + 12540 + (1 << 2) >> 2] = +(HEAPF[dsp + 12540 + (0 << 2) >> 2]);
			HEAPF[dsp + 12552 + (1 << 2) >> 2] = +(HEAPF[dsp + 12552 + (0 << 2) >> 2]);
			HEAPF[dsp + 12564 + (1 << 2) >> 2] = +(HEAPF[dsp + 12564 + (0 << 2) >> 2]);
			HEAPF[dsp + 12576 + (1 << 2) >> 2] = +(HEAPF[dsp + 12576 + (0 << 2) >> 2]);
			HEAPF[dsp + 12588 + (1 << 2) >> 2] = +(HEAPF[dsp + 12588 + (0 << 2) >> 2]);
			HEAPF[dsp + 12600 + (1 << 2) >> 2] = +(HEAPF[dsp + 12600 + (0 << 2) >> 2]);
			HEAPF[dsp + 12612 + (1 << 2) >> 2] = +(HEAPF[dsp + 12612 + (0 << 2) >> 2]);
			HEAPF[dsp + 12624 + (1 << 2) >> 2] = +(HEAPF[dsp + 12624 + (0 << 2) >> 2]);
			HEAPF[dsp + 12636 + (1 << 2) >> 2] = +(HEAPF[dsp + 12636 + (0 << 2) >> 2]);
			HEAPF[dsp + 12648 + (1 << 2) >> 2] = +(HEAPF[dsp + 12648 + (0 << 2) >> 2]);
			HEAPF[dsp + 12660 + (1 << 2) >> 2] = +(HEAPF[dsp + 12660 + (0 << 2) >> 2]);
			HEAPF[dsp + 12672 + (1 << 2) >> 2] = +(HEAPF[dsp + 12672 + (0 << 2) >> 2]);
			HEAPF[dsp + 12684 + (1 << 2) >> 2] = +(HEAPF[dsp + 12684 + (0 << 2) >> 2]);
			HEAPF[dsp + 12696 + (1 << 2) >> 2] = +(HEAPF[dsp + 12696 + (0 << 2) >> 2]);
			HEAPF[dsp + 12708 + (1 << 2) >> 2] = +(HEAPF[dsp + 12708 + (0 << 2) >> 2]);
			HEAPF[dsp + 12720 + (1 << 2) >> 2] = +(HEAPF[dsp + 12720 + (0 << 2) >> 2]);
			
		}
		
	}
	
	return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, instanceConstants : instanceConstants, instanceResetUserInterface : instanceResetUserInterface, instanceClear : instanceClear, init : init, getSampleRate : getSampleRate, setParamValue : setParamValue, getParamValue : getParamValue, compute : compute };
}

function getSizemydsp() {
	return 12732;
}

function getPathTablemydsp() {
	var pathTable = [];
	pathTable["/felix2/ctrl___0/ctrl__0"] = 12308;
	pathTable["/felix2/ctrl___0/ctrl__1"] = 12320;
	pathTable["/felix2/ctrl___1/ctrl_14"] = 12428;
	pathTable["/felix2/ctrl___1/ctrl_15"] = 12440;
	pathTable["/felix2/ctrl___2/ctrl_20"] = 12452;
	pathTable["/felix2/ctrl___2/ctrl_21"] = 12464;
	pathTable["/felix2/ctrl___2/ctrl_22"] = 12476;
	pathTable["/felix2/ctrl___2/ctrl_23"] = 12488;
	pathTable["/felix2/ctrl___2/ctrl_24"] = 12500;
	pathTable["/felix2/ctrl___2/ctrl_25"] = 12512;
	pathTable["/felix2/ctrl___3/ctrl_30"] = 12524;
	pathTable["/felix2/ctrl___3/ctrl_31"] = 12536;
	pathTable["/felix2/ctrl___0/ctrl__2"] = 12332;
	pathTable["/felix2/ctrl___3/ctrl_32"] = 12548;
	pathTable["/felix2/ctrl___3/ctrl_33"] = 12560;
	pathTable["/felix2/ctrl___3/ctrl_34"] = 12572;
	pathTable["/felix2/ctrl___3/ctrl_35"] = 12584;
	pathTable["/felix2/ctrl___4/ctrl_40"] = 12596;
	pathTable["/felix2/ctrl___4/ctrl_41"] = 12608;
	pathTable["/felix2/ctrl___4/ctrl_42"] = 12620;
	pathTable["/felix2/ctrl___4/ctrl_43"] = 12632;
	pathTable["/felix2/ctrl___4/ctrl_44"] = 12644;
	pathTable["/felix2/ctrl___4/ctrl_45"] = 12656;
	pathTable["/felix2/ctrl___0/ctrl__3"] = 12344;
	pathTable["/felix2/ctrl___5/ctrl_50"] = 12668;
	pathTable["/felix2/ctrl___5/ctrl_51"] = 12680;
	pathTable["/felix2/ctrl___5/ctrl_52"] = 12692;
	pathTable["/felix2/ctrl___5/ctrl_53"] = 12704;
	pathTable["/felix2/ctrl___5/ctrl_54"] = 12716;
	pathTable["/felix2/ctrl___5/ctrl_55"] = 12728;
	pathTable["/felix2/ctrl___0/ctrl__4"] = 12356;
	pathTable["/felix2/ctrl___0/ctrl__5"] = 12368;
	pathTable["/felix2/ctrl___1/ctrl_10"] = 12380;
	pathTable["/felix2/ctrl___1/ctrl_11"] = 12392;
	pathTable["/felix2/ctrl___1/ctrl_12"] = 12404;
	pathTable["/felix2/ctrl___1/ctrl_13"] = 12416;
	return pathTable;
}

function getJSONmydsp() {
	return "{\"name\":\"felix2\",\"inputs\":\"6\",\"outputs\":\"36\",\"meta\":[{\"math.lib/author\":\"GRAME\"},{\"math.lib/copyright\":\"GRAME\"},{\"math.lib/deprecated\":\"This library is deprecated and is not maintained anymore. It will be removed in August 2017.\"},{\"math.lib/license\":\"LGPL with exception\"},{\"math.lib/name\":\"Math Library\"},{\"math.lib/version\":\"1.0\"},{\"music.lib/author\":\"GRAME\"},{\"music.lib/copyright\":\"GRAME\"},{\"music.lib/deprecated\":\"This library is deprecated and is not maintained anymore. It will be removed in August 2017.\"},{\"music.lib/license\":\"LGPL with exception\"},{\"music.lib/name\":\"Music Library\"},{\"music.lib/version\":\"1.0\"},{\"name\":\"felix2\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"felix2\",\"items\":[{\"type\":\"hgroup\",\"label\":\"ctrl   0\",\"items\":[{\"type\":\"vbargraph\",\"label\":\"ctrl  0\",\"address\":\"/felix2/ctrl___0/ctrl__0\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl  1\",\"address\":\"/felix2/ctrl___0/ctrl__1\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl  2\",\"address\":\"/felix2/ctrl___0/ctrl__2\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl  3\",\"address\":\"/felix2/ctrl___0/ctrl__3\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl  4\",\"address\":\"/felix2/ctrl___0/ctrl__4\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl  5\",\"address\":\"/felix2/ctrl___0/ctrl__5\",\"min\":\"0\",\"max\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"ctrl   1\",\"items\":[{\"type\":\"vbargraph\",\"label\":\"ctrl 10\",\"address\":\"/felix2/ctrl___1/ctrl_10\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 11\",\"address\":\"/felix2/ctrl___1/ctrl_11\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 12\",\"address\":\"/felix2/ctrl___1/ctrl_12\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 13\",\"address\":\"/felix2/ctrl___1/ctrl_13\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 14\",\"address\":\"/felix2/ctrl___1/ctrl_14\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 15\",\"address\":\"/felix2/ctrl___1/ctrl_15\",\"min\":\"0\",\"max\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"ctrl   2\",\"items\":[{\"type\":\"vbargraph\",\"label\":\"ctrl 20\",\"address\":\"/felix2/ctrl___2/ctrl_20\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 21\",\"address\":\"/felix2/ctrl___2/ctrl_21\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 22\",\"address\":\"/felix2/ctrl___2/ctrl_22\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 23\",\"address\":\"/felix2/ctrl___2/ctrl_23\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 24\",\"address\":\"/felix2/ctrl___2/ctrl_24\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 25\",\"address\":\"/felix2/ctrl___2/ctrl_25\",\"min\":\"0\",\"max\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"ctrl   3\",\"items\":[{\"type\":\"vbargraph\",\"label\":\"ctrl 30\",\"address\":\"/felix2/ctrl___3/ctrl_30\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 31\",\"address\":\"/felix2/ctrl___3/ctrl_31\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 32\",\"address\":\"/felix2/ctrl___3/ctrl_32\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 33\",\"address\":\"/felix2/ctrl___3/ctrl_33\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 34\",\"address\":\"/felix2/ctrl___3/ctrl_34\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 35\",\"address\":\"/felix2/ctrl___3/ctrl_35\",\"min\":\"0\",\"max\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"ctrl   4\",\"items\":[{\"type\":\"vbargraph\",\"label\":\"ctrl 40\",\"address\":\"/felix2/ctrl___4/ctrl_40\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 41\",\"address\":\"/felix2/ctrl___4/ctrl_41\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 42\",\"address\":\"/felix2/ctrl___4/ctrl_42\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 43\",\"address\":\"/felix2/ctrl___4/ctrl_43\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 44\",\"address\":\"/felix2/ctrl___4/ctrl_44\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 45\",\"address\":\"/felix2/ctrl___4/ctrl_45\",\"min\":\"0\",\"max\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"ctrl   5\",\"items\":[{\"type\":\"vbargraph\",\"label\":\"ctrl 50\",\"address\":\"/felix2/ctrl___5/ctrl_50\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 51\",\"address\":\"/felix2/ctrl___5/ctrl_51\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 52\",\"address\":\"/felix2/ctrl___5/ctrl_52\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 53\",\"address\":\"/felix2/ctrl___5/ctrl_53\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 54\",\"address\":\"/felix2/ctrl___5/ctrl_54\",\"min\":\"0\",\"max\":\"1\"},{\"type\":\"vbargraph\",\"label\":\"ctrl 55\",\"address\":\"/felix2/ctrl___5/ctrl_55\",\"min\":\"0\",\"max\":\"1\"}]}]}]}";
}

function metadatamydsp(m) {
	m.declare("math.lib/author", "GRAME");
	m.declare("math.lib/copyright", "GRAME");
	m.declare("math.lib/deprecated", "This library is deprecated and is not maintained anymore. It will be removed in August 2017.");
	m.declare("math.lib/license", "LGPL with exception");
	m.declare("math.lib/name", "Math Library");
	m.declare("math.lib/version", "1.0");
	m.declare("music.lib/author", "GRAME");
	m.declare("music.lib/copyright", "GRAME");
	m.declare("music.lib/deprecated", "This library is deprecated and is not maintained anymore. It will be removed in August 2017.");
	m.declare("music.lib/license", "LGPL with exception");
	m.declare("music.lib/name", "Music Library");
	m.declare("music.lib/version", "1.0");
	m.declare("name", "felix2");
}

