


pub struct mydsp {
	
	fDummy: f32,
	fCheckbox0: f32,
	fHbargraph0: f32,
	fHslider0: f32,
	fHbargraph1: f32,
	fCheckbox1: f32,
	fHbargraph2: f32,
	fHslider1: f32,
	fHbargraph3: f32,
	fCheckbox2: f32,
	fHbargraph4: f32,
	fHslider2: f32,
	fHbargraph5: f32,
	fCheckbox3: f32,
	fHbargraph6: f32,
	fHslider3: f32,
	fHbargraph7: f32,
	fCheckbox4: f32,
	fCheckbox5: f32,
	fCheckbox6: f32,
	fHbargraph8: f32,
	fHslider4: f32,
	fHbargraph9: f32,
	fCheckbox7: f32,
	fHbargraph10: f32,
	fHslider5: f32,
	fHbargraph11: f32,
	fHslider6: f32,
	fHbargraph12: f32,
	fCheckbox8: f32,
	fHbargraph13: f32,
	iConst0: i32,
	fSamplingFreq: i32,
	
}

impl mydsp {
		
	pub fn new() -> mydsp { 
		mydsp {
			fDummy: 0 as f32,
			fCheckbox0: 0.0,
			fHbargraph0: 0.0,
			fHslider0: 0.0,
			fHbargraph1: 0.0,
			fCheckbox1: 0.0,
			fHbargraph2: 0.0,
			fHslider1: 0.0,
			fHbargraph3: 0.0,
			fCheckbox2: 0.0,
			fHbargraph4: 0.0,
			fHslider2: 0.0,
			fHbargraph5: 0.0,
			fCheckbox3: 0.0,
			fHbargraph6: 0.0,
			fHslider3: 0.0,
			fHbargraph7: 0.0,
			fCheckbox4: 0.0,
			fCheckbox5: 0.0,
			fCheckbox6: 0.0,
			fHbargraph8: 0.0,
			fHslider4: 0.0,
			fHbargraph9: 0.0,
			fCheckbox7: 0.0,
			fHbargraph10: 0.0,
			fHslider5: 0.0,
			fHbargraph11: 0.0,
			fHslider6: 0.0,
			fHbargraph12: 0.0,
			fCheckbox8: 0.0,
			fHbargraph13: 0.0,
			iConst0: 0,
			fSamplingFreq: 0,
		}
	}
	
	pub fn metadata(&mut self, m: &mut Meta) { 
		m.declare("author", "Vincent Rateau, GRAME");
		m.declare("license", "GPL v3");
		m.declare("name", "midiTester");
		m.declare("reference", "www.sonejo.net");
		m.declare("version", "1.0");
	}

	pub fn getSampleRate(&mut self) -> i32 {
		self.fSamplingFreq
	}
	pub fn getNumInputs(&mut self) -> i32 {
		1
	}
	pub fn getNumOutputs(&mut self) -> i32 {
		1
	}
	pub fn getInputRate(&mut self, channel: i32) -> i32 {
		let mut rate: i32;
		match (channel) {
			0 => {
				rate = 0;
				
			},
			_ => {
				rate = -1;
				
			},
			
		} 
		rate
	}
	pub fn getOutputRate(&mut self, channel: i32) -> i32 {
		let mut rate: i32;
		match (channel) {
			0 => {
				rate = 1;
				
			},
			_ => {
				rate = -1;
				
			},
			
		} 
		rate
	}
	
	pub fn classInit(samplingFreq: i32) {
		
	}
	
	pub fn instanceResetUserInterface(&mut self) {
		self.fCheckbox0 = 0.0;
		self.fHslider0 = 0.0;
		self.fCheckbox1 = 0.0;
		self.fHslider1 = 60.0;
		self.fCheckbox2 = 0.0;
		self.fHslider2 = 60.0;
		self.fCheckbox3 = 0.0;
		self.fHslider3 = 60.0;
		self.fCheckbox4 = 0.0;
		self.fCheckbox5 = 0.0;
		self.fCheckbox6 = 0.0;
		self.fHslider4 = 60.0;
		self.fCheckbox7 = 0.0;
		self.fHslider5 = 60.0;
		self.fHslider6 = 60.0;
		self.fCheckbox8 = 0.0;
		
	}
	
	pub fn instanceClear(&mut self) {
		
	}
	
	pub fn instanceConstants(&mut self, samplingFreq: i32) {
		self.fSamplingFreq = samplingFreq;
		self.iConst0 = 0;
		
	}
	
	pub fn instanceInit(&mut self, samplingFreq: i32) {
		self.instanceConstants(samplingFreq);
		self.instanceResetUserInterface();
		self.instanceClear();
	}
	
	pub fn init(&mut self, samplingFreq: i32) {
		mydsp::classInit(samplingFreq);
		self.instanceInit(samplingFreq);
	}
	
	pub fn buildUserInterface(&mut self, ui_interface: &mut UI<f32>) {
		ui_interface.openVerticalBox("FAUST MIDI TESTER");
		ui_interface.declare(&mut self.fDummy, "1", "");
		ui_interface.openHorizontalBox("0x00");
		ui_interface.openVerticalBox("CTRL IN/OUT");
		ui_interface.declare(&mut self.fCheckbox8, "midi", "ctrl 100");
		ui_interface.addCheckButton("Ctrl Bool IN (Ctrl 100)", &mut self.fCheckbox8);
		ui_interface.declare(&mut self.fHbargraph13, "midi", "ctrl 101");
		ui_interface.addHorizontalBargraph("Ctrl Bool OUT (Ctrl 101)", &mut self.fHbargraph13, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider6, "midi", "ctrl 50");
		ui_interface.addHorizontalSlider("Ctrl Value IN (Ctrl 50)", &mut self.fHslider6, 60.0, 0.0, 127.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph12, "midi", "ctrl 51");
		ui_interface.addHorizontalBargraph("Ctrl Value OUT (Ctrl 51)", &mut self.fHbargraph12, 0.0, 127.0);
		ui_interface.closeBox();
		ui_interface.openVerticalBox("MIDI SYNC (IN)");
		ui_interface.declare(&mut self.fCheckbox4, "midi", "start");
		ui_interface.declare(&mut self.fCheckbox4, "midi", "stop");
		ui_interface.addCheckButton("MIDI START/STOP", &mut self.fCheckbox4);
		ui_interface.declare(&mut self.fCheckbox5, "midi", "clock");
		ui_interface.addCheckButton("MIDI clock signal", &mut self.fCheckbox5);
		ui_interface.closeBox();
		ui_interface.openVerticalBox("NOTE OFF IN/OUT");
		ui_interface.declare(&mut self.fCheckbox6, "midi", "keyoff 100");
		ui_interface.addCheckButton("NoteOff Bool IN (Note 100)", &mut self.fCheckbox6);
		ui_interface.declare(&mut self.fHbargraph8, "midi", "keyoff 101");
		ui_interface.addHorizontalBargraph("NoteOff Bool OUT (Note 101)", &mut self.fHbargraph8, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider4, "midi", "keyoff 50");
		ui_interface.addHorizontalSlider("NoteOff Value IN (Note 50)", &mut self.fHslider4, 60.0, 0.0, 127.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph9, "midi", "keyoff 51");
		ui_interface.addHorizontalBargraph("NoteOff Value OUT (Note 51)", &mut self.fHbargraph9, 0.0, 127.0);
		ui_interface.closeBox();
		ui_interface.openVerticalBox("NOTE ON IN/OUT");
		ui_interface.declare(&mut self.fCheckbox7, "midi", "keyon 100");
		ui_interface.addCheckButton("NoteOn Bool IN (Note 100)", &mut self.fCheckbox7);
		ui_interface.declare(&mut self.fHbargraph10, "midi", "keyon 101");
		ui_interface.addHorizontalBargraph("NoteOn Bool OUT (Note 101)", &mut self.fHbargraph10, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider5, "midi", "keyon 50");
		ui_interface.addHorizontalSlider("NoteOn Value IN (Note 50)", &mut self.fHslider5, 60.0, 0.0, 127.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph11, "midi", "keyon 51");
		ui_interface.addHorizontalBargraph("NoteOn Value OUT (Note 51)", &mut self.fHbargraph11, 0.0, 127.0);
		ui_interface.closeBox();
		ui_interface.closeBox();
		ui_interface.declare(&mut self.fDummy, "2", "");
		ui_interface.openHorizontalBox("0x00");
		ui_interface.openVerticalBox("CHANNEL AFTERTOUCH (CHAT) IN/OUT");
		ui_interface.declare(&mut self.fCheckbox1, "midi", "chanpress 100");
		ui_interface.addCheckButton("Note CHAT Bool IN (Note 100)", &mut self.fCheckbox1);
		ui_interface.declare(&mut self.fHbargraph2, "midi", "chanpress 101");
		ui_interface.addHorizontalBargraph("Note CHAT Bool OUT (Note 101)", &mut self.fHbargraph2, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider1, "midi", "chanpress 50");
		ui_interface.addHorizontalSlider("Note CHAT Value IN (Note 50)", &mut self.fHslider1, 60.0, 0.0, 127.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph3, "midi", "chanpress 51");
		ui_interface.addHorizontalBargraph("Note CHAT Value OUT (Note 51)", &mut self.fHbargraph3, 0.0, 127.0);
		ui_interface.closeBox();
		ui_interface.openVerticalBox("KEY AFTERTOUCH (KAT) IN/OUT");
		ui_interface.declare(&mut self.fCheckbox3, "midi", "keypress 100");
		ui_interface.addCheckButton("Note KAT Bool IN (Note 100)", &mut self.fCheckbox3);
		ui_interface.declare(&mut self.fHbargraph6, "midi", "keypress 101");
		ui_interface.addHorizontalBargraph("Note KAT Bool OUT (Note 101)", &mut self.fHbargraph6, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider3, "midi", "keypress 50");
		ui_interface.addHorizontalSlider("Note KAT Value IN (Note 50)", &mut self.fHslider3, 60.0, 0.0, 127.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph7, "midi", "keypress 51");
		ui_interface.addHorizontalBargraph("Note KAT Value OUT (Note 51)", &mut self.fHbargraph7, 0.0, 127.0);
		ui_interface.closeBox();
		ui_interface.openVerticalBox("PITCHWHEEL IN/OUT");
		ui_interface.declare(&mut self.fCheckbox0, "midi", "pitchwheel");
		ui_interface.addCheckButton("Pitchwheel Bool IN", &mut self.fCheckbox0);
		ui_interface.declare(&mut self.fHbargraph0, "midi", "pitchwheel");
		ui_interface.addHorizontalBargraph("Pitchwheel Bool OUT", &mut self.fHbargraph0, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider0, "midi", "pitchwheel");
		ui_interface.addHorizontalSlider("Pitchwheel Value IN", &mut self.fHslider0, 0.0, -8192.0, 8191.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph1, "midi", "pitchwheel");
		ui_interface.addHorizontalBargraph("Pitchwheel Value OUT", &mut self.fHbargraph1, -8192.0, 8191.0);
		ui_interface.closeBox();
		ui_interface.openVerticalBox("PROGRAM CHANGE (PC) IN/OUT");
		ui_interface.declare(&mut self.fCheckbox2, "midi", "pgm 100");
		ui_interface.addCheckButton("ProgramChange Bool IN (PC 100)", &mut self.fCheckbox2);
		ui_interface.declare(&mut self.fHbargraph4, "midi", "pgm 101");
		ui_interface.addHorizontalBargraph("ProgramChange Bool OUT (PC 101)", &mut self.fHbargraph4, 0.0, 1.0);
		ui_interface.declare(&mut self.fHslider2, "midi", "pgm 50");
		ui_interface.addHorizontalSlider("ProgramChange Value IN (PC 50)", &mut self.fHslider2, 60.0, 0.0, 127.0, 1.0);
		ui_interface.declare(&mut self.fHbargraph5, "midi", "pgm 51");
		ui_interface.addHorizontalBargraph("ProgramChange Value OUT (PC 51)", &mut self.fHbargraph5, 0.0, 127.0);
		ui_interface.closeBox();
		ui_interface.closeBox();
		ui_interface.closeBox();
		
	}
	
	pub fn compute(&mut self, count: i32, inputs: &[&[f32]], outputs: &mut[&mut[f32]]) {
		self.fHbargraph0 = ((self.fCheckbox0 as f32) as f32);
		self.fHbargraph1 = ((self.fHslider0 as f32) as f32);
		self.fHbargraph2 = ((self.fCheckbox1 as f32) as f32);
		self.fHbargraph3 = ((self.fHslider1 as f32) as f32);
		self.fHbargraph4 = ((self.fCheckbox2 as f32) as f32);
		self.fHbargraph5 = ((self.fHslider2 as f32) as f32);
		self.fHbargraph6 = ((self.fCheckbox3 as f32) as f32);
		self.fHbargraph7 = ((self.fHslider3 as f32) as f32);
		self.fHbargraph8 = ((self.fCheckbox6 as f32) as f32);
		self.fHbargraph9 = ((self.fHslider4 as f32) as f32);
		self.fHbargraph10 = ((self.fCheckbox7 as f32) as f32);
		self.fHbargraph11 = ((self.fHslider5 as f32) as f32);
		self.fHbargraph12 = ((self.fHslider6 as f32) as f32);
		self.fHbargraph13 = ((self.fCheckbox8 as f32) as f32);
		let mut i: i32 = 0;
		loop {
			outputs[0][i as usize] = (self.iConst0 as f32);
			i = (i + 1);
			if (i < count) { continue; } else { break; }
		}
		
	}

}

