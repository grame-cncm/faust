======= Container "mydsp" ==========

======= Sub container begin ==========

======= Sub container "mydspSIG0" ==========

======= Global declarations ==========

BlockInst 
	DeclareVarInst(static, float, fmydspSIG0Wave0[350], {0.694274008f,0.471697986f,0.172389999f,0.585446f,0.397985995f,0.919579029f,0.531947017f,0.100204997f,0.639469028f,0.672209024f,0.144345f,0.416595012f,0.124108002f,0.380591005f,0.256577998f,0.646031022f,0.852199972f,0.0224376004f,0.382762015f,0.143924996f,0.368690997f,0.430555999f,0.32317999f,0.142956004f,0.274520993f,0.713823974f,0.442793995f,0.352472991f,0.247756004f,0.415152013f,1.0f,0.401868999f,0.197981f,0.279509991f,0.210249007f,0.369740009f,0.369226992f,0.155769005f,0.272368014f,0.335711986f,0.31645f,0.714102983f,0.285780996f,0.220060006f,0.827704012f,0.206341997f,0.180177003f,0.311477989f,0.197606996f,0.575474977f,0.473311007f,0.587231994f,0.502879977f,0.33730799f,0.304513991f,0.429039001f,0.351521999f,0.341372997f,0.175081f,0.561748028f,0.439172f,0.323163986f,0.540517986f,0.536522985f,0.0743864998f,0.213416994f,0.358011991f,0.47449401f,0.310274005f,0.839412987f,0.241372004f,0.202343002f,0.480634004f,0.995684981f,0.373739988f,0.133998007f,0.52067399f,0.207514003f,1.0f,0.101239003f,0.279536009f,0.185984999f,0.436293006f,0.624109983f,0.334518999f,0.283585012f,0.179316998f,0.353846997f,0.449544996f,0.574127972f,0.135171995f,0.538275003f,0.476424009f,0.832903028f,0.164197996f,0.188562006f,0.135977998f,0.390127987f,0.131044999f,0.312065005f,0.142139003f,0.0255900994f,0.266947001f,0.371607006f,0.0168434996f,0.0249467995f,0.508916974f,0.354409993f,0.283347994f,0.628154993f,0.292477995f,0.358350009f,0.342568994f,0.441237003f,0.886699021f,0.0174697991f,0.00641842978f,0.555320024f,0.88012898f,0.0306908991f,0.290080994f,0.248815998f,0.981736004f,0.324624002f,0.213676006f,0.432884991f,0.0981559008f,0.444148988f,0.395554006f,0.525068998f,0.077130802f,0.0488803983f,0.591320992f,0.108043998f,0.443801999f,0.740318f,0.599438012f,0.293092996f,1.0f,0.141662002f,0.910031021f,0.226126f,0.299701989f,0.341472f,0.0568060987f,0.222494006f,0.91871798f,0.199478f,0.216619998f,0.107758999f,0.692323983f,0.556335986f,0.281717986f,0.430831999f,0.341655999f,0.60809499f,0.342128992f,0.31131199f,0.229953006f,0.695087016f,0.0761488974f,0.349817991f,0.361705989f,0.577611029f,0.147797003f,0.327376008f,0.465714991f,0.342902005f,0.521381021f,0.836827993f,0.241111994f,0.284393996f,0.539315999f,0.143408f,0.517019987f,1.0f,0.236335993f,0.480333f,0.676743984f,0.807582021f,0.468620986f,0.236953005f,0.411603987f,0.579250991f,0.425098002f,0.375990003f,0.461176008f,0.276529998f,0.462368011f,0.613004029f,0.666849017f,0.954715014f,0.161506996f,0.170433f,0.290461004f,0.117302999f,0.365132987f,0.233794004f,0.194567993f,0.338874012f,0.523380995f,0.39835f,0.447838992f,0.65289098f,0.157079995f,0.340353996f,0.442169994f,0.338764012f,0.184396997f,0.771606982f,0.160502002f,0.324487001f,0.477499008f,0.831519008f,0.0168763995f,0.154264003f,0.201865003f,0.237785995f,0.390065998f,0.880164027f,0.284233987f,0.162836999f,0.437557012f,0.227845997f,0.399340004f,1.0f,0.158106998f,0.396903008f,0.513028979f,0.676456988f,0.204282001f,0.0895574987f,0.555410028f,0.73248601f,0.125062004f,0.171229005f,0.0816460028f,0.0541394018f,0.396160007f,0.454288006f,0.466863006f,0.928842008f,0.155393004f,0.262849987f,0.113453001f,0.133163005f,0.302020997f,0.612616003f,0.228392005f,0.195617005f,0.287236005f,0.198762f,0.499884009f,0.809139013f,0.00929925032f,0.084029898f,0.286446005f,0.182111993f,0.186043993f,0.754137993f,0.279556006f,0.266948014f,0.494291008f,1.0f,0.321283996f,0.0230981f,0.0375537015f,0.262531012f,0.602204025f,0.489924997f,0.633077025f,0.407409012f,0.422255993f,0.0910641029f,0.357935011f,0.550179005f,0.106192f,0.132366002f,0.376231015f,0.35115099f,0.0420302004f,0.0372182988f,0.696335018f,0.840821028f,0.855234981f,0.249247998f,0.860010982f,0.340481013f,0.285580009f,0.363038987f,0.324122012f,0.515699029f,0.228130996f,0.172591999f,0.0188723002f,0.168243006f,0.995105028f,0.741759002f,0.107092999f,0.0703490004f,0.136636004f,0.0780455023f,0.315748006f,0.502201021f,0.0190421995f,0.0339139998f,0.225723997f,0.160236001f,0.184101f,0.564203024f,0.247317001f,0.284224987f,0.327152997f,0.651443005f,0.593470991f,0.0163899008f,0.0141048003f,0.521130025f,1.0f,0.105108999f,0.530936003f,0.363723993f,0.924808979f,0.250409991f,0.692879975f,0.414121985f,0.0793657973f,0.34781301f,0.441731006f,0.476428002f,0.0808833987f,0.0581637993f,0.557238996f,0.556514978f,0.746083975f,0.582228005f,0.177230999f,0.158425003f,0.850902975f,0.755271018f,0.673614025f,0.317059994f,0.0515386015f,0.201897994f,0.0577937998f,0.232031003f,0.734987974f,0.141593993f,0.267062008f,0.145806998f})
	EndBlock

======= Declarations ==========

BlockInst 
	DeclareVarInst(struct, "int", fmydspSIG0Wave0_idx)
	EndBlock

DeclareFunInst("int", "getNumInputs")
	BlockInst 
		RetInst(Int32(0))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getNumOutputs")
	BlockInst 
		RetInst(Int32(1))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getInputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getOutputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Case 0
				BlockInst 
					StoreVarInst(stack, rate, Int32(0))
					EndBlock
				EndCase
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

======= Init ==========

BlockInst 
	StoreVarInst(struct, fmydspSIG0Wave0_idx, Int32(0))
	EndBlock

======= Compute DSP ==========

Instructions complexity
Load = 6
Store = 3
Binop = 4
Numbers = 4
Declare = 1
Cast = 0
Select = 0
Loop = 1
Funcall = 0

ForLoopInst 
	DeclareVarInst(loop, "int", i, Int32(0))
	BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
	StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
	BlockInst 
		StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG0Wave0[LoadVarInst(struct, fmydspSIG0Wave0_idx)]))
		StoreVarInst(struct, fmydspSIG0Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG0Wave0_idx)), Int32(350)))
		EndBlock
	EndForLoop

======= Sub container "mydspSIG1" ==========

======= Global declarations ==========

BlockInst 
	DeclareVarInst(static, float, fmydspSIG1Wave0[350], {0.972890019f,0.542393029f,0.495831996f,0.897966027f,0.552366972f,0.557895005f,0.61421299f,0.353693992f,0.436039001f,0.441024005f,0.674912989f,0.566753983f,0.755007982f,0.699029982f,0.164398f,0.910040021f,0.628373027f,0.201718003f,0.429517001f,0.503714979f,0.871173978f,0.106885999f,0.76117301f,0.673601985f,0.291936994f,0.588590026f,0.31527999f,0.41308099f,0.274464011f,0.494062006f,0.696120977f,0.612010002f,0.382757008f,0.995113015f,0.228806004f,0.198449001f,0.595847011f,0.306263f,0.252397001f,0.0883567035f,0.236085996f,1.0f,0.245278001f,0.379388005f,0.198824003f,0.548892021f,0.492763996f,0.42087099f,0.794637024f,0.605633974f,1.0f,0.604158998f,0.399841011f,0.799346983f,0.507187009f,0.509809971f,0.477382988f,0.310225993f,0.426975995f,0.437622994f,0.735711992f,0.630728006f,0.625784993f,0.651167989f,0.277738005f,0.850857973f,0.578078985f,0.645353973f,0.383700013f,0.370597988f,0.78254199f,0.181325004f,0.614391029f,0.740683973f,0.342440993f,0.586185992f,0.286909014f,0.405196995f,0.259214997f,0.566982985f,0.748219013f,0.655897975f,0.368259996f,0.940814018f,0.336156994f,0.413702011f,0.561556995f,0.402175993f,0.117697999f,0.329369009f,0.254570991f,0.870706022f,0.260980994f,0.274122f,0.206247002f,0.645299971f,0.400757998f,0.36362201f,0.636834025f,0.584565997f,0.975602984f,0.616936982f,0.295401007f,0.650447011f,0.464221001f,0.465056986f,0.312467009f,0.238358006f,0.383695006f,0.399673998f,0.753911972f,0.662011981f,0.504267991f,0.599247992f,0.378665f,0.725363016f,0.493214011f,1.0f,0.332836002f,0.265888989f,0.674072981f,0.320401013f,0.440017998f,0.769782007f,0.316419005f,0.529968023f,0.380508989f,0.578675985f,0.249013007f,0.591383994f,0.761717021f,0.687057018f,0.324436992f,0.818863988f,0.505369008f,0.672484994f,0.461782992f,0.426198006f,0.0678874999f,0.43532899f,0.347954988f,0.708393991f,0.293321997f,0.328985989f,0.258253992f,0.893512011f,0.320131004f,0.433553994f,0.459302008f,0.542213023f,0.817241013f,0.516229987f,0.205302f,0.467354f,0.388682991f,0.388215989f,0.171261996f,0.150865003f,0.291720003f,0.311414003f,0.658876002f,0.570647001f,0.38361901f,0.502454996f,0.364113986f,0.532312989f,0.352988988f,1.0f,0.261983991f,0.219591007f,0.544031024f,0.337199003f,0.279172987f,0.668303013f,0.208439007f,0.399230003f,0.418673992f,0.648617983f,0.234133005f,0.504728973f,0.645346999f,0.572851002f,0.232828006f,0.614292026f,0.48527199f,0.666263998f,0.316570014f,0.320354998f,0.191421002f,0.340131015f,0.342069f,0.538371027f,0.281130999f,0.393115014f,0.251394004f,0.890725017f,0.310644001f,0.503700018f,0.299089998f,0.442478001f,0.733128011f,0.455217004f,0.199322f,0.315699011f,0.375856012f,0.376489997f,0.0291450005f,0.0200283006f,0.279578f,0.316799998f,0.655956984f,0.546842992f,0.349665999f,0.470248997f,0.353765011f,0.286794007f,0.180185005f,1.0f,0.210831001f,0.280133009f,0.535853028f,0.376488f,0.153669998f,0.634745002f,0.0510449f,0.485574991f,0.593110979f,0.917883992f,0.380477011f,0.422924995f,0.599372983f,0.311421007f,0.135654002f,0.359954f,0.295747995f,0.474438995f,0.353338987f,0.116742998f,0.45431301f,0.112857997f,0.359310001f,0.483897001f,0.301607996f,0.577341974f,0.262663007f,0.79498601f,0.549579978f,0.808085978f,0.152511001f,0.439590991f,0.535941005f,0.308017999f,0.419836998f,0.579191029f,0.250427991f,0.252119988f,0.102860004f,0.288331985f,0.599678993f,0.665108025f,0.636285007f,0.495234013f,0.251612991f,0.208526999f,0.0939071998f,0.458415002f,0.318951994f,0.235349998f,0.215188995f,0.313412011f,0.0472786985f,0.0386893004f,0.0863358974f,0.222345993f,0.361510992f,0.997036994f,0.238508999f,0.382140011f,1.0f,0.203554004f,0.472086996f,0.509015024f,0.206370994f,0.441013008f,0.794008017f,0.971623003f,0.796383977f,0.55043f,0.687780023f,0.554297984f,0.0436545014f,0.0595576987f,0.214684993f,0.581470013f,0.277319998f,0.36846599f,0.121381998f,0.152739003f,0.0782243982f,0.190496996f,0.31626901f,0.180455998f,0.405196011f,0.518715978f,0.159364998f,0.165808007f,0.194371998f,0.614763975f,0.553415f,0.644793987f,0.441780001f,0.441489995f,0.221588001f,1.0f,0.579370975f,0.606338978f,0.529166996f,0.0214475002f,0.41704601f,0.663151979f,0.894841015f,0.475751996f,0.168289006f,0.468589991f,0.304603994f,0.666369021f,0.308337003f,0.295091003f,0.768944979f,0.350910991f,0.490680009f,0.516583979f,0.40011701f,0.820686996f,0.545485973f,0.709357023f,0.509759009f,0.472005993f,0.152455002f,0.981265008f,0.459134012f,0.698665977f,0.247153997f,0.623252988f,0.255508006f,0.830815017f,0.0887089968f,0.126082003f,0.0770623013f,0.263327986f})
	EndBlock

======= Declarations ==========

BlockInst 
	DeclareVarInst(struct, "int", fmydspSIG1Wave0_idx)
	EndBlock

DeclareFunInst("int", "getNumInputs")
	BlockInst 
		RetInst(Int32(0))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getNumOutputs")
	BlockInst 
		RetInst(Int32(1))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getInputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getOutputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Case 0
				BlockInst 
					StoreVarInst(stack, rate, Int32(0))
					EndBlock
				EndCase
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

======= Init ==========

BlockInst 
	StoreVarInst(struct, fmydspSIG1Wave0_idx, Int32(0))
	EndBlock

======= Compute DSP ==========

Instructions complexity
Load = 6
Store = 3
Binop = 4
Numbers = 4
Declare = 1
Cast = 0
Select = 0
Loop = 1
Funcall = 0

ForLoopInst 
	DeclareVarInst(loop, "int", i, Int32(0))
	BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
	StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
	BlockInst 
		StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG1Wave0[LoadVarInst(struct, fmydspSIG1Wave0_idx)]))
		StoreVarInst(struct, fmydspSIG1Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG1Wave0_idx)), Int32(350)))
		EndBlock
	EndForLoop

======= Sub container "mydspSIG2" ==========

======= Global declarations ==========

BlockInst 
	DeclareVarInst(static, float, fmydspSIG2Wave0[350], {0.761411011f,0.797802985f,0.586057007f,0.225039005f,0.926353991f,0.81387502f,0.529870987f,0.158914998f,0.662515998f,0.308409989f,0.0454785004f,0.55608201f,0.78471297f,0.213035002f,0.956227005f,0.795165002f,0.313508004f,0.158530995f,0.301586002f,0.16832f,0.281266987f,0.154237002f,0.217234999f,0.247238994f,0.522687972f,0.170303002f,0.32061401f,0.154856995f,0.414941013f,0.788363993f,0.713298976f,0.381592005f,0.707010984f,1.0f,0.0106945997f,0.359762996f,0.0746155977f,0.431124002f,0.118052997f,0.527289987f,0.255302995f,0.646854997f,0.201144993f,0.919907987f,0.359389007f,0.253493994f,0.865695f,0.0829263031f,0.222589001f,0.041573599f,0.735773981f,0.769677997f,0.381415993f,0.197542995f,0.682389021f,0.614766002f,0.249524996f,0.289882988f,0.300318986f,0.443690985f,0.275272012f,0.370218009f,0.748790026f,0.161247f,0.634352982f,0.498497993f,0.221988007f,0.350636989f,0.43681699f,0.436462998f,0.525080025f,0.842646003f,0.195324004f,0.224755004f,0.545681f,0.353778005f,0.269044012f,0.327814013f,0.448951989f,0.852304995f,0.380502999f,1.0f,0.458063006f,0.565057993f,0.354635f,0.659528971f,0.449485004f,0.802013993f,0.283446014f,0.521562994f,0.374639004f,0.652112007f,0.181042001f,0.468394011f,0.430115998f,0.157206997f,0.414995015f,0.292737007f,0.487785012f,0.477679998f,0.481445014f,0.556988001f,0.561132014f,0.378264993f,0.291462004f,0.323249996f,0.482602f,0.328247994f,0.196792006f,0.712253988f,0.389806002f,0.307751f,0.792876005f,0.199098006f,0.288837999f,0.146810994f,0.0178443994f,0.394017011f,0.588212013f,0.489226013f,0.701485991f,0.940303028f,0.213191003f,0.0778845027f,0.474462986f,0.609972f,0.163379997f,0.408376008f,0.330864012f,0.889989972f,0.0798100978f,1.0f,0.167172f,0.208727002f,0.227549002f,0.825902998f,0.531897008f,0.580946028f,0.215339005f,0.247318998f,0.268148005f,0.504087985f,0.160954997f,0.170315996f,0.230768993f,0.151190996f,0.0825031027f,0.141328007f,0.288078994f,0.499675989f,0.420354992f,0.487764001f,0.753709972f,0.492247999f,0.181364f,0.205939993f,0.524969995f,0.325641006f,0.236827001f,0.931842029f,0.472981006f,0.312162012f,0.901031971f,0.27047801f,0.167111993f,0.0709697977f,0.166004002f,0.29074499f,0.425893009f,0.403632998f,0.581772029f,0.855693996f,0.0325586982f,0.056835901f,0.241923004f,0.799310029f,0.181961998f,0.530282974f,0.415609986f,1.0f,0.0291501004f,0.831155002f,0.119755f,0.102187999f,0.132036999f,0.766030014f,0.442220986f,0.174899995f,0.142175004f,0.0140794003f,0.4375f,0.851859987f,0.196835995f,0.0907521993f,0.551672995f,0.25652799f,0.0424376987f,0.490363002f,0.108177997f,0.50327599f,0.226584002f,0.312757999f,0.824078977f,0.484120011f,0.0347337984f,0.0619428009f,0.255097002f,0.145273f,0.190358996f,0.995297015f,0.503419995f,0.217574999f,0.793974996f,0.357178986f,0.0409727991f,0.0187931005f,0.414458007f,0.158439994f,0.34623301f,0.0771673024f,0.175110996f,0.380567014f,0.497408986f,0.316163987f,0.488669008f,1.0f,0.420657009f,0.442333013f,0.247060001f,0.796406984f,0.0104146004f,0.227079004f,0.10684f,0.0289872997f,0.767570019f,0.0643121973f,0.0423097983f,0.715521991f,0.472117007f,0.392576993f,0.660432994f,0.803574979f,0.188653007f,0.0191652998f,0.87321198f,0.448718995f,0.0147128003f,0.618966997f,0.307179987f,0.345898986f,0.131393999f,0.193224996f,0.715282977f,0.405620009f,0.0406370014f,0.0503336005f,0.0544330999f,0.0452023f,0.152301997f,0.894549012f,0.443343014f,0.172070995f,0.647666991f,0.328992993f,0.0416014008f,0.0229487997f,0.551070988f,0.42354399f,0.862362027f,0.363525987f,0.769928992f,0.123452f,0.710702002f,0.394894987f,0.556638002f,1.0f,0.450924993f,0.422849f,0.0921870023f,0.413892001f,0.00995371956f,0.321146011f,0.160623997f,0.0300680995f,0.915385008f,0.475499988f,0.506950974f,0.387549013f,0.275590986f,0.468281001f,0.184775993f,0.186837003f,0.188195005f,0.0202785004f,0.697135985f,0.408861995f,0.0116935f,0.349822998f,0.202300996f,0.461378992f,0.0559022985f,0.0582570992f,0.260607988f,0.181875005f,0.0271738991f,0.0249578003f,0.685088992f,0.470384002f,0.283194005f,0.331050009f,0.138348997f,0.338068008f,0.481992006f,0.178241998f,0.0155942002f,0.0110435002f,0.783770978f,0.442707002f,0.616478026f,0.381541997f,0.510891974f,0.0459849983f,0.303119004f,0.0731908977f,0.547715008f,0.348940998f,0.149981007f,0.302157998f,0.284482002f,0.398176998f,0.00413049012f,0.180739f,0.0628390014f,0.0133459f,0.347088009f,0.576370001f,0.240764007f,0.978480995f,0.452755004f,0.529742002f,0.340470999f,0.66228199f,0.444305003f,0.0429900996f,1.0f,0.361939996f,0.0183371995f,0.626892984f,0.552850008f,0.384936005f})
	EndBlock

======= Declarations ==========

BlockInst 
	DeclareVarInst(struct, "int", fmydspSIG2Wave0_idx)
	EndBlock

DeclareFunInst("int", "getNumInputs")
	BlockInst 
		RetInst(Int32(0))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getNumOutputs")
	BlockInst 
		RetInst(Int32(1))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getInputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getOutputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Case 0
				BlockInst 
					StoreVarInst(stack, rate, Int32(0))
					EndBlock
				EndCase
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

======= Init ==========

BlockInst 
	StoreVarInst(struct, fmydspSIG2Wave0_idx, Int32(0))
	EndBlock

======= Compute DSP ==========

Instructions complexity
Load = 6
Store = 3
Binop = 4
Numbers = 4
Declare = 1
Cast = 0
Select = 0
Loop = 1
Funcall = 0

ForLoopInst 
	DeclareVarInst(loop, "int", i, Int32(0))
	BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
	StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
	BlockInst 
		StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG2Wave0[LoadVarInst(struct, fmydspSIG2Wave0_idx)]))
		StoreVarInst(struct, fmydspSIG2Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG2Wave0_idx)), Int32(350)))
		EndBlock
	EndForLoop

======= Sub container "mydspSIG3" ==========

======= Global declarations ==========

BlockInst 
	DeclareVarInst(static, float, fmydspSIG3Wave0[350], {0.925507009f,0.597519994f,0.0965671018f,0.45412001f,0.989772975f,0.593497992f,0.512540996f,0.124241002f,0.705411017f,0.292396009f,0.673398972f,0.302181005f,0.0262340009f,0.286249012f,0.556267023f,1.0f,0.250425994f,0.107711002f,0.427298993f,0.336295009f,0.616257012f,0.214420006f,0.0845293999f,0.231362998f,0.522723973f,0.559113979f,0.348470002f,0.854197025f,0.835575998f,0.735036016f,0.288493991f,0.117122002f,0.409685999f,0.363575011f,0.484943002f,0.170862004f,0.420531005f,0.164793f,0.233847007f,0.861231983f,0.214037001f,0.283461988f,0.173152998f,0.876121998f,0.607809007f,0.294744998f,0.143142f,0.332008988f,0.491878003f,0.626103997f,0.962027013f,0.584298015f,0.213652998f,0.420451999f,0.812328994f,0.545171976f,0.38074401f,0.331535995f,0.386801004f,0.248908997f,0.688755989f,0.313903987f,0.377894014f,0.595845997f,0.412274003f,0.73962599f,0.541148007f,0.393005013f,0.656637013f,0.847671986f,0.930652976f,0.288289011f,0.404938012f,0.657989025f,0.763948977f,0.574084997f,0.282240987f,1.0f,0.429131001f,0.572049022f,0.73486799f,0.577476978f,0.520789027f,0.355592996f,0.890066981f,0.272390991f,0.448222995f,0.423969001f,0.392237008f,0.856091022f,0.0583794005f,0.784967005f,0.359526992f,0.576566994f,0.201513007f,0.642013013f,0.419308007f,0.340667009f,0.423189998f,0.860812008f,0.694019973f,0.42356801f,0.37698701f,0.568453014f,0.502301991f,0.280716002f,0.464040995f,0.395601004f,0.199849993f,0.0950397998f,0.64279002f,0.228325993f,0.484910995f,0.842352986f,0.161403999f,0.403432012f,0.65554899f,0.409097999f,0.699392021f,0.876049995f,1.0f,0.185606003f,0.414254993f,0.695204973f,0.732612014f,0.478298008f,0.249469995f,0.927739024f,0.213135004f,0.227382004f,0.976351976f,0.642745018f,0.376311004f,0.260674f,0.811034024f,0.264631003f,0.239978999f,0.261896998f,0.191642001f,0.781669974f,0.390679002f,0.382436991f,0.206714004f,0.224720001f,0.0676331967f,0.502610981f,0.301454991f,0.241028994f,0.224505007f,0.721193016f,0.436347991f,0.254061997f,0.480495989f,0.772370994f,0.210681006f,0.103414997f,0.485338002f,0.378333986f,0.228484005f,0.114877f,0.686760008f,0.296941996f,0.507420003f,0.997470021f,0.0377103016f,0.132211998f,0.319546998f,0.192031994f,0.520573974f,0.58584398f,0.419362009f,0.084731698f,0.134544f,0.194762006f,0.616689026f,0.397359997f,0.298808992f,0.914745986f,0.0513371006f,0.0543568991f,0.989158988f,0.602891982f,0.145582005f,0.102149002f,0.129022002f,0.116485f,0.279987991f,0.394270003f,0.29013899f,1.0f,0.708655f,0.78055501f,0.387526006f,0.0395217016f,0.00964067038f,0.24368f,0.0740624964f,0.619315028f,0.447394997f,0.292497009f,0.295457989f,0.163747996f,0.521375f,0.864533007f,0.0773407966f,0.0334230997f,0.345120996f,0.278860003f,0.223875999f,0.307756007f,0.763105989f,0.424706995f,0.487201005f,0.968962014f,0.00911747012f,0.0324653015f,0.334275007f,0.166786999f,0.312498003f,0.264261991f,0.354880005f,0.375589997f,0.261094004f,0.565006018f,0.474934995f,0.313520014f,0.251248986f,0.73535198f,0.0189072005f,0.0153633999f,0.786225021f,0.503298998f,0.369037986f,0.250764996f,0.673018992f,0.387573004f,0.742025018f,0.749055982f,0.261714011f,0.75186801f,0.771816015f,1.0f,0.459484011f,0.0124402f,0.0105394004f,0.964109004f,0.457051992f,0.532316029f,0.407128006f,0.697241008f,0.152199998f,0.0895892978f,0.406174988f,0.651040018f,0.0233951006f,0.0101070004f,0.0722346976f,0.0666339993f,0.195489004f,0.41674f,0.654451013f,0.382782012f,0.305395991f,0.631501019f,0.00162801996f,0.0140906004f,0.762915015f,0.410245001f,0.189436004f,0.060446199f,0.624940991f,0.43978101f,0.516273022f,0.896677971f,0.273297995f,0.202868f,0.0996022001f,0.257656991f,0.0174508002f,0.0157859009f,0.429432988f,0.202184007f,0.443111002f,0.343811005f,0.447562009f,0.268694013f,0.753551006f,0.529425979f,0.0772973001f,0.0976959988f,0.446413994f,0.26167801f,0.169035003f,0.0116218999f,0.0207398999f,1.0f,0.488855988f,0.413028985f,0.25266099f,0.148368999f,0.0919644013f,0.0330634005f,0.268763989f,0.441848993f,0.0139873f,0.0108583998f,0.657799006f,0.488247991f,0.375432998f,0.958178997f,0.761492014f,0.409489989f,0.151709005f,0.314931005f,0.00361180003f,0.0133069996f,1.0f,0.605342984f,0.550505996f,0.363516003f,0.255277991f,0.137537003f,0.448881f,0.867614985f,0.483247012f,0.308622003f,0.348444015f,0.534834981f,0.0157715995f,0.0128964996f,0.147607997f,0.0762611032f,0.762224019f,0.511584997f,0.98586297f,0.540226996f,0.691690981f,0.905296028f,0.397520989f,0.697939992f,0.423289001f,0.924612999f,0.491558999f,0.00567911007f,0.0106001999f,0.647916019f,0.324182004f,0.579448998f,0.451936007f,0.877897024f})
	EndBlock

======= Declarations ==========

BlockInst 
	DeclareVarInst(struct, "int", fmydspSIG3Wave0_idx)
	EndBlock

DeclareFunInst("int", "getNumInputs")
	BlockInst 
		RetInst(Int32(0))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getNumOutputs")
	BlockInst 
		RetInst(Int32(1))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getInputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getOutputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Case 0
				BlockInst 
					StoreVarInst(stack, rate, Int32(0))
					EndBlock
				EndCase
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

======= Init ==========

BlockInst 
	StoreVarInst(struct, fmydspSIG3Wave0_idx, Int32(0))
	EndBlock

======= Compute DSP ==========

Instructions complexity
Load = 6
Store = 3
Binop = 4
Numbers = 4
Declare = 1
Cast = 0
Select = 0
Loop = 1
Funcall = 0

ForLoopInst 
	DeclareVarInst(loop, "int", i, Int32(0))
	BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
	StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
	BlockInst 
		StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG3Wave0[LoadVarInst(struct, fmydspSIG3Wave0_idx)]))
		StoreVarInst(struct, fmydspSIG3Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG3Wave0_idx)), Int32(350)))
		EndBlock
	EndForLoop

======= Sub container end ==========

======= User Interface ==========

BlockInst 
	OpenVerticalBox("bells")
	AddHorizontalSlider("kb0k0status", fHslider2, 0.0f, 0.0f, 1.0f, 1.0f)
	AddHorizontalSlider("kb0k1status", fHslider3, 0.0f, 0.0f, 1.0f, 1.0f)
	AddHorizontalSlider("kb1k0status", fHslider4, 0.0f, 0.0f, 1.0f, 1.0f)
	AddHorizontalSlider("kb1k1status", fHslider5, 0.0f, 0.0f, 1.0f, 1.0f)
	AddHorizontalSlider("x", fHslider0, 1.0f, 0.0f, 1.0f, 0.00100000005f)
	AddHorizontalSlider("y", fHslider1, 1.0f, 0.0f, 1.0f, 0.00100000005f)
	CloseboxInst
	EndBlock

======= Global declarations ==========

BlockInst 
	DeclareVarInst(static, float, ftbl0mydspSIG0[350])
	DeclareFunInst("float", "fabsf", "float", dummy0)
	DeclareFunInst("float", "min_f", "float", dummy0, "float", dummy1)
	DeclareFunInst("float", "max_f", "float", dummy0, "float", dummy1)
	DeclareFunInst("float", "tanf", "float", dummy0)
	DeclareFunInst("float", "mydsp_faustpower2_f", "float", value)
		BlockInst 
			RetInst(BinopInst("*", LoadVarInst(kFunArgs, value), LoadVarInst(kFunArgs, value)))
			EndBlock
		EndDeclare
	DeclareFunInst("float", "powf", "float", dummy0, "float", dummy1)
	DeclareFunInst("float", "cosf", "float", dummy0)
	DeclareVarInst(static, float, ftbl1mydspSIG1[350])
	DeclareVarInst(static, float, ftbl2mydspSIG2[350])
	DeclareVarInst(static, float, ftbl3mydspSIG3[350])
	EndBlock

======= Declarations ==========

BlockInst 
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider0)
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider1)
	DeclareVarInst(struct, "int", fSamplingFreq)
	DeclareVarInst(struct, "float", fConst0)
	DeclareVarInst(struct, float, fVec0[2])
	DeclareVarInst(struct, "float", fConst1)
	DeclareVarInst(struct, "float", fConst2)
	DeclareVarInst(struct, "float", fConst3)
	DeclareVarInst(struct, "float", fConst4)
	DeclareVarInst(struct, "float", fConst5)
	DeclareVarInst(struct, "float", fConst6)
	DeclareVarInst(struct, "float", fConst7)
	DeclareVarInst(struct, int, iRec3[2])
	DeclareVarInst(struct, "float", fConst8)
	DeclareVarInst(struct, "float", fConst9)
	DeclareVarInst(struct, float, fRec2[3])
	DeclareVarInst(struct, "float", fConst10)
	DeclareVarInst(struct, "float", fConst11)
	DeclareVarInst(struct, "float", fConst12)
	DeclareVarInst(struct, float, fRec1[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider2)
	DeclareVarInst(struct, int, iVec1[2])
	DeclareVarInst(struct, "float", fConst13)
	DeclareVarInst(struct, float, fRec4[2])
	DeclareVarInst(struct, "float", fConst14)
	DeclareVarInst(struct, "float", fConst15)
	DeclareVarInst(struct, "float", fConst16)
	DeclareVarInst(struct, "float", fConst17)
	DeclareVarInst(struct, "float", fConst18)
	DeclareVarInst(struct, float, fRec0[3])
	DeclareVarInst(struct, "float", fConst19)
	DeclareVarInst(struct, "float", fConst20)
	DeclareVarInst(struct, "float", fConst21)
	DeclareVarInst(struct, float, fRec5[3])
	DeclareVarInst(struct, "float", fConst22)
	DeclareVarInst(struct, "float", fConst23)
	DeclareVarInst(struct, "float", fConst24)
	DeclareVarInst(struct, float, fRec6[3])
	DeclareVarInst(struct, "float", fConst25)
	DeclareVarInst(struct, "float", fConst26)
	DeclareVarInst(struct, "float", fConst27)
	DeclareVarInst(struct, float, fRec7[3])
	DeclareVarInst(struct, "float", fConst28)
	DeclareVarInst(struct, "float", fConst29)
	DeclareVarInst(struct, "float", fConst30)
	DeclareVarInst(struct, float, fRec8[3])
	DeclareVarInst(struct, "float", fConst31)
	DeclareVarInst(struct, "float", fConst32)
	DeclareVarInst(struct, "float", fConst33)
	DeclareVarInst(struct, float, fRec9[3])
	DeclareVarInst(struct, "float", fConst34)
	DeclareVarInst(struct, "float", fConst35)
	DeclareVarInst(struct, "float", fConst36)
	DeclareVarInst(struct, float, fRec10[3])
	DeclareVarInst(struct, "float", fConst37)
	DeclareVarInst(struct, "float", fConst38)
	DeclareVarInst(struct, "float", fConst39)
	DeclareVarInst(struct, float, fRec11[3])
	DeclareVarInst(struct, "float", fConst40)
	DeclareVarInst(struct, "float", fConst41)
	DeclareVarInst(struct, "float", fConst42)
	DeclareVarInst(struct, float, fRec12[3])
	DeclareVarInst(struct, "float", fConst43)
	DeclareVarInst(struct, "float", fConst44)
	DeclareVarInst(struct, "float", fConst45)
	DeclareVarInst(struct, float, fRec13[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider3)
	DeclareVarInst(struct, int, iVec2[2])
	DeclareVarInst(struct, float, fRec15[2])
	DeclareVarInst(struct, "float", fConst46)
	DeclareVarInst(struct, "float", fConst47)
	DeclareVarInst(struct, "float", fConst48)
	DeclareVarInst(struct, float, fRec14[3])
	DeclareVarInst(struct, "float", fConst49)
	DeclareVarInst(struct, "float", fConst50)
	DeclareVarInst(struct, "float", fConst51)
	DeclareVarInst(struct, float, fRec16[3])
	DeclareVarInst(struct, "float", fConst52)
	DeclareVarInst(struct, "float", fConst53)
	DeclareVarInst(struct, "float", fConst54)
	DeclareVarInst(struct, float, fRec17[3])
	DeclareVarInst(struct, "float", fConst55)
	DeclareVarInst(struct, "float", fConst56)
	DeclareVarInst(struct, "float", fConst57)
	DeclareVarInst(struct, float, fRec18[3])
	DeclareVarInst(struct, "float", fConst58)
	DeclareVarInst(struct, "float", fConst59)
	DeclareVarInst(struct, "float", fConst60)
	DeclareVarInst(struct, float, fRec19[3])
	DeclareVarInst(struct, "float", fConst61)
	DeclareVarInst(struct, "float", fConst62)
	DeclareVarInst(struct, "float", fConst63)
	DeclareVarInst(struct, float, fRec20[3])
	DeclareVarInst(struct, "float", fConst64)
	DeclareVarInst(struct, "float", fConst65)
	DeclareVarInst(struct, "float", fConst66)
	DeclareVarInst(struct, float, fRec21[3])
	DeclareVarInst(struct, "float", fConst67)
	DeclareVarInst(struct, "float", fConst68)
	DeclareVarInst(struct, "float", fConst69)
	DeclareVarInst(struct, float, fRec22[3])
	DeclareVarInst(struct, "float", fConst70)
	DeclareVarInst(struct, "float", fConst71)
	DeclareVarInst(struct, "float", fConst72)
	DeclareVarInst(struct, float, fRec23[3])
	DeclareVarInst(struct, "float", fConst73)
	DeclareVarInst(struct, "float", fConst74)
	DeclareVarInst(struct, "float", fConst75)
	DeclareVarInst(struct, float, fRec24[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider4)
	DeclareVarInst(struct, int, iVec3[2])
	DeclareVarInst(struct, float, fRec26[2])
	DeclareVarInst(struct, "float", fConst76)
	DeclareVarInst(struct, "float", fConst77)
	DeclareVarInst(struct, "float", fConst78)
	DeclareVarInst(struct, float, fRec25[3])
	DeclareVarInst(struct, "float", fConst79)
	DeclareVarInst(struct, "float", fConst80)
	DeclareVarInst(struct, "float", fConst81)
	DeclareVarInst(struct, float, fRec27[3])
	DeclareVarInst(struct, "float", fConst82)
	DeclareVarInst(struct, "float", fConst83)
	DeclareVarInst(struct, "float", fConst84)
	DeclareVarInst(struct, float, fRec28[3])
	DeclareVarInst(struct, "float", fConst85)
	DeclareVarInst(struct, "float", fConst86)
	DeclareVarInst(struct, "float", fConst87)
	DeclareVarInst(struct, float, fRec29[3])
	DeclareVarInst(struct, "float", fConst88)
	DeclareVarInst(struct, "float", fConst89)
	DeclareVarInst(struct, "float", fConst90)
	DeclareVarInst(struct, float, fRec30[3])
	DeclareVarInst(struct, "float", fConst91)
	DeclareVarInst(struct, "float", fConst92)
	DeclareVarInst(struct, "float", fConst93)
	DeclareVarInst(struct, float, fRec31[3])
	DeclareVarInst(struct, "float", fConst94)
	DeclareVarInst(struct, "float", fConst95)
	DeclareVarInst(struct, "float", fConst96)
	DeclareVarInst(struct, float, fRec32[3])
	DeclareVarInst(struct, "float", fConst97)
	DeclareVarInst(struct, "float", fConst98)
	DeclareVarInst(struct, "float", fConst99)
	DeclareVarInst(struct, float, fRec33[3])
	DeclareVarInst(struct, "float", fConst100)
	DeclareVarInst(struct, "float", fConst101)
	DeclareVarInst(struct, "float", fConst102)
	DeclareVarInst(struct, float, fRec34[3])
	DeclareVarInst(struct, "float", fConst103)
	DeclareVarInst(struct, "float", fConst104)
	DeclareVarInst(struct, "float", fConst105)
	DeclareVarInst(struct, float, fRec35[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider5)
	DeclareVarInst(struct, int, iVec4[2])
	DeclareVarInst(struct, float, fRec37[2])
	DeclareVarInst(struct, "float", fConst106)
	DeclareVarInst(struct, "float", fConst107)
	DeclareVarInst(struct, "float", fConst108)
	DeclareVarInst(struct, float, fRec36[3])
	DeclareVarInst(struct, "float", fConst109)
	DeclareVarInst(struct, "float", fConst110)
	DeclareVarInst(struct, "float", fConst111)
	DeclareVarInst(struct, float, fRec38[3])
	DeclareVarInst(struct, "float", fConst112)
	DeclareVarInst(struct, "float", fConst113)
	DeclareVarInst(struct, "float", fConst114)
	DeclareVarInst(struct, float, fRec39[3])
	DeclareVarInst(struct, "float", fConst115)
	DeclareVarInst(struct, "float", fConst116)
	DeclareVarInst(struct, "float", fConst117)
	DeclareVarInst(struct, float, fRec40[3])
	DeclareVarInst(struct, "float", fConst118)
	DeclareVarInst(struct, "float", fConst119)
	DeclareVarInst(struct, "float", fConst120)
	DeclareVarInst(struct, float, fRec41[3])
	DeclareVarInst(struct, "float", fConst121)
	DeclareVarInst(struct, "float", fConst122)
	DeclareVarInst(struct, "float", fConst123)
	DeclareVarInst(struct, float, fRec42[3])
	DeclareVarInst(struct, "float", fConst124)
	DeclareVarInst(struct, "float", fConst125)
	DeclareVarInst(struct, "float", fConst126)
	DeclareVarInst(struct, float, fRec43[3])
	DeclareVarInst(struct, "float", fConst127)
	DeclareVarInst(struct, "float", fConst128)
	DeclareVarInst(struct, "float", fConst129)
	DeclareVarInst(struct, float, fRec44[3])
	DeclareVarInst(struct, "float", fConst130)
	DeclareVarInst(struct, "float", fConst131)
	DeclareVarInst(struct, "float", fConst132)
	DeclareVarInst(struct, float, fRec45[3])
	DeclareVarInst(struct, "float", fConst133)
	DeclareVarInst(struct, "float", fConst134)
	DeclareVarInst(struct, "float", fConst135)
	DeclareVarInst(struct, float, fRec46[3])
	EndBlock

DeclareFunInst("int", "getNumInputs")
	BlockInst 
		RetInst(Int32(0))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getNumOutputs")
	BlockInst 
		RetInst(Int32(2))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getInputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

DeclareFunInst("int", "getOutputRate", "int", channel)
	BlockInst 
		DeclareVarInst(stack, "int", rate)
		SwitchInst LoadVarInst(kFunArgs, channel)
			Case 0
				BlockInst 
					StoreVarInst(stack, rate, Int32(1))
					EndBlock
				EndCase
			Case 1
				BlockInst 
					StoreVarInst(stack, rate, Int32(1))
					EndBlock
				EndCase
			Default 
				BlockInst 
					StoreVarInst(stack, rate, Int32(-1))
					EndBlock
				EndCase
			EndSWitch
		RetInst(LoadVarInst(stack, rate))
		EndBlock
	EndDeclare

======= Static Init ==========

BlockInst 
	DeclareVarInst(stack, mydspSIG0, sig0, FunCallInst("newmydspSIG0"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG0", LoadVarInst(stack, sig0), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG0", LoadVarInst(stack, sig0), Int32(350), LoadVarInst(static, ftbl0mydspSIG0)))
	DeclareVarInst(stack, mydspSIG1, sig1, FunCallInst("newmydspSIG1"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG1", LoadVarInst(stack, sig1), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG1", LoadVarInst(stack, sig1), Int32(350), LoadVarInst(static, ftbl1mydspSIG1)))
	DeclareVarInst(stack, mydspSIG2, sig2, FunCallInst("newmydspSIG2"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG2", LoadVarInst(stack, sig2), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG2", LoadVarInst(stack, sig2), Int32(350), LoadVarInst(static, ftbl2mydspSIG2)))
	DeclareVarInst(stack, mydspSIG3, sig3, FunCallInst("newmydspSIG3"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG3", LoadVarInst(stack, sig3), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG3", LoadVarInst(stack, sig3), Int32(350), LoadVarInst(static, ftbl3mydspSIG3)))
	EndBlock
BlockInst 
	DropInst(FunCallInst("deletemydspSIG0", LoadVarInst(stack, sig0)))
	DropInst(FunCallInst("deletemydspSIG1", LoadVarInst(stack, sig1)))
	DropInst(FunCallInst("deletemydspSIG2", LoadVarInst(stack, sig2)))
	DropInst(FunCallInst("deletemydspSIG3", LoadVarInst(stack, sig3)))
	EndBlock

======= Init ==========

BlockInst 
	StoreVarInst(struct, fSamplingFreq, LoadVarInst(kFunArgs, samplingFreq))
	StoreVarInst(struct, fConst0, FunCallInst("min_f", Float(192000.0f), FunCallInst("max_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fSamplingFreq)))))
	StoreVarInst(struct, fConst1, FunCallInst("tanf", BinopInst("/", Float(20420.3516f), LoadVarInst(struct, fConst0))))
	StoreVarInst(struct, fConst2, BinopInst("/", Float(1.0f), LoadVarInst(struct, fConst1)))
	StoreVarInst(struct, fConst3, BinopInst("/", Float(1.0f), BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst2), Float(1.41421354f)), LoadVarInst(struct, fConst1)), Float(1.0f))))
	StoreVarInst(struct, fConst4, FunCallInst("tanf", BinopInst("/", Float(31.415926f), LoadVarInst(struct, fConst0))))
	StoreVarInst(struct, fConst5, BinopInst("/", Float(1.0f), LoadVarInst(struct, fConst4)))
	StoreVarInst(struct, fConst6, BinopInst("/", Float(1.0f), BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst5), Float(1.41421354f)), LoadVarInst(struct, fConst4)), Float(1.0f))))
	StoreVarInst(struct, fConst7, BinopInst("/", Float(1.0f), FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst4))))
	StoreVarInst(struct, fConst8, BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst5), Float(-1.41421354f)), LoadVarInst(struct, fConst4)), Float(1.0f)))
	StoreVarInst(struct, fConst9, BinopInst("*", Float(2.0f), BinopInst("-", Float(1.0f), LoadVarInst(struct, fConst7))))
	StoreVarInst(struct, fConst10, BinopInst("*", Float(2.0f), BinopInst("-", Float(0.0f), LoadVarInst(struct, fConst7))))
	StoreVarInst(struct, fConst11, BinopInst("*", Float(2.0f), BinopInst("-", Float(1.0f), BinopInst("/", Float(1.0f), FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst1))))))
	StoreVarInst(struct, fConst12, BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst2), Float(-1.41421354f)), LoadVarInst(struct, fConst1)), Float(1.0f)))
	StoreVarInst(struct, fConst13, BinopInst("*", Float(0.00200000009f), LoadVarInst(struct, fConst0)))
	StoreVarInst(struct, fConst14, BinopInst("*", Float(0.00100000005f), LoadVarInst(struct, fConst0)))
	StoreVarInst(struct, fConst15, BinopInst("/", Float(1000.0f), LoadVarInst(struct, fConst0)))
	StoreVarInst(struct, fConst16, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.3469906f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst17, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst16))), FunCallInst("cosf", BinopInst("/", Float(1630.04053f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst18, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst16)))
	StoreVarInst(struct, fConst19, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.2682228f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst20, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst19))), FunCallInst("cosf", BinopInst("/", Float(1645.28345f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst21, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst19)))
	StoreVarInst(struct, fConst22, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.6507998f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst23, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst22))), FunCallInst("cosf", BinopInst("/", Float(3099.69019f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst24, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst22)))
	StoreVarInst(struct, fConst25, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.6223917f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst26, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst25))), FunCallInst("cosf", BinopInst("/", Float(3106.85913f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst27, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst25)))
	StoreVarInst(struct, fConst28, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.0956459f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst29, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst28))), FunCallInst("cosf", BinopInst("/", Float(3789.06226f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst30, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst28)))
	StoreVarInst(struct, fConst31, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.0589275f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst32, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst31))), FunCallInst("cosf", BinopInst("/", Float(3799.70605f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst33, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst31)))
	StoreVarInst(struct, fConst34, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.6621294f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst35, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst34))), FunCallInst("cosf", BinopInst("/", Float(4552.58252f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst36, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst34)))
	StoreVarInst(struct, fConst37, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.6582489f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst38, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst37))), FunCallInst("cosf", BinopInst("/", Float(4553.9082f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst39, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst37)))
	StoreVarInst(struct, fConst40, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(7.56375885f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst41, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst40))), FunCallInst("cosf", BinopInst("/", Float(4944.77246f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst42, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst40)))
	StoreVarInst(struct, fConst43, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(5.38026142f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst44, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst43))), FunCallInst("cosf", BinopInst("/", Float(5855.25635f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst45, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst43)))
	StoreVarInst(struct, fConst46, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0404034f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst47, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst46))), FunCallInst("cosf", BinopInst("/", Float(2758.80225f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst48, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst46)))
	StoreVarInst(struct, fConst49, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0107555f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst50, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst49))), FunCallInst("cosf", BinopInst("/", Float(2766.51782f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst51, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst49)))
	StoreVarInst(struct, fConst52, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.3085108f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst53, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst52))), FunCallInst("cosf", BinopInst("/", Float(3810.4502f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst54, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst52)))
	StoreVarInst(struct, fConst55, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.1997375f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst56, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst55))), FunCallInst("cosf", BinopInst("/", Float(3843.90186f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst57, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst55)))
	StoreVarInst(struct, fConst58, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.3049049f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst59, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst58))), FunCallInst("cosf", BinopInst("/", Float(4458.65527f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst60, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst58)))
	StoreVarInst(struct, fConst61, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.300128f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst62, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst61))), FunCallInst("cosf", BinopInst("/", Float(4460.28857f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst63, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst61)))
	StoreVarInst(struct, fConst64, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.80774784f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst65, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst64))), FunCallInst("cosf", BinopInst("/", Float(5384.47607f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst66, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst64)))
	StoreVarInst(struct, fConst67, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.16906738f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst68, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst67))), FunCallInst("cosf", BinopInst("/", Float(5648.90381f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst69, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst67)))
	StoreVarInst(struct, fConst70, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(5.95891714f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst71, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst70))), FunCallInst("cosf", BinopInst("/", Float(6687.63379f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst72, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst70)))
	StoreVarInst(struct, fConst73, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(5.95436192f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst74, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst73))), FunCallInst("cosf", BinopInst("/", Float(6690.02148f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst75, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst73)))
	StoreVarInst(struct, fConst76, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(21.8895645f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst77, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst76))), FunCallInst("cosf", BinopInst("/", Float(1501.1095f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst78, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst76)))
	StoreVarInst(struct, fConst79, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(21.8487759f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst80, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst79))), FunCallInst("cosf", BinopInst("/", Float(1509.44104f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst81, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst79)))
	StoreVarInst(struct, fConst82, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0969524f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst83, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst82))), FunCallInst("cosf", BinopInst("/", Float(2552.54395f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst84, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst82)))
	StoreVarInst(struct, fConst85, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0448818f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst86, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst85))), FunCallInst("cosf", BinopInst("/", Float(2564.88428f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst87, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst85)))
	StoreVarInst(struct, fConst88, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.2791166f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst89, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst88))), FunCallInst("cosf", BinopInst("/", Float(3525.52661f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst90, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst88)))
	StoreVarInst(struct, fConst91, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.2376995f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst92, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst91))), FunCallInst("cosf", BinopInst("/", Float(3536.94946f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst93, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst91)))
	StoreVarInst(struct, fConst94, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.3884573f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst95, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst94))), FunCallInst("cosf", BinopInst("/", Float(4710.07666f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst96, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst94)))
	StoreVarInst(struct, fConst97, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.38386536f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst98, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst97))), FunCallInst("cosf", BinopInst("/", Float(4711.63477f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst99, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst97)))
	StoreVarInst(struct, fConst100, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.81131077f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst101, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst100))), FunCallInst("cosf", BinopInst("/", Float(4909.61182f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst102, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst100)))
	StoreVarInst(struct, fConst103, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.47139359f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst104, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst103))), FunCallInst("cosf", BinopInst("/", Float(5030.8208f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst105, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst103)))
	StoreVarInst(struct, fConst106, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.8901539f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst107, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst106))), FunCallInst("cosf", BinopInst("/", Float(857.598267f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst108, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst106)))
	StoreVarInst(struct, fConst109, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.860672f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst110, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst109))), FunCallInst("cosf", BinopInst("/", Float(860.746094f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst111, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst109)))
	StoreVarInst(struct, fConst112, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(14.4779148f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst113, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst112))), FunCallInst("cosf", BinopInst("/", Float(1627.08105f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst114, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst112)))
	StoreVarInst(struct, fConst115, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(14.4106588f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst116, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst115))), FunCallInst("cosf", BinopInst("/", Float(1636.26086f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst117, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst115)))
	StoreVarInst(struct, fConst118, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.9841108f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst119, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst118))), FunCallInst("cosf", BinopInst("/", Float(1988.55908f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst120, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst118)))
	StoreVarInst(struct, fConst121, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.9061594f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst122, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst121))), FunCallInst("cosf", BinopInst("/", Float(2000.63538f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst123, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst121)))
	StoreVarInst(struct, fConst124, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.10661697f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst125, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst124))), FunCallInst("cosf", BinopInst("/", Float(2474.64502f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst126, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst124)))
	StoreVarInst(struct, fConst127, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.10333347f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst128, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst127))), FunCallInst("cosf", BinopInst("/", Float(2475.25464f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst129, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst127)))
	StoreVarInst(struct, fConst130, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(7.19911861f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst131, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst130))), FunCallInst("cosf", BinopInst("/", Float(2856.81982f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst132, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst130)))
	StoreVarInst(struct, fConst133, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(6.83458185f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst134, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst133))), FunCallInst("cosf", BinopInst("/", Float(2937.34521f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst135, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst133)))
	EndBlock

======= ResetUI ==========

BlockInst 
	StoreVarInst(struct, fHslider0, CastInst("FAUSTFLOAT", Double(1.0f)))
	StoreVarInst(struct, fHslider1, CastInst("FAUSTFLOAT", Double(1.0f)))
	StoreVarInst(struct, fHslider2, CastInst("FAUSTFLOAT", Double(0.0f)))
	StoreVarInst(struct, fHslider3, CastInst("FAUSTFLOAT", Double(0.0f)))
	StoreVarInst(struct, fHslider4, CastInst("FAUSTFLOAT", Double(0.0f)))
	StoreVarInst(struct, fHslider5, CastInst("FAUSTFLOAT", Double(0.0f)))
	EndBlock

======= Clear ==========

BlockInst 
	ForLoopInst 
		DeclareVarInst(loop, "int", l0, Int32(0))
		BinopInst("<", LoadVarInst(loop, l0), Int32(2))
		StoreVarInst(loop, l0, BinopInst("+", LoadVarInst(loop, l0), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fVec0[LoadVarInst(loop, l0)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l1, Int32(0))
		BinopInst("<", LoadVarInst(loop, l1), Int32(2))
		StoreVarInst(loop, l1, BinopInst("+", LoadVarInst(loop, l1), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iRec3[LoadVarInst(loop, l1)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l2, Int32(0))
		BinopInst("<", LoadVarInst(loop, l2), Int32(3))
		StoreVarInst(loop, l2, BinopInst("+", LoadVarInst(loop, l2), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec2[LoadVarInst(loop, l2)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l3, Int32(0))
		BinopInst("<", LoadVarInst(loop, l3), Int32(3))
		StoreVarInst(loop, l3, BinopInst("+", LoadVarInst(loop, l3), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec1[LoadVarInst(loop, l3)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l4, Int32(0))
		BinopInst("<", LoadVarInst(loop, l4), Int32(2))
		StoreVarInst(loop, l4, BinopInst("+", LoadVarInst(loop, l4), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec1[LoadVarInst(loop, l4)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l5, Int32(0))
		BinopInst("<", LoadVarInst(loop, l5), Int32(2))
		StoreVarInst(loop, l5, BinopInst("+", LoadVarInst(loop, l5), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec4[LoadVarInst(loop, l5)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l6, Int32(0))
		BinopInst("<", LoadVarInst(loop, l6), Int32(3))
		StoreVarInst(loop, l6, BinopInst("+", LoadVarInst(loop, l6), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec0[LoadVarInst(loop, l6)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l7, Int32(0))
		BinopInst("<", LoadVarInst(loop, l7), Int32(3))
		StoreVarInst(loop, l7, BinopInst("+", LoadVarInst(loop, l7), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec5[LoadVarInst(loop, l7)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l8, Int32(0))
		BinopInst("<", LoadVarInst(loop, l8), Int32(3))
		StoreVarInst(loop, l8, BinopInst("+", LoadVarInst(loop, l8), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec6[LoadVarInst(loop, l8)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l9, Int32(0))
		BinopInst("<", LoadVarInst(loop, l9), Int32(3))
		StoreVarInst(loop, l9, BinopInst("+", LoadVarInst(loop, l9), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec7[LoadVarInst(loop, l9)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l10, Int32(0))
		BinopInst("<", LoadVarInst(loop, l10), Int32(3))
		StoreVarInst(loop, l10, BinopInst("+", LoadVarInst(loop, l10), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec8[LoadVarInst(loop, l10)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l11, Int32(0))
		BinopInst("<", LoadVarInst(loop, l11), Int32(3))
		StoreVarInst(loop, l11, BinopInst("+", LoadVarInst(loop, l11), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec9[LoadVarInst(loop, l11)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l12, Int32(0))
		BinopInst("<", LoadVarInst(loop, l12), Int32(3))
		StoreVarInst(loop, l12, BinopInst("+", LoadVarInst(loop, l12), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec10[LoadVarInst(loop, l12)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l13, Int32(0))
		BinopInst("<", LoadVarInst(loop, l13), Int32(3))
		StoreVarInst(loop, l13, BinopInst("+", LoadVarInst(loop, l13), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec11[LoadVarInst(loop, l13)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l14, Int32(0))
		BinopInst("<", LoadVarInst(loop, l14), Int32(3))
		StoreVarInst(loop, l14, BinopInst("+", LoadVarInst(loop, l14), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec12[LoadVarInst(loop, l14)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l15, Int32(0))
		BinopInst("<", LoadVarInst(loop, l15), Int32(3))
		StoreVarInst(loop, l15, BinopInst("+", LoadVarInst(loop, l15), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec13[LoadVarInst(loop, l15)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l16, Int32(0))
		BinopInst("<", LoadVarInst(loop, l16), Int32(2))
		StoreVarInst(loop, l16, BinopInst("+", LoadVarInst(loop, l16), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec2[LoadVarInst(loop, l16)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l17, Int32(0))
		BinopInst("<", LoadVarInst(loop, l17), Int32(2))
		StoreVarInst(loop, l17, BinopInst("+", LoadVarInst(loop, l17), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec15[LoadVarInst(loop, l17)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l18, Int32(0))
		BinopInst("<", LoadVarInst(loop, l18), Int32(3))
		StoreVarInst(loop, l18, BinopInst("+", LoadVarInst(loop, l18), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec14[LoadVarInst(loop, l18)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l19, Int32(0))
		BinopInst("<", LoadVarInst(loop, l19), Int32(3))
		StoreVarInst(loop, l19, BinopInst("+", LoadVarInst(loop, l19), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec16[LoadVarInst(loop, l19)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l20, Int32(0))
		BinopInst("<", LoadVarInst(loop, l20), Int32(3))
		StoreVarInst(loop, l20, BinopInst("+", LoadVarInst(loop, l20), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec17[LoadVarInst(loop, l20)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l21, Int32(0))
		BinopInst("<", LoadVarInst(loop, l21), Int32(3))
		StoreVarInst(loop, l21, BinopInst("+", LoadVarInst(loop, l21), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec18[LoadVarInst(loop, l21)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l22, Int32(0))
		BinopInst("<", LoadVarInst(loop, l22), Int32(3))
		StoreVarInst(loop, l22, BinopInst("+", LoadVarInst(loop, l22), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec19[LoadVarInst(loop, l22)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l23, Int32(0))
		BinopInst("<", LoadVarInst(loop, l23), Int32(3))
		StoreVarInst(loop, l23, BinopInst("+", LoadVarInst(loop, l23), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec20[LoadVarInst(loop, l23)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l24, Int32(0))
		BinopInst("<", LoadVarInst(loop, l24), Int32(3))
		StoreVarInst(loop, l24, BinopInst("+", LoadVarInst(loop, l24), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec21[LoadVarInst(loop, l24)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l25, Int32(0))
		BinopInst("<", LoadVarInst(loop, l25), Int32(3))
		StoreVarInst(loop, l25, BinopInst("+", LoadVarInst(loop, l25), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec22[LoadVarInst(loop, l25)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l26, Int32(0))
		BinopInst("<", LoadVarInst(loop, l26), Int32(3))
		StoreVarInst(loop, l26, BinopInst("+", LoadVarInst(loop, l26), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec23[LoadVarInst(loop, l26)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l27, Int32(0))
		BinopInst("<", LoadVarInst(loop, l27), Int32(3))
		StoreVarInst(loop, l27, BinopInst("+", LoadVarInst(loop, l27), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec24[LoadVarInst(loop, l27)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l28, Int32(0))
		BinopInst("<", LoadVarInst(loop, l28), Int32(2))
		StoreVarInst(loop, l28, BinopInst("+", LoadVarInst(loop, l28), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec3[LoadVarInst(loop, l28)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l29, Int32(0))
		BinopInst("<", LoadVarInst(loop, l29), Int32(2))
		StoreVarInst(loop, l29, BinopInst("+", LoadVarInst(loop, l29), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec26[LoadVarInst(loop, l29)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l30, Int32(0))
		BinopInst("<", LoadVarInst(loop, l30), Int32(3))
		StoreVarInst(loop, l30, BinopInst("+", LoadVarInst(loop, l30), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec25[LoadVarInst(loop, l30)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l31, Int32(0))
		BinopInst("<", LoadVarInst(loop, l31), Int32(3))
		StoreVarInst(loop, l31, BinopInst("+", LoadVarInst(loop, l31), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec27[LoadVarInst(loop, l31)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l32, Int32(0))
		BinopInst("<", LoadVarInst(loop, l32), Int32(3))
		StoreVarInst(loop, l32, BinopInst("+", LoadVarInst(loop, l32), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec28[LoadVarInst(loop, l32)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l33, Int32(0))
		BinopInst("<", LoadVarInst(loop, l33), Int32(3))
		StoreVarInst(loop, l33, BinopInst("+", LoadVarInst(loop, l33), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec29[LoadVarInst(loop, l33)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l34, Int32(0))
		BinopInst("<", LoadVarInst(loop, l34), Int32(3))
		StoreVarInst(loop, l34, BinopInst("+", LoadVarInst(loop, l34), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec30[LoadVarInst(loop, l34)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l35, Int32(0))
		BinopInst("<", LoadVarInst(loop, l35), Int32(3))
		StoreVarInst(loop, l35, BinopInst("+", LoadVarInst(loop, l35), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec31[LoadVarInst(loop, l35)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l36, Int32(0))
		BinopInst("<", LoadVarInst(loop, l36), Int32(3))
		StoreVarInst(loop, l36, BinopInst("+", LoadVarInst(loop, l36), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec32[LoadVarInst(loop, l36)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l37, Int32(0))
		BinopInst("<", LoadVarInst(loop, l37), Int32(3))
		StoreVarInst(loop, l37, BinopInst("+", LoadVarInst(loop, l37), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec33[LoadVarInst(loop, l37)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l38, Int32(0))
		BinopInst("<", LoadVarInst(loop, l38), Int32(3))
		StoreVarInst(loop, l38, BinopInst("+", LoadVarInst(loop, l38), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec34[LoadVarInst(loop, l38)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l39, Int32(0))
		BinopInst("<", LoadVarInst(loop, l39), Int32(3))
		StoreVarInst(loop, l39, BinopInst("+", LoadVarInst(loop, l39), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec35[LoadVarInst(loop, l39)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l40, Int32(0))
		BinopInst("<", LoadVarInst(loop, l40), Int32(2))
		StoreVarInst(loop, l40, BinopInst("+", LoadVarInst(loop, l40), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec4[LoadVarInst(loop, l40)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l41, Int32(0))
		BinopInst("<", LoadVarInst(loop, l41), Int32(2))
		StoreVarInst(loop, l41, BinopInst("+", LoadVarInst(loop, l41), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec37[LoadVarInst(loop, l41)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l42, Int32(0))
		BinopInst("<", LoadVarInst(loop, l42), Int32(3))
		StoreVarInst(loop, l42, BinopInst("+", LoadVarInst(loop, l42), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec36[LoadVarInst(loop, l42)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l43, Int32(0))
		BinopInst("<", LoadVarInst(loop, l43), Int32(3))
		StoreVarInst(loop, l43, BinopInst("+", LoadVarInst(loop, l43), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec38[LoadVarInst(loop, l43)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l44, Int32(0))
		BinopInst("<", LoadVarInst(loop, l44), Int32(3))
		StoreVarInst(loop, l44, BinopInst("+", LoadVarInst(loop, l44), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec39[LoadVarInst(loop, l44)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l45, Int32(0))
		BinopInst("<", LoadVarInst(loop, l45), Int32(3))
		StoreVarInst(loop, l45, BinopInst("+", LoadVarInst(loop, l45), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec40[LoadVarInst(loop, l45)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l46, Int32(0))
		BinopInst("<", LoadVarInst(loop, l46), Int32(3))
		StoreVarInst(loop, l46, BinopInst("+", LoadVarInst(loop, l46), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec41[LoadVarInst(loop, l46)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l47, Int32(0))
		BinopInst("<", LoadVarInst(loop, l47), Int32(3))
		StoreVarInst(loop, l47, BinopInst("+", LoadVarInst(loop, l47), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec42[LoadVarInst(loop, l47)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l48, Int32(0))
		BinopInst("<", LoadVarInst(loop, l48), Int32(3))
		StoreVarInst(loop, l48, BinopInst("+", LoadVarInst(loop, l48), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec43[LoadVarInst(loop, l48)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l49, Int32(0))
		BinopInst("<", LoadVarInst(loop, l49), Int32(3))
		StoreVarInst(loop, l49, BinopInst("+", LoadVarInst(loop, l49), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec44[LoadVarInst(loop, l49)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l50, Int32(0))
		BinopInst("<", LoadVarInst(loop, l50), Int32(3))
		StoreVarInst(loop, l50, BinopInst("+", LoadVarInst(loop, l50), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec45[LoadVarInst(loop, l50)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l51, Int32(0))
		BinopInst("<", LoadVarInst(loop, l51), Int32(3))
		StoreVarInst(loop, l51, BinopInst("+", LoadVarInst(loop, l51), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec46[LoadVarInst(loop, l51)], Float(0.0f))
			EndBlock
		EndForLoop
	EndBlock

======= Compute control ==========

Instructions complexity
Load = 17
Store = 0
Binop = 15
Numbers = 19
Declare = 16
Cast = 11
Select = 0
Loop = 0
Funcall = 7

BlockInst 
	DeclareVarInst(stack, FAUSTFLOAT*, output0, LoadVarInst(kFunArgs, outputs[Int32(0)]))
	DeclareVarInst(stack, FAUSTFLOAT*, output1, LoadVarInst(kFunArgs, outputs[Int32(1)]))
	DeclareVarInst(stack, "int", iSlow0, BinopInst("*", Int32(10), CastInst("int", BinopInst("*", Float(6.0f), FunCallInst("min_f", FunCallInst("fabsf", BinopInst("+", BinopInst("*", Float(2.0f), CastInst("float", LoadVarInst(struct, fHslider0))), Float(-1.0f))), FunCallInst("fabsf", BinopInst("+", BinopInst("*", Float(2.0f), CastInst("float", LoadVarInst(struct, fHslider1))), Float(-1.0f))))))))
	DeclareVarInst(stack, "int", iSlow1, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider2)))))
	DeclareVarInst(stack, "int", iSlow2, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(1)))
	DeclareVarInst(stack, "int", iSlow3, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(2)))
	DeclareVarInst(stack, "int", iSlow4, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(3)))
	DeclareVarInst(stack, "int", iSlow5, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(4)))
	DeclareVarInst(stack, "int", iSlow6, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(5)))
	DeclareVarInst(stack, "int", iSlow7, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(6)))
	DeclareVarInst(stack, "int", iSlow8, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(7)))
	DeclareVarInst(stack, "int", iSlow9, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(8)))
	DeclareVarInst(stack, "int", iSlow10, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(9)))
	DeclareVarInst(stack, "int", iSlow11, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider3)))))
	DeclareVarInst(stack, "int", iSlow12, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider4)))))
	DeclareVarInst(stack, "int", iSlow13, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider5)))))
	EndBlock

======= Compute DSP ==========

Instructions complexity
Load = 526
Store = 149
Binop = 366
Numbers = 194
Declare = 12
Cast = 3
Select = 0
Loop = 1
Funcall = 4

ForLoopInst 
	DeclareVarInst(loop, "int", i, Int32(0))
	BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
	StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
	BlockInst 
		StoreVarInst(struct, fVec0[Int32(0)], LoadVarInst(struct, fConst0))
		StoreVarInst(struct, iRec3[Int32(0)], BinopInst("+", BinopInst("*", Int32(1103515245), LoadVarInst(struct, iRec3[Int32(1)])), Int32(12345)))
		StoreVarInst(struct, fRec2[Int32(0)], BinopInst("-", BinopInst("*", Float(4.65661287e-10f), CastInst("float", LoadVarInst(struct, iRec3[Int32(0)]))), BinopInst("*", LoadVarInst(struct, fConst6), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst8), LoadVarInst(struct, fRec2[Int32(2)])), BinopInst("*", LoadVarInst(struct, fConst9), LoadVarInst(struct, fRec2[Int32(1)]))))))
		StoreVarInst(struct, fRec1[Int32(0)], BinopInst("-", BinopInst("*", LoadVarInst(struct, fConst6), BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst7), LoadVarInst(struct, fRec2[Int32(0)])), BinopInst("*", LoadVarInst(struct, fConst10), LoadVarInst(struct, fRec2[Int32(1)]))), BinopInst("*", LoadVarInst(struct, fConst7), LoadVarInst(struct, fRec2[Int32(2)])))), BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst11), LoadVarInst(struct, fRec1[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst12), LoadVarInst(struct, fRec1[Int32(2)]))))))
		DeclareVarInst(stack, "float", fTemp0, BinopInst("+", LoadVarInst(struct, fRec1[Int32(2)]), BinopInst("+", LoadVarInst(struct, fRec1[Int32(0)]), BinopInst("*", Float(2.0f), LoadVarInst(struct, fRec1[Int32(1)])))))
		StoreVarInst(struct, iVec1[Int32(0)], LoadVarInst(stack, iSlow1))
		DeclareVarInst(stack, "float", fTemp1, BinopInst("*", Float(0.00200000009f), BinopInst("-", LoadVarInst(struct, fConst0), LoadVarInst(struct, fVec0[Int32(1)]))))
		StoreVarInst(struct, fRec4[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow1), LoadVarInst(struct, iVec1[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(struct, fRec4[Int32(1)]), LoadVarInst(stack, fTemp1)), Float(1.0f)))))
		DeclareVarInst(stack, "int", iTemp2, BinopInst("<", LoadVarInst(struct, fRec4[Int32(0)]), LoadVarInst(struct, fConst14)))
		DeclareVarInst(stack, "float", fTemp3, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp2) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec4[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp2) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec4[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec4[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec4[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
		StoreVarInst(struct, fRec0[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst17), LoadVarInst(struct, fRec0[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst18), LoadVarInst(struct, fRec0[Int32(2)])))))
		StoreVarInst(struct, fRec5[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst20), LoadVarInst(struct, fRec5[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst21), LoadVarInst(struct, fRec5[Int32(2)])))))
		StoreVarInst(struct, fRec6[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst23), LoadVarInst(struct, fRec6[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst24), LoadVarInst(struct, fRec6[Int32(2)])))))
		StoreVarInst(struct, fRec7[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst26), LoadVarInst(struct, fRec7[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst27), LoadVarInst(struct, fRec7[Int32(2)])))))
		StoreVarInst(struct, fRec8[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst29), LoadVarInst(struct, fRec8[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst30), LoadVarInst(struct, fRec8[Int32(2)])))))
		StoreVarInst(struct, fRec9[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst32), LoadVarInst(struct, fRec9[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst33), LoadVarInst(struct, fRec9[Int32(2)])))))
		StoreVarInst(struct, fRec10[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst35), LoadVarInst(struct, fRec10[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst36), LoadVarInst(struct, fRec10[Int32(2)])))))
		StoreVarInst(struct, fRec11[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst38), LoadVarInst(struct, fRec11[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst39), LoadVarInst(struct, fRec11[Int32(2)])))))
		StoreVarInst(struct, fRec12[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst41), LoadVarInst(struct, fRec12[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst42), LoadVarInst(struct, fRec12[Int32(2)])))))
		StoreVarInst(struct, fRec13[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst44), LoadVarInst(struct, fRec13[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst45), LoadVarInst(struct, fRec13[Int32(2)])))))
		StoreVarInst(struct, iVec2[Int32(0)], LoadVarInst(stack, iSlow11))
		StoreVarInst(struct, fRec15[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow11), LoadVarInst(struct, iVec2[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(stack, fTemp1), LoadVarInst(struct, fRec15[Int32(1)])), Float(1.0f)))))
		DeclareVarInst(stack, "int", iTemp4, BinopInst("<", LoadVarInst(struct, fRec15[Int32(0)]), LoadVarInst(struct, fConst14)))
		DeclareVarInst(stack, "float", fTemp5, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp4) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec15[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp4) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec15[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec15[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec15[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
		StoreVarInst(struct, fRec14[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst47), LoadVarInst(struct, fRec14[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst48), LoadVarInst(struct, fRec14[Int32(2)])))))
		StoreVarInst(struct, fRec16[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst50), LoadVarInst(struct, fRec16[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst51), LoadVarInst(struct, fRec16[Int32(2)])))))
		StoreVarInst(struct, fRec17[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst53), LoadVarInst(struct, fRec17[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst54), LoadVarInst(struct, fRec17[Int32(2)])))))
		StoreVarInst(struct, fRec18[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst56), LoadVarInst(struct, fRec18[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst57), LoadVarInst(struct, fRec18[Int32(2)])))))
		StoreVarInst(struct, fRec19[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst59), LoadVarInst(struct, fRec19[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst60), LoadVarInst(struct, fRec19[Int32(2)])))))
		StoreVarInst(struct, fRec20[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst62), LoadVarInst(struct, fRec20[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst63), LoadVarInst(struct, fRec20[Int32(2)])))))
		StoreVarInst(struct, fRec21[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst65), LoadVarInst(struct, fRec21[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst66), LoadVarInst(struct, fRec21[Int32(2)])))))
		StoreVarInst(struct, fRec22[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst68), LoadVarInst(struct, fRec22[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst69), LoadVarInst(struct, fRec22[Int32(2)])))))
		StoreVarInst(struct, fRec23[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst71), LoadVarInst(struct, fRec23[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst72), LoadVarInst(struct, fRec23[Int32(2)])))))
		StoreVarInst(struct, fRec24[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst74), LoadVarInst(struct, fRec24[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst75), LoadVarInst(struct, fRec24[Int32(2)])))))
		StoreVarInst(struct, iVec3[Int32(0)], LoadVarInst(stack, iSlow12))
		StoreVarInst(struct, fRec26[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow12), LoadVarInst(struct, iVec3[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(stack, fTemp1), LoadVarInst(struct, fRec26[Int32(1)])), Float(1.0f)))))
		DeclareVarInst(stack, "int", iTemp6, BinopInst("<", LoadVarInst(struct, fRec26[Int32(0)]), LoadVarInst(struct, fConst14)))
		DeclareVarInst(stack, "float", fTemp7, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp6) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec26[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp6) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec26[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec26[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec26[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
		StoreVarInst(struct, fRec25[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst77), LoadVarInst(struct, fRec25[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst78), LoadVarInst(struct, fRec25[Int32(2)])))))
		StoreVarInst(struct, fRec27[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst80), LoadVarInst(struct, fRec27[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst81), LoadVarInst(struct, fRec27[Int32(2)])))))
		StoreVarInst(struct, fRec28[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst83), LoadVarInst(struct, fRec28[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst84), LoadVarInst(struct, fRec28[Int32(2)])))))
		StoreVarInst(struct, fRec29[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst86), LoadVarInst(struct, fRec29[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst87), LoadVarInst(struct, fRec29[Int32(2)])))))
		StoreVarInst(struct, fRec30[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst89), LoadVarInst(struct, fRec30[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst90), LoadVarInst(struct, fRec30[Int32(2)])))))
		StoreVarInst(struct, fRec31[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst92), LoadVarInst(struct, fRec31[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst93), LoadVarInst(struct, fRec31[Int32(2)])))))
		StoreVarInst(struct, fRec32[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst95), LoadVarInst(struct, fRec32[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst96), LoadVarInst(struct, fRec32[Int32(2)])))))
		StoreVarInst(struct, fRec33[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst98), LoadVarInst(struct, fRec33[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst99), LoadVarInst(struct, fRec33[Int32(2)])))))
		StoreVarInst(struct, fRec34[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst101), LoadVarInst(struct, fRec34[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst102), LoadVarInst(struct, fRec34[Int32(2)])))))
		StoreVarInst(struct, fRec35[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst104), LoadVarInst(struct, fRec35[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst105), LoadVarInst(struct, fRec35[Int32(2)])))))
		StoreVarInst(struct, iVec4[Int32(0)], LoadVarInst(stack, iSlow13))
		StoreVarInst(struct, fRec37[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow13), LoadVarInst(struct, iVec4[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(stack, fTemp1), LoadVarInst(struct, fRec37[Int32(1)])), Float(1.0f)))))
		DeclareVarInst(stack, "int", iTemp8, BinopInst("<", LoadVarInst(struct, fRec37[Int32(0)]), LoadVarInst(struct, fConst14)))
		DeclareVarInst(stack, "float", fTemp9, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp8) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec37[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp8) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec37[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec37[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec37[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
		StoreVarInst(struct, fRec36[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst107), LoadVarInst(struct, fRec36[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst108), LoadVarInst(struct, fRec36[Int32(2)])))))
		StoreVarInst(struct, fRec38[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst110), LoadVarInst(struct, fRec38[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst111), LoadVarInst(struct, fRec38[Int32(2)])))))
		StoreVarInst(struct, fRec39[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst113), LoadVarInst(struct, fRec39[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst114), LoadVarInst(struct, fRec39[Int32(2)])))))
		StoreVarInst(struct, fRec40[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst116), LoadVarInst(struct, fRec40[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst117), LoadVarInst(struct, fRec40[Int32(2)])))))
		StoreVarInst(struct, fRec41[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst119), LoadVarInst(struct, fRec41[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst120), LoadVarInst(struct, fRec41[Int32(2)])))))
		StoreVarInst(struct, fRec42[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst122), LoadVarInst(struct, fRec42[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst123), LoadVarInst(struct, fRec42[Int32(2)])))))
		StoreVarInst(struct, fRec43[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst125), LoadVarInst(struct, fRec43[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst126), LoadVarInst(struct, fRec43[Int32(2)])))))
		StoreVarInst(struct, fRec44[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst128), LoadVarInst(struct, fRec44[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst129), LoadVarInst(struct, fRec44[Int32(2)])))))
		StoreVarInst(struct, fRec45[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst131), LoadVarInst(struct, fRec45[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst132), LoadVarInst(struct, fRec45[Int32(2)])))))
		StoreVarInst(struct, fRec46[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst134), LoadVarInst(struct, fRec46[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst135), LoadVarInst(struct, fRec46[Int32(2)])))))
		DeclareVarInst(stack, "float", fTemp10, BinopInst("*", Float(0.0199999996f), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec0[Int32(0)]), LoadVarInst(struct, fRec0[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec5[Int32(0)]), LoadVarInst(struct, fRec5[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec6[Int32(0)]), LoadVarInst(struct, fRec6[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec7[Int32(0)]), LoadVarInst(struct, fRec7[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec8[Int32(0)]), LoadVarInst(struct, fRec8[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec9[Int32(0)]), LoadVarInst(struct, fRec9[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec10[Int32(0)]), LoadVarInst(struct, fRec10[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec11[Int32(0)]), LoadVarInst(struct, fRec11[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec12[Int32(0)]), LoadVarInst(struct, fRec12[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec13[Int32(0)]), LoadVarInst(struct, fRec13[Int32(2)])))), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec14[Int32(0)]), LoadVarInst(struct, fRec14[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec16[Int32(0)]), LoadVarInst(struct, fRec16[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec17[Int32(0)]), LoadVarInst(struct, fRec17[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec18[Int32(0)]), LoadVarInst(struct, fRec18[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec19[Int32(0)]), LoadVarInst(struct, fRec19[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec20[Int32(0)]), LoadVarInst(struct, fRec20[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec21[Int32(0)]), LoadVarInst(struct, fRec21[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec22[Int32(0)]), LoadVarInst(struct, fRec22[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec23[Int32(0)]), LoadVarInst(struct, fRec23[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec24[Int32(0)]), LoadVarInst(struct, fRec24[Int32(2)]))))), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec25[Int32(0)]), LoadVarInst(struct, fRec25[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec27[Int32(0)]), LoadVarInst(struct, fRec27[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec28[Int32(0)]), LoadVarInst(struct, fRec28[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec29[Int32(0)]), LoadVarInst(struct, fRec29[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec30[Int32(0)]), LoadVarInst(struct, fRec30[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec31[Int32(0)]), LoadVarInst(struct, fRec31[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec32[Int32(0)]), LoadVarInst(struct, fRec32[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec33[Int32(0)]), LoadVarInst(struct, fRec33[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec34[Int32(0)]), LoadVarInst(struct, fRec34[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec35[Int32(0)]), LoadVarInst(struct, fRec35[Int32(2)]))))), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec36[Int32(0)]), LoadVarInst(struct, fRec36[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec38[Int32(0)]), LoadVarInst(struct, fRec38[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec39[Int32(0)]), LoadVarInst(struct, fRec39[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec40[Int32(0)]), LoadVarInst(struct, fRec40[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec41[Int32(0)]), LoadVarInst(struct, fRec41[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec42[Int32(0)]), LoadVarInst(struct, fRec42[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec43[Int32(0)]), LoadVarInst(struct, fRec43[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec44[Int32(0)]), LoadVarInst(struct, fRec44[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec45[Int32(0)]), LoadVarInst(struct, fRec45[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec46[Int32(0)]), LoadVarInst(struct, fRec46[Int32(2)])))))))
		StoreVarInst(stack, output0[LoadVarInst(loop, i)], CastInst("FAUSTFLOAT", LoadVarInst(stack, fTemp10)))
		StoreVarInst(stack, output1[LoadVarInst(loop, i)], CastInst("FAUSTFLOAT", LoadVarInst(stack, fTemp10)))
		StoreVarInst(struct, fVec0[Int32(1)], LoadVarInst(struct, fVec0[Int32(0)]))
		StoreVarInst(struct, iRec3[Int32(1)], LoadVarInst(struct, iRec3[Int32(0)]))
		StoreVarInst(struct, fRec2[Int32(2)], LoadVarInst(struct, fRec2[Int32(1)]))
		StoreVarInst(struct, fRec2[Int32(1)], LoadVarInst(struct, fRec2[Int32(0)]))
		StoreVarInst(struct, fRec1[Int32(2)], LoadVarInst(struct, fRec1[Int32(1)]))
		StoreVarInst(struct, fRec1[Int32(1)], LoadVarInst(struct, fRec1[Int32(0)]))
		StoreVarInst(struct, iVec1[Int32(1)], LoadVarInst(struct, iVec1[Int32(0)]))
		StoreVarInst(struct, fRec4[Int32(1)], LoadVarInst(struct, fRec4[Int32(0)]))
		StoreVarInst(struct, fRec0[Int32(2)], LoadVarInst(struct, fRec0[Int32(1)]))
		StoreVarInst(struct, fRec0[Int32(1)], LoadVarInst(struct, fRec0[Int32(0)]))
		StoreVarInst(struct, fRec5[Int32(2)], LoadVarInst(struct, fRec5[Int32(1)]))
		StoreVarInst(struct, fRec5[Int32(1)], LoadVarInst(struct, fRec5[Int32(0)]))
		StoreVarInst(struct, fRec6[Int32(2)], LoadVarInst(struct, fRec6[Int32(1)]))
		StoreVarInst(struct, fRec6[Int32(1)], LoadVarInst(struct, fRec6[Int32(0)]))
		StoreVarInst(struct, fRec7[Int32(2)], LoadVarInst(struct, fRec7[Int32(1)]))
		StoreVarInst(struct, fRec7[Int32(1)], LoadVarInst(struct, fRec7[Int32(0)]))
		StoreVarInst(struct, fRec8[Int32(2)], LoadVarInst(struct, fRec8[Int32(1)]))
		StoreVarInst(struct, fRec8[Int32(1)], LoadVarInst(struct, fRec8[Int32(0)]))
		StoreVarInst(struct, fRec9[Int32(2)], LoadVarInst(struct, fRec9[Int32(1)]))
		StoreVarInst(struct, fRec9[Int32(1)], LoadVarInst(struct, fRec9[Int32(0)]))
		StoreVarInst(struct, fRec10[Int32(2)], LoadVarInst(struct, fRec10[Int32(1)]))
		StoreVarInst(struct, fRec10[Int32(1)], LoadVarInst(struct, fRec10[Int32(0)]))
		StoreVarInst(struct, fRec11[Int32(2)], LoadVarInst(struct, fRec11[Int32(1)]))
		StoreVarInst(struct, fRec11[Int32(1)], LoadVarInst(struct, fRec11[Int32(0)]))
		StoreVarInst(struct, fRec12[Int32(2)], LoadVarInst(struct, fRec12[Int32(1)]))
		StoreVarInst(struct, fRec12[Int32(1)], LoadVarInst(struct, fRec12[Int32(0)]))
		StoreVarInst(struct, fRec13[Int32(2)], LoadVarInst(struct, fRec13[Int32(1)]))
		StoreVarInst(struct, fRec13[Int32(1)], LoadVarInst(struct, fRec13[Int32(0)]))
		StoreVarInst(struct, iVec2[Int32(1)], LoadVarInst(struct, iVec2[Int32(0)]))
		StoreVarInst(struct, fRec15[Int32(1)], LoadVarInst(struct, fRec15[Int32(0)]))
		StoreVarInst(struct, fRec14[Int32(2)], LoadVarInst(struct, fRec14[Int32(1)]))
		StoreVarInst(struct, fRec14[Int32(1)], LoadVarInst(struct, fRec14[Int32(0)]))
		StoreVarInst(struct, fRec16[Int32(2)], LoadVarInst(struct, fRec16[Int32(1)]))
		StoreVarInst(struct, fRec16[Int32(1)], LoadVarInst(struct, fRec16[Int32(0)]))
		StoreVarInst(struct, fRec17[Int32(2)], LoadVarInst(struct, fRec17[Int32(1)]))
		StoreVarInst(struct, fRec17[Int32(1)], LoadVarInst(struct, fRec17[Int32(0)]))
		StoreVarInst(struct, fRec18[Int32(2)], LoadVarInst(struct, fRec18[Int32(1)]))
		StoreVarInst(struct, fRec18[Int32(1)], LoadVarInst(struct, fRec18[Int32(0)]))
		StoreVarInst(struct, fRec19[Int32(2)], LoadVarInst(struct, fRec19[Int32(1)]))
		StoreVarInst(struct, fRec19[Int32(1)], LoadVarInst(struct, fRec19[Int32(0)]))
		StoreVarInst(struct, fRec20[Int32(2)], LoadVarInst(struct, fRec20[Int32(1)]))
		StoreVarInst(struct, fRec20[Int32(1)], LoadVarInst(struct, fRec20[Int32(0)]))
		StoreVarInst(struct, fRec21[Int32(2)], LoadVarInst(struct, fRec21[Int32(1)]))
		StoreVarInst(struct, fRec21[Int32(1)], LoadVarInst(struct, fRec21[Int32(0)]))
		StoreVarInst(struct, fRec22[Int32(2)], LoadVarInst(struct, fRec22[Int32(1)]))
		StoreVarInst(struct, fRec22[Int32(1)], LoadVarInst(struct, fRec22[Int32(0)]))
		StoreVarInst(struct, fRec23[Int32(2)], LoadVarInst(struct, fRec23[Int32(1)]))
		StoreVarInst(struct, fRec23[Int32(1)], LoadVarInst(struct, fRec23[Int32(0)]))
		StoreVarInst(struct, fRec24[Int32(2)], LoadVarInst(struct, fRec24[Int32(1)]))
		StoreVarInst(struct, fRec24[Int32(1)], LoadVarInst(struct, fRec24[Int32(0)]))
		StoreVarInst(struct, iVec3[Int32(1)], LoadVarInst(struct, iVec3[Int32(0)]))
		StoreVarInst(struct, fRec26[Int32(1)], LoadVarInst(struct, fRec26[Int32(0)]))
		StoreVarInst(struct, fRec25[Int32(2)], LoadVarInst(struct, fRec25[Int32(1)]))
		StoreVarInst(struct, fRec25[Int32(1)], LoadVarInst(struct, fRec25[Int32(0)]))
		StoreVarInst(struct, fRec27[Int32(2)], LoadVarInst(struct, fRec27[Int32(1)]))
		StoreVarInst(struct, fRec27[Int32(1)], LoadVarInst(struct, fRec27[Int32(0)]))
		StoreVarInst(struct, fRec28[Int32(2)], LoadVarInst(struct, fRec28[Int32(1)]))
		StoreVarInst(struct, fRec28[Int32(1)], LoadVarInst(struct, fRec28[Int32(0)]))
		StoreVarInst(struct, fRec29[Int32(2)], LoadVarInst(struct, fRec29[Int32(1)]))
		StoreVarInst(struct, fRec29[Int32(1)], LoadVarInst(struct, fRec29[Int32(0)]))
		StoreVarInst(struct, fRec30[Int32(2)], LoadVarInst(struct, fRec30[Int32(1)]))
		StoreVarInst(struct, fRec30[Int32(1)], LoadVarInst(struct, fRec30[Int32(0)]))
		StoreVarInst(struct, fRec31[Int32(2)], LoadVarInst(struct, fRec31[Int32(1)]))
		StoreVarInst(struct, fRec31[Int32(1)], LoadVarInst(struct, fRec31[Int32(0)]))
		StoreVarInst(struct, fRec32[Int32(2)], LoadVarInst(struct, fRec32[Int32(1)]))
		StoreVarInst(struct, fRec32[Int32(1)], LoadVarInst(struct, fRec32[Int32(0)]))
		StoreVarInst(struct, fRec33[Int32(2)], LoadVarInst(struct, fRec33[Int32(1)]))
		StoreVarInst(struct, fRec33[Int32(1)], LoadVarInst(struct, fRec33[Int32(0)]))
		StoreVarInst(struct, fRec34[Int32(2)], LoadVarInst(struct, fRec34[Int32(1)]))
		StoreVarInst(struct, fRec34[Int32(1)], LoadVarInst(struct, fRec34[Int32(0)]))
		StoreVarInst(struct, fRec35[Int32(2)], LoadVarInst(struct, fRec35[Int32(1)]))
		StoreVarInst(struct, fRec35[Int32(1)], LoadVarInst(struct, fRec35[Int32(0)]))
		StoreVarInst(struct, iVec4[Int32(1)], LoadVarInst(struct, iVec4[Int32(0)]))
		StoreVarInst(struct, fRec37[Int32(1)], LoadVarInst(struct, fRec37[Int32(0)]))
		StoreVarInst(struct, fRec36[Int32(2)], LoadVarInst(struct, fRec36[Int32(1)]))
		StoreVarInst(struct, fRec36[Int32(1)], LoadVarInst(struct, fRec36[Int32(0)]))
		StoreVarInst(struct, fRec38[Int32(2)], LoadVarInst(struct, fRec38[Int32(1)]))
		StoreVarInst(struct, fRec38[Int32(1)], LoadVarInst(struct, fRec38[Int32(0)]))
		StoreVarInst(struct, fRec39[Int32(2)], LoadVarInst(struct, fRec39[Int32(1)]))
		StoreVarInst(struct, fRec39[Int32(1)], LoadVarInst(struct, fRec39[Int32(0)]))
		StoreVarInst(struct, fRec40[Int32(2)], LoadVarInst(struct, fRec40[Int32(1)]))
		StoreVarInst(struct, fRec40[Int32(1)], LoadVarInst(struct, fRec40[Int32(0)]))
		StoreVarInst(struct, fRec41[Int32(2)], LoadVarInst(struct, fRec41[Int32(1)]))
		StoreVarInst(struct, fRec41[Int32(1)], LoadVarInst(struct, fRec41[Int32(0)]))
		StoreVarInst(struct, fRec42[Int32(2)], LoadVarInst(struct, fRec42[Int32(1)]))
		StoreVarInst(struct, fRec42[Int32(1)], LoadVarInst(struct, fRec42[Int32(0)]))
		StoreVarInst(struct, fRec43[Int32(2)], LoadVarInst(struct, fRec43[Int32(1)]))
		StoreVarInst(struct, fRec43[Int32(1)], LoadVarInst(struct, fRec43[Int32(0)]))
		StoreVarInst(struct, fRec44[Int32(2)], LoadVarInst(struct, fRec44[Int32(1)]))
		StoreVarInst(struct, fRec44[Int32(1)], LoadVarInst(struct, fRec44[Int32(0)]))
		StoreVarInst(struct, fRec45[Int32(2)], LoadVarInst(struct, fRec45[Int32(1)]))
		StoreVarInst(struct, fRec45[Int32(1)], LoadVarInst(struct, fRec45[Int32(0)]))
		StoreVarInst(struct, fRec46[Int32(2)], LoadVarInst(struct, fRec46[Int32(1)]))
		StoreVarInst(struct, fRec46[Int32(1)], LoadVarInst(struct, fRec46[Int32(0)]))
		EndBlock
	EndForLoop

======= Flatten FIR ==========

BlockInst 
	========== Declaration part ==========
	DeclareVarInst(static, float, ftbl0mydspSIG0[350])
	DeclareFunInst("float", "fabsf", "float", dummy0)
	DeclareFunInst("float", "min_f", "float", dummy0, "float", dummy1)
	DeclareFunInst("float", "max_f", "float", dummy0, "float", dummy1)
	DeclareFunInst("float", "tanf", "float", dummy0)
	DeclareFunInst("float", "mydsp_faustpower2_f", "float", value)
		BlockInst 
			RetInst(BinopInst("*", LoadVarInst(kFunArgs, value), LoadVarInst(kFunArgs, value)))
			EndBlock
		EndDeclare
	DeclareFunInst("float", "powf", "float", dummy0, "float", dummy1)
	DeclareFunInst("float", "cosf", "float", dummy0)
	DeclareVarInst(static, float, ftbl1mydspSIG1[350])
	DeclareVarInst(static, float, ftbl2mydspSIG2[350])
	DeclareVarInst(static, float, ftbl3mydspSIG3[350])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider0)
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider1)
	DeclareVarInst(struct, "int", fSamplingFreq)
	DeclareVarInst(struct, "float", fConst0)
	DeclareVarInst(struct, float, fVec0[2])
	DeclareVarInst(struct, "float", fConst1)
	DeclareVarInst(struct, "float", fConst2)
	DeclareVarInst(struct, "float", fConst3)
	DeclareVarInst(struct, "float", fConst4)
	DeclareVarInst(struct, "float", fConst5)
	DeclareVarInst(struct, "float", fConst6)
	DeclareVarInst(struct, "float", fConst7)
	DeclareVarInst(struct, int, iRec3[2])
	DeclareVarInst(struct, "float", fConst8)
	DeclareVarInst(struct, "float", fConst9)
	DeclareVarInst(struct, float, fRec2[3])
	DeclareVarInst(struct, "float", fConst10)
	DeclareVarInst(struct, "float", fConst11)
	DeclareVarInst(struct, "float", fConst12)
	DeclareVarInst(struct, float, fRec1[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider2)
	DeclareVarInst(struct, int, iVec1[2])
	DeclareVarInst(struct, "float", fConst13)
	DeclareVarInst(struct, float, fRec4[2])
	DeclareVarInst(struct, "float", fConst14)
	DeclareVarInst(struct, "float", fConst15)
	DeclareVarInst(struct, "float", fConst16)
	DeclareVarInst(struct, "float", fConst17)
	DeclareVarInst(struct, "float", fConst18)
	DeclareVarInst(struct, float, fRec0[3])
	DeclareVarInst(struct, "float", fConst19)
	DeclareVarInst(struct, "float", fConst20)
	DeclareVarInst(struct, "float", fConst21)
	DeclareVarInst(struct, float, fRec5[3])
	DeclareVarInst(struct, "float", fConst22)
	DeclareVarInst(struct, "float", fConst23)
	DeclareVarInst(struct, "float", fConst24)
	DeclareVarInst(struct, float, fRec6[3])
	DeclareVarInst(struct, "float", fConst25)
	DeclareVarInst(struct, "float", fConst26)
	DeclareVarInst(struct, "float", fConst27)
	DeclareVarInst(struct, float, fRec7[3])
	DeclareVarInst(struct, "float", fConst28)
	DeclareVarInst(struct, "float", fConst29)
	DeclareVarInst(struct, "float", fConst30)
	DeclareVarInst(struct, float, fRec8[3])
	DeclareVarInst(struct, "float", fConst31)
	DeclareVarInst(struct, "float", fConst32)
	DeclareVarInst(struct, "float", fConst33)
	DeclareVarInst(struct, float, fRec9[3])
	DeclareVarInst(struct, "float", fConst34)
	DeclareVarInst(struct, "float", fConst35)
	DeclareVarInst(struct, "float", fConst36)
	DeclareVarInst(struct, float, fRec10[3])
	DeclareVarInst(struct, "float", fConst37)
	DeclareVarInst(struct, "float", fConst38)
	DeclareVarInst(struct, "float", fConst39)
	DeclareVarInst(struct, float, fRec11[3])
	DeclareVarInst(struct, "float", fConst40)
	DeclareVarInst(struct, "float", fConst41)
	DeclareVarInst(struct, "float", fConst42)
	DeclareVarInst(struct, float, fRec12[3])
	DeclareVarInst(struct, "float", fConst43)
	DeclareVarInst(struct, "float", fConst44)
	DeclareVarInst(struct, "float", fConst45)
	DeclareVarInst(struct, float, fRec13[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider3)
	DeclareVarInst(struct, int, iVec2[2])
	DeclareVarInst(struct, float, fRec15[2])
	DeclareVarInst(struct, "float", fConst46)
	DeclareVarInst(struct, "float", fConst47)
	DeclareVarInst(struct, "float", fConst48)
	DeclareVarInst(struct, float, fRec14[3])
	DeclareVarInst(struct, "float", fConst49)
	DeclareVarInst(struct, "float", fConst50)
	DeclareVarInst(struct, "float", fConst51)
	DeclareVarInst(struct, float, fRec16[3])
	DeclareVarInst(struct, "float", fConst52)
	DeclareVarInst(struct, "float", fConst53)
	DeclareVarInst(struct, "float", fConst54)
	DeclareVarInst(struct, float, fRec17[3])
	DeclareVarInst(struct, "float", fConst55)
	DeclareVarInst(struct, "float", fConst56)
	DeclareVarInst(struct, "float", fConst57)
	DeclareVarInst(struct, float, fRec18[3])
	DeclareVarInst(struct, "float", fConst58)
	DeclareVarInst(struct, "float", fConst59)
	DeclareVarInst(struct, "float", fConst60)
	DeclareVarInst(struct, float, fRec19[3])
	DeclareVarInst(struct, "float", fConst61)
	DeclareVarInst(struct, "float", fConst62)
	DeclareVarInst(struct, "float", fConst63)
	DeclareVarInst(struct, float, fRec20[3])
	DeclareVarInst(struct, "float", fConst64)
	DeclareVarInst(struct, "float", fConst65)
	DeclareVarInst(struct, "float", fConst66)
	DeclareVarInst(struct, float, fRec21[3])
	DeclareVarInst(struct, "float", fConst67)
	DeclareVarInst(struct, "float", fConst68)
	DeclareVarInst(struct, "float", fConst69)
	DeclareVarInst(struct, float, fRec22[3])
	DeclareVarInst(struct, "float", fConst70)
	DeclareVarInst(struct, "float", fConst71)
	DeclareVarInst(struct, "float", fConst72)
	DeclareVarInst(struct, float, fRec23[3])
	DeclareVarInst(struct, "float", fConst73)
	DeclareVarInst(struct, "float", fConst74)
	DeclareVarInst(struct, "float", fConst75)
	DeclareVarInst(struct, float, fRec24[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider4)
	DeclareVarInst(struct, int, iVec3[2])
	DeclareVarInst(struct, float, fRec26[2])
	DeclareVarInst(struct, "float", fConst76)
	DeclareVarInst(struct, "float", fConst77)
	DeclareVarInst(struct, "float", fConst78)
	DeclareVarInst(struct, float, fRec25[3])
	DeclareVarInst(struct, "float", fConst79)
	DeclareVarInst(struct, "float", fConst80)
	DeclareVarInst(struct, "float", fConst81)
	DeclareVarInst(struct, float, fRec27[3])
	DeclareVarInst(struct, "float", fConst82)
	DeclareVarInst(struct, "float", fConst83)
	DeclareVarInst(struct, "float", fConst84)
	DeclareVarInst(struct, float, fRec28[3])
	DeclareVarInst(struct, "float", fConst85)
	DeclareVarInst(struct, "float", fConst86)
	DeclareVarInst(struct, "float", fConst87)
	DeclareVarInst(struct, float, fRec29[3])
	DeclareVarInst(struct, "float", fConst88)
	DeclareVarInst(struct, "float", fConst89)
	DeclareVarInst(struct, "float", fConst90)
	DeclareVarInst(struct, float, fRec30[3])
	DeclareVarInst(struct, "float", fConst91)
	DeclareVarInst(struct, "float", fConst92)
	DeclareVarInst(struct, "float", fConst93)
	DeclareVarInst(struct, float, fRec31[3])
	DeclareVarInst(struct, "float", fConst94)
	DeclareVarInst(struct, "float", fConst95)
	DeclareVarInst(struct, "float", fConst96)
	DeclareVarInst(struct, float, fRec32[3])
	DeclareVarInst(struct, "float", fConst97)
	DeclareVarInst(struct, "float", fConst98)
	DeclareVarInst(struct, "float", fConst99)
	DeclareVarInst(struct, float, fRec33[3])
	DeclareVarInst(struct, "float", fConst100)
	DeclareVarInst(struct, "float", fConst101)
	DeclareVarInst(struct, "float", fConst102)
	DeclareVarInst(struct, float, fRec34[3])
	DeclareVarInst(struct, "float", fConst103)
	DeclareVarInst(struct, "float", fConst104)
	DeclareVarInst(struct, "float", fConst105)
	DeclareVarInst(struct, float, fRec35[3])
	DeclareVarInst(struct, "FAUSTFLOAT", fHslider5)
	DeclareVarInst(struct, int, iVec4[2])
	DeclareVarInst(struct, float, fRec37[2])
	DeclareVarInst(struct, "float", fConst106)
	DeclareVarInst(struct, "float", fConst107)
	DeclareVarInst(struct, "float", fConst108)
	DeclareVarInst(struct, float, fRec36[3])
	DeclareVarInst(struct, "float", fConst109)
	DeclareVarInst(struct, "float", fConst110)
	DeclareVarInst(struct, "float", fConst111)
	DeclareVarInst(struct, float, fRec38[3])
	DeclareVarInst(struct, "float", fConst112)
	DeclareVarInst(struct, "float", fConst113)
	DeclareVarInst(struct, "float", fConst114)
	DeclareVarInst(struct, float, fRec39[3])
	DeclareVarInst(struct, "float", fConst115)
	DeclareVarInst(struct, "float", fConst116)
	DeclareVarInst(struct, "float", fConst117)
	DeclareVarInst(struct, float, fRec40[3])
	DeclareVarInst(struct, "float", fConst118)
	DeclareVarInst(struct, "float", fConst119)
	DeclareVarInst(struct, "float", fConst120)
	DeclareVarInst(struct, float, fRec41[3])
	DeclareVarInst(struct, "float", fConst121)
	DeclareVarInst(struct, "float", fConst122)
	DeclareVarInst(struct, "float", fConst123)
	DeclareVarInst(struct, float, fRec42[3])
	DeclareVarInst(struct, "float", fConst124)
	DeclareVarInst(struct, "float", fConst125)
	DeclareVarInst(struct, "float", fConst126)
	DeclareVarInst(struct, float, fRec43[3])
	DeclareVarInst(struct, "float", fConst127)
	DeclareVarInst(struct, "float", fConst128)
	DeclareVarInst(struct, "float", fConst129)
	DeclareVarInst(struct, float, fRec44[3])
	DeclareVarInst(struct, "float", fConst130)
	DeclareVarInst(struct, "float", fConst131)
	DeclareVarInst(struct, "float", fConst132)
	DeclareVarInst(struct, float, fRec45[3])
	DeclareVarInst(struct, "float", fConst133)
	DeclareVarInst(struct, "float", fConst134)
	DeclareVarInst(struct, "float", fConst135)
	DeclareVarInst(struct, float, fRec46[3])
	========== Init method ==========
	StoreVarInst(struct, fSamplingFreq, LoadVarInst(kFunArgs, samplingFreq))
	StoreVarInst(struct, fConst0, FunCallInst("min_f", Float(192000.0f), FunCallInst("max_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fSamplingFreq)))))
	StoreVarInst(struct, fConst1, FunCallInst("tanf", BinopInst("/", Float(20420.3516f), LoadVarInst(struct, fConst0))))
	StoreVarInst(struct, fConst2, BinopInst("/", Float(1.0f), LoadVarInst(struct, fConst1)))
	StoreVarInst(struct, fConst3, BinopInst("/", Float(1.0f), BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst2), Float(1.41421354f)), LoadVarInst(struct, fConst1)), Float(1.0f))))
	StoreVarInst(struct, fConst4, FunCallInst("tanf", BinopInst("/", Float(31.415926f), LoadVarInst(struct, fConst0))))
	StoreVarInst(struct, fConst5, BinopInst("/", Float(1.0f), LoadVarInst(struct, fConst4)))
	StoreVarInst(struct, fConst6, BinopInst("/", Float(1.0f), BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst5), Float(1.41421354f)), LoadVarInst(struct, fConst4)), Float(1.0f))))
	StoreVarInst(struct, fConst7, BinopInst("/", Float(1.0f), FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst4))))
	StoreVarInst(struct, fConst8, BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst5), Float(-1.41421354f)), LoadVarInst(struct, fConst4)), Float(1.0f)))
	StoreVarInst(struct, fConst9, BinopInst("*", Float(2.0f), BinopInst("-", Float(1.0f), LoadVarInst(struct, fConst7))))
	StoreVarInst(struct, fConst10, BinopInst("*", Float(2.0f), BinopInst("-", Float(0.0f), LoadVarInst(struct, fConst7))))
	StoreVarInst(struct, fConst11, BinopInst("*", Float(2.0f), BinopInst("-", Float(1.0f), BinopInst("/", Float(1.0f), FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst1))))))
	StoreVarInst(struct, fConst12, BinopInst("+", BinopInst("/", BinopInst("+", LoadVarInst(struct, fConst2), Float(-1.41421354f)), LoadVarInst(struct, fConst1)), Float(1.0f)))
	StoreVarInst(struct, fConst13, BinopInst("*", Float(0.00200000009f), LoadVarInst(struct, fConst0)))
	StoreVarInst(struct, fConst14, BinopInst("*", Float(0.00100000005f), LoadVarInst(struct, fConst0)))
	StoreVarInst(struct, fConst15, BinopInst("/", Float(1000.0f), LoadVarInst(struct, fConst0)))
	StoreVarInst(struct, fConst16, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.3469906f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst17, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst16))), FunCallInst("cosf", BinopInst("/", Float(1630.04053f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst18, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst16)))
	StoreVarInst(struct, fConst19, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.2682228f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst20, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst19))), FunCallInst("cosf", BinopInst("/", Float(1645.28345f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst21, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst19)))
	StoreVarInst(struct, fConst22, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.6507998f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst23, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst22))), FunCallInst("cosf", BinopInst("/", Float(3099.69019f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst24, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst22)))
	StoreVarInst(struct, fConst25, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.6223917f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst26, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst25))), FunCallInst("cosf", BinopInst("/", Float(3106.85913f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst27, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst25)))
	StoreVarInst(struct, fConst28, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.0956459f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst29, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst28))), FunCallInst("cosf", BinopInst("/", Float(3789.06226f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst30, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst28)))
	StoreVarInst(struct, fConst31, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.0589275f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst32, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst31))), FunCallInst("cosf", BinopInst("/", Float(3799.70605f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst33, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst31)))
	StoreVarInst(struct, fConst34, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.6621294f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst35, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst34))), FunCallInst("cosf", BinopInst("/", Float(4552.58252f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst36, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst34)))
	StoreVarInst(struct, fConst37, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.6582489f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst38, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst37))), FunCallInst("cosf", BinopInst("/", Float(4553.9082f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst39, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst37)))
	StoreVarInst(struct, fConst40, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(7.56375885f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst41, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst40))), FunCallInst("cosf", BinopInst("/", Float(4944.77246f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst42, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst40)))
	StoreVarInst(struct, fConst43, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(5.38026142f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst44, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst43))), FunCallInst("cosf", BinopInst("/", Float(5855.25635f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst45, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst43)))
	StoreVarInst(struct, fConst46, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0404034f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst47, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst46))), FunCallInst("cosf", BinopInst("/", Float(2758.80225f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst48, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst46)))
	StoreVarInst(struct, fConst49, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0107555f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst50, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst49))), FunCallInst("cosf", BinopInst("/", Float(2766.51782f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst51, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst49)))
	StoreVarInst(struct, fConst52, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.3085108f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst53, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst52))), FunCallInst("cosf", BinopInst("/", Float(3810.4502f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst54, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst52)))
	StoreVarInst(struct, fConst55, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.1997375f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst56, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst55))), FunCallInst("cosf", BinopInst("/", Float(3843.90186f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst57, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst55)))
	StoreVarInst(struct, fConst58, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.3049049f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst59, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst58))), FunCallInst("cosf", BinopInst("/", Float(4458.65527f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst60, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst58)))
	StoreVarInst(struct, fConst61, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.300128f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst62, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst61))), FunCallInst("cosf", BinopInst("/", Float(4460.28857f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst63, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst61)))
	StoreVarInst(struct, fConst64, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.80774784f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst65, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst64))), FunCallInst("cosf", BinopInst("/", Float(5384.47607f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst66, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst64)))
	StoreVarInst(struct, fConst67, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.16906738f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst68, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst67))), FunCallInst("cosf", BinopInst("/", Float(5648.90381f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst69, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst67)))
	StoreVarInst(struct, fConst70, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(5.95891714f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst71, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst70))), FunCallInst("cosf", BinopInst("/", Float(6687.63379f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst72, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst70)))
	StoreVarInst(struct, fConst73, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(5.95436192f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst74, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst73))), FunCallInst("cosf", BinopInst("/", Float(6690.02148f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst75, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst73)))
	StoreVarInst(struct, fConst76, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(21.8895645f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst77, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst76))), FunCallInst("cosf", BinopInst("/", Float(1501.1095f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst78, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst76)))
	StoreVarInst(struct, fConst79, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(21.8487759f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst80, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst79))), FunCallInst("cosf", BinopInst("/", Float(1509.44104f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst81, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst79)))
	StoreVarInst(struct, fConst82, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0969524f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst83, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst82))), FunCallInst("cosf", BinopInst("/", Float(2552.54395f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst84, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst82)))
	StoreVarInst(struct, fConst85, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(17.0448818f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst86, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst85))), FunCallInst("cosf", BinopInst("/", Float(2564.88428f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst87, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst85)))
	StoreVarInst(struct, fConst88, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.2791166f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst89, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst88))), FunCallInst("cosf", BinopInst("/", Float(3525.52661f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst90, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst88)))
	StoreVarInst(struct, fConst91, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(13.2376995f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst92, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst91))), FunCallInst("cosf", BinopInst("/", Float(3536.94946f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst93, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst91)))
	StoreVarInst(struct, fConst94, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.3884573f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst95, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst94))), FunCallInst("cosf", BinopInst("/", Float(4710.07666f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst96, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst94)))
	StoreVarInst(struct, fConst97, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.38386536f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst98, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst97))), FunCallInst("cosf", BinopInst("/", Float(4711.63477f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst99, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst97)))
	StoreVarInst(struct, fConst100, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.81131077f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst101, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst100))), FunCallInst("cosf", BinopInst("/", Float(4909.61182f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst102, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst100)))
	StoreVarInst(struct, fConst103, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(8.47139359f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst104, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst103))), FunCallInst("cosf", BinopInst("/", Float(5030.8208f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst105, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst103)))
	StoreVarInst(struct, fConst106, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.8901539f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst107, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst106))), FunCallInst("cosf", BinopInst("/", Float(857.598267f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst108, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst106)))
	StoreVarInst(struct, fConst109, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(20.860672f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst110, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst109))), FunCallInst("cosf", BinopInst("/", Float(860.746094f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst111, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst109)))
	StoreVarInst(struct, fConst112, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(14.4779148f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst113, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst112))), FunCallInst("cosf", BinopInst("/", Float(1627.08105f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst114, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst112)))
	StoreVarInst(struct, fConst115, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(14.4106588f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst116, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst115))), FunCallInst("cosf", BinopInst("/", Float(1636.26086f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst117, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst115)))
	StoreVarInst(struct, fConst118, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.9841108f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst119, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst118))), FunCallInst("cosf", BinopInst("/", Float(1988.55908f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst120, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst118)))
	StoreVarInst(struct, fConst121, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(11.9061594f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst122, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst121))), FunCallInst("cosf", BinopInst("/", Float(2000.63538f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst123, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst121)))
	StoreVarInst(struct, fConst124, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.10661697f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst125, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst124))), FunCallInst("cosf", BinopInst("/", Float(2474.64502f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst126, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst124)))
	StoreVarInst(struct, fConst127, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(9.10333347f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst128, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst127))), FunCallInst("cosf", BinopInst("/", Float(2475.25464f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst129, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst127)))
	StoreVarInst(struct, fConst130, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(7.19911861f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst131, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst130))), FunCallInst("cosf", BinopInst("/", Float(2856.81982f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst132, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst130)))
	StoreVarInst(struct, fConst133, FunCallInst("powf", Float(0.00100000005f), BinopInst("/", Float(1.0f), BinopInst("*", Float(6.83458185f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst134, BinopInst("*", BinopInst("-", Float(0.0f), BinopInst("*", Float(2.0f), LoadVarInst(struct, fConst133))), FunCallInst("cosf", BinopInst("/", Float(2937.34521f), LoadVarInst(struct, fConst0)))))
	StoreVarInst(struct, fConst135, FunCallInst("mydsp_faustpower2_f", LoadVarInst(struct, fConst133)))
	StoreVarInst(struct, fHslider0, CastInst("FAUSTFLOAT", Double(1.0f)))
	StoreVarInst(struct, fHslider1, CastInst("FAUSTFLOAT", Double(1.0f)))
	StoreVarInst(struct, fHslider2, CastInst("FAUSTFLOAT", Double(0.0f)))
	StoreVarInst(struct, fHslider3, CastInst("FAUSTFLOAT", Double(0.0f)))
	StoreVarInst(struct, fHslider4, CastInst("FAUSTFLOAT", Double(0.0f)))
	StoreVarInst(struct, fHslider5, CastInst("FAUSTFLOAT", Double(0.0f)))
	ForLoopInst 
		DeclareVarInst(loop, "int", l0, Int32(0))
		BinopInst("<", LoadVarInst(loop, l0), Int32(2))
		StoreVarInst(loop, l0, BinopInst("+", LoadVarInst(loop, l0), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fVec0[LoadVarInst(loop, l0)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l1, Int32(0))
		BinopInst("<", LoadVarInst(loop, l1), Int32(2))
		StoreVarInst(loop, l1, BinopInst("+", LoadVarInst(loop, l1), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iRec3[LoadVarInst(loop, l1)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l2, Int32(0))
		BinopInst("<", LoadVarInst(loop, l2), Int32(3))
		StoreVarInst(loop, l2, BinopInst("+", LoadVarInst(loop, l2), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec2[LoadVarInst(loop, l2)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l3, Int32(0))
		BinopInst("<", LoadVarInst(loop, l3), Int32(3))
		StoreVarInst(loop, l3, BinopInst("+", LoadVarInst(loop, l3), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec1[LoadVarInst(loop, l3)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l4, Int32(0))
		BinopInst("<", LoadVarInst(loop, l4), Int32(2))
		StoreVarInst(loop, l4, BinopInst("+", LoadVarInst(loop, l4), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec1[LoadVarInst(loop, l4)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l5, Int32(0))
		BinopInst("<", LoadVarInst(loop, l5), Int32(2))
		StoreVarInst(loop, l5, BinopInst("+", LoadVarInst(loop, l5), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec4[LoadVarInst(loop, l5)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l6, Int32(0))
		BinopInst("<", LoadVarInst(loop, l6), Int32(3))
		StoreVarInst(loop, l6, BinopInst("+", LoadVarInst(loop, l6), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec0[LoadVarInst(loop, l6)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l7, Int32(0))
		BinopInst("<", LoadVarInst(loop, l7), Int32(3))
		StoreVarInst(loop, l7, BinopInst("+", LoadVarInst(loop, l7), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec5[LoadVarInst(loop, l7)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l8, Int32(0))
		BinopInst("<", LoadVarInst(loop, l8), Int32(3))
		StoreVarInst(loop, l8, BinopInst("+", LoadVarInst(loop, l8), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec6[LoadVarInst(loop, l8)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l9, Int32(0))
		BinopInst("<", LoadVarInst(loop, l9), Int32(3))
		StoreVarInst(loop, l9, BinopInst("+", LoadVarInst(loop, l9), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec7[LoadVarInst(loop, l9)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l10, Int32(0))
		BinopInst("<", LoadVarInst(loop, l10), Int32(3))
		StoreVarInst(loop, l10, BinopInst("+", LoadVarInst(loop, l10), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec8[LoadVarInst(loop, l10)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l11, Int32(0))
		BinopInst("<", LoadVarInst(loop, l11), Int32(3))
		StoreVarInst(loop, l11, BinopInst("+", LoadVarInst(loop, l11), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec9[LoadVarInst(loop, l11)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l12, Int32(0))
		BinopInst("<", LoadVarInst(loop, l12), Int32(3))
		StoreVarInst(loop, l12, BinopInst("+", LoadVarInst(loop, l12), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec10[LoadVarInst(loop, l12)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l13, Int32(0))
		BinopInst("<", LoadVarInst(loop, l13), Int32(3))
		StoreVarInst(loop, l13, BinopInst("+", LoadVarInst(loop, l13), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec11[LoadVarInst(loop, l13)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l14, Int32(0))
		BinopInst("<", LoadVarInst(loop, l14), Int32(3))
		StoreVarInst(loop, l14, BinopInst("+", LoadVarInst(loop, l14), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec12[LoadVarInst(loop, l14)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l15, Int32(0))
		BinopInst("<", LoadVarInst(loop, l15), Int32(3))
		StoreVarInst(loop, l15, BinopInst("+", LoadVarInst(loop, l15), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec13[LoadVarInst(loop, l15)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l16, Int32(0))
		BinopInst("<", LoadVarInst(loop, l16), Int32(2))
		StoreVarInst(loop, l16, BinopInst("+", LoadVarInst(loop, l16), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec2[LoadVarInst(loop, l16)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l17, Int32(0))
		BinopInst("<", LoadVarInst(loop, l17), Int32(2))
		StoreVarInst(loop, l17, BinopInst("+", LoadVarInst(loop, l17), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec15[LoadVarInst(loop, l17)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l18, Int32(0))
		BinopInst("<", LoadVarInst(loop, l18), Int32(3))
		StoreVarInst(loop, l18, BinopInst("+", LoadVarInst(loop, l18), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec14[LoadVarInst(loop, l18)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l19, Int32(0))
		BinopInst("<", LoadVarInst(loop, l19), Int32(3))
		StoreVarInst(loop, l19, BinopInst("+", LoadVarInst(loop, l19), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec16[LoadVarInst(loop, l19)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l20, Int32(0))
		BinopInst("<", LoadVarInst(loop, l20), Int32(3))
		StoreVarInst(loop, l20, BinopInst("+", LoadVarInst(loop, l20), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec17[LoadVarInst(loop, l20)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l21, Int32(0))
		BinopInst("<", LoadVarInst(loop, l21), Int32(3))
		StoreVarInst(loop, l21, BinopInst("+", LoadVarInst(loop, l21), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec18[LoadVarInst(loop, l21)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l22, Int32(0))
		BinopInst("<", LoadVarInst(loop, l22), Int32(3))
		StoreVarInst(loop, l22, BinopInst("+", LoadVarInst(loop, l22), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec19[LoadVarInst(loop, l22)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l23, Int32(0))
		BinopInst("<", LoadVarInst(loop, l23), Int32(3))
		StoreVarInst(loop, l23, BinopInst("+", LoadVarInst(loop, l23), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec20[LoadVarInst(loop, l23)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l24, Int32(0))
		BinopInst("<", LoadVarInst(loop, l24), Int32(3))
		StoreVarInst(loop, l24, BinopInst("+", LoadVarInst(loop, l24), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec21[LoadVarInst(loop, l24)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l25, Int32(0))
		BinopInst("<", LoadVarInst(loop, l25), Int32(3))
		StoreVarInst(loop, l25, BinopInst("+", LoadVarInst(loop, l25), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec22[LoadVarInst(loop, l25)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l26, Int32(0))
		BinopInst("<", LoadVarInst(loop, l26), Int32(3))
		StoreVarInst(loop, l26, BinopInst("+", LoadVarInst(loop, l26), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec23[LoadVarInst(loop, l26)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l27, Int32(0))
		BinopInst("<", LoadVarInst(loop, l27), Int32(3))
		StoreVarInst(loop, l27, BinopInst("+", LoadVarInst(loop, l27), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec24[LoadVarInst(loop, l27)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l28, Int32(0))
		BinopInst("<", LoadVarInst(loop, l28), Int32(2))
		StoreVarInst(loop, l28, BinopInst("+", LoadVarInst(loop, l28), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec3[LoadVarInst(loop, l28)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l29, Int32(0))
		BinopInst("<", LoadVarInst(loop, l29), Int32(2))
		StoreVarInst(loop, l29, BinopInst("+", LoadVarInst(loop, l29), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec26[LoadVarInst(loop, l29)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l30, Int32(0))
		BinopInst("<", LoadVarInst(loop, l30), Int32(3))
		StoreVarInst(loop, l30, BinopInst("+", LoadVarInst(loop, l30), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec25[LoadVarInst(loop, l30)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l31, Int32(0))
		BinopInst("<", LoadVarInst(loop, l31), Int32(3))
		StoreVarInst(loop, l31, BinopInst("+", LoadVarInst(loop, l31), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec27[LoadVarInst(loop, l31)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l32, Int32(0))
		BinopInst("<", LoadVarInst(loop, l32), Int32(3))
		StoreVarInst(loop, l32, BinopInst("+", LoadVarInst(loop, l32), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec28[LoadVarInst(loop, l32)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l33, Int32(0))
		BinopInst("<", LoadVarInst(loop, l33), Int32(3))
		StoreVarInst(loop, l33, BinopInst("+", LoadVarInst(loop, l33), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec29[LoadVarInst(loop, l33)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l34, Int32(0))
		BinopInst("<", LoadVarInst(loop, l34), Int32(3))
		StoreVarInst(loop, l34, BinopInst("+", LoadVarInst(loop, l34), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec30[LoadVarInst(loop, l34)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l35, Int32(0))
		BinopInst("<", LoadVarInst(loop, l35), Int32(3))
		StoreVarInst(loop, l35, BinopInst("+", LoadVarInst(loop, l35), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec31[LoadVarInst(loop, l35)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l36, Int32(0))
		BinopInst("<", LoadVarInst(loop, l36), Int32(3))
		StoreVarInst(loop, l36, BinopInst("+", LoadVarInst(loop, l36), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec32[LoadVarInst(loop, l36)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l37, Int32(0))
		BinopInst("<", LoadVarInst(loop, l37), Int32(3))
		StoreVarInst(loop, l37, BinopInst("+", LoadVarInst(loop, l37), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec33[LoadVarInst(loop, l37)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l38, Int32(0))
		BinopInst("<", LoadVarInst(loop, l38), Int32(3))
		StoreVarInst(loop, l38, BinopInst("+", LoadVarInst(loop, l38), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec34[LoadVarInst(loop, l38)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l39, Int32(0))
		BinopInst("<", LoadVarInst(loop, l39), Int32(3))
		StoreVarInst(loop, l39, BinopInst("+", LoadVarInst(loop, l39), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec35[LoadVarInst(loop, l39)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l40, Int32(0))
		BinopInst("<", LoadVarInst(loop, l40), Int32(2))
		StoreVarInst(loop, l40, BinopInst("+", LoadVarInst(loop, l40), Int32(1)))
		BlockInst 
			StoreVarInst(struct, iVec4[LoadVarInst(loop, l40)], Int32(0))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l41, Int32(0))
		BinopInst("<", LoadVarInst(loop, l41), Int32(2))
		StoreVarInst(loop, l41, BinopInst("+", LoadVarInst(loop, l41), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec37[LoadVarInst(loop, l41)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l42, Int32(0))
		BinopInst("<", LoadVarInst(loop, l42), Int32(3))
		StoreVarInst(loop, l42, BinopInst("+", LoadVarInst(loop, l42), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec36[LoadVarInst(loop, l42)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l43, Int32(0))
		BinopInst("<", LoadVarInst(loop, l43), Int32(3))
		StoreVarInst(loop, l43, BinopInst("+", LoadVarInst(loop, l43), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec38[LoadVarInst(loop, l43)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l44, Int32(0))
		BinopInst("<", LoadVarInst(loop, l44), Int32(3))
		StoreVarInst(loop, l44, BinopInst("+", LoadVarInst(loop, l44), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec39[LoadVarInst(loop, l44)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l45, Int32(0))
		BinopInst("<", LoadVarInst(loop, l45), Int32(3))
		StoreVarInst(loop, l45, BinopInst("+", LoadVarInst(loop, l45), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec40[LoadVarInst(loop, l45)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l46, Int32(0))
		BinopInst("<", LoadVarInst(loop, l46), Int32(3))
		StoreVarInst(loop, l46, BinopInst("+", LoadVarInst(loop, l46), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec41[LoadVarInst(loop, l46)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l47, Int32(0))
		BinopInst("<", LoadVarInst(loop, l47), Int32(3))
		StoreVarInst(loop, l47, BinopInst("+", LoadVarInst(loop, l47), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec42[LoadVarInst(loop, l47)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l48, Int32(0))
		BinopInst("<", LoadVarInst(loop, l48), Int32(3))
		StoreVarInst(loop, l48, BinopInst("+", LoadVarInst(loop, l48), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec43[LoadVarInst(loop, l48)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l49, Int32(0))
		BinopInst("<", LoadVarInst(loop, l49), Int32(3))
		StoreVarInst(loop, l49, BinopInst("+", LoadVarInst(loop, l49), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec44[LoadVarInst(loop, l49)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l50, Int32(0))
		BinopInst("<", LoadVarInst(loop, l50), Int32(3))
		StoreVarInst(loop, l50, BinopInst("+", LoadVarInst(loop, l50), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec45[LoadVarInst(loop, l50)], Float(0.0f))
			EndBlock
		EndForLoop
	ForLoopInst 
		DeclareVarInst(loop, "int", l51, Int32(0))
		BinopInst("<", LoadVarInst(loop, l51), Int32(3))
		StoreVarInst(loop, l51, BinopInst("+", LoadVarInst(loop, l51), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fRec46[LoadVarInst(loop, l51)], Float(0.0f))
			EndBlock
		EndForLoop
	========== Static init method ==========
	DeclareVarInst(stack, mydspSIG0, sig0, FunCallInst("newmydspSIG0"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG0", LoadVarInst(stack, sig0), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG0", LoadVarInst(stack, sig0), Int32(350), LoadVarInst(static, ftbl0mydspSIG0)))
	DeclareVarInst(stack, mydspSIG1, sig1, FunCallInst("newmydspSIG1"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG1", LoadVarInst(stack, sig1), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG1", LoadVarInst(stack, sig1), Int32(350), LoadVarInst(static, ftbl1mydspSIG1)))
	DeclareVarInst(stack, mydspSIG2, sig2, FunCallInst("newmydspSIG2"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG2", LoadVarInst(stack, sig2), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG2", LoadVarInst(stack, sig2), Int32(350), LoadVarInst(static, ftbl2mydspSIG2)))
	DeclareVarInst(stack, mydspSIG3, sig3, FunCallInst("newmydspSIG3"))
	DropInst(MethodFunCallInst("instanceInitmydspSIG3", LoadVarInst(stack, sig3), LoadVarInst(kFunArgs, samplingFreq)))
	DropInst(MethodFunCallInst("fillmydspSIG3", LoadVarInst(stack, sig3), Int32(350), LoadVarInst(static, ftbl3mydspSIG3)))
	DropInst(FunCallInst("deletemydspSIG0", LoadVarInst(stack, sig0)))
	DropInst(FunCallInst("deletemydspSIG1", LoadVarInst(stack, sig1)))
	DropInst(FunCallInst("deletemydspSIG2", LoadVarInst(stack, sig2)))
	DropInst(FunCallInst("deletemydspSIG3", LoadVarInst(stack, sig3)))
	========== Subcontainers ==========
	========== Declaration part ==========
	DeclareVarInst(static, float, fmydspSIG0Wave0[350], {0.694274008f,0.471697986f,0.172389999f,0.585446f,0.397985995f,0.919579029f,0.531947017f,0.100204997f,0.639469028f,0.672209024f,0.144345f,0.416595012f,0.124108002f,0.380591005f,0.256577998f,0.646031022f,0.852199972f,0.0224376004f,0.382762015f,0.143924996f,0.368690997f,0.430555999f,0.32317999f,0.142956004f,0.274520993f,0.713823974f,0.442793995f,0.352472991f,0.247756004f,0.415152013f,1.0f,0.401868999f,0.197981f,0.279509991f,0.210249007f,0.369740009f,0.369226992f,0.155769005f,0.272368014f,0.335711986f,0.31645f,0.714102983f,0.285780996f,0.220060006f,0.827704012f,0.206341997f,0.180177003f,0.311477989f,0.197606996f,0.575474977f,0.473311007f,0.587231994f,0.502879977f,0.33730799f,0.304513991f,0.429039001f,0.351521999f,0.341372997f,0.175081f,0.561748028f,0.439172f,0.323163986f,0.540517986f,0.536522985f,0.0743864998f,0.213416994f,0.358011991f,0.47449401f,0.310274005f,0.839412987f,0.241372004f,0.202343002f,0.480634004f,0.995684981f,0.373739988f,0.133998007f,0.52067399f,0.207514003f,1.0f,0.101239003f,0.279536009f,0.185984999f,0.436293006f,0.624109983f,0.334518999f,0.283585012f,0.179316998f,0.353846997f,0.449544996f,0.574127972f,0.135171995f,0.538275003f,0.476424009f,0.832903028f,0.164197996f,0.188562006f,0.135977998f,0.390127987f,0.131044999f,0.312065005f,0.142139003f,0.0255900994f,0.266947001f,0.371607006f,0.0168434996f,0.0249467995f,0.508916974f,0.354409993f,0.283347994f,0.628154993f,0.292477995f,0.358350009f,0.342568994f,0.441237003f,0.886699021f,0.0174697991f,0.00641842978f,0.555320024f,0.88012898f,0.0306908991f,0.290080994f,0.248815998f,0.981736004f,0.324624002f,0.213676006f,0.432884991f,0.0981559008f,0.444148988f,0.395554006f,0.525068998f,0.077130802f,0.0488803983f,0.591320992f,0.108043998f,0.443801999f,0.740318f,0.599438012f,0.293092996f,1.0f,0.141662002f,0.910031021f,0.226126f,0.299701989f,0.341472f,0.0568060987f,0.222494006f,0.91871798f,0.199478f,0.216619998f,0.107758999f,0.692323983f,0.556335986f,0.281717986f,0.430831999f,0.341655999f,0.60809499f,0.342128992f,0.31131199f,0.229953006f,0.695087016f,0.0761488974f,0.349817991f,0.361705989f,0.577611029f,0.147797003f,0.327376008f,0.465714991f,0.342902005f,0.521381021f,0.836827993f,0.241111994f,0.284393996f,0.539315999f,0.143408f,0.517019987f,1.0f,0.236335993f,0.480333f,0.676743984f,0.807582021f,0.468620986f,0.236953005f,0.411603987f,0.579250991f,0.425098002f,0.375990003f,0.461176008f,0.276529998f,0.462368011f,0.613004029f,0.666849017f,0.954715014f,0.161506996f,0.170433f,0.290461004f,0.117302999f,0.365132987f,0.233794004f,0.194567993f,0.338874012f,0.523380995f,0.39835f,0.447838992f,0.65289098f,0.157079995f,0.340353996f,0.442169994f,0.338764012f,0.184396997f,0.771606982f,0.160502002f,0.324487001f,0.477499008f,0.831519008f,0.0168763995f,0.154264003f,0.201865003f,0.237785995f,0.390065998f,0.880164027f,0.284233987f,0.162836999f,0.437557012f,0.227845997f,0.399340004f,1.0f,0.158106998f,0.396903008f,0.513028979f,0.676456988f,0.204282001f,0.0895574987f,0.555410028f,0.73248601f,0.125062004f,0.171229005f,0.0816460028f,0.0541394018f,0.396160007f,0.454288006f,0.466863006f,0.928842008f,0.155393004f,0.262849987f,0.113453001f,0.133163005f,0.302020997f,0.612616003f,0.228392005f,0.195617005f,0.287236005f,0.198762f,0.499884009f,0.809139013f,0.00929925032f,0.084029898f,0.286446005f,0.182111993f,0.186043993f,0.754137993f,0.279556006f,0.266948014f,0.494291008f,1.0f,0.321283996f,0.0230981f,0.0375537015f,0.262531012f,0.602204025f,0.489924997f,0.633077025f,0.407409012f,0.422255993f,0.0910641029f,0.357935011f,0.550179005f,0.106192f,0.132366002f,0.376231015f,0.35115099f,0.0420302004f,0.0372182988f,0.696335018f,0.840821028f,0.855234981f,0.249247998f,0.860010982f,0.340481013f,0.285580009f,0.363038987f,0.324122012f,0.515699029f,0.228130996f,0.172591999f,0.0188723002f,0.168243006f,0.995105028f,0.741759002f,0.107092999f,0.0703490004f,0.136636004f,0.0780455023f,0.315748006f,0.502201021f,0.0190421995f,0.0339139998f,0.225723997f,0.160236001f,0.184101f,0.564203024f,0.247317001f,0.284224987f,0.327152997f,0.651443005f,0.593470991f,0.0163899008f,0.0141048003f,0.521130025f,1.0f,0.105108999f,0.530936003f,0.363723993f,0.924808979f,0.250409991f,0.692879975f,0.414121985f,0.0793657973f,0.34781301f,0.441731006f,0.476428002f,0.0808833987f,0.0581637993f,0.557238996f,0.556514978f,0.746083975f,0.582228005f,0.177230999f,0.158425003f,0.850902975f,0.755271018f,0.673614025f,0.317059994f,0.0515386015f,0.201897994f,0.0577937998f,0.232031003f,0.734987974f,0.141593993f,0.267062008f,0.145806998f})
	DeclareVarInst(struct, "int", fmydspSIG0Wave0_idx)
	========== Init method ==========
	StoreVarInst(struct, fmydspSIG0Wave0_idx, Int32(0))
	========== Static init method ==========
	========== Subcontainers ==========
	========== Compute control ==========
	========== Compute DSP ==========
	ForLoopInst 
		DeclareVarInst(loop, "int", i, Int32(0))
		BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
		StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
		BlockInst 
			StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG0Wave0[LoadVarInst(struct, fmydspSIG0Wave0_idx)]))
			StoreVarInst(struct, fmydspSIG0Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG0Wave0_idx)), Int32(350)))
			EndBlock
		EndForLoop
	========== Declaration part ==========
	DeclareVarInst(static, float, fmydspSIG1Wave0[350], {0.972890019f,0.542393029f,0.495831996f,0.897966027f,0.552366972f,0.557895005f,0.61421299f,0.353693992f,0.436039001f,0.441024005f,0.674912989f,0.566753983f,0.755007982f,0.699029982f,0.164398f,0.910040021f,0.628373027f,0.201718003f,0.429517001f,0.503714979f,0.871173978f,0.106885999f,0.76117301f,0.673601985f,0.291936994f,0.588590026f,0.31527999f,0.41308099f,0.274464011f,0.494062006f,0.696120977f,0.612010002f,0.382757008f,0.995113015f,0.228806004f,0.198449001f,0.595847011f,0.306263f,0.252397001f,0.0883567035f,0.236085996f,1.0f,0.245278001f,0.379388005f,0.198824003f,0.548892021f,0.492763996f,0.42087099f,0.794637024f,0.605633974f,1.0f,0.604158998f,0.399841011f,0.799346983f,0.507187009f,0.509809971f,0.477382988f,0.310225993f,0.426975995f,0.437622994f,0.735711992f,0.630728006f,0.625784993f,0.651167989f,0.277738005f,0.850857973f,0.578078985f,0.645353973f,0.383700013f,0.370597988f,0.78254199f,0.181325004f,0.614391029f,0.740683973f,0.342440993f,0.586185992f,0.286909014f,0.405196995f,0.259214997f,0.566982985f,0.748219013f,0.655897975f,0.368259996f,0.940814018f,0.336156994f,0.413702011f,0.561556995f,0.402175993f,0.117697999f,0.329369009f,0.254570991f,0.870706022f,0.260980994f,0.274122f,0.206247002f,0.645299971f,0.400757998f,0.36362201f,0.636834025f,0.584565997f,0.975602984f,0.616936982f,0.295401007f,0.650447011f,0.464221001f,0.465056986f,0.312467009f,0.238358006f,0.383695006f,0.399673998f,0.753911972f,0.662011981f,0.504267991f,0.599247992f,0.378665f,0.725363016f,0.493214011f,1.0f,0.332836002f,0.265888989f,0.674072981f,0.320401013f,0.440017998f,0.769782007f,0.316419005f,0.529968023f,0.380508989f,0.578675985f,0.249013007f,0.591383994f,0.761717021f,0.687057018f,0.324436992f,0.818863988f,0.505369008f,0.672484994f,0.461782992f,0.426198006f,0.0678874999f,0.43532899f,0.347954988f,0.708393991f,0.293321997f,0.328985989f,0.258253992f,0.893512011f,0.320131004f,0.433553994f,0.459302008f,0.542213023f,0.817241013f,0.516229987f,0.205302f,0.467354f,0.388682991f,0.388215989f,0.171261996f,0.150865003f,0.291720003f,0.311414003f,0.658876002f,0.570647001f,0.38361901f,0.502454996f,0.364113986f,0.532312989f,0.352988988f,1.0f,0.261983991f,0.219591007f,0.544031024f,0.337199003f,0.279172987f,0.668303013f,0.208439007f,0.399230003f,0.418673992f,0.648617983f,0.234133005f,0.504728973f,0.645346999f,0.572851002f,0.232828006f,0.614292026f,0.48527199f,0.666263998f,0.316570014f,0.320354998f,0.191421002f,0.340131015f,0.342069f,0.538371027f,0.281130999f,0.393115014f,0.251394004f,0.890725017f,0.310644001f,0.503700018f,0.299089998f,0.442478001f,0.733128011f,0.455217004f,0.199322f,0.315699011f,0.375856012f,0.376489997f,0.0291450005f,0.0200283006f,0.279578f,0.316799998f,0.655956984f,0.546842992f,0.349665999f,0.470248997f,0.353765011f,0.286794007f,0.180185005f,1.0f,0.210831001f,0.280133009f,0.535853028f,0.376488f,0.153669998f,0.634745002f,0.0510449f,0.485574991f,0.593110979f,0.917883992f,0.380477011f,0.422924995f,0.599372983f,0.311421007f,0.135654002f,0.359954f,0.295747995f,0.474438995f,0.353338987f,0.116742998f,0.45431301f,0.112857997f,0.359310001f,0.483897001f,0.301607996f,0.577341974f,0.262663007f,0.79498601f,0.549579978f,0.808085978f,0.152511001f,0.439590991f,0.535941005f,0.308017999f,0.419836998f,0.579191029f,0.250427991f,0.252119988f,0.102860004f,0.288331985f,0.599678993f,0.665108025f,0.636285007f,0.495234013f,0.251612991f,0.208526999f,0.0939071998f,0.458415002f,0.318951994f,0.235349998f,0.215188995f,0.313412011f,0.0472786985f,0.0386893004f,0.0863358974f,0.222345993f,0.361510992f,0.997036994f,0.238508999f,0.382140011f,1.0f,0.203554004f,0.472086996f,0.509015024f,0.206370994f,0.441013008f,0.794008017f,0.971623003f,0.796383977f,0.55043f,0.687780023f,0.554297984f,0.0436545014f,0.0595576987f,0.214684993f,0.581470013f,0.277319998f,0.36846599f,0.121381998f,0.152739003f,0.0782243982f,0.190496996f,0.31626901f,0.180455998f,0.405196011f,0.518715978f,0.159364998f,0.165808007f,0.194371998f,0.614763975f,0.553415f,0.644793987f,0.441780001f,0.441489995f,0.221588001f,1.0f,0.579370975f,0.606338978f,0.529166996f,0.0214475002f,0.41704601f,0.663151979f,0.894841015f,0.475751996f,0.168289006f,0.468589991f,0.304603994f,0.666369021f,0.308337003f,0.295091003f,0.768944979f,0.350910991f,0.490680009f,0.516583979f,0.40011701f,0.820686996f,0.545485973f,0.709357023f,0.509759009f,0.472005993f,0.152455002f,0.981265008f,0.459134012f,0.698665977f,0.247153997f,0.623252988f,0.255508006f,0.830815017f,0.0887089968f,0.126082003f,0.0770623013f,0.263327986f})
	DeclareVarInst(struct, "int", fmydspSIG1Wave0_idx)
	========== Init method ==========
	StoreVarInst(struct, fmydspSIG1Wave0_idx, Int32(0))
	========== Static init method ==========
	========== Subcontainers ==========
	========== Compute control ==========
	========== Compute DSP ==========
	ForLoopInst 
		DeclareVarInst(loop, "int", i, Int32(0))
		BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
		StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
		BlockInst 
			StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG1Wave0[LoadVarInst(struct, fmydspSIG1Wave0_idx)]))
			StoreVarInst(struct, fmydspSIG1Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG1Wave0_idx)), Int32(350)))
			EndBlock
		EndForLoop
	========== Declaration part ==========
	DeclareVarInst(static, float, fmydspSIG2Wave0[350], {0.761411011f,0.797802985f,0.586057007f,0.225039005f,0.926353991f,0.81387502f,0.529870987f,0.158914998f,0.662515998f,0.308409989f,0.0454785004f,0.55608201f,0.78471297f,0.213035002f,0.956227005f,0.795165002f,0.313508004f,0.158530995f,0.301586002f,0.16832f,0.281266987f,0.154237002f,0.217234999f,0.247238994f,0.522687972f,0.170303002f,0.32061401f,0.154856995f,0.414941013f,0.788363993f,0.713298976f,0.381592005f,0.707010984f,1.0f,0.0106945997f,0.359762996f,0.0746155977f,0.431124002f,0.118052997f,0.527289987f,0.255302995f,0.646854997f,0.201144993f,0.919907987f,0.359389007f,0.253493994f,0.865695f,0.0829263031f,0.222589001f,0.041573599f,0.735773981f,0.769677997f,0.381415993f,0.197542995f,0.682389021f,0.614766002f,0.249524996f,0.289882988f,0.300318986f,0.443690985f,0.275272012f,0.370218009f,0.748790026f,0.161247f,0.634352982f,0.498497993f,0.221988007f,0.350636989f,0.43681699f,0.436462998f,0.525080025f,0.842646003f,0.195324004f,0.224755004f,0.545681f,0.353778005f,0.269044012f,0.327814013f,0.448951989f,0.852304995f,0.380502999f,1.0f,0.458063006f,0.565057993f,0.354635f,0.659528971f,0.449485004f,0.802013993f,0.283446014f,0.521562994f,0.374639004f,0.652112007f,0.181042001f,0.468394011f,0.430115998f,0.157206997f,0.414995015f,0.292737007f,0.487785012f,0.477679998f,0.481445014f,0.556988001f,0.561132014f,0.378264993f,0.291462004f,0.323249996f,0.482602f,0.328247994f,0.196792006f,0.712253988f,0.389806002f,0.307751f,0.792876005f,0.199098006f,0.288837999f,0.146810994f,0.0178443994f,0.394017011f,0.588212013f,0.489226013f,0.701485991f,0.940303028f,0.213191003f,0.0778845027f,0.474462986f,0.609972f,0.163379997f,0.408376008f,0.330864012f,0.889989972f,0.0798100978f,1.0f,0.167172f,0.208727002f,0.227549002f,0.825902998f,0.531897008f,0.580946028f,0.215339005f,0.247318998f,0.268148005f,0.504087985f,0.160954997f,0.170315996f,0.230768993f,0.151190996f,0.0825031027f,0.141328007f,0.288078994f,0.499675989f,0.420354992f,0.487764001f,0.753709972f,0.492247999f,0.181364f,0.205939993f,0.524969995f,0.325641006f,0.236827001f,0.931842029f,0.472981006f,0.312162012f,0.901031971f,0.27047801f,0.167111993f,0.0709697977f,0.166004002f,0.29074499f,0.425893009f,0.403632998f,0.581772029f,0.855693996f,0.0325586982f,0.056835901f,0.241923004f,0.799310029f,0.181961998f,0.530282974f,0.415609986f,1.0f,0.0291501004f,0.831155002f,0.119755f,0.102187999f,0.132036999f,0.766030014f,0.442220986f,0.174899995f,0.142175004f,0.0140794003f,0.4375f,0.851859987f,0.196835995f,0.0907521993f,0.551672995f,0.25652799f,0.0424376987f,0.490363002f,0.108177997f,0.50327599f,0.226584002f,0.312757999f,0.824078977f,0.484120011f,0.0347337984f,0.0619428009f,0.255097002f,0.145273f,0.190358996f,0.995297015f,0.503419995f,0.217574999f,0.793974996f,0.357178986f,0.0409727991f,0.0187931005f,0.414458007f,0.158439994f,0.34623301f,0.0771673024f,0.175110996f,0.380567014f,0.497408986f,0.316163987f,0.488669008f,1.0f,0.420657009f,0.442333013f,0.247060001f,0.796406984f,0.0104146004f,0.227079004f,0.10684f,0.0289872997f,0.767570019f,0.0643121973f,0.0423097983f,0.715521991f,0.472117007f,0.392576993f,0.660432994f,0.803574979f,0.188653007f,0.0191652998f,0.87321198f,0.448718995f,0.0147128003f,0.618966997f,0.307179987f,0.345898986f,0.131393999f,0.193224996f,0.715282977f,0.405620009f,0.0406370014f,0.0503336005f,0.0544330999f,0.0452023f,0.152301997f,0.894549012f,0.443343014f,0.172070995f,0.647666991f,0.328992993f,0.0416014008f,0.0229487997f,0.551070988f,0.42354399f,0.862362027f,0.363525987f,0.769928992f,0.123452f,0.710702002f,0.394894987f,0.556638002f,1.0f,0.450924993f,0.422849f,0.0921870023f,0.413892001f,0.00995371956f,0.321146011f,0.160623997f,0.0300680995f,0.915385008f,0.475499988f,0.506950974f,0.387549013f,0.275590986f,0.468281001f,0.184775993f,0.186837003f,0.188195005f,0.0202785004f,0.697135985f,0.408861995f,0.0116935f,0.349822998f,0.202300996f,0.461378992f,0.0559022985f,0.0582570992f,0.260607988f,0.181875005f,0.0271738991f,0.0249578003f,0.685088992f,0.470384002f,0.283194005f,0.331050009f,0.138348997f,0.338068008f,0.481992006f,0.178241998f,0.0155942002f,0.0110435002f,0.783770978f,0.442707002f,0.616478026f,0.381541997f,0.510891974f,0.0459849983f,0.303119004f,0.0731908977f,0.547715008f,0.348940998f,0.149981007f,0.302157998f,0.284482002f,0.398176998f,0.00413049012f,0.180739f,0.0628390014f,0.0133459f,0.347088009f,0.576370001f,0.240764007f,0.978480995f,0.452755004f,0.529742002f,0.340470999f,0.66228199f,0.444305003f,0.0429900996f,1.0f,0.361939996f,0.0183371995f,0.626892984f,0.552850008f,0.384936005f})
	DeclareVarInst(struct, "int", fmydspSIG2Wave0_idx)
	========== Init method ==========
	StoreVarInst(struct, fmydspSIG2Wave0_idx, Int32(0))
	========== Static init method ==========
	========== Subcontainers ==========
	========== Compute control ==========
	========== Compute DSP ==========
	ForLoopInst 
		DeclareVarInst(loop, "int", i, Int32(0))
		BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
		StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
		BlockInst 
			StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG2Wave0[LoadVarInst(struct, fmydspSIG2Wave0_idx)]))
			StoreVarInst(struct, fmydspSIG2Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG2Wave0_idx)), Int32(350)))
			EndBlock
		EndForLoop
	========== Declaration part ==========
	DeclareVarInst(static, float, fmydspSIG3Wave0[350], {0.925507009f,0.597519994f,0.0965671018f,0.45412001f,0.989772975f,0.593497992f,0.512540996f,0.124241002f,0.705411017f,0.292396009f,0.673398972f,0.302181005f,0.0262340009f,0.286249012f,0.556267023f,1.0f,0.250425994f,0.107711002f,0.427298993f,0.336295009f,0.616257012f,0.214420006f,0.0845293999f,0.231362998f,0.522723973f,0.559113979f,0.348470002f,0.854197025f,0.835575998f,0.735036016f,0.288493991f,0.117122002f,0.409685999f,0.363575011f,0.484943002f,0.170862004f,0.420531005f,0.164793f,0.233847007f,0.861231983f,0.214037001f,0.283461988f,0.173152998f,0.876121998f,0.607809007f,0.294744998f,0.143142f,0.332008988f,0.491878003f,0.626103997f,0.962027013f,0.584298015f,0.213652998f,0.420451999f,0.812328994f,0.545171976f,0.38074401f,0.331535995f,0.386801004f,0.248908997f,0.688755989f,0.313903987f,0.377894014f,0.595845997f,0.412274003f,0.73962599f,0.541148007f,0.393005013f,0.656637013f,0.847671986f,0.930652976f,0.288289011f,0.404938012f,0.657989025f,0.763948977f,0.574084997f,0.282240987f,1.0f,0.429131001f,0.572049022f,0.73486799f,0.577476978f,0.520789027f,0.355592996f,0.890066981f,0.272390991f,0.448222995f,0.423969001f,0.392237008f,0.856091022f,0.0583794005f,0.784967005f,0.359526992f,0.576566994f,0.201513007f,0.642013013f,0.419308007f,0.340667009f,0.423189998f,0.860812008f,0.694019973f,0.42356801f,0.37698701f,0.568453014f,0.502301991f,0.280716002f,0.464040995f,0.395601004f,0.199849993f,0.0950397998f,0.64279002f,0.228325993f,0.484910995f,0.842352986f,0.161403999f,0.403432012f,0.65554899f,0.409097999f,0.699392021f,0.876049995f,1.0f,0.185606003f,0.414254993f,0.695204973f,0.732612014f,0.478298008f,0.249469995f,0.927739024f,0.213135004f,0.227382004f,0.976351976f,0.642745018f,0.376311004f,0.260674f,0.811034024f,0.264631003f,0.239978999f,0.261896998f,0.191642001f,0.781669974f,0.390679002f,0.382436991f,0.206714004f,0.224720001f,0.0676331967f,0.502610981f,0.301454991f,0.241028994f,0.224505007f,0.721193016f,0.436347991f,0.254061997f,0.480495989f,0.772370994f,0.210681006f,0.103414997f,0.485338002f,0.378333986f,0.228484005f,0.114877f,0.686760008f,0.296941996f,0.507420003f,0.997470021f,0.0377103016f,0.132211998f,0.319546998f,0.192031994f,0.520573974f,0.58584398f,0.419362009f,0.084731698f,0.134544f,0.194762006f,0.616689026f,0.397359997f,0.298808992f,0.914745986f,0.0513371006f,0.0543568991f,0.989158988f,0.602891982f,0.145582005f,0.102149002f,0.129022002f,0.116485f,0.279987991f,0.394270003f,0.29013899f,1.0f,0.708655f,0.78055501f,0.387526006f,0.0395217016f,0.00964067038f,0.24368f,0.0740624964f,0.619315028f,0.447394997f,0.292497009f,0.295457989f,0.163747996f,0.521375f,0.864533007f,0.0773407966f,0.0334230997f,0.345120996f,0.278860003f,0.223875999f,0.307756007f,0.763105989f,0.424706995f,0.487201005f,0.968962014f,0.00911747012f,0.0324653015f,0.334275007f,0.166786999f,0.312498003f,0.264261991f,0.354880005f,0.375589997f,0.261094004f,0.565006018f,0.474934995f,0.313520014f,0.251248986f,0.73535198f,0.0189072005f,0.0153633999f,0.786225021f,0.503298998f,0.369037986f,0.250764996f,0.673018992f,0.387573004f,0.742025018f,0.749055982f,0.261714011f,0.75186801f,0.771816015f,1.0f,0.459484011f,0.0124402f,0.0105394004f,0.964109004f,0.457051992f,0.532316029f,0.407128006f,0.697241008f,0.152199998f,0.0895892978f,0.406174988f,0.651040018f,0.0233951006f,0.0101070004f,0.0722346976f,0.0666339993f,0.195489004f,0.41674f,0.654451013f,0.382782012f,0.305395991f,0.631501019f,0.00162801996f,0.0140906004f,0.762915015f,0.410245001f,0.189436004f,0.060446199f,0.624940991f,0.43978101f,0.516273022f,0.896677971f,0.273297995f,0.202868f,0.0996022001f,0.257656991f,0.0174508002f,0.0157859009f,0.429432988f,0.202184007f,0.443111002f,0.343811005f,0.447562009f,0.268694013f,0.753551006f,0.529425979f,0.0772973001f,0.0976959988f,0.446413994f,0.26167801f,0.169035003f,0.0116218999f,0.0207398999f,1.0f,0.488855988f,0.413028985f,0.25266099f,0.148368999f,0.0919644013f,0.0330634005f,0.268763989f,0.441848993f,0.0139873f,0.0108583998f,0.657799006f,0.488247991f,0.375432998f,0.958178997f,0.761492014f,0.409489989f,0.151709005f,0.314931005f,0.00361180003f,0.0133069996f,1.0f,0.605342984f,0.550505996f,0.363516003f,0.255277991f,0.137537003f,0.448881f,0.867614985f,0.483247012f,0.308622003f,0.348444015f,0.534834981f,0.0157715995f,0.0128964996f,0.147607997f,0.0762611032f,0.762224019f,0.511584997f,0.98586297f,0.540226996f,0.691690981f,0.905296028f,0.397520989f,0.697939992f,0.423289001f,0.924612999f,0.491558999f,0.00567911007f,0.0106001999f,0.647916019f,0.324182004f,0.579448998f,0.451936007f,0.877897024f})
	DeclareVarInst(struct, "int", fmydspSIG3Wave0_idx)
	========== Init method ==========
	StoreVarInst(struct, fmydspSIG3Wave0_idx, Int32(0))
	========== Static init method ==========
	========== Subcontainers ==========
	========== Compute control ==========
	========== Compute DSP ==========
	ForLoopInst 
		DeclareVarInst(loop, "int", i, Int32(0))
		BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
		StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
		BlockInst 
			StoreVarInst(kFunArgs, output[LoadVarInst(loop, i)], LoadVarInst(static, fmydspSIG3Wave0[LoadVarInst(struct, fmydspSIG3Wave0_idx)]))
			StoreVarInst(struct, fmydspSIG3Wave0_idx, BinopInst("%", BinopInst("+", Int32(1), LoadVarInst(struct, fmydspSIG3Wave0_idx)), Int32(350)))
			EndBlock
		EndForLoop
	========== Compute control ==========
	DeclareVarInst(stack, FAUSTFLOAT*, output0, LoadVarInst(kFunArgs, outputs[Int32(0)]))
	DeclareVarInst(stack, FAUSTFLOAT*, output1, LoadVarInst(kFunArgs, outputs[Int32(1)]))
	DeclareVarInst(stack, "int", iSlow0, BinopInst("*", Int32(10), CastInst("int", BinopInst("*", Float(6.0f), FunCallInst("min_f", FunCallInst("fabsf", BinopInst("+", BinopInst("*", Float(2.0f), CastInst("float", LoadVarInst(struct, fHslider0))), Float(-1.0f))), FunCallInst("fabsf", BinopInst("+", BinopInst("*", Float(2.0f), CastInst("float", LoadVarInst(struct, fHslider1))), Float(-1.0f))))))))
	DeclareVarInst(stack, "int", iSlow1, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider2)))))
	DeclareVarInst(stack, "int", iSlow2, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(1)))
	DeclareVarInst(stack, "int", iSlow3, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(2)))
	DeclareVarInst(stack, "int", iSlow4, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(3)))
	DeclareVarInst(stack, "int", iSlow5, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(4)))
	DeclareVarInst(stack, "int", iSlow6, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(5)))
	DeclareVarInst(stack, "int", iSlow7, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(6)))
	DeclareVarInst(stack, "int", iSlow8, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(7)))
	DeclareVarInst(stack, "int", iSlow9, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(8)))
	DeclareVarInst(stack, "int", iSlow10, BinopInst("+", LoadVarInst(stack, iSlow0), Int32(9)))
	DeclareVarInst(stack, "int", iSlow11, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider3)))))
	DeclareVarInst(stack, "int", iSlow12, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider4)))))
	DeclareVarInst(stack, "int", iSlow13, CastInst("int", FunCallInst("min_f", Float(1.0f), CastInst("float", LoadVarInst(struct, fHslider5)))))
	========== Compute DSP ==========
	ForLoopInst 
		DeclareVarInst(loop, "int", i, Int32(0))
		BinopInst("<", LoadVarInst(loop, i), LoadVarInst(kFunArgs, count))
		StoreVarInst(loop, i, BinopInst("+", LoadVarInst(loop, i), Int32(1)))
		BlockInst 
			StoreVarInst(struct, fVec0[Int32(0)], LoadVarInst(struct, fConst0))
			StoreVarInst(struct, iRec3[Int32(0)], BinopInst("+", BinopInst("*", Int32(1103515245), LoadVarInst(struct, iRec3[Int32(1)])), Int32(12345)))
			StoreVarInst(struct, fRec2[Int32(0)], BinopInst("-", BinopInst("*", Float(4.65661287e-10f), CastInst("float", LoadVarInst(struct, iRec3[Int32(0)]))), BinopInst("*", LoadVarInst(struct, fConst6), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst8), LoadVarInst(struct, fRec2[Int32(2)])), BinopInst("*", LoadVarInst(struct, fConst9), LoadVarInst(struct, fRec2[Int32(1)]))))))
			StoreVarInst(struct, fRec1[Int32(0)], BinopInst("-", BinopInst("*", LoadVarInst(struct, fConst6), BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst7), LoadVarInst(struct, fRec2[Int32(0)])), BinopInst("*", LoadVarInst(struct, fConst10), LoadVarInst(struct, fRec2[Int32(1)]))), BinopInst("*", LoadVarInst(struct, fConst7), LoadVarInst(struct, fRec2[Int32(2)])))), BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst11), LoadVarInst(struct, fRec1[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst12), LoadVarInst(struct, fRec1[Int32(2)]))))))
			DeclareVarInst(stack, "float", fTemp0, BinopInst("+", LoadVarInst(struct, fRec1[Int32(2)]), BinopInst("+", LoadVarInst(struct, fRec1[Int32(0)]), BinopInst("*", Float(2.0f), LoadVarInst(struct, fRec1[Int32(1)])))))
			StoreVarInst(struct, iVec1[Int32(0)], LoadVarInst(stack, iSlow1))
			DeclareVarInst(stack, "float", fTemp1, BinopInst("*", Float(0.00200000009f), BinopInst("-", LoadVarInst(struct, fConst0), LoadVarInst(struct, fVec0[Int32(1)]))))
			StoreVarInst(struct, fRec4[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow1), LoadVarInst(struct, iVec1[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(struct, fRec4[Int32(1)]), LoadVarInst(stack, fTemp1)), Float(1.0f)))))
			DeclareVarInst(stack, "int", iTemp2, BinopInst("<", LoadVarInst(struct, fRec4[Int32(0)]), LoadVarInst(struct, fConst14)))
			DeclareVarInst(stack, "float", fTemp3, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp2) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec4[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp2) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec4[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec4[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec4[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
			StoreVarInst(struct, fRec0[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst17), LoadVarInst(struct, fRec0[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst18), LoadVarInst(struct, fRec0[Int32(2)])))))
			StoreVarInst(struct, fRec5[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst20), LoadVarInst(struct, fRec5[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst21), LoadVarInst(struct, fRec5[Int32(2)])))))
			StoreVarInst(struct, fRec6[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst23), LoadVarInst(struct, fRec6[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst24), LoadVarInst(struct, fRec6[Int32(2)])))))
			StoreVarInst(struct, fRec7[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst26), LoadVarInst(struct, fRec7[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst27), LoadVarInst(struct, fRec7[Int32(2)])))))
			StoreVarInst(struct, fRec8[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst29), LoadVarInst(struct, fRec8[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst30), LoadVarInst(struct, fRec8[Int32(2)])))))
			StoreVarInst(struct, fRec9[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst32), LoadVarInst(struct, fRec9[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst33), LoadVarInst(struct, fRec9[Int32(2)])))))
			StoreVarInst(struct, fRec10[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst35), LoadVarInst(struct, fRec10[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst36), LoadVarInst(struct, fRec10[Int32(2)])))))
			StoreVarInst(struct, fRec11[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst38), LoadVarInst(struct, fRec11[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst39), LoadVarInst(struct, fRec11[Int32(2)])))))
			StoreVarInst(struct, fRec12[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst41), LoadVarInst(struct, fRec12[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst42), LoadVarInst(struct, fRec12[Int32(2)])))))
			StoreVarInst(struct, fRec13[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp3), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst44), LoadVarInst(struct, fRec13[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst45), LoadVarInst(struct, fRec13[Int32(2)])))))
			StoreVarInst(struct, iVec2[Int32(0)], LoadVarInst(stack, iSlow11))
			StoreVarInst(struct, fRec15[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow11), LoadVarInst(struct, iVec2[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(stack, fTemp1), LoadVarInst(struct, fRec15[Int32(1)])), Float(1.0f)))))
			DeclareVarInst(stack, "int", iTemp4, BinopInst("<", LoadVarInst(struct, fRec15[Int32(0)]), LoadVarInst(struct, fConst14)))
			DeclareVarInst(stack, "float", fTemp5, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp4) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec15[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp4) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec15[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec15[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec15[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
			StoreVarInst(struct, fRec14[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst47), LoadVarInst(struct, fRec14[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst48), LoadVarInst(struct, fRec14[Int32(2)])))))
			StoreVarInst(struct, fRec16[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst50), LoadVarInst(struct, fRec16[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst51), LoadVarInst(struct, fRec16[Int32(2)])))))
			StoreVarInst(struct, fRec17[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst53), LoadVarInst(struct, fRec17[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst54), LoadVarInst(struct, fRec17[Int32(2)])))))
			StoreVarInst(struct, fRec18[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst56), LoadVarInst(struct, fRec18[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst57), LoadVarInst(struct, fRec18[Int32(2)])))))
			StoreVarInst(struct, fRec19[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst59), LoadVarInst(struct, fRec19[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst60), LoadVarInst(struct, fRec19[Int32(2)])))))
			StoreVarInst(struct, fRec20[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst62), LoadVarInst(struct, fRec20[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst63), LoadVarInst(struct, fRec20[Int32(2)])))))
			StoreVarInst(struct, fRec21[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst65), LoadVarInst(struct, fRec21[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst66), LoadVarInst(struct, fRec21[Int32(2)])))))
			StoreVarInst(struct, fRec22[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst68), LoadVarInst(struct, fRec22[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst69), LoadVarInst(struct, fRec22[Int32(2)])))))
			StoreVarInst(struct, fRec23[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst71), LoadVarInst(struct, fRec23[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst72), LoadVarInst(struct, fRec23[Int32(2)])))))
			StoreVarInst(struct, fRec24[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp5), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst74), LoadVarInst(struct, fRec24[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst75), LoadVarInst(struct, fRec24[Int32(2)])))))
			StoreVarInst(struct, iVec3[Int32(0)], LoadVarInst(stack, iSlow12))
			StoreVarInst(struct, fRec26[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow12), LoadVarInst(struct, iVec3[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(stack, fTemp1), LoadVarInst(struct, fRec26[Int32(1)])), Float(1.0f)))))
			DeclareVarInst(stack, "int", iTemp6, BinopInst("<", LoadVarInst(struct, fRec26[Int32(0)]), LoadVarInst(struct, fConst14)))
			DeclareVarInst(stack, "float", fTemp7, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp6) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec26[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp6) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec26[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec26[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec26[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
			StoreVarInst(struct, fRec25[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst77), LoadVarInst(struct, fRec25[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst78), LoadVarInst(struct, fRec25[Int32(2)])))))
			StoreVarInst(struct, fRec27[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst80), LoadVarInst(struct, fRec27[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst81), LoadVarInst(struct, fRec27[Int32(2)])))))
			StoreVarInst(struct, fRec28[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst83), LoadVarInst(struct, fRec28[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst84), LoadVarInst(struct, fRec28[Int32(2)])))))
			StoreVarInst(struct, fRec29[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst86), LoadVarInst(struct, fRec29[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst87), LoadVarInst(struct, fRec29[Int32(2)])))))
			StoreVarInst(struct, fRec30[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst89), LoadVarInst(struct, fRec30[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst90), LoadVarInst(struct, fRec30[Int32(2)])))))
			StoreVarInst(struct, fRec31[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst92), LoadVarInst(struct, fRec31[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst93), LoadVarInst(struct, fRec31[Int32(2)])))))
			StoreVarInst(struct, fRec32[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst95), LoadVarInst(struct, fRec32[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst96), LoadVarInst(struct, fRec32[Int32(2)])))))
			StoreVarInst(struct, fRec33[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst98), LoadVarInst(struct, fRec33[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst99), LoadVarInst(struct, fRec33[Int32(2)])))))
			StoreVarInst(struct, fRec34[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst101), LoadVarInst(struct, fRec34[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst102), LoadVarInst(struct, fRec34[Int32(2)])))))
			StoreVarInst(struct, fRec35[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp7), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst104), LoadVarInst(struct, fRec35[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst105), LoadVarInst(struct, fRec35[Int32(2)])))))
			StoreVarInst(struct, iVec4[Int32(0)], LoadVarInst(stack, iSlow13))
			StoreVarInst(struct, fRec37[Int32(0)], Select2Inst(BinopInst(">", BinopInst(">", BinopInst("-", LoadVarInst(stack, iSlow13), LoadVarInst(struct, iVec4[Int32(1)])), Int32(0)), Int32(0)) Float(0.0f) FunCallInst("min_f", LoadVarInst(struct, fConst13), BinopInst("+", BinopInst("+", LoadVarInst(stack, fTemp1), LoadVarInst(struct, fRec37[Int32(1)])), Float(1.0f)))))
			DeclareVarInst(stack, "int", iTemp8, BinopInst("<", LoadVarInst(struct, fRec37[Int32(0)]), LoadVarInst(struct, fConst14)))
			DeclareVarInst(stack, "float", fTemp9, BinopInst("*", LoadVarInst(struct, fConst3), BinopInst("*", LoadVarInst(stack, fTemp0), Select2Inst(LoadVarInst(stack, iTemp8) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec37[Int32(0)]), Float(0.0f)) Float(0.0f) Select2Inst(LoadVarInst(stack, iTemp8) BinopInst("*", LoadVarInst(struct, fConst15), LoadVarInst(struct, fRec37[Int32(0)])) Float(1.0f))) Select2Inst(BinopInst("<", LoadVarInst(struct, fRec37[Int32(0)]), LoadVarInst(struct, fConst13)) BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst15), BinopInst("-", Float(0.0f), BinopInst("-", LoadVarInst(struct, fRec37[Int32(0)]), LoadVarInst(struct, fConst14)))), Float(1.0f)) Float(0.0f))))))
			StoreVarInst(struct, fRec36[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst107), LoadVarInst(struct, fRec36[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst108), LoadVarInst(struct, fRec36[Int32(2)])))))
			StoreVarInst(struct, fRec38[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst110), LoadVarInst(struct, fRec38[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst111), LoadVarInst(struct, fRec38[Int32(2)])))))
			StoreVarInst(struct, fRec39[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst113), LoadVarInst(struct, fRec39[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst114), LoadVarInst(struct, fRec39[Int32(2)])))))
			StoreVarInst(struct, fRec40[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst116), LoadVarInst(struct, fRec40[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst117), LoadVarInst(struct, fRec40[Int32(2)])))))
			StoreVarInst(struct, fRec41[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst119), LoadVarInst(struct, fRec41[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst120), LoadVarInst(struct, fRec41[Int32(2)])))))
			StoreVarInst(struct, fRec42[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst122), LoadVarInst(struct, fRec42[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst123), LoadVarInst(struct, fRec42[Int32(2)])))))
			StoreVarInst(struct, fRec43[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst125), LoadVarInst(struct, fRec43[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst126), LoadVarInst(struct, fRec43[Int32(2)])))))
			StoreVarInst(struct, fRec44[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst128), LoadVarInst(struct, fRec44[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst129), LoadVarInst(struct, fRec44[Int32(2)])))))
			StoreVarInst(struct, fRec45[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst131), LoadVarInst(struct, fRec45[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst132), LoadVarInst(struct, fRec45[Int32(2)])))))
			StoreVarInst(struct, fRec46[Int32(0)], BinopInst("-", LoadVarInst(stack, fTemp9), BinopInst("+", BinopInst("*", LoadVarInst(struct, fConst134), LoadVarInst(struct, fRec46[Int32(1)])), BinopInst("*", LoadVarInst(struct, fConst135), LoadVarInst(struct, fRec46[Int32(2)])))))
			DeclareVarInst(stack, "float", fTemp10, BinopInst("*", Float(0.0199999996f), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec0[Int32(0)]), LoadVarInst(struct, fRec0[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec5[Int32(0)]), LoadVarInst(struct, fRec5[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec6[Int32(0)]), LoadVarInst(struct, fRec6[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec7[Int32(0)]), LoadVarInst(struct, fRec7[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec8[Int32(0)]), LoadVarInst(struct, fRec8[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec9[Int32(0)]), LoadVarInst(struct, fRec9[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec10[Int32(0)]), LoadVarInst(struct, fRec10[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec11[Int32(0)]), LoadVarInst(struct, fRec11[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec12[Int32(0)]), LoadVarInst(struct, fRec12[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl0mydspSIG0[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec13[Int32(0)]), LoadVarInst(struct, fRec13[Int32(2)])))), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec14[Int32(0)]), LoadVarInst(struct, fRec14[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec16[Int32(0)]), LoadVarInst(struct, fRec16[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec17[Int32(0)]), LoadVarInst(struct, fRec17[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec18[Int32(0)]), LoadVarInst(struct, fRec18[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec19[Int32(0)]), LoadVarInst(struct, fRec19[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec20[Int32(0)]), LoadVarInst(struct, fRec20[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec21[Int32(0)]), LoadVarInst(struct, fRec21[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec22[Int32(0)]), LoadVarInst(struct, fRec22[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec23[Int32(0)]), LoadVarInst(struct, fRec23[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl1mydspSIG1[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec24[Int32(0)]), LoadVarInst(struct, fRec24[Int32(2)]))))), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec25[Int32(0)]), LoadVarInst(struct, fRec25[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec27[Int32(0)]), LoadVarInst(struct, fRec27[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec28[Int32(0)]), LoadVarInst(struct, fRec28[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec29[Int32(0)]), LoadVarInst(struct, fRec29[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec30[Int32(0)]), LoadVarInst(struct, fRec30[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec31[Int32(0)]), LoadVarInst(struct, fRec31[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec32[Int32(0)]), LoadVarInst(struct, fRec32[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec33[Int32(0)]), LoadVarInst(struct, fRec33[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec34[Int32(0)]), LoadVarInst(struct, fRec34[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl2mydspSIG2[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec35[Int32(0)]), LoadVarInst(struct, fRec35[Int32(2)]))))), BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("+", BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow0)]), BinopInst("-", LoadVarInst(struct, fRec36[Int32(0)]), LoadVarInst(struct, fRec36[Int32(2)]))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow2)]), BinopInst("-", LoadVarInst(struct, fRec38[Int32(0)]), LoadVarInst(struct, fRec38[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow3)]), BinopInst("-", LoadVarInst(struct, fRec39[Int32(0)]), LoadVarInst(struct, fRec39[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow4)]), BinopInst("-", LoadVarInst(struct, fRec40[Int32(0)]), LoadVarInst(struct, fRec40[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow5)]), BinopInst("-", LoadVarInst(struct, fRec41[Int32(0)]), LoadVarInst(struct, fRec41[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow6)]), BinopInst("-", LoadVarInst(struct, fRec42[Int32(0)]), LoadVarInst(struct, fRec42[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow7)]), BinopInst("-", LoadVarInst(struct, fRec43[Int32(0)]), LoadVarInst(struct, fRec43[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow8)]), BinopInst("-", LoadVarInst(struct, fRec44[Int32(0)]), LoadVarInst(struct, fRec44[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow9)]), BinopInst("-", LoadVarInst(struct, fRec45[Int32(0)]), LoadVarInst(struct, fRec45[Int32(2)])))), BinopInst("*", LoadVarInst(static, ftbl3mydspSIG3[LoadVarInst(stack, iSlow10)]), BinopInst("-", LoadVarInst(struct, fRec46[Int32(0)]), LoadVarInst(struct, fRec46[Int32(2)])))))))
			StoreVarInst(stack, output0[LoadVarInst(loop, i)], CastInst("FAUSTFLOAT", LoadVarInst(stack, fTemp10)))
			StoreVarInst(stack, output1[LoadVarInst(loop, i)], CastInst("FAUSTFLOAT", LoadVarInst(stack, fTemp10)))
			StoreVarInst(struct, fVec0[Int32(1)], LoadVarInst(struct, fVec0[Int32(0)]))
			StoreVarInst(struct, iRec3[Int32(1)], LoadVarInst(struct, iRec3[Int32(0)]))
			StoreVarInst(struct, fRec2[Int32(2)], LoadVarInst(struct, fRec2[Int32(1)]))
			StoreVarInst(struct, fRec2[Int32(1)], LoadVarInst(struct, fRec2[Int32(0)]))
			StoreVarInst(struct, fRec1[Int32(2)], LoadVarInst(struct, fRec1[Int32(1)]))
			StoreVarInst(struct, fRec1[Int32(1)], LoadVarInst(struct, fRec1[Int32(0)]))
			StoreVarInst(struct, iVec1[Int32(1)], LoadVarInst(struct, iVec1[Int32(0)]))
			StoreVarInst(struct, fRec4[Int32(1)], LoadVarInst(struct, fRec4[Int32(0)]))
			StoreVarInst(struct, fRec0[Int32(2)], LoadVarInst(struct, fRec0[Int32(1)]))
			StoreVarInst(struct, fRec0[Int32(1)], LoadVarInst(struct, fRec0[Int32(0)]))
			StoreVarInst(struct, fRec5[Int32(2)], LoadVarInst(struct, fRec5[Int32(1)]))
			StoreVarInst(struct, fRec5[Int32(1)], LoadVarInst(struct, fRec5[Int32(0)]))
			StoreVarInst(struct, fRec6[Int32(2)], LoadVarInst(struct, fRec6[Int32(1)]))
			StoreVarInst(struct, fRec6[Int32(1)], LoadVarInst(struct, fRec6[Int32(0)]))
			StoreVarInst(struct, fRec7[Int32(2)], LoadVarInst(struct, fRec7[Int32(1)]))
			StoreVarInst(struct, fRec7[Int32(1)], LoadVarInst(struct, fRec7[Int32(0)]))
			StoreVarInst(struct, fRec8[Int32(2)], LoadVarInst(struct, fRec8[Int32(1)]))
			StoreVarInst(struct, fRec8[Int32(1)], LoadVarInst(struct, fRec8[Int32(0)]))
			StoreVarInst(struct, fRec9[Int32(2)], LoadVarInst(struct, fRec9[Int32(1)]))
			StoreVarInst(struct, fRec9[Int32(1)], LoadVarInst(struct, fRec9[Int32(0)]))
			StoreVarInst(struct, fRec10[Int32(2)], LoadVarInst(struct, fRec10[Int32(1)]))
			StoreVarInst(struct, fRec10[Int32(1)], LoadVarInst(struct, fRec10[Int32(0)]))
			StoreVarInst(struct, fRec11[Int32(2)], LoadVarInst(struct, fRec11[Int32(1)]))
			StoreVarInst(struct, fRec11[Int32(1)], LoadVarInst(struct, fRec11[Int32(0)]))
			StoreVarInst(struct, fRec12[Int32(2)], LoadVarInst(struct, fRec12[Int32(1)]))
			StoreVarInst(struct, fRec12[Int32(1)], LoadVarInst(struct, fRec12[Int32(0)]))
			StoreVarInst(struct, fRec13[Int32(2)], LoadVarInst(struct, fRec13[Int32(1)]))
			StoreVarInst(struct, fRec13[Int32(1)], LoadVarInst(struct, fRec13[Int32(0)]))
			StoreVarInst(struct, iVec2[Int32(1)], LoadVarInst(struct, iVec2[Int32(0)]))
			StoreVarInst(struct, fRec15[Int32(1)], LoadVarInst(struct, fRec15[Int32(0)]))
			StoreVarInst(struct, fRec14[Int32(2)], LoadVarInst(struct, fRec14[Int32(1)]))
			StoreVarInst(struct, fRec14[Int32(1)], LoadVarInst(struct, fRec14[Int32(0)]))
			StoreVarInst(struct, fRec16[Int32(2)], LoadVarInst(struct, fRec16[Int32(1)]))
			StoreVarInst(struct, fRec16[Int32(1)], LoadVarInst(struct, fRec16[Int32(0)]))
			StoreVarInst(struct, fRec17[Int32(2)], LoadVarInst(struct, fRec17[Int32(1)]))
			StoreVarInst(struct, fRec17[Int32(1)], LoadVarInst(struct, fRec17[Int32(0)]))
			StoreVarInst(struct, fRec18[Int32(2)], LoadVarInst(struct, fRec18[Int32(1)]))
			StoreVarInst(struct, fRec18[Int32(1)], LoadVarInst(struct, fRec18[Int32(0)]))
			StoreVarInst(struct, fRec19[Int32(2)], LoadVarInst(struct, fRec19[Int32(1)]))
			StoreVarInst(struct, fRec19[Int32(1)], LoadVarInst(struct, fRec19[Int32(0)]))
			StoreVarInst(struct, fRec20[Int32(2)], LoadVarInst(struct, fRec20[Int32(1)]))
			StoreVarInst(struct, fRec20[Int32(1)], LoadVarInst(struct, fRec20[Int32(0)]))
			StoreVarInst(struct, fRec21[Int32(2)], LoadVarInst(struct, fRec21[Int32(1)]))
			StoreVarInst(struct, fRec21[Int32(1)], LoadVarInst(struct, fRec21[Int32(0)]))
			StoreVarInst(struct, fRec22[Int32(2)], LoadVarInst(struct, fRec22[Int32(1)]))
			StoreVarInst(struct, fRec22[Int32(1)], LoadVarInst(struct, fRec22[Int32(0)]))
			StoreVarInst(struct, fRec23[Int32(2)], LoadVarInst(struct, fRec23[Int32(1)]))
			StoreVarInst(struct, fRec23[Int32(1)], LoadVarInst(struct, fRec23[Int32(0)]))
			StoreVarInst(struct, fRec24[Int32(2)], LoadVarInst(struct, fRec24[Int32(1)]))
			StoreVarInst(struct, fRec24[Int32(1)], LoadVarInst(struct, fRec24[Int32(0)]))
			StoreVarInst(struct, iVec3[Int32(1)], LoadVarInst(struct, iVec3[Int32(0)]))
			StoreVarInst(struct, fRec26[Int32(1)], LoadVarInst(struct, fRec26[Int32(0)]))
			StoreVarInst(struct, fRec25[Int32(2)], LoadVarInst(struct, fRec25[Int32(1)]))
			StoreVarInst(struct, fRec25[Int32(1)], LoadVarInst(struct, fRec25[Int32(0)]))
			StoreVarInst(struct, fRec27[Int32(2)], LoadVarInst(struct, fRec27[Int32(1)]))
			StoreVarInst(struct, fRec27[Int32(1)], LoadVarInst(struct, fRec27[Int32(0)]))
			StoreVarInst(struct, fRec28[Int32(2)], LoadVarInst(struct, fRec28[Int32(1)]))
			StoreVarInst(struct, fRec28[Int32(1)], LoadVarInst(struct, fRec28[Int32(0)]))
			StoreVarInst(struct, fRec29[Int32(2)], LoadVarInst(struct, fRec29[Int32(1)]))
			StoreVarInst(struct, fRec29[Int32(1)], LoadVarInst(struct, fRec29[Int32(0)]))
			StoreVarInst(struct, fRec30[Int32(2)], LoadVarInst(struct, fRec30[Int32(1)]))
			StoreVarInst(struct, fRec30[Int32(1)], LoadVarInst(struct, fRec30[Int32(0)]))
			StoreVarInst(struct, fRec31[Int32(2)], LoadVarInst(struct, fRec31[Int32(1)]))
			StoreVarInst(struct, fRec31[Int32(1)], LoadVarInst(struct, fRec31[Int32(0)]))
			StoreVarInst(struct, fRec32[Int32(2)], LoadVarInst(struct, fRec32[Int32(1)]))
			StoreVarInst(struct, fRec32[Int32(1)], LoadVarInst(struct, fRec32[Int32(0)]))
			StoreVarInst(struct, fRec33[Int32(2)], LoadVarInst(struct, fRec33[Int32(1)]))
			StoreVarInst(struct, fRec33[Int32(1)], LoadVarInst(struct, fRec33[Int32(0)]))
			StoreVarInst(struct, fRec34[Int32(2)], LoadVarInst(struct, fRec34[Int32(1)]))
			StoreVarInst(struct, fRec34[Int32(1)], LoadVarInst(struct, fRec34[Int32(0)]))
			StoreVarInst(struct, fRec35[Int32(2)], LoadVarInst(struct, fRec35[Int32(1)]))
			StoreVarInst(struct, fRec35[Int32(1)], LoadVarInst(struct, fRec35[Int32(0)]))
			StoreVarInst(struct, iVec4[Int32(1)], LoadVarInst(struct, iVec4[Int32(0)]))
			StoreVarInst(struct, fRec37[Int32(1)], LoadVarInst(struct, fRec37[Int32(0)]))
			StoreVarInst(struct, fRec36[Int32(2)], LoadVarInst(struct, fRec36[Int32(1)]))
			StoreVarInst(struct, fRec36[Int32(1)], LoadVarInst(struct, fRec36[Int32(0)]))
			StoreVarInst(struct, fRec38[Int32(2)], LoadVarInst(struct, fRec38[Int32(1)]))
			StoreVarInst(struct, fRec38[Int32(1)], LoadVarInst(struct, fRec38[Int32(0)]))
			StoreVarInst(struct, fRec39[Int32(2)], LoadVarInst(struct, fRec39[Int32(1)]))
			StoreVarInst(struct, fRec39[Int32(1)], LoadVarInst(struct, fRec39[Int32(0)]))
			StoreVarInst(struct, fRec40[Int32(2)], LoadVarInst(struct, fRec40[Int32(1)]))
			StoreVarInst(struct, fRec40[Int32(1)], LoadVarInst(struct, fRec40[Int32(0)]))
			StoreVarInst(struct, fRec41[Int32(2)], LoadVarInst(struct, fRec41[Int32(1)]))
			StoreVarInst(struct, fRec41[Int32(1)], LoadVarInst(struct, fRec41[Int32(0)]))
			StoreVarInst(struct, fRec42[Int32(2)], LoadVarInst(struct, fRec42[Int32(1)]))
			StoreVarInst(struct, fRec42[Int32(1)], LoadVarInst(struct, fRec42[Int32(0)]))
			StoreVarInst(struct, fRec43[Int32(2)], LoadVarInst(struct, fRec43[Int32(1)]))
			StoreVarInst(struct, fRec43[Int32(1)], LoadVarInst(struct, fRec43[Int32(0)]))
			StoreVarInst(struct, fRec44[Int32(2)], LoadVarInst(struct, fRec44[Int32(1)]))
			StoreVarInst(struct, fRec44[Int32(1)], LoadVarInst(struct, fRec44[Int32(0)]))
			StoreVarInst(struct, fRec45[Int32(2)], LoadVarInst(struct, fRec45[Int32(1)]))
			StoreVarInst(struct, fRec45[Int32(1)], LoadVarInst(struct, fRec45[Int32(0)]))
			StoreVarInst(struct, fRec46[Int32(2)], LoadVarInst(struct, fRec46[Int32(1)]))
			StoreVarInst(struct, fRec46[Int32(1)], LoadVarInst(struct, fRec46[Int32(0)]))
			EndBlock
		EndForLoop
	EndBlock

======= Object memory footprint ==========

Heap size int = 4 bytes
Heap size int* = 40 bytes
Heap size real = 1112 bytes
Heap size = 1172 bytes
Stack size in compute = 72 bytes

