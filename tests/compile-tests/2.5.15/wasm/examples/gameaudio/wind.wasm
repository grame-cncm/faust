
(module
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(import $tanf "env" "_tanf" (param f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"wind\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"100\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"wind\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"},{\"vaeffects.lib/name\":\"Faust Virtual Analog Filter Effect Library\"},{\"vaeffects.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"wind\",\"items\":[{\"type\":\"hslider\",\"label\":\"force\",\"address\":\"/wind/force\",\"index\":\"0\",\"init\":\"0.66\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 0))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 2))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 28)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.div (f32.const 3.14159274) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 28))))))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 0)) (f32.const 0.660000026))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(local $l10 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l10 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 4) (i32.shl (get_local $l0) (i32.const 2)))) (f32.const 0.))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 2)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 12) (i32.shl (get_local $l1) (i32.const 2)))) (i32.const 0))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 20) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 2)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 36) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 2)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 44) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 52) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 2)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 60) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 2)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 68) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 2)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 76) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 2)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 84) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 2)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		(set_local $l10 (i32.const 0))
		(loop $for-in-l10 
			(block $for-out-l10 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 92) (i32.shl (get_local $l10) (i32.const 2)))) (f32.const 0.))
				(set_local $l10 (i32.add (get_local $l10) (i32.const 1)))
				(if (i32.lt_s (get_local $l10) (i32.const 2)) (br $for-in-l10) (br $for-out-l10))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 28))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $fSlow0 f32)
		(local $i i32)
		(local $iTemp0 i32)
		(local $iRec2 i32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $fTemp3 f32)
		(local $fTemp4 f32)
		(local $fTemp5 f32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $fTemp8 f32)
		(local $fTemp9 f32)
		(local $fTemp10 f32)
		(local $fTemp11 f32)
		(local $fTemp12 f32)
		(local $fTemp13 f32)
		(local $fTemp14 f32)
		(local $fTemp15 f32)
		(local $fTemp16 f32)
		(local $fTemp17 f32)
		(local $fTemp18 f32)
		(local $fTemp19 f32)
		(local $fTemp20 f32)
		(local $fRec5 f32)
		(local $fTemp21 f32)
		(local $fTemp22 f32)
		(local $fTemp23 f32)
		(local $fTemp24 f32)
		(local $fTemp25 f32)
		(local $fTemp26 f32)
		(local $fTemp27 f32)
		(local $fTemp28 f32)
		(local $fTemp29 f32)
		(local $fTemp30 f32)
		(local $fTemp31 f32)
		(local $fTemp32 f32)
		(local $fTemp33 f32)
		(local $fTemp34 f32)
		(local $fTemp35 f32)
		(local $fTemp36 f32)
		(local $fTemp37 f32)
		(local $fTemp38 f32)
		(local $fTemp39 f32)
		(local $fRec8 f32)
		(local $fTemp40 f32)
		(local $fTemp41 f32)
		(local $fTemp42 f32)
		(local $fTemp43 f32)
		(local $fTemp44 f32)
		(local $fTemp45 f32)
		(local $fRec11 f32)
		(local $fTemp46 f32)
		(local $fTemp47 f32)
		(local $fRec14 f32)
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $iTemp0 (i32.const 0))
		(set_local $iRec2 (i32.const 0))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $fTemp4 (f32.const 0.))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $fTemp8 (f32.const 0.))
		(set_local $fTemp9 (f32.const 0.))
		(set_local $fTemp10 (f32.const 0.))
		(set_local $fTemp11 (f32.const 0.))
		(set_local $fTemp12 (f32.const 0.))
		(set_local $fTemp13 (f32.const 0.))
		(set_local $fTemp14 (f32.const 0.))
		(set_local $fTemp15 (f32.const 0.))
		(set_local $fTemp16 (f32.const 0.))
		(set_local $fTemp17 (f32.const 0.))
		(set_local $fTemp18 (f32.const 0.))
		(set_local $fTemp19 (f32.const 0.))
		(set_local $fTemp20 (f32.const 0.))
		(set_local $fRec5 (f32.const 0.))
		(set_local $fTemp21 (f32.const 0.))
		(set_local $fTemp22 (f32.const 0.))
		(set_local $fTemp23 (f32.const 0.))
		(set_local $fTemp24 (f32.const 0.))
		(set_local $fTemp25 (f32.const 0.))
		(set_local $fTemp26 (f32.const 0.))
		(set_local $fTemp27 (f32.const 0.))
		(set_local $fTemp28 (f32.const 0.))
		(set_local $fTemp29 (f32.const 0.))
		(set_local $fTemp30 (f32.const 0.))
		(set_local $fTemp31 (f32.const 0.))
		(set_local $fTemp32 (f32.const 0.))
		(set_local $fTemp33 (f32.const 0.))
		(set_local $fTemp34 (f32.const 0.))
		(set_local $fTemp35 (f32.const 0.))
		(set_local $fTemp36 (f32.const 0.))
		(set_local $fTemp37 (f32.const 0.))
		(set_local $fTemp38 (f32.const 0.))
		(set_local $fTemp39 (f32.const 0.))
		(set_local $fRec8 (f32.const 0.))
		(set_local $fTemp40 (f32.const 0.))
		(set_local $fTemp41 (f32.const 0.))
		(set_local $fTemp42 (f32.const 0.))
		(set_local $fTemp43 (f32.const 0.))
		(set_local $fTemp44 (f32.const 0.))
		(set_local $fTemp45 (f32.const 0.))
		(set_local $fRec11 (f32.const 0.))
		(set_local $fTemp46 (f32.const 0.))
		(set_local $fTemp47 (f32.const 0.))
		(set_local $fRec14 (f32.const 0.))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $fSlow0 (f32.mul (f32.const 0.00300000003) (f32.load (i32.add (get_local $dsp) (i32.const 0)))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(f32.store (i32.add (get_local $dsp) (i32.const 4)) (f32.add (get_local $fSlow0) (f32.mul (f32.const 0.996999979) (f32.load (i32.add (get_local $dsp) (i32.const 8))))))
				(set_local $iTemp0 (i32.mul (i32.const 1103515245) (i32.add (i32.load (i32.add (get_local $dsp) (i32.const 16))) (i32.const 12345))))
				(i32.store (i32.add (get_local $dsp) (i32.const 12)) (i32.mul (i32.const 1103515245) (i32.add (get_local $iTemp0) (i32.const 12345))))
				(set_local $iRec2 (get_local $iTemp0))
				(set_local $fTemp1 (f32.mul (f32.const 4.65661287e-10) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.add (get_local $fSlow0) (f32.mul (f32.const 0.996999979) (f32.load (i32.add (get_local $dsp) (i32.const 24))))))
				(set_local $fTemp2 (call $powf (f32.mul (f32.const 1.41419947) (f32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.const 2.)))
				(set_local $fTemp3 (f32.mul (f32.const 1.99997997) (f32.load (i32.add (get_local $dsp) (i32.const 20)))))
				(set_local $fTemp4 (f32.add (get_local $fTemp2) (get_local $fTemp3)))
				(set_local $fTemp5 (f32.add (get_local $fTemp3) (f32.const 2.)))
				(set_local $fTemp6 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.max (f32.mul (f32.const 440.) (call $powf (f32.const 2.) (f32.mul (f32.const 0.0833333358) (f32.add (f32.mul (f32.const 87.) (f32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.const -48.))))) (f32.const 20.)))))
				(set_local $fTemp7 (f32.div (f32.const 1.) (get_local $fTemp6)))
				(set_local $fTemp8 (f32.add (f32.add (get_local $fTemp4) (f32.div (f32.add (get_local $fTemp5) (get_local $fTemp7)) (get_local $fTemp6))) (f32.const 1.)))
				(set_local $fTemp9 (f32.div (f32.add (get_local $fTemp4) (f32.sub (f32.const 1.) (f32.div (f32.sub (get_local $fTemp5) (get_local $fTemp7)) (get_local $fTemp6)))) (get_local $fTemp8)))
				(set_local $fTemp10 (f32.max (f32.const -0.999899983) (f32.min (f32.const 0.999899983) (get_local $fTemp9))))
				(set_local $fTemp11 (f32.sub (f32.const 0.) (get_local $fTemp10)))
				(set_local $fTemp12 (f32.sub (f32.const 1.) (call $powf (get_local $fTemp10) (f32.const 2.))))
				(set_local $fTemp13 (f32.sqrt (f32.max (f32.const 0.) (get_local $fTemp12))))
				(set_local $fTemp14 (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (get_local $fTemp11)) (f32.mul (get_local $fTemp1) (get_local $fTemp13))))
				(set_local $fTemp15 (f32.div (f32.const 1.) (call $powf (get_local $fTemp6) (f32.const 2.))))
				(set_local $fTemp16 (f32.add (get_local $fTemp4) (f32.sub (f32.const 1.) (get_local $fTemp15))))
				(set_local $fTemp17 (f32.max (f32.const -0.999899983) (f32.min (f32.const 0.999899983) (f32.mul (f32.const 2.) (f32.div (get_local $fTemp16) (f32.mul (get_local $fTemp8) (f32.add (get_local $fTemp9) (f32.const 1.))))))))
				(set_local $fTemp18 (f32.sub (f32.const 0.) (get_local $fTemp17)))
				(set_local $fTemp19 (f32.sub (f32.const 1.) (call $powf (get_local $fTemp17) (f32.const 2.))))
				(set_local $fTemp20 (f32.sqrt (f32.max (f32.const 0.) (get_local $fTemp19))))
				(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 40))) (get_local $fTemp18)) (f32.mul (get_local $fTemp14) (get_local $fTemp20))))
				(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.add (f32.mul (get_local $fTemp14) (get_local $fTemp17)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 40))) (get_local $fTemp20))))
				(set_local $fRec5 (f32.load (i32.add (get_local $dsp) (i32.const 36))))
				(set_local $fTemp21 (f32.sub (f32.const 1.) (f32.div (get_local $fTemp16) (get_local $fTemp8))))
				(set_local $fTemp22 (f32.sqrt (get_local $fTemp12)))
				(set_local $fTemp23 (f32.sub (f32.sub (f32.const 1.) (get_local $fTemp9)) (f32.mul (f32.const 2.) (f32.mul (get_local $fTemp17) (get_local $fTemp21)))))
				(set_local $fTemp24 (f32.mul (get_local $fTemp22) (f32.sqrt (get_local $fTemp19))))
				(set_local $fTemp25 (f32.add (f32.add (f32.add (f32.mul (get_local $fTemp1) (get_local $fTemp10)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (get_local $fTemp13))) (f32.mul (f32.const 2.) (f32.div (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 44))) (get_local $fTemp21)) (get_local $fTemp22)))) (f32.div (f32.mul (get_local $fRec5) (get_local $fTemp23)) (get_local $fTemp24))))
				(set_local $fTemp26 (f32.sub (f32.const 2.) (get_local $fTemp3)))
				(set_local $fTemp27 (f32.sub (f32.const 1.) (get_local $fTemp3)))
				(set_local $fTemp28 (f32.add (f32.add (get_local $fTemp2) (f32.div (f32.add (get_local $fTemp7) (get_local $fTemp26)) (get_local $fTemp6))) (get_local $fTemp27)))
				(set_local $fTemp29 (f32.div (f32.add (f32.add (get_local $fTemp2) (f32.div (f32.sub (get_local $fTemp7) (get_local $fTemp26)) (get_local $fTemp6))) (get_local $fTemp27)) (get_local $fTemp28)))
				(set_local $fTemp30 (f32.max (f32.const -0.999899983) (f32.min (f32.const 0.999899983) (get_local $fTemp29))))
				(set_local $fTemp31 (f32.sub (f32.const 0.) (get_local $fTemp30)))
				(set_local $fTemp32 (f32.sub (f32.const 1.) (call $powf (get_local $fTemp30) (f32.const 2.))))
				(set_local $fTemp33 (f32.sqrt (f32.max (f32.const 0.) (get_local $fTemp32))))
				(set_local $fTemp34 (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 64))) (get_local $fTemp31)) (f32.div (f32.mul (get_local $fTemp25) (get_local $fTemp33)) (get_local $fTemp8))))
				(set_local $fTemp35 (f32.add (get_local $fTemp2) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp3) (get_local $fTemp15)))))
				(set_local $fTemp36 (f32.max (f32.const -0.999899983) (f32.min (f32.const 0.999899983) (f32.mul (f32.const 2.) (f32.div (get_local $fTemp35) (f32.mul (get_local $fTemp28) (f32.add (get_local $fTemp29) (f32.const 1.))))))))
				(set_local $fTemp37 (f32.sub (f32.const 0.) (get_local $fTemp36)))
				(set_local $fTemp38 (f32.sub (f32.const 1.) (call $powf (get_local $fTemp36) (f32.const 2.))))
				(set_local $fTemp39 (f32.sqrt (f32.max (f32.const 0.) (get_local $fTemp38))))
				(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 56))) (get_local $fTemp37)) (f32.mul (get_local $fTemp34) (get_local $fTemp39))))
				(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.add (f32.mul (get_local $fTemp34) (get_local $fTemp36)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 56))) (get_local $fTemp39))))
				(set_local $fRec8 (f32.load (i32.add (get_local $dsp) (i32.const 52))))
				(set_local $fTemp40 (f32.sub (f32.const 1.) (f32.div (get_local $fTemp35) (get_local $fTemp28))))
				(set_local $fTemp41 (f32.sqrt (get_local $fTemp32)))
				(set_local $fTemp42 (f32.sub (f32.sub (f32.const 1.) (get_local $fTemp29)) (f32.mul (f32.const 2.) (f32.mul (get_local $fTemp36) (get_local $fTemp40)))))
				(set_local $fTemp43 (f32.mul (get_local $fTemp41) (f32.sqrt (get_local $fTemp38))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (f32.div (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.add (f32.add (f32.add (f32.div (f32.mul (get_local $fTemp25) (get_local $fTemp30)) (get_local $fTemp8)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 64))) (get_local $fTemp33))) (f32.mul (f32.const 2.) (f32.div (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 60))) (get_local $fTemp40)) (get_local $fTemp41)))) (f32.div (f32.mul (get_local $fRec8) (get_local $fTemp42)) (get_local $fTemp43)))) (get_local $fTemp28)))
				(set_local $fTemp44 (f32.mul (f32.const 4.65661287e-10) (f32.convert_s/i32 (get_local $iRec2))))
				(set_local $fTemp45 (f32.add (f32.mul (get_local $fTemp11) (f32.load (i32.add (get_local $dsp) (i32.const 80)))) (f32.mul (get_local $fTemp13) (get_local $fTemp44))))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.add (f32.mul (get_local $fTemp18) (f32.load (i32.add (get_local $dsp) (i32.const 72)))) (f32.mul (get_local $fTemp20) (get_local $fTemp45))))
				(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.add (f32.mul (get_local $fTemp17) (get_local $fTemp45)) (f32.mul (get_local $fTemp20) (f32.load (i32.add (get_local $dsp) (i32.const 72))))))
				(set_local $fRec11 (f32.load (i32.add (get_local $dsp) (i32.const 68))))
				(set_local $fTemp46 (f32.add (f32.add (f32.add (f32.mul (get_local $fTemp10) (get_local $fTemp44)) (f32.mul (get_local $fTemp13) (f32.load (i32.add (get_local $dsp) (i32.const 80))))) (f32.mul (f32.const 2.) (f32.div (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 76))) (get_local $fTemp21)) (get_local $fTemp22)))) (f32.div (f32.mul (get_local $fRec11) (get_local $fTemp23)) (get_local $fTemp24))))
				(set_local $fTemp47 (f32.add (f32.mul (get_local $fTemp31) (f32.load (i32.add (get_local $dsp) (i32.const 96)))) (f32.div (f32.mul (get_local $fTemp33) (get_local $fTemp46)) (get_local $fTemp8))))
				(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.add (f32.mul (get_local $fTemp37) (f32.load (i32.add (get_local $dsp) (i32.const 88)))) (f32.mul (get_local $fTemp39) (get_local $fTemp47))))
				(f32.store (i32.add (get_local $dsp) (i32.const 92)) (f32.add (f32.mul (get_local $fTemp36) (get_local $fTemp47)) (f32.mul (get_local $fTemp39) (f32.load (i32.add (get_local $dsp) (i32.const 88))))))
				(set_local $fRec14 (f32.load (i32.add (get_local $dsp) (i32.const 84))))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (f32.div (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.add (f32.add (f32.add (f32.div (f32.mul (get_local $fTemp30) (get_local $fTemp46)) (get_local $fTemp8)) (f32.mul (get_local $fTemp33) (f32.load (i32.add (get_local $dsp) (i32.const 96))))) (f32.mul (f32.const 2.) (f32.div (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 92))) (get_local $fTemp40)) (get_local $fTemp41)))) (f32.div (f32.mul (get_local $fRec14) (get_local $fTemp42)) (get_local $fTemp43)))) (get_local $fTemp28)))
				(f32.store (i32.add (get_local $dsp) (i32.const 8)) (f32.load (i32.add (get_local $dsp) (i32.const 4))))
				(i32.store (i32.add (get_local $dsp) (i32.const 16)) (i32.load (i32.add (get_local $dsp) (i32.const 12))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.load (i32.add (get_local $dsp) (i32.const 20))))
				(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.load (i32.add (get_local $dsp) (i32.const 36))))
				(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.load (i32.add (get_local $dsp) (i32.const 44))))
				(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.load (i32.add (get_local $dsp) (i32.const 52))))
				(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.load (i32.add (get_local $dsp) (i32.const 60))))
				(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.load (i32.add (get_local $dsp) (i32.const 68))))
				(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.load (i32.add (get_local $dsp) (i32.const 76))))
				(f32.store (i32.add (get_local $dsp) (i32.const 88)) (f32.load (i32.add (get_local $dsp) (i32.const 84))))
				(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.load (i32.add (get_local $dsp) (i32.const 92))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
