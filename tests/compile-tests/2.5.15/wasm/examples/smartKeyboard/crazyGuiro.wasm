
(module
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(import $tanf "env" "_tanf" (param f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"crazyGuiro\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"291116\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"envelopes.lib/author\":\"GRAME\"},{\"envelopes.lib/copyright\":\"GRAME\"},{\"envelopes.lib/license\":\"LGPL with exception\"},{\"envelopes.lib/name\":\"Faust Envelope Library\"},{\"envelopes.lib/version\":\"0.0\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"interface\":\"SmartKeyboard{  'Number of Keyboards':'8',  'Keyboard 0 - Number of Keys':'16',  'Keyboard 1 - Number of Keys':'16',  'Keyboard 2 - Number of Keys':'16',  'Keyboard 3 - Number of Keys':'16',  'Keyboard 4 - Number of Keys':'16',  'Keyboard 5 - Number of Keys':'16',  'Keyboard 6 - Number of Keys':'16',  'Keyboard 7 - Number of Keys':'16',  'Keyboard 0 - Piano Keyboard':'0',  'Keyboard 1 - Piano Keyboard':'0',  'Keyboard 2 - Piano Keyboard':'0',  'Keyboard 3 - Piano Keyboard':'0',  'Keyboard 4 - Piano Keyboard':'0',  'Keyboard 5 - Piano Keyboard':'0',  'Keyboard 6 - Piano Keyboard':'0',  'Keyboard 7 - Piano Keyboard':'0' }\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"crazyGuiro\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"reverbs.lib/name\":\"Faust Reverb Library\"},{\"reverbs.lib/version\":\"0.0\"},{\"synths.lib/name\":\"Faust Synthesizer Library\"},{\"synths.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"crazyGuiro\",\"items\":[{\"type\":\"button\",\"label\":\"gate\",\"address\":\"/crazyGuiro/gate\",\"index\":\"52\"},{\"type\":\"hslider\",\"label\":\"key\",\"address\":\"/crazyGuiro/key\",\"index\":\"36\",\"init\":\"0\",\"min\":\"0\",\"max\":\"2\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"keyboard\",\"address\":\"/crazyGuiro/keyboard\",\"index\":\"40\",\"init\":\"0\",\"min\":\"0\",\"max\":\"2\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"res\",\"address\":\"/crazyGuiro/res\",\"index\":\"0\",\"meta\":[{\"acc\":\"1 0 -10 0 10\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"wet\",\"address\":\"/crazyGuiro/wet\",\"index\":\"12\",\"meta\":[{\"acc\":\"0 0 -10 0 10\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 0))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 2))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 16)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.div (f32.const 1382.30078) (f32.load (i32.add (get_local $dsp) (i32.const 20)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.mul (f32.const 0.00200000009) (f32.load (i32.add (get_local $dsp) (i32.const 20)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 20)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.div (f32.const 1000.) (f32.load (i32.add (get_local $dsp) (i32.const 20)))))
		(i32.store (i32.add (get_local $dsp) (i32.const 32868)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0253061224) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 65656)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0269387756) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 98444)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0289569162) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 131232)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0307482984) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 164020)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0322448984) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 196808)) (i32.trunc_s/f32 (f32.mul (f32.const 0.033809524) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 229596)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0353061222) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 262384)) (i32.trunc_s/f32 (f32.mul (f32.const 0.0366666652) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(i32.store (i32.add (get_local $dsp) (i32.const 270588)) (call $min_i (i32.const 1024) (call $max_i (i32.const 0) (i32.add (i32.trunc_s/f32 (f32.mul (f32.const 0.0126077095) (f32.load (i32.add (get_local $dsp) (i32.const 20))))) (i32.const -1)))))
		(i32.store (i32.add (get_local $dsp) (i32.const 278792)) (call $min_i (i32.const 1024) (call $max_i (i32.const 0) (i32.add (i32.trunc_s/f32 (f32.mul (f32.const 0.00999999978) (f32.load (i32.add (get_local $dsp) (i32.const 20))))) (i32.const -1)))))
		(i32.store (i32.add (get_local $dsp) (i32.const 286996)) (call $min_i (i32.const 1024) (call $max_i (i32.const 0) (i32.add (i32.trunc_s/f32 (f32.mul (f32.const 0.00773242628) (f32.load (i32.add (get_local $dsp) (i32.const 20))))) (i32.const -1)))))
		(i32.store (i32.add (get_local $dsp) (i32.const 291104)) (call $min_i (i32.const 1024) (call $max_i (i32.const 0) (i32.add (i32.trunc_s/f32 (f32.mul (f32.const 0.00510204071) (f32.load (i32.add (get_local $dsp) (i32.const 20))))) (i32.const -1)))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 0)) (f32.const 0.5))
		(f32.store (i32.add (get_local $dsp) (i32.const 12)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.const 0.))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(local $l10 i32)
		(local $l11 i32)
		(local $l12 i32)
		(local $l13 i32)
		(local $l14 i32)
		(local $l15 i32)
		(local $l16 i32)
		(local $l17 i32)
		(local $l18 i32)
		(local $l19 i32)
		(local $l20 i32)
		(local $l21 i32)
		(local $l22 i32)
		(local $l23 i32)
		(local $l24 i32)
		(local $l25 i32)
		(local $l26 i32)
		(local $l27 i32)
		(local $l28 i32)
		(local $l29 i32)
		(local $l30 i32)
		(local $l31 i32)
		(local $l32 i32)
		(local $l33 i32)
		(local $l34 i32)
		(local $l35 i32)
		(local $l36 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l10 (i32.const 0))
		(set_local $l11 (i32.const 0))
		(set_local $l12 (i32.const 0))
		(set_local $l13 (i32.const 0))
		(set_local $l14 (i32.const 0))
		(set_local $l15 (i32.const 0))
		(set_local $l16 (i32.const 0))
		(set_local $l17 (i32.const 0))
		(set_local $l18 (i32.const 0))
		(set_local $l19 (i32.const 0))
		(set_local $l20 (i32.const 0))
		(set_local $l21 (i32.const 0))
		(set_local $l22 (i32.const 0))
		(set_local $l23 (i32.const 0))
		(set_local $l24 (i32.const 0))
		(set_local $l25 (i32.const 0))
		(set_local $l26 (i32.const 0))
		(set_local $l27 (i32.const 0))
		(set_local $l28 (i32.const 0))
		(set_local $l29 (i32.const 0))
		(set_local $l30 (i32.const 0))
		(set_local $l31 (i32.const 0))
		(set_local $l32 (i32.const 0))
		(set_local $l33 (i32.const 0))
		(set_local $l34 (i32.const 0))
		(set_local $l35 (i32.const 0))
		(set_local $l36 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 4) (i32.shl (get_local $l0) (i32.const 2)))) (f32.const 0.))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 2)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24) (i32.shl (get_local $l1) (i32.const 2)))) (f32.const 0.))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 44) (i32.shl (get_local $l2) (i32.const 2)))) (i32.const 0))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 2)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 56) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 2)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 68) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 84) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 3)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(i32.store (i32.add (get_local $dsp) (i32.const 96)) (i32.const 0))
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 100) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 8192)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32872) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 2)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32880) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 2)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32888) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 8192)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		(set_local $l10 (i32.const 0))
		(loop $for-in-l10 
			(block $for-out-l10 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65660) (i32.shl (get_local $l10) (i32.const 2)))) (f32.const 0.))
				(set_local $l10 (i32.add (get_local $l10) (i32.const 1)))
				(if (i32.lt_s (get_local $l10) (i32.const 2)) (br $for-in-l10) (br $for-out-l10))
				
			)
		)
		(set_local $l11 (i32.const 0))
		(loop $for-in-l11 
			(block $for-out-l11 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65668) (i32.shl (get_local $l11) (i32.const 2)))) (f32.const 0.))
				(set_local $l11 (i32.add (get_local $l11) (i32.const 1)))
				(if (i32.lt_s (get_local $l11) (i32.const 2)) (br $for-in-l11) (br $for-out-l11))
				
			)
		)
		(set_local $l12 (i32.const 0))
		(loop $for-in-l12 
			(block $for-out-l12 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65676) (i32.shl (get_local $l12) (i32.const 2)))) (f32.const 0.))
				(set_local $l12 (i32.add (get_local $l12) (i32.const 1)))
				(if (i32.lt_s (get_local $l12) (i32.const 8192)) (br $for-in-l12) (br $for-out-l12))
				
			)
		)
		(set_local $l13 (i32.const 0))
		(loop $for-in-l13 
			(block $for-out-l13 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 98448) (i32.shl (get_local $l13) (i32.const 2)))) (f32.const 0.))
				(set_local $l13 (i32.add (get_local $l13) (i32.const 1)))
				(if (i32.lt_s (get_local $l13) (i32.const 2)) (br $for-in-l13) (br $for-out-l13))
				
			)
		)
		(set_local $l14 (i32.const 0))
		(loop $for-in-l14 
			(block $for-out-l14 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 98456) (i32.shl (get_local $l14) (i32.const 2)))) (f32.const 0.))
				(set_local $l14 (i32.add (get_local $l14) (i32.const 1)))
				(if (i32.lt_s (get_local $l14) (i32.const 2)) (br $for-in-l14) (br $for-out-l14))
				
			)
		)
		(set_local $l15 (i32.const 0))
		(loop $for-in-l15 
			(block $for-out-l15 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 98464) (i32.shl (get_local $l15) (i32.const 2)))) (f32.const 0.))
				(set_local $l15 (i32.add (get_local $l15) (i32.const 1)))
				(if (i32.lt_s (get_local $l15) (i32.const 8192)) (br $for-in-l15) (br $for-out-l15))
				
			)
		)
		(set_local $l16 (i32.const 0))
		(loop $for-in-l16 
			(block $for-out-l16 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 131236) (i32.shl (get_local $l16) (i32.const 2)))) (f32.const 0.))
				(set_local $l16 (i32.add (get_local $l16) (i32.const 1)))
				(if (i32.lt_s (get_local $l16) (i32.const 2)) (br $for-in-l16) (br $for-out-l16))
				
			)
		)
		(set_local $l17 (i32.const 0))
		(loop $for-in-l17 
			(block $for-out-l17 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 131244) (i32.shl (get_local $l17) (i32.const 2)))) (f32.const 0.))
				(set_local $l17 (i32.add (get_local $l17) (i32.const 1)))
				(if (i32.lt_s (get_local $l17) (i32.const 2)) (br $for-in-l17) (br $for-out-l17))
				
			)
		)
		(set_local $l18 (i32.const 0))
		(loop $for-in-l18 
			(block $for-out-l18 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 131252) (i32.shl (get_local $l18) (i32.const 2)))) (f32.const 0.))
				(set_local $l18 (i32.add (get_local $l18) (i32.const 1)))
				(if (i32.lt_s (get_local $l18) (i32.const 8192)) (br $for-in-l18) (br $for-out-l18))
				
			)
		)
		(set_local $l19 (i32.const 0))
		(loop $for-in-l19 
			(block $for-out-l19 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 164024) (i32.shl (get_local $l19) (i32.const 2)))) (f32.const 0.))
				(set_local $l19 (i32.add (get_local $l19) (i32.const 1)))
				(if (i32.lt_s (get_local $l19) (i32.const 2)) (br $for-in-l19) (br $for-out-l19))
				
			)
		)
		(set_local $l20 (i32.const 0))
		(loop $for-in-l20 
			(block $for-out-l20 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 164032) (i32.shl (get_local $l20) (i32.const 2)))) (f32.const 0.))
				(set_local $l20 (i32.add (get_local $l20) (i32.const 1)))
				(if (i32.lt_s (get_local $l20) (i32.const 2)) (br $for-in-l20) (br $for-out-l20))
				
			)
		)
		(set_local $l21 (i32.const 0))
		(loop $for-in-l21 
			(block $for-out-l21 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 164040) (i32.shl (get_local $l21) (i32.const 2)))) (f32.const 0.))
				(set_local $l21 (i32.add (get_local $l21) (i32.const 1)))
				(if (i32.lt_s (get_local $l21) (i32.const 8192)) (br $for-in-l21) (br $for-out-l21))
				
			)
		)
		(set_local $l22 (i32.const 0))
		(loop $for-in-l22 
			(block $for-out-l22 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 196812) (i32.shl (get_local $l22) (i32.const 2)))) (f32.const 0.))
				(set_local $l22 (i32.add (get_local $l22) (i32.const 1)))
				(if (i32.lt_s (get_local $l22) (i32.const 2)) (br $for-in-l22) (br $for-out-l22))
				
			)
		)
		(set_local $l23 (i32.const 0))
		(loop $for-in-l23 
			(block $for-out-l23 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 196820) (i32.shl (get_local $l23) (i32.const 2)))) (f32.const 0.))
				(set_local $l23 (i32.add (get_local $l23) (i32.const 1)))
				(if (i32.lt_s (get_local $l23) (i32.const 2)) (br $for-in-l23) (br $for-out-l23))
				
			)
		)
		(set_local $l24 (i32.const 0))
		(loop $for-in-l24 
			(block $for-out-l24 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 196828) (i32.shl (get_local $l24) (i32.const 2)))) (f32.const 0.))
				(set_local $l24 (i32.add (get_local $l24) (i32.const 1)))
				(if (i32.lt_s (get_local $l24) (i32.const 8192)) (br $for-in-l24) (br $for-out-l24))
				
			)
		)
		(set_local $l25 (i32.const 0))
		(loop $for-in-l25 
			(block $for-out-l25 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 229600) (i32.shl (get_local $l25) (i32.const 2)))) (f32.const 0.))
				(set_local $l25 (i32.add (get_local $l25) (i32.const 1)))
				(if (i32.lt_s (get_local $l25) (i32.const 2)) (br $for-in-l25) (br $for-out-l25))
				
			)
		)
		(set_local $l26 (i32.const 0))
		(loop $for-in-l26 
			(block $for-out-l26 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 229608) (i32.shl (get_local $l26) (i32.const 2)))) (f32.const 0.))
				(set_local $l26 (i32.add (get_local $l26) (i32.const 1)))
				(if (i32.lt_s (get_local $l26) (i32.const 2)) (br $for-in-l26) (br $for-out-l26))
				
			)
		)
		(set_local $l27 (i32.const 0))
		(loop $for-in-l27 
			(block $for-out-l27 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 229616) (i32.shl (get_local $l27) (i32.const 2)))) (f32.const 0.))
				(set_local $l27 (i32.add (get_local $l27) (i32.const 1)))
				(if (i32.lt_s (get_local $l27) (i32.const 8192)) (br $for-in-l27) (br $for-out-l27))
				
			)
		)
		(set_local $l28 (i32.const 0))
		(loop $for-in-l28 
			(block $for-out-l28 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 262388) (i32.shl (get_local $l28) (i32.const 2)))) (f32.const 0.))
				(set_local $l28 (i32.add (get_local $l28) (i32.const 1)))
				(if (i32.lt_s (get_local $l28) (i32.const 2)) (br $for-in-l28) (br $for-out-l28))
				
			)
		)
		(set_local $l29 (i32.const 0))
		(loop $for-in-l29 
			(block $for-out-l29 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 262396) (i32.shl (get_local $l29) (i32.const 2)))) (f32.const 0.))
				(set_local $l29 (i32.add (get_local $l29) (i32.const 1)))
				(if (i32.lt_s (get_local $l29) (i32.const 2048)) (br $for-in-l29) (br $for-out-l29))
				
			)
		)
		(set_local $l30 (i32.const 0))
		(loop $for-in-l30 
			(block $for-out-l30 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 270592) (i32.shl (get_local $l30) (i32.const 2)))) (f32.const 0.))
				(set_local $l30 (i32.add (get_local $l30) (i32.const 1)))
				(if (i32.lt_s (get_local $l30) (i32.const 2)) (br $for-in-l30) (br $for-out-l30))
				
			)
		)
		(set_local $l31 (i32.const 0))
		(loop $for-in-l31 
			(block $for-out-l31 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 270600) (i32.shl (get_local $l31) (i32.const 2)))) (f32.const 0.))
				(set_local $l31 (i32.add (get_local $l31) (i32.const 1)))
				(if (i32.lt_s (get_local $l31) (i32.const 2048)) (br $for-in-l31) (br $for-out-l31))
				
			)
		)
		(set_local $l32 (i32.const 0))
		(loop $for-in-l32 
			(block $for-out-l32 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 278796) (i32.shl (get_local $l32) (i32.const 2)))) (f32.const 0.))
				(set_local $l32 (i32.add (get_local $l32) (i32.const 1)))
				(if (i32.lt_s (get_local $l32) (i32.const 2)) (br $for-in-l32) (br $for-out-l32))
				
			)
		)
		(set_local $l33 (i32.const 0))
		(loop $for-in-l33 
			(block $for-out-l33 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 278804) (i32.shl (get_local $l33) (i32.const 2)))) (f32.const 0.))
				(set_local $l33 (i32.add (get_local $l33) (i32.const 1)))
				(if (i32.lt_s (get_local $l33) (i32.const 2048)) (br $for-in-l33) (br $for-out-l33))
				
			)
		)
		(set_local $l34 (i32.const 0))
		(loop $for-in-l34 
			(block $for-out-l34 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 287000) (i32.shl (get_local $l34) (i32.const 2)))) (f32.const 0.))
				(set_local $l34 (i32.add (get_local $l34) (i32.const 1)))
				(if (i32.lt_s (get_local $l34) (i32.const 2)) (br $for-in-l34) (br $for-out-l34))
				
			)
		)
		(set_local $l35 (i32.const 0))
		(loop $for-in-l35 
			(block $for-out-l35 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 287008) (i32.shl (get_local $l35) (i32.const 2)))) (f32.const 0.))
				(set_local $l35 (i32.add (get_local $l35) (i32.const 1)))
				(if (i32.lt_s (get_local $l35) (i32.const 1024)) (br $for-in-l35) (br $for-out-l35))
				
			)
		)
		(set_local $l36 (i32.const 0))
		(loop $for-in-l36 
			(block $for-out-l36 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 291108) (i32.shl (get_local $l36) (i32.const 2)))) (f32.const 0.))
				(set_local $l36 (i32.add (get_local $l36) (i32.const 1)))
				(if (i32.lt_s (get_local $l36) (i32.const 2)) (br $for-in-l36) (br $for-out-l36))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 16))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $fSlow3 f32)
		(local $fSlow4 f32)
		(local $fSlow5 f32)
		(local $fSlow6 f32)
		(local $fSlow7 f32)
		(local $fSlow8 f32)
		(local $fSlow9 f32)
		(local $fSlow10 f32)
		(local $fSlow11 f32)
		(local $i i32)
		(local $iTemp0 i32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $fTemp3 f32)
		(local $fRec7 f32)
		(local $fTemp4 f32)
		(local $fRec5 f32)
		(local $fTemp5 f32)
		(local $fRec3 f32)
		(local $fTemp6 f32)
		(local $fRec1 f32)
		(local $fTemp7 f32)
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $fSlow3 (f32.const 0.))
		(set_local $fSlow4 (f32.const 0.))
		(set_local $fSlow5 (f32.const 0.))
		(set_local $fSlow6 (f32.const 0.))
		(set_local $fSlow7 (f32.const 0.))
		(set_local $fSlow8 (f32.const 0.))
		(set_local $fSlow9 (f32.const 0.))
		(set_local $fSlow10 (f32.const 0.))
		(set_local $fSlow11 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $iTemp0 (i32.const 0))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $fRec7 (f32.const 0.))
		(set_local $fTemp4 (f32.const 0.))
		(set_local $fRec5 (f32.const 0.))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fRec3 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fRec1 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $fSlow0 (f32.load (i32.add (get_local $dsp) (i32.const 0))))
		(set_local $fSlow1 (f32.load (i32.add (get_local $dsp) (i32.const 12))))
		(set_local $fSlow2 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 32))) (call $powf (f32.const 2.) (f32.mul (f32.const 0.0833333358) (f32.add (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 36))) (f32.mul (f32.const 8.) (f32.load (i32.add (get_local $dsp) (i32.const 40))))) (f32.const -19.)))))))
		(set_local $fSlow3 (f32.div (f32.const 1.) (get_local $fSlow2)))
		(set_local $fSlow4 (f32.add (f32.div (f32.add (get_local $fSlow3) (f32.const 0.125)) (get_local $fSlow2)) (f32.const 1.)))
		(set_local $fSlow5 (f32.div (get_local $fSlow1) (get_local $fSlow4)))
		(set_local $fSlow6 (f32.load (i32.add (get_local $dsp) (i32.const 52))))
		(set_local $fSlow7 (f32.div (f32.const 1.) (get_local $fSlow4)))
		(set_local $fSlow8 (f32.add (f32.div (f32.add (get_local $fSlow3) (f32.const -0.125)) (get_local $fSlow2)) (f32.const 1.)))
		(set_local $fSlow9 (f32.mul (f32.const 2.) (f32.sub (f32.const 1.) (f32.div (f32.const 1.) (call $powf (get_local $fSlow2) (f32.const 2.))))))
		(set_local $fSlow10 (f32.sub (f32.const 0.) (get_local $fSlow3)))
		(set_local $fSlow11 (f32.div (f32.sub (f32.const 1.) (get_local $fSlow1)) (get_local $fSlow4)))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(f32.store (i32.add (get_local $dsp) (i32.const 4)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 32876))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.load (i32.add (get_local $dsp) (i32.const 20))))
				(i32.store (i32.add (get_local $dsp) (i32.const 44)) (i32.add (i32.mul (i32.const 1103515245) (i32.load (i32.add (get_local $dsp) (i32.const 48)))) (i32.const 12345)))
				(f32.store (i32.add (get_local $dsp) (i32.const 56)) (get_local $fSlow6))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (select (f32.const 0.) (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 64))) (f32.add (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 72))) (f32.mul (f32.const 0.00200000009) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 20))) (f32.load (i32.add (get_local $dsp) (i32.const 28)))))) (f32.const 1.))) (i32.gt_s (f32.gt (f32.sub (get_local $fSlow6) (f32.load (i32.add (get_local $dsp) (i32.const 60)))) (f32.const 0.)) (i32.const 0))))
				(set_local $iTemp0 (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 68))) (f32.load (i32.add (get_local $dsp) (i32.const 76)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.sub (f32.mul (f32.const 4.65661287e-10) (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 44)))) (select (select (f32.const 0.) (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 80))) (f32.load (i32.add (get_local $dsp) (i32.const 68)))) (f32.const 1.) (get_local $iTemp0)) (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 68))) (f32.const 0.))) (select (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 80))) (f32.sub (f32.const 0.) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 68))) (f32.load (i32.add (get_local $dsp) (i32.const 76)))))) (f32.const 1.)) (f32.const 0.) (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 68))) (f32.load (i32.add (get_local $dsp) (i32.const 64))))) (get_local $iTemp0)))) (f32.mul (get_local $fSlow7) (f32.add (f32.mul (get_local $fSlow8) (f32.load (i32.add (get_local $dsp) (i32.const 92)))) (f32.mul (get_local $fSlow9) (f32.load (i32.add (get_local $dsp) (i32.const 88))))))))
				(set_local $fTemp1 (f32.add (f32.mul (get_local $fSlow3) (f32.load (i32.add (get_local $dsp) (i32.const 84)))) (f32.mul (get_local $fSlow10) (f32.load (i32.add (get_local $dsp) (i32.const 92))))))
				(set_local $fTemp2 (f32.mul (get_local $fSlow5) (get_local $fTemp1)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 100) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 4)))) (get_local $fTemp2)))
				(f32.store (i32.add (get_local $dsp) (i32.const 32872)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 100) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 32868)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32880)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 32884))) (f32.load (i32.add (get_local $dsp) (i32.const 65664))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32888) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 32880))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 65660)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 32888) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 65656)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 65668)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 65672))) (f32.load (i32.add (get_local $dsp) (i32.const 98452))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65676) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 65668))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 98448)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 65676) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 98444)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 98456)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 98460))) (f32.load (i32.add (get_local $dsp) (i32.const 131240))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 98464) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 98456))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 131236)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 98464) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 131232)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 131244)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 131248))) (f32.load (i32.add (get_local $dsp) (i32.const 164028))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 131252) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 131244))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 164024)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 131252) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 164020)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 164032)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 164036))) (f32.load (i32.add (get_local $dsp) (i32.const 196816))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 164040) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 164032))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 196812)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 164040) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 196808)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 196820)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 196824))) (f32.load (i32.add (get_local $dsp) (i32.const 229604))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 196828) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 196820))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 229600)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 196828) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 229596)))) (i32.const 8191)) (i32.const 2))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 229608)) (f32.mul (f32.const 0.5) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 229612))) (f32.load (i32.add (get_local $dsp) (i32.const 262392))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 229616) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 8191)) (i32.const 2)))) (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 229608))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 262388)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 229616) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 262384)))) (i32.const 8191)) (i32.const 2))))))
				(set_local $fTemp3 (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 32872))) (f32.load (i32.add (get_local $dsp) (i32.const 65660)))) (f32.load (i32.add (get_local $dsp) (i32.const 98448)))) (f32.load (i32.add (get_local $dsp) (i32.const 131236)))) (f32.load (i32.add (get_local $dsp) (i32.const 164024)))) (f32.load (i32.add (get_local $dsp) (i32.const 196812)))) (f32.load (i32.add (get_local $dsp) (i32.const 229600)))) (f32.load (i32.add (get_local $dsp) (i32.const 262388)))) (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 270596))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 262396) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 2047)) (i32.const 2)))) (get_local $fTemp3))
				(f32.store (i32.add (get_local $dsp) (i32.const 270592)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 262396) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 270588)))) (i32.const 2047)) (i32.const 2))))))
				(set_local $fRec7 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp3))))
				(set_local $fTemp4 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 270596))) (f32.add (get_local $fRec7) (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 278800)))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 270600) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 2047)) (i32.const 2)))) (get_local $fTemp4))
				(f32.store (i32.add (get_local $dsp) (i32.const 278796)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 270600) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 278792)))) (i32.const 2047)) (i32.const 2))))))
				(set_local $fRec5 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp4))))
				(set_local $fTemp5 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 278800))) (f32.add (get_local $fRec5) (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 287004)))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 278804) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 2047)) (i32.const 2)))) (get_local $fTemp5))
				(f32.store (i32.add (get_local $dsp) (i32.const 287000)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 278804) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 286996)))) (i32.const 2047)) (i32.const 2))))))
				(set_local $fRec3 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp5))))
				(set_local $fTemp6 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 287004))) (f32.add (get_local $fRec3) (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 291112)))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 287008) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 1023)) (i32.const 2)))) (get_local $fTemp6))
				(f32.store (i32.add (get_local $dsp) (i32.const 291108)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 287008) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.load (i32.add (get_local $dsp) (i32.const 291104)))) (i32.const 1023)) (i32.const 2))))))
				(set_local $fRec1 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp6))))
				(set_local $fTemp7 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 291112))) (f32.add (get_local $fRec1) (f32.mul (get_local $fSlow11) (get_local $fTemp1)))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (get_local $fTemp7))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (get_local $fTemp7))
				(f32.store (i32.add (get_local $dsp) (i32.const 8)) (f32.load (i32.add (get_local $dsp) (i32.const 4))))
				(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.load (i32.add (get_local $dsp) (i32.const 24))))
				(i32.store (i32.add (get_local $dsp) (i32.const 48)) (i32.load (i32.add (get_local $dsp) (i32.const 44))))
				(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.load (i32.add (get_local $dsp) (i32.const 56))))
				(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.load (i32.add (get_local $dsp) (i32.const 68))))
				(f32.store (i32.add (get_local $dsp) (i32.const 92)) (f32.load (i32.add (get_local $dsp) (i32.const 88))))
				(f32.store (i32.add (get_local $dsp) (i32.const 88)) (f32.load (i32.add (get_local $dsp) (i32.const 84))))
				(i32.store (i32.add (get_local $dsp) (i32.const 96)) (i32.add (i32.load (i32.add (get_local $dsp) (i32.const 96))) (i32.const 1)))
				(f32.store (i32.add (get_local $dsp) (i32.const 32876)) (f32.load (i32.add (get_local $dsp) (i32.const 32872))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32884)) (f32.load (i32.add (get_local $dsp) (i32.const 32880))))
				(f32.store (i32.add (get_local $dsp) (i32.const 65664)) (f32.load (i32.add (get_local $dsp) (i32.const 65660))))
				(f32.store (i32.add (get_local $dsp) (i32.const 65672)) (f32.load (i32.add (get_local $dsp) (i32.const 65668))))
				(f32.store (i32.add (get_local $dsp) (i32.const 98452)) (f32.load (i32.add (get_local $dsp) (i32.const 98448))))
				(f32.store (i32.add (get_local $dsp) (i32.const 98460)) (f32.load (i32.add (get_local $dsp) (i32.const 98456))))
				(f32.store (i32.add (get_local $dsp) (i32.const 131240)) (f32.load (i32.add (get_local $dsp) (i32.const 131236))))
				(f32.store (i32.add (get_local $dsp) (i32.const 131248)) (f32.load (i32.add (get_local $dsp) (i32.const 131244))))
				(f32.store (i32.add (get_local $dsp) (i32.const 164028)) (f32.load (i32.add (get_local $dsp) (i32.const 164024))))
				(f32.store (i32.add (get_local $dsp) (i32.const 164036)) (f32.load (i32.add (get_local $dsp) (i32.const 164032))))
				(f32.store (i32.add (get_local $dsp) (i32.const 196816)) (f32.load (i32.add (get_local $dsp) (i32.const 196812))))
				(f32.store (i32.add (get_local $dsp) (i32.const 196824)) (f32.load (i32.add (get_local $dsp) (i32.const 196820))))
				(f32.store (i32.add (get_local $dsp) (i32.const 229604)) (f32.load (i32.add (get_local $dsp) (i32.const 229600))))
				(f32.store (i32.add (get_local $dsp) (i32.const 229612)) (f32.load (i32.add (get_local $dsp) (i32.const 229608))))
				(f32.store (i32.add (get_local $dsp) (i32.const 262392)) (f32.load (i32.add (get_local $dsp) (i32.const 262388))))
				(f32.store (i32.add (get_local $dsp) (i32.const 270596)) (f32.load (i32.add (get_local $dsp) (i32.const 270592))))
				(f32.store (i32.add (get_local $dsp) (i32.const 278800)) (f32.load (i32.add (get_local $dsp) (i32.const 278796))))
				(f32.store (i32.add (get_local $dsp) (i32.const 287004)) (f32.load (i32.add (get_local $dsp) (i32.const 287000))))
				(f32.store (i32.add (get_local $dsp) (i32.const 291112)) (f32.load (i32.add (get_local $dsp) (i32.const 291108))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
