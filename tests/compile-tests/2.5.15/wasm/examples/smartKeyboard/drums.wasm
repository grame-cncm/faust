
(module
	(import $tanf "env" "_tanf" (param f32) (result f32))
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(import $cosf "env" "_cosf" (param f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"drums\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"588\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"envelopes.lib/author\":\"GRAME\"},{\"envelopes.lib/copyright\":\"GRAME\"},{\"envelopes.lib/license\":\"LGPL with exception\"},{\"envelopes.lib/name\":\"Faust Envelope Library\"},{\"envelopes.lib/version\":\"0.0\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"interface\":\"SmartKeyboard{  'Number of Keyboards':'2',  'Keyboard 0 - Number of Keys':'2',  'Keyboard 1 - Number of Keys':'1',  'Keyboard 0 - Static Mode':'1',  'Keyboard 1 - Static Mode':'1',  'Keyboard 0 - Send X':'1',  'Keyboard 0 - Send Y':'1',  'Keyboard 1 - Send X':'1',  'Keyboard 1 - Send Y':'1',  'Keyboard 0 - Piano Keyboard':'0',  'Keyboard 1 - Piano Keyboard':'0',  'Keyboard 0 - Key 0 - Label':'High',  'Keyboard 0 - Key 1 - Label':'Mid',  'Keyboard 1 - Key 0 - Label':'Low' }\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"drums\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"drums\",\"items\":[{\"type\":\"button\",\"label\":\"gate\",\"address\":\"/drums/gate\",\"index\":\"60\"},{\"type\":\"hslider\",\"label\":\"key\",\"address\":\"/drums/key\",\"index\":\"108\",\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"keyboard\",\"address\":\"/drums/keyboard\",\"index\":\"104\",\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"x\",\"address\":\"/drums/x\",\"index\":\"20\",\"init\":\"1\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"y\",\"address\":\"/drums/y\",\"index\":\"24\",\"init\":\"1\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.001\"}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 0))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 2))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 0)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 4)) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 0)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 16)) (f32.div (f32.const 3.14159274) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.mul (f32.const 0.00200000009) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 88)) (f32.div (f32.const 1000.) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 92)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.600000024) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 92))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 100)) (f32.div (f32.const 376.991119) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 112)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 92))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 128)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.569999993) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 132)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 128))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 136)) (f32.div (f32.const 6.28318548) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 140)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 128))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 156)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.540000021) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 160)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 156))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 164)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 156))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 180)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.50999999) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 184)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 180))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 188)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 180))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 204)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.479999989) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 208)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 204))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 212)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 204))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 228)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.449999988) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 232)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 228))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 236)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 228))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 252)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.419999987) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 256)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 252))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 260)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 252))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 276)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.389999986) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 280)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 276))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 284)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 276))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 300)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.360000014) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 304)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 300))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 308)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 300))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 324)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.330000013) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 328)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 324))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 332)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 324))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 348)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.300000012) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 352)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 348))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 356)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 348))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 372)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.270000011) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 376)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 372))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 380)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 372))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 396)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.239999995) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 400)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 396))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 404)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 396))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 420)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.209999993) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 424)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 420))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 428)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 420))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 444)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.180000007) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 448)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 444))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 452)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 444))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 468)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.150000006) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 472)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 468))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 476)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 468))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 492)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.119999997) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 496)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 492))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 500)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 492))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 516)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.0900000036) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 520)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 516))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 524)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 516))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 540)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.0599999987) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 544)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 540))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 548)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 540))) (f32.const 2.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 564)) (call $powf (f32.const 0.00100000005) (f32.div (f32.const 1.) (f32.mul (f32.const 0.0299999993) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 568)) (f32.sub (f32.const 0.) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 564))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 572)) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 564))) (f32.const 2.)))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 104)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 108)) (f32.const 0.))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(local $l10 i32)
		(local $l11 i32)
		(local $l12 i32)
		(local $l13 i32)
		(local $l14 i32)
		(local $l15 i32)
		(local $l16 i32)
		(local $l17 i32)
		(local $l18 i32)
		(local $l19 i32)
		(local $l20 i32)
		(local $l21 i32)
		(local $l22 i32)
		(local $l23 i32)
		(local $l24 i32)
		(local $l25 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l10 (i32.const 0))
		(set_local $l11 (i32.const 0))
		(set_local $l12 (i32.const 0))
		(set_local $l13 (i32.const 0))
		(set_local $l14 (i32.const 0))
		(set_local $l15 (i32.const 0))
		(set_local $l16 (i32.const 0))
		(set_local $l17 (i32.const 0))
		(set_local $l18 (i32.const 0))
		(set_local $l19 (i32.const 0))
		(set_local $l20 (i32.const 0))
		(set_local $l21 (i32.const 0))
		(set_local $l22 (i32.const 0))
		(set_local $l23 (i32.const 0))
		(set_local $l24 (i32.const 0))
		(set_local $l25 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8) (i32.shl (get_local $l0) (i32.const 2)))) (f32.const 0.))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 2)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 28) (i32.shl (get_local $l1) (i32.const 2)))) (i32.const 0))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 36) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 3)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 48) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 3)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 64) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 76) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 2)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 116) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 3)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 144) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 3)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 168) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 3)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 192) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 3)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		(set_local $l10 (i32.const 0))
		(loop $for-in-l10 
			(block $for-out-l10 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 216) (i32.shl (get_local $l10) (i32.const 2)))) (f32.const 0.))
				(set_local $l10 (i32.add (get_local $l10) (i32.const 1)))
				(if (i32.lt_s (get_local $l10) (i32.const 3)) (br $for-in-l10) (br $for-out-l10))
				
			)
		)
		(set_local $l11 (i32.const 0))
		(loop $for-in-l11 
			(block $for-out-l11 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 240) (i32.shl (get_local $l11) (i32.const 2)))) (f32.const 0.))
				(set_local $l11 (i32.add (get_local $l11) (i32.const 1)))
				(if (i32.lt_s (get_local $l11) (i32.const 3)) (br $for-in-l11) (br $for-out-l11))
				
			)
		)
		(set_local $l12 (i32.const 0))
		(loop $for-in-l12 
			(block $for-out-l12 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 264) (i32.shl (get_local $l12) (i32.const 2)))) (f32.const 0.))
				(set_local $l12 (i32.add (get_local $l12) (i32.const 1)))
				(if (i32.lt_s (get_local $l12) (i32.const 3)) (br $for-in-l12) (br $for-out-l12))
				
			)
		)
		(set_local $l13 (i32.const 0))
		(loop $for-in-l13 
			(block $for-out-l13 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 288) (i32.shl (get_local $l13) (i32.const 2)))) (f32.const 0.))
				(set_local $l13 (i32.add (get_local $l13) (i32.const 1)))
				(if (i32.lt_s (get_local $l13) (i32.const 3)) (br $for-in-l13) (br $for-out-l13))
				
			)
		)
		(set_local $l14 (i32.const 0))
		(loop $for-in-l14 
			(block $for-out-l14 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 312) (i32.shl (get_local $l14) (i32.const 2)))) (f32.const 0.))
				(set_local $l14 (i32.add (get_local $l14) (i32.const 1)))
				(if (i32.lt_s (get_local $l14) (i32.const 3)) (br $for-in-l14) (br $for-out-l14))
				
			)
		)
		(set_local $l15 (i32.const 0))
		(loop $for-in-l15 
			(block $for-out-l15 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 336) (i32.shl (get_local $l15) (i32.const 2)))) (f32.const 0.))
				(set_local $l15 (i32.add (get_local $l15) (i32.const 1)))
				(if (i32.lt_s (get_local $l15) (i32.const 3)) (br $for-in-l15) (br $for-out-l15))
				
			)
		)
		(set_local $l16 (i32.const 0))
		(loop $for-in-l16 
			(block $for-out-l16 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 360) (i32.shl (get_local $l16) (i32.const 2)))) (f32.const 0.))
				(set_local $l16 (i32.add (get_local $l16) (i32.const 1)))
				(if (i32.lt_s (get_local $l16) (i32.const 3)) (br $for-in-l16) (br $for-out-l16))
				
			)
		)
		(set_local $l17 (i32.const 0))
		(loop $for-in-l17 
			(block $for-out-l17 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 384) (i32.shl (get_local $l17) (i32.const 2)))) (f32.const 0.))
				(set_local $l17 (i32.add (get_local $l17) (i32.const 1)))
				(if (i32.lt_s (get_local $l17) (i32.const 3)) (br $for-in-l17) (br $for-out-l17))
				
			)
		)
		(set_local $l18 (i32.const 0))
		(loop $for-in-l18 
			(block $for-out-l18 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 408) (i32.shl (get_local $l18) (i32.const 2)))) (f32.const 0.))
				(set_local $l18 (i32.add (get_local $l18) (i32.const 1)))
				(if (i32.lt_s (get_local $l18) (i32.const 3)) (br $for-in-l18) (br $for-out-l18))
				
			)
		)
		(set_local $l19 (i32.const 0))
		(loop $for-in-l19 
			(block $for-out-l19 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 432) (i32.shl (get_local $l19) (i32.const 2)))) (f32.const 0.))
				(set_local $l19 (i32.add (get_local $l19) (i32.const 1)))
				(if (i32.lt_s (get_local $l19) (i32.const 3)) (br $for-in-l19) (br $for-out-l19))
				
			)
		)
		(set_local $l20 (i32.const 0))
		(loop $for-in-l20 
			(block $for-out-l20 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 456) (i32.shl (get_local $l20) (i32.const 2)))) (f32.const 0.))
				(set_local $l20 (i32.add (get_local $l20) (i32.const 1)))
				(if (i32.lt_s (get_local $l20) (i32.const 3)) (br $for-in-l20) (br $for-out-l20))
				
			)
		)
		(set_local $l21 (i32.const 0))
		(loop $for-in-l21 
			(block $for-out-l21 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 480) (i32.shl (get_local $l21) (i32.const 2)))) (f32.const 0.))
				(set_local $l21 (i32.add (get_local $l21) (i32.const 1)))
				(if (i32.lt_s (get_local $l21) (i32.const 3)) (br $for-in-l21) (br $for-out-l21))
				
			)
		)
		(set_local $l22 (i32.const 0))
		(loop $for-in-l22 
			(block $for-out-l22 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 504) (i32.shl (get_local $l22) (i32.const 2)))) (f32.const 0.))
				(set_local $l22 (i32.add (get_local $l22) (i32.const 1)))
				(if (i32.lt_s (get_local $l22) (i32.const 3)) (br $for-in-l22) (br $for-out-l22))
				
			)
		)
		(set_local $l23 (i32.const 0))
		(loop $for-in-l23 
			(block $for-out-l23 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 528) (i32.shl (get_local $l23) (i32.const 2)))) (f32.const 0.))
				(set_local $l23 (i32.add (get_local $l23) (i32.const 1)))
				(if (i32.lt_s (get_local $l23) (i32.const 3)) (br $for-in-l23) (br $for-out-l23))
				
			)
		)
		(set_local $l24 (i32.const 0))
		(loop $for-in-l24 
			(block $for-out-l24 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 552) (i32.shl (get_local $l24) (i32.const 2)))) (f32.const 0.))
				(set_local $l24 (i32.add (get_local $l24) (i32.const 1)))
				(if (i32.lt_s (get_local $l24) (i32.const 3)) (br $for-in-l24) (br $for-out-l24))
				
			)
		)
		(set_local $l25 (i32.const 0))
		(loop $for-in-l25 
			(block $for-out-l25 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 576) (i32.shl (get_local $l25) (i32.const 2)))) (f32.const 0.))
				(set_local $l25 (i32.add (get_local $l25) (i32.const 1)))
				(if (i32.lt_s (get_local $l25) (i32.const 3)) (br $for-in-l25) (br $for-out-l25))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 0))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $fSlow3 f32)
		(local $fSlow4 f32)
		(local $fSlow5 f32)
		(local $fSlow6 f32)
		(local $fSlow7 f32)
		(local $fSlow8 f32)
		(local $fSlow9 f32)
		(local $fSlow10 f32)
		(local $fSlow11 f32)
		(local $fSlow12 f32)
		(local $fSlow13 f32)
		(local $fSlow14 f32)
		(local $fSlow15 f32)
		(local $iSlow16 i32)
		(local $fSlow17 f32)
		(local $iSlow18 i32)
		(local $fSlow19 f32)
		(local $fSlow20 f32)
		(local $fSlow21 f32)
		(local $fSlow22 f32)
		(local $fSlow23 f32)
		(local $fSlow24 f32)
		(local $fSlow25 f32)
		(local $fSlow26 f32)
		(local $fSlow27 f32)
		(local $fSlow28 f32)
		(local $fSlow29 f32)
		(local $fSlow30 f32)
		(local $fSlow31 f32)
		(local $fSlow32 f32)
		(local $fSlow33 f32)
		(local $fSlow34 f32)
		(local $fSlow35 f32)
		(local $fSlow36 f32)
		(local $fSlow37 f32)
		(local $i i32)
		(local $iTemp0 i32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $fSlow3 (f32.const 0.))
		(set_local $fSlow4 (f32.const 0.))
		(set_local $fSlow5 (f32.const 0.))
		(set_local $fSlow6 (f32.const 0.))
		(set_local $fSlow7 (f32.const 0.))
		(set_local $fSlow8 (f32.const 0.))
		(set_local $fSlow9 (f32.const 0.))
		(set_local $fSlow10 (f32.const 0.))
		(set_local $fSlow11 (f32.const 0.))
		(set_local $fSlow12 (f32.const 0.))
		(set_local $fSlow13 (f32.const 0.))
		(set_local $fSlow14 (f32.const 0.))
		(set_local $fSlow15 (f32.const 0.))
		(set_local $iSlow16 (i32.const 0))
		(set_local $fSlow17 (f32.const 0.))
		(set_local $iSlow18 (i32.const 0))
		(set_local $fSlow19 (f32.const 0.))
		(set_local $fSlow20 (f32.const 0.))
		(set_local $fSlow21 (f32.const 0.))
		(set_local $fSlow22 (f32.const 0.))
		(set_local $fSlow23 (f32.const 0.))
		(set_local $fSlow24 (f32.const 0.))
		(set_local $fSlow25 (f32.const 0.))
		(set_local $fSlow26 (f32.const 0.))
		(set_local $fSlow27 (f32.const 0.))
		(set_local $fSlow28 (f32.const 0.))
		(set_local $fSlow29 (f32.const 0.))
		(set_local $fSlow30 (f32.const 0.))
		(set_local $fSlow31 (f32.const 0.))
		(set_local $fSlow32 (f32.const 0.))
		(set_local $fSlow33 (f32.const 0.))
		(set_local $fSlow34 (f32.const 0.))
		(set_local $fSlow35 (f32.const 0.))
		(set_local $fSlow36 (f32.const 0.))
		(set_local $fSlow37 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $iTemp0 (i32.const 0))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $fSlow0 (f32.min (f32.abs (f32.add (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.const -1.))) (f32.abs (f32.add (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 24)))) (f32.const -1.)))))
		(set_local $fSlow1 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 16))) (f32.add (f32.mul (f32.const 15000.) (get_local $fSlow0)) (f32.const 500.)))))
		(set_local $fSlow2 (f32.div (f32.const 1.) (get_local $fSlow1)))
		(set_local $fSlow3 (f32.add (f32.div (f32.add (get_local $fSlow2) (f32.const 1.41421354)) (get_local $fSlow1)) (f32.const 1.)))
		(set_local $fSlow4 (f32.div (f32.const 2.) (get_local $fSlow3)))
		(set_local $fSlow5 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 16))) (f32.add (f32.mul (f32.const 500.) (get_local $fSlow0)) (f32.const 40.)))))
		(set_local $fSlow6 (f32.div (f32.const 1.) (get_local $fSlow5)))
		(set_local $fSlow7 (f32.div (f32.const 1.) (f32.add (f32.div (f32.add (get_local $fSlow6) (f32.const 1.41421354)) (get_local $fSlow5)) (f32.const 1.))))
		(set_local $fSlow8 (f32.div (f32.const 1.) (call $powf (get_local $fSlow5) (f32.const 2.))))
		(set_local $fSlow9 (f32.add (f32.div (f32.add (get_local $fSlow6) (f32.const -1.41421354)) (get_local $fSlow5)) (f32.const 1.)))
		(set_local $fSlow10 (f32.mul (f32.const 2.) (f32.sub (f32.const 1.) (get_local $fSlow8))))
		(set_local $fSlow11 (f32.mul (f32.const 2.) (f32.sub (f32.const 0.) (get_local $fSlow8))))
		(set_local $fSlow12 (f32.div (f32.const 1.) (get_local $fSlow3)))
		(set_local $fSlow13 (f32.mul (f32.const 2.) (f32.sub (f32.const 1.) (f32.div (f32.const 1.) (call $powf (get_local $fSlow1) (f32.const 2.))))))
		(set_local $fSlow14 (f32.add (f32.div (f32.add (get_local $fSlow2) (f32.const -1.41421354)) (get_local $fSlow1)) (f32.const 1.)))
		(set_local $fSlow15 (f32.load (i32.add (get_local $dsp) (i32.const 60))))
		(set_local $iSlow16 (i32.add (i32.mul (i32.const 2) (i32.sub (i32.const 1) (i32.trunc_s/f32 (f32.load (i32.add (get_local $dsp) (i32.const 104)))))) (i32.sub (i32.const 1) (i32.trunc_s/f32 (f32.load (i32.add (get_local $dsp) (i32.const 108)))))))
		(set_local $fSlow17 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 96))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 100))) (f32.convert_s/i32 (get_local $iSlow16))))))
		(set_local $iSlow18 (i32.mul (i32.const 60) (get_local $iSlow16)))
		(set_local $fSlow19 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 132))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 200)))))))
		(set_local $fSlow20 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 160))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 400)))))))
		(set_local $fSlow21 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 184))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 600)))))))
		(set_local $fSlow22 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 208))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 800)))))))
		(set_local $fSlow23 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 232))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 1000)))))))
		(set_local $fSlow24 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 256))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 1200)))))))
		(set_local $fSlow25 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 280))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 1400)))))))
		(set_local $fSlow26 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 304))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 1600)))))))
		(set_local $fSlow27 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 328))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 1800)))))))
		(set_local $fSlow28 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 352))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 2000)))))))
		(set_local $fSlow29 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 376))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 2200)))))))
		(set_local $fSlow30 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 400))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 2400)))))))
		(set_local $fSlow31 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 424))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 2600)))))))
		(set_local $fSlow32 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 448))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 2800)))))))
		(set_local $fSlow33 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 472))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 3000)))))))
		(set_local $fSlow34 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 496))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 3200)))))))
		(set_local $fSlow35 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 520))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 3400)))))))
		(set_local $fSlow36 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 544))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 3600)))))))
		(set_local $fSlow37 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 568))) (call $cosf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 136))) (f32.convert_s/i32 (i32.add (get_local $iSlow18) (i32.const 3800)))))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(f32.store (i32.add (get_local $dsp) (i32.const 8)) (f32.load (i32.add (get_local $dsp) (i32.const 4))))
				(i32.store (i32.add (get_local $dsp) (i32.const 28)) (i32.add (i32.mul (i32.const 1103515245) (i32.load (i32.add (get_local $dsp) (i32.const 32)))) (i32.const 12345)))
				(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.sub (f32.mul (f32.const 4.65661287e-10) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 28))))) (f32.mul (get_local $fSlow7) (f32.add (f32.mul (get_local $fSlow9) (f32.load (i32.add (get_local $dsp) (i32.const 44)))) (f32.mul (get_local $fSlow10) (f32.load (i32.add (get_local $dsp) (i32.const 40))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.sub (f32.mul (get_local $fSlow7) (f32.add (f32.add (f32.mul (get_local $fSlow8) (f32.load (i32.add (get_local $dsp) (i32.const 36)))) (f32.mul (get_local $fSlow11) (f32.load (i32.add (get_local $dsp) (i32.const 40))))) (f32.mul (get_local $fSlow8) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))) (f32.mul (get_local $fSlow12) (f32.add (f32.mul (get_local $fSlow13) (f32.load (i32.add (get_local $dsp) (i32.const 52)))) (f32.mul (get_local $fSlow14) (f32.load (i32.add (get_local $dsp) (i32.const 56))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 64)) (get_local $fSlow15))
				(f32.store (i32.add (get_local $dsp) (i32.const 76)) (select (f32.const 0.) (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 72))) (f32.add (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 80))) (f32.mul (f32.const 0.00200000009) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 12)))))) (f32.const 1.))) (i32.gt_s (f32.gt (f32.sub (get_local $fSlow15) (f32.load (i32.add (get_local $dsp) (i32.const 68)))) (f32.const 0.)) (i32.const 0))))
				(set_local $iTemp0 (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 76))) (f32.load (i32.add (get_local $dsp) (i32.const 84)))))
				(set_local $fTemp1 (f32.mul (get_local $fSlow4) (f32.mul (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 56))) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 52)))))) (select (select (f32.const 0.) (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 88))) (f32.load (i32.add (get_local $dsp) (i32.const 76)))) (f32.const 1.) (get_local $iTemp0)) (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 76))) (f32.const 0.))) (select (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 88))) (f32.sub (f32.const 0.) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 76))) (f32.load (i32.add (get_local $dsp) (i32.const 84)))))) (f32.const 1.)) (f32.const 0.) (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 76))) (f32.load (i32.add (get_local $dsp) (i32.const 72))))) (get_local $iTemp0)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 116)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow17) (f32.load (i32.add (get_local $dsp) (i32.const 120)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 112))) (f32.load (i32.add (get_local $dsp) (i32.const 124)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 144)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow19) (f32.load (i32.add (get_local $dsp) (i32.const 148)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 140))) (f32.load (i32.add (get_local $dsp) (i32.const 152)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 168)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow20) (f32.load (i32.add (get_local $dsp) (i32.const 172)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 164))) (f32.load (i32.add (get_local $dsp) (i32.const 176)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 192)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow21) (f32.load (i32.add (get_local $dsp) (i32.const 196)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 188))) (f32.load (i32.add (get_local $dsp) (i32.const 200)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 216)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow22) (f32.load (i32.add (get_local $dsp) (i32.const 220)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 212))) (f32.load (i32.add (get_local $dsp) (i32.const 224)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 240)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow23) (f32.load (i32.add (get_local $dsp) (i32.const 244)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 236))) (f32.load (i32.add (get_local $dsp) (i32.const 248)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 264)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow24) (f32.load (i32.add (get_local $dsp) (i32.const 268)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 260))) (f32.load (i32.add (get_local $dsp) (i32.const 272)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 288)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow25) (f32.load (i32.add (get_local $dsp) (i32.const 292)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 284))) (f32.load (i32.add (get_local $dsp) (i32.const 296)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 312)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow26) (f32.load (i32.add (get_local $dsp) (i32.const 316)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 308))) (f32.load (i32.add (get_local $dsp) (i32.const 320)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 336)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow27) (f32.load (i32.add (get_local $dsp) (i32.const 340)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 332))) (f32.load (i32.add (get_local $dsp) (i32.const 344)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 360)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow28) (f32.load (i32.add (get_local $dsp) (i32.const 364)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 356))) (f32.load (i32.add (get_local $dsp) (i32.const 368)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 384)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow29) (f32.load (i32.add (get_local $dsp) (i32.const 388)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 380))) (f32.load (i32.add (get_local $dsp) (i32.const 392)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 408)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow30) (f32.load (i32.add (get_local $dsp) (i32.const 412)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 404))) (f32.load (i32.add (get_local $dsp) (i32.const 416)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 432)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow31) (f32.load (i32.add (get_local $dsp) (i32.const 436)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 428))) (f32.load (i32.add (get_local $dsp) (i32.const 440)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 456)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow32) (f32.load (i32.add (get_local $dsp) (i32.const 460)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 452))) (f32.load (i32.add (get_local $dsp) (i32.const 464)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 480)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow33) (f32.load (i32.add (get_local $dsp) (i32.const 484)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 476))) (f32.load (i32.add (get_local $dsp) (i32.const 488)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 504)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow34) (f32.load (i32.add (get_local $dsp) (i32.const 508)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 500))) (f32.load (i32.add (get_local $dsp) (i32.const 512)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 528)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow35) (f32.load (i32.add (get_local $dsp) (i32.const 532)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 524))) (f32.load (i32.add (get_local $dsp) (i32.const 536)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 552)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow36) (f32.load (i32.add (get_local $dsp) (i32.const 556)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 548))) (f32.load (i32.add (get_local $dsp) (i32.const 560)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 576)) (f32.sub (get_local $fTemp1) (f32.add (f32.mul (get_local $fSlow37) (f32.load (i32.add (get_local $dsp) (i32.const 580)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 572))) (f32.load (i32.add (get_local $dsp) (i32.const 584)))))))
				(set_local $fTemp2 (f32.mul (f32.const 0.0500000007) (f32.sub (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 116))) (f32.mul (f32.const 0.25) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 144))) (f32.load (i32.add (get_local $dsp) (i32.const 152)))))) (f32.mul (f32.const 0.111111112) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 168))) (f32.load (i32.add (get_local $dsp) (i32.const 176)))))) (f32.mul (f32.const 0.0625) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 192))) (f32.load (i32.add (get_local $dsp) (i32.const 200)))))) (f32.mul (f32.const 0.0399999991) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 216))) (f32.load (i32.add (get_local $dsp) (i32.const 224)))))) (f32.mul (f32.const 0.027777778) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 240))) (f32.load (i32.add (get_local $dsp) (i32.const 248)))))) (f32.mul (f32.const 0.0204081628) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 264))) (f32.load (i32.add (get_local $dsp) (i32.const 272)))))) (f32.mul (f32.const 0.015625) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 288))) (f32.load (i32.add (get_local $dsp) (i32.const 296)))))) (f32.mul (f32.const 0.0123456791) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 312))) (f32.load (i32.add (get_local $dsp) (i32.const 320)))))) (f32.mul (f32.const 0.00999999978) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 336))) (f32.load (i32.add (get_local $dsp) (i32.const 344)))))) (f32.mul (f32.const 0.00826446246) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 360))) (f32.load (i32.add (get_local $dsp) (i32.const 368)))))) (f32.mul (f32.const 0.0069444445) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 384))) (f32.load (i32.add (get_local $dsp) (i32.const 392)))))) (f32.mul (f32.const 0.00591715984) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 408))) (f32.load (i32.add (get_local $dsp) (i32.const 416)))))) (f32.mul (f32.const 0.00510204071) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 432))) (f32.load (i32.add (get_local $dsp) (i32.const 440)))))) (f32.mul (f32.const 0.00444444455) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 456))) (f32.load (i32.add (get_local $dsp) (i32.const 464)))))) (f32.mul (f32.const 0.00390625) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 480))) (f32.load (i32.add (get_local $dsp) (i32.const 488)))))) (f32.mul (f32.const 0.00346020772) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 504))) (f32.load (i32.add (get_local $dsp) (i32.const 512)))))) (f32.mul (f32.const 0.00308641978) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 528))) (f32.load (i32.add (get_local $dsp) (i32.const 536)))))) (f32.mul (f32.const 0.00277008303) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 552))) (f32.load (i32.add (get_local $dsp) (i32.const 560)))))) (f32.mul (f32.const 0.00249999994) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 576))) (f32.load (i32.add (get_local $dsp) (i32.const 584)))))) (f32.load (i32.add (get_local $dsp) (i32.const 124))))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (get_local $fTemp2))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (get_local $fTemp2))
				(f32.store (i32.add (get_local $dsp) (i32.const 12)) (f32.load (i32.add (get_local $dsp) (i32.const 8))))
				(i32.store (i32.add (get_local $dsp) (i32.const 32)) (i32.load (i32.add (get_local $dsp) (i32.const 28))))
				(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.load (i32.add (get_local $dsp) (i32.const 40))))
				(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.load (i32.add (get_local $dsp) (i32.const 36))))
				(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.load (i32.add (get_local $dsp) (i32.const 52))))
				(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.load (i32.add (get_local $dsp) (i32.const 48))))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.load (i32.add (get_local $dsp) (i32.const 64))))
				(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.load (i32.add (get_local $dsp) (i32.const 76))))
				(f32.store (i32.add (get_local $dsp) (i32.const 124)) (f32.load (i32.add (get_local $dsp) (i32.const 120))))
				(f32.store (i32.add (get_local $dsp) (i32.const 120)) (f32.load (i32.add (get_local $dsp) (i32.const 116))))
				(f32.store (i32.add (get_local $dsp) (i32.const 152)) (f32.load (i32.add (get_local $dsp) (i32.const 148))))
				(f32.store (i32.add (get_local $dsp) (i32.const 148)) (f32.load (i32.add (get_local $dsp) (i32.const 144))))
				(f32.store (i32.add (get_local $dsp) (i32.const 176)) (f32.load (i32.add (get_local $dsp) (i32.const 172))))
				(f32.store (i32.add (get_local $dsp) (i32.const 172)) (f32.load (i32.add (get_local $dsp) (i32.const 168))))
				(f32.store (i32.add (get_local $dsp) (i32.const 200)) (f32.load (i32.add (get_local $dsp) (i32.const 196))))
				(f32.store (i32.add (get_local $dsp) (i32.const 196)) (f32.load (i32.add (get_local $dsp) (i32.const 192))))
				(f32.store (i32.add (get_local $dsp) (i32.const 224)) (f32.load (i32.add (get_local $dsp) (i32.const 220))))
				(f32.store (i32.add (get_local $dsp) (i32.const 220)) (f32.load (i32.add (get_local $dsp) (i32.const 216))))
				(f32.store (i32.add (get_local $dsp) (i32.const 248)) (f32.load (i32.add (get_local $dsp) (i32.const 244))))
				(f32.store (i32.add (get_local $dsp) (i32.const 244)) (f32.load (i32.add (get_local $dsp) (i32.const 240))))
				(f32.store (i32.add (get_local $dsp) (i32.const 272)) (f32.load (i32.add (get_local $dsp) (i32.const 268))))
				(f32.store (i32.add (get_local $dsp) (i32.const 268)) (f32.load (i32.add (get_local $dsp) (i32.const 264))))
				(f32.store (i32.add (get_local $dsp) (i32.const 296)) (f32.load (i32.add (get_local $dsp) (i32.const 292))))
				(f32.store (i32.add (get_local $dsp) (i32.const 292)) (f32.load (i32.add (get_local $dsp) (i32.const 288))))
				(f32.store (i32.add (get_local $dsp) (i32.const 320)) (f32.load (i32.add (get_local $dsp) (i32.const 316))))
				(f32.store (i32.add (get_local $dsp) (i32.const 316)) (f32.load (i32.add (get_local $dsp) (i32.const 312))))
				(f32.store (i32.add (get_local $dsp) (i32.const 344)) (f32.load (i32.add (get_local $dsp) (i32.const 340))))
				(f32.store (i32.add (get_local $dsp) (i32.const 340)) (f32.load (i32.add (get_local $dsp) (i32.const 336))))
				(f32.store (i32.add (get_local $dsp) (i32.const 368)) (f32.load (i32.add (get_local $dsp) (i32.const 364))))
				(f32.store (i32.add (get_local $dsp) (i32.const 364)) (f32.load (i32.add (get_local $dsp) (i32.const 360))))
				(f32.store (i32.add (get_local $dsp) (i32.const 392)) (f32.load (i32.add (get_local $dsp) (i32.const 388))))
				(f32.store (i32.add (get_local $dsp) (i32.const 388)) (f32.load (i32.add (get_local $dsp) (i32.const 384))))
				(f32.store (i32.add (get_local $dsp) (i32.const 416)) (f32.load (i32.add (get_local $dsp) (i32.const 412))))
				(f32.store (i32.add (get_local $dsp) (i32.const 412)) (f32.load (i32.add (get_local $dsp) (i32.const 408))))
				(f32.store (i32.add (get_local $dsp) (i32.const 440)) (f32.load (i32.add (get_local $dsp) (i32.const 436))))
				(f32.store (i32.add (get_local $dsp) (i32.const 436)) (f32.load (i32.add (get_local $dsp) (i32.const 432))))
				(f32.store (i32.add (get_local $dsp) (i32.const 464)) (f32.load (i32.add (get_local $dsp) (i32.const 460))))
				(f32.store (i32.add (get_local $dsp) (i32.const 460)) (f32.load (i32.add (get_local $dsp) (i32.const 456))))
				(f32.store (i32.add (get_local $dsp) (i32.const 488)) (f32.load (i32.add (get_local $dsp) (i32.const 484))))
				(f32.store (i32.add (get_local $dsp) (i32.const 484)) (f32.load (i32.add (get_local $dsp) (i32.const 480))))
				(f32.store (i32.add (get_local $dsp) (i32.const 512)) (f32.load (i32.add (get_local $dsp) (i32.const 508))))
				(f32.store (i32.add (get_local $dsp) (i32.const 508)) (f32.load (i32.add (get_local $dsp) (i32.const 504))))
				(f32.store (i32.add (get_local $dsp) (i32.const 536)) (f32.load (i32.add (get_local $dsp) (i32.const 532))))
				(f32.store (i32.add (get_local $dsp) (i32.const 532)) (f32.load (i32.add (get_local $dsp) (i32.const 528))))
				(f32.store (i32.add (get_local $dsp) (i32.const 560)) (f32.load (i32.add (get_local $dsp) (i32.const 556))))
				(f32.store (i32.add (get_local $dsp) (i32.const 556)) (f32.load (i32.add (get_local $dsp) (i32.const 552))))
				(f32.store (i32.add (get_local $dsp) (i32.const 584)) (f32.load (i32.add (get_local $dsp) (i32.const 580))))
				(f32.store (i32.add (get_local $dsp) (i32.const 580)) (f32.load (i32.add (get_local $dsp) (i32.const 576))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
