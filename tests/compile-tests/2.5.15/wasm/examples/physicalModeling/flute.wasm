
(module
	(import $sinf "env" "_sinf" (param f32) (result f32))
	(import $cosf "env" "_cosf" (param f32) (result f32))
	(import $tanf "env" "_tanf" (param f32) (result f32))
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"Flute\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"32976\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"copyright\":\"(c)Romain Michon, CCRMA (Stanford University), GRAME\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"description\":\"Simple flute physical model with physical parameters.\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"MIT\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Flute\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"hgroup\",\"label\":\"flute\",\"items\":[{\"type\":\"vgroup\",\"label\":\"blower\",\"items\":[{\"type\":\"hslider\",\"label\":\"pressure\",\"address\":\"/flute/blower/pressure\",\"index\":\"64\",\"meta\":[{\"0\":\"\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"breathGain\",\"address\":\"/flute/blower/breathGain\",\"index\":\"76\",\"meta\":[{\"1\":\"\"}],\"init\":\"0.1\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"breathCutoff\",\"address\":\"/flute/blower/breathCutoff\",\"index\":\"84\",\"meta\":[{\"2\":\"\"}],\"init\":\"2000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"vibratoFreq\",\"address\":\"/flute/blower/vibratoFreq\",\"index\":\"44\",\"meta\":[{\"3\":\"\"}],\"init\":\"5\",\"min\":\"0.1\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"vibratoGain\",\"address\":\"/flute/blower/vibratoGain\",\"index\":\"28\",\"meta\":[{\"4\":\"\"}],\"init\":\"0.25\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"vgroup\",\"label\":\"fluteModel\",\"items\":[{\"type\":\"hslider\",\"label\":\"tubeLength\",\"address\":\"/flute/fluteModel/tubeLength\",\"index\":\"8320\",\"meta\":[{\"0\":\"\"}],\"init\":\"0.8\",\"min\":\"0.01\",\"max\":\"3\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"mouthPosition\",\"address\":\"/flute/fluteModel/mouthPosition\",\"index\":\"8332\",\"meta\":[{\"1\":\"\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"outGain\",\"address\":\"/flute/fluteModel/outGain\",\"index\":\"0\",\"meta\":[{\"2\":\"\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 0))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 2))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 32)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 32)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.div (f32.const 6.28318548) (f32.load (i32.add (get_local $dsp) (i32.const 36)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.div (f32.const 3.14159274) (f32.load (i32.add (get_local $dsp) (i32.const 36)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 8312)) (f32.mul (f32.const 0.00882352982) (f32.load (i32.add (get_local $dsp) (i32.const 36)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 8316)) (f32.mul (f32.const 0.00147058826) (f32.load (i32.add (get_local $dsp) (i32.const 36)))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 0)) (f32.const 0.5))
		(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.const 0.25))
		(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.const 5.))
		(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.const 0.100000001))
		(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.const 2000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 8320)) (f32.const 0.800000012))
		(f32.store (i32.add (get_local $dsp) (i32.const 8332)) (f32.const 0.5))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(local $l10 i32)
		(local $l11 i32)
		(local $l12 i32)
		(local $l13 i32)
		(local $l14 i32)
		(local $l15 i32)
		(local $l16 i32)
		(local $l17 i32)
		(local $l18 i32)
		(local $l19 i32)
		(local $l20 i32)
		(local $l21 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l10 (i32.const 0))
		(set_local $l11 (i32.const 0))
		(set_local $l12 (i32.const 0))
		(set_local $l13 (i32.const 0))
		(set_local $l14 (i32.const 0))
		(set_local $l15 (i32.const 0))
		(set_local $l16 (i32.const 0))
		(set_local $l17 (i32.const 0))
		(set_local $l18 (i32.const 0))
		(set_local $l19 (i32.const 0))
		(set_local $l20 (i32.const 0))
		(set_local $l21 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 4) (i32.shl (get_local $l0) (i32.const 2)))) (i32.const 0))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 2)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 12) (i32.shl (get_local $l1) (i32.const 2)))) (i32.const 0))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 20) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 2)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 48) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 2)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 56) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 68) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 2)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 88) (i32.shl (get_local $l6) (i32.const 2)))) (i32.const 0))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 2)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 96) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 3)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 108) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 2)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(i32.store (i32.add (get_local $dsp) (i32.const 116)) (i32.const 0))
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 2048)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		(set_local $l10 (i32.const 0))
		(loop $for-in-l10 
			(block $for-out-l10 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8324) (i32.shl (get_local $l10) (i32.const 2)))) (f32.const 0.))
				(set_local $l10 (i32.add (get_local $l10) (i32.const 1)))
				(if (i32.lt_s (get_local $l10) (i32.const 2)) (br $for-in-l10) (br $for-out-l10))
				
			)
		)
		(set_local $l11 (i32.const 0))
		(loop $for-in-l11 
			(block $for-out-l11 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8336) (i32.shl (get_local $l11) (i32.const 2)))) (f32.const 0.))
				(set_local $l11 (i32.add (get_local $l11) (i32.const 1)))
				(if (i32.lt_s (get_local $l11) (i32.const 2)) (br $for-in-l11) (br $for-out-l11))
				
			)
		)
		(set_local $l12 (i32.const 0))
		(loop $for-in-l12 
			(block $for-out-l12 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8344) (i32.shl (get_local $l12) (i32.const 2)))) (f32.const 0.))
				(set_local $l12 (i32.add (get_local $l12) (i32.const 1)))
				(if (i32.lt_s (get_local $l12) (i32.const 2)) (br $for-in-l12) (br $for-out-l12))
				
			)
		)
		(set_local $l13 (i32.const 0))
		(loop $for-in-l13 
			(block $for-out-l13 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (get_local $l13) (i32.const 2)))) (f32.const 0.))
				(set_local $l13 (i32.add (get_local $l13) (i32.const 1)))
				(if (i32.lt_s (get_local $l13) (i32.const 2048)) (br $for-in-l13) (br $for-out-l13))
				
			)
		)
		(set_local $l14 (i32.const 0))
		(loop $for-in-l14 
			(block $for-out-l14 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16544) (i32.shl (get_local $l14) (i32.const 2)))) (f32.const 0.))
				(set_local $l14 (i32.add (get_local $l14) (i32.const 1)))
				(if (i32.lt_s (get_local $l14) (i32.const 2)) (br $for-in-l14) (br $for-out-l14))
				
			)
		)
		(set_local $l15 (i32.const 0))
		(loop $for-in-l15 
			(block $for-out-l15 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16552) (i32.shl (get_local $l15) (i32.const 2)))) (f32.const 0.))
				(set_local $l15 (i32.add (get_local $l15) (i32.const 1)))
				(if (i32.lt_s (get_local $l15) (i32.const 2)) (br $for-in-l15) (br $for-out-l15))
				
			)
		)
		(set_local $l16 (i32.const 0))
		(loop $for-in-l16 
			(block $for-out-l16 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (get_local $l16) (i32.const 2)))) (f32.const 0.))
				(set_local $l16 (i32.add (get_local $l16) (i32.const 1)))
				(if (i32.lt_s (get_local $l16) (i32.const 2048)) (br $for-in-l16) (br $for-out-l16))
				
			)
		)
		(set_local $l17 (i32.const 0))
		(loop $for-in-l17 
			(block $for-out-l17 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24752) (i32.shl (get_local $l17) (i32.const 2)))) (f32.const 0.))
				(set_local $l17 (i32.add (get_local $l17) (i32.const 1)))
				(if (i32.lt_s (get_local $l17) (i32.const 2)) (br $for-in-l17) (br $for-out-l17))
				
			)
		)
		(set_local $l18 (i32.const 0))
		(loop $for-in-l18 
			(block $for-out-l18 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (get_local $l18) (i32.const 2)))) (f32.const 0.))
				(set_local $l18 (i32.add (get_local $l18) (i32.const 1)))
				(if (i32.lt_s (get_local $l18) (i32.const 2048)) (br $for-in-l18) (br $for-out-l18))
				
			)
		)
		(set_local $l19 (i32.const 0))
		(loop $for-in-l19 
			(block $for-out-l19 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32952) (i32.shl (get_local $l19) (i32.const 2)))) (f32.const 0.))
				(set_local $l19 (i32.add (get_local $l19) (i32.const 1)))
				(if (i32.lt_s (get_local $l19) (i32.const 2)) (br $for-in-l19) (br $for-out-l19))
				
			)
		)
		(set_local $l20 (i32.const 0))
		(loop $for-in-l20 
			(block $for-out-l20 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32960) (i32.shl (get_local $l20) (i32.const 2)))) (f32.const 0.))
				(set_local $l20 (i32.add (get_local $l20) (i32.const 1)))
				(if (i32.lt_s (get_local $l20) (i32.const 2)) (br $for-in-l20) (br $for-out-l20))
				
			)
		)
		(set_local $l21 (i32.const 0))
		(loop $for-in-l21 
			(block $for-out-l21 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32968) (i32.shl (get_local $l21) (i32.const 2)))) (f32.const 0.))
				(set_local $l21 (i32.add (get_local $l21) (i32.const 1)))
				(if (i32.lt_s (get_local $l21) (i32.const 2)) (br $for-in-l21) (br $for-out-l21))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 32))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $fSlow3 f32)
		(local $fSlow4 f32)
		(local $fSlow5 f32)
		(local $fSlow6 f32)
		(local $fSlow7 f32)
		(local $fSlow8 f32)
		(local $fSlow9 f32)
		(local $fSlow10 f32)
		(local $fSlow11 f32)
		(local $fSlow12 f32)
		(local $fSlow13 f32)
		(local $fSlow14 f32)
		(local $fSlow15 f32)
		(local $i i32)
		(local $fRec19 f32)
		(local $iRec30 i32)
		(local $fTemp0 f32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $fTemp3 f32)
		(local $iTemp4 i32)
		(local $iTemp5 i32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $fTemp8 f32)
		(local $fTemp9 f32)
		(local $fTemp10 f32)
		(local $fTemp11 f32)
		(local $fTemp12 f32)
		(local $fTemp13 f32)
		(local $fTemp14 f32)
		(local $fTemp15 f32)
		(local $tmp_in0 i32)
		(local $iTemp16 i32)
		(local $fTemp17 f32)
		(local $fTemp18 f32)
		(local $tmp_in1 i32)
		(local $iTemp19 i32)
		(local $fTemp20 f32)
		(local $fTemp21 f32)
		(local $fTemp22 f32)
		(local $fTemp23 f32)
		(local $tmp_in2 i32)
		(local $iTemp24 i32)
		(local $fTemp25 f32)
		(local $fTemp26 f32)
		(local $tmp_in3 i32)
		(local $iTemp27 i32)
		(local $fTemp28 f32)
		(local $fTemp29 f32)
		(local $fTemp30 f32)
		(local $fTemp31 f32)
		(local $iTemp32 i32)
		(local $iTemp33 i32)
		(local $fTemp34 f32)
		(local $fTemp35 f32)
		(local $fTemp36 f32)
		(local $fTemp37 f32)
		(local $fTemp38 f32)
		(local $fTemp39 f32)
		(local $fTemp40 f32)
		(local $fTemp41 f32)
		(local $fTemp42 f32)
		(local $fTemp43 f32)
		(local $tmp_in4 i32)
		(local $iTemp44 i32)
		(local $fTemp45 f32)
		(local $fTemp46 f32)
		(local $tmp_in5 i32)
		(local $iTemp47 i32)
		(local $fTemp48 f32)
		(local $fTemp49 f32)
		(local $fTemp50 f32)
		(local $fTemp51 f32)
		(local $tmp_in6 i32)
		(local $iTemp52 i32)
		(local $fTemp53 f32)
		(local $fTemp54 f32)
		(local $tmp_in7 i32)
		(local $iTemp55 i32)
		(local $iRec21 i32)
		(local $fRec16 f32)
		(local $fRec17 f32)
		(local $fRec18 f32)
		(local $fRec12 f32)
		(local $fRec13 f32)
		(local $fRec14 f32)
		(local $fRec8 f32)
		(local $fRec9 f32)
		(local $fRec10 f32)
		(local $fRec4 f32)
		(local $fRec5 f32)
		(local $fRec6 f32)
		(local $fTemp56 f32)
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $fSlow3 (f32.const 0.))
		(set_local $fSlow4 (f32.const 0.))
		(set_local $fSlow5 (f32.const 0.))
		(set_local $fSlow6 (f32.const 0.))
		(set_local $fSlow7 (f32.const 0.))
		(set_local $fSlow8 (f32.const 0.))
		(set_local $fSlow9 (f32.const 0.))
		(set_local $fSlow10 (f32.const 0.))
		(set_local $fSlow11 (f32.const 0.))
		(set_local $fSlow12 (f32.const 0.))
		(set_local $fSlow13 (f32.const 0.))
		(set_local $fSlow14 (f32.const 0.))
		(set_local $fSlow15 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $fRec19 (f32.const 0.))
		(set_local $iRec30 (i32.const 0))
		(set_local $fTemp0 (f32.const 0.))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $iTemp4 (i32.const 0))
		(set_local $iTemp5 (i32.const 0))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $fTemp8 (f32.const 0.))
		(set_local $fTemp9 (f32.const 0.))
		(set_local $fTemp10 (f32.const 0.))
		(set_local $fTemp11 (f32.const 0.))
		(set_local $fTemp12 (f32.const 0.))
		(set_local $fTemp13 (f32.const 0.))
		(set_local $fTemp14 (f32.const 0.))
		(set_local $fTemp15 (f32.const 0.))
		(set_local $tmp_in0 (i32.const 0))
		(set_local $iTemp16 (i32.const 0))
		(set_local $fTemp17 (f32.const 0.))
		(set_local $fTemp18 (f32.const 0.))
		(set_local $tmp_in1 (i32.const 0))
		(set_local $iTemp19 (i32.const 0))
		(set_local $fTemp20 (f32.const 0.))
		(set_local $fTemp21 (f32.const 0.))
		(set_local $fTemp22 (f32.const 0.))
		(set_local $fTemp23 (f32.const 0.))
		(set_local $tmp_in2 (i32.const 0))
		(set_local $iTemp24 (i32.const 0))
		(set_local $fTemp25 (f32.const 0.))
		(set_local $fTemp26 (f32.const 0.))
		(set_local $tmp_in3 (i32.const 0))
		(set_local $iTemp27 (i32.const 0))
		(set_local $fTemp28 (f32.const 0.))
		(set_local $fTemp29 (f32.const 0.))
		(set_local $fTemp30 (f32.const 0.))
		(set_local $fTemp31 (f32.const 0.))
		(set_local $iTemp32 (i32.const 0))
		(set_local $iTemp33 (i32.const 0))
		(set_local $fTemp34 (f32.const 0.))
		(set_local $fTemp35 (f32.const 0.))
		(set_local $fTemp36 (f32.const 0.))
		(set_local $fTemp37 (f32.const 0.))
		(set_local $fTemp38 (f32.const 0.))
		(set_local $fTemp39 (f32.const 0.))
		(set_local $fTemp40 (f32.const 0.))
		(set_local $fTemp41 (f32.const 0.))
		(set_local $fTemp42 (f32.const 0.))
		(set_local $fTemp43 (f32.const 0.))
		(set_local $tmp_in4 (i32.const 0))
		(set_local $iTemp44 (i32.const 0))
		(set_local $fTemp45 (f32.const 0.))
		(set_local $fTemp46 (f32.const 0.))
		(set_local $tmp_in5 (i32.const 0))
		(set_local $iTemp47 (i32.const 0))
		(set_local $fTemp48 (f32.const 0.))
		(set_local $fTemp49 (f32.const 0.))
		(set_local $fTemp50 (f32.const 0.))
		(set_local $fTemp51 (f32.const 0.))
		(set_local $tmp_in6 (i32.const 0))
		(set_local $iTemp52 (i32.const 0))
		(set_local $fTemp53 (f32.const 0.))
		(set_local $fTemp54 (f32.const 0.))
		(set_local $tmp_in7 (i32.const 0))
		(set_local $iTemp55 (i32.const 0))
		(set_local $iRec21 (i32.const 0))
		(set_local $fRec16 (f32.const 0.))
		(set_local $fRec17 (f32.const 0.))
		(set_local $fRec18 (f32.const 0.))
		(set_local $fRec12 (f32.const 0.))
		(set_local $fRec13 (f32.const 0.))
		(set_local $fRec14 (f32.const 0.))
		(set_local $fRec8 (f32.const 0.))
		(set_local $fRec9 (f32.const 0.))
		(set_local $fRec10 (f32.const 0.))
		(set_local $fRec4 (f32.const 0.))
		(set_local $fRec5 (f32.const 0.))
		(set_local $fRec6 (f32.const 0.))
		(set_local $fTemp56 (f32.const 0.))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $fSlow0 (f32.load (i32.add (get_local $dsp) (i32.const 0))))
		(set_local $fSlow1 (f32.mul (f32.const 0.0299999993) (f32.load (i32.add (get_local $dsp) (i32.const 28)))))
		(set_local $fSlow2 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 40))) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		(set_local $fSlow3 (call $sinf (get_local $fSlow2)))
		(set_local $fSlow4 (call $cosf (get_local $fSlow2)))
		(set_local $fSlow5 (f32.sub (f32.const 0.) (get_local $fSlow3)))
		(set_local $fSlow6 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 64)))))
		(set_local $fSlow7 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 80))) (f32.load (i32.add (get_local $dsp) (i32.const 84))))))
		(set_local $fSlow8 (f32.div (f32.const 1.) (get_local $fSlow7)))
		(set_local $fSlow9 (f32.add (f32.div (f32.add (get_local $fSlow8) (f32.const 1.41421354)) (get_local $fSlow7)) (f32.const 1.)))
		(set_local $fSlow10 (f32.mul (f32.const 0.0500000007) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 76))) (get_local $fSlow9))))
		(set_local $fSlow11 (f32.div (f32.const 1.) (get_local $fSlow9)))
		(set_local $fSlow12 (f32.add (f32.div (f32.add (get_local $fSlow8) (f32.const -1.41421354)) (get_local $fSlow7)) (f32.const 1.)))
		(set_local $fSlow13 (f32.mul (f32.const 2.) (f32.sub (f32.const 1.) (f32.div (f32.const 1.) (call $powf (get_local $fSlow7) (f32.const 2.))))))
		(set_local $fSlow14 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 8320)))))
		(set_local $fSlow15 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 8332)))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(i32.store (i32.add (get_local $dsp) (i32.const 4)) (i32.const 0))
				(i32.store (i32.add (get_local $dsp) (i32.const 12)) (i32.const 1))
				(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.add (f32.mul (f32.const 0.699999988) (f32.load (i32.add (get_local $dsp) (i32.const 24)))) (f32.mul (f32.const 0.284999996) (f32.load (i32.add (get_local $dsp) (i32.const 16556))))))
				(set_local $fRec19 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 20))) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 8))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.add (f32.mul (get_local $fSlow3) (f32.load (i32.add (get_local $dsp) (i32.const 60)))) (f32.mul (get_local $fSlow4) (f32.load (i32.add (get_local $dsp) (i32.const 52))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.add (f32.add (f32.mul (get_local $fSlow4) (f32.load (i32.add (get_local $dsp) (i32.const 60)))) (f32.mul (get_local $fSlow5) (f32.load (i32.add (get_local $dsp) (i32.const 52))))) (f32.convert_s/i32 (i32.sub (i32.const 1) (i32.load (i32.add (get_local $dsp) (i32.const 16)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.add (get_local $fSlow6) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 72))))))
				(i32.store (i32.add (get_local $dsp) (i32.const 88)) (i32.add (i32.mul (i32.const 1103515245) (i32.load (i32.add (get_local $dsp) (i32.const 92)))) (i32.const 12345)))
				(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.sub (f32.mul (f32.const 4.65661287e-10) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 88))))) (f32.mul (get_local $fSlow11) (f32.add (f32.mul (get_local $fSlow12) (f32.load (i32.add (get_local $dsp) (i32.const 104)))) (f32.mul (get_local $fSlow13) (f32.load (i32.add (get_local $dsp) (i32.const 100))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 108)) (f32.load (i32.add (get_local $dsp) (i32.const 32956))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 116))) (i32.const 2047)) (i32.const 2)))) (f32.mul (f32.const 0.949999988) (f32.load (i32.add (get_local $dsp) (i32.const 112)))))
				(set_local $iRec30 (i32.const 0))
				(f32.store (i32.add (get_local $dsp) (i32.const 8324)) (f32.add (get_local $fSlow14) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 8328))))))
				(set_local $fTemp0 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 8324))) (f32.const 0.270000011)))
				(f32.store (i32.add (get_local $dsp) (i32.const 8336)) (f32.add (get_local $fSlow15) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 8340))))))
				(set_local $fTemp1 (f32.mul (f32.const 0.400000006) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 8336))) (f32.const -0.5))))
				(set_local $fTemp2 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8316))) (f32.mul (get_local $fTemp0) (f32.add (get_local $fTemp1) (f32.const 0.270000011)))))
				(set_local $fTemp3 (f32.add (get_local $fTemp2) (f32.const -1.49999499)))
				(set_local $iTemp4 (i32.trunc_s/f32 (get_local $fTemp3)))
				(set_local $iTemp5 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $iTemp4) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $iTemp4)))))) (i32.const 1)))
				(set_local $fTemp6 (f32.floor (get_local $fTemp3)))
				(set_local $fTemp7 (f32.add (get_local $fTemp2) (f32.sub (f32.const -1.) (get_local $fTemp6))))
				(set_local $fTemp8 (f32.sub (f32.const 0.) (get_local $fTemp7)))
				(set_local $fTemp9 (f32.add (get_local $fTemp2) (f32.sub (f32.const -2.) (get_local $fTemp6))))
				(set_local $fTemp10 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp9))))
				(set_local $fTemp11 (f32.add (get_local $fTemp2) (f32.sub (f32.const -3.) (get_local $fTemp6))))
				(set_local $fTemp12 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp11))))
				(set_local $fTemp13 (f32.add (get_local $fTemp2) (f32.sub (f32.const -4.) (get_local $fTemp6))))
				(set_local $fTemp14 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.25) (get_local $fTemp13))))
				(set_local $fTemp15 (f32.sub (get_local $fTemp2) (get_local $fTemp6)))
				(set_local $tmp_in0 (i32.add (get_local $iTemp4) (i32.const 2)))
				(set_local $iTemp16 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in0) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in0)))))) (i32.const 1)))
				(set_local $fTemp17 (f32.sub (f32.const 0.) (get_local $fTemp11)))
				(set_local $fTemp18 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp13))))
				(set_local $tmp_in1 (i32.add (get_local $iTemp4) (i32.const 1)))
				(set_local $iTemp19 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in1) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in1)))))) (i32.const 1)))
				(set_local $fTemp20 (f32.sub (f32.const 0.) (get_local $fTemp9)))
				(set_local $fTemp21 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp11))))
				(set_local $fTemp22 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp13))))
				(set_local $fTemp23 (f32.mul (get_local $fTemp7) (get_local $fTemp9)))
				(set_local $tmp_in2 (i32.add (get_local $iTemp4) (i32.const 3)))
				(set_local $iTemp24 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in2) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in2)))))) (i32.const 1)))
				(set_local $fTemp25 (f32.sub (f32.const 0.) (get_local $fTemp13)))
				(set_local $fTemp26 (f32.mul (get_local $fTemp23) (get_local $fTemp11)))
				(set_local $tmp_in3 (i32.add (get_local $iTemp4) (i32.const 4)))
				(set_local $iTemp27 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in3) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in3)))))) (i32.const 1)))
				(f32.store (i32.add (get_local $dsp) (i32.const 8344)) (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp5)) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp8)) (get_local $fTemp10)) (get_local $fTemp12)) (get_local $fTemp14)) (f32.mul (get_local $fTemp15) (f32.add (f32.add (f32.add (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp16)) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp17)) (get_local $fTemp18))) (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp19)) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp20)) (get_local $fTemp21)) (get_local $fTemp22))) (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp23) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp24)) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp25)))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp26) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp27)) (i32.const 2047)) (i32.const 2)))))))))))
				(set_local $fTemp28 (f32.sub (f32.add (f32.mul (get_local $fSlow1) (f32.load (i32.add (get_local $dsp) (i32.const 48)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 68))) (f32.add (f32.mul (get_local $fSlow10) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 104))) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 96))) (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 100))))))) (f32.const 1.)))) (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 8348))))))
				(set_local $fTemp29 (f32.add (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 24756)))) (f32.max (f32.const -1.) (f32.min (f32.const 1.) (f32.mul (get_local $fTemp28) (f32.add (call $powf (get_local $fTemp28) (f32.const 2.)) (f32.const -1.)))))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 116))) (i32.const 2047)) (i32.const 2)))) (get_local $fTemp29))
				(set_local $fTemp30 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8316))) (f32.mul (get_local $fTemp0) (f32.sub (f32.const 0.730000019) (get_local $fTemp1)))))
				(set_local $fTemp31 (f32.add (get_local $fTemp30) (f32.const -1.49999499)))
				(set_local $iTemp32 (i32.trunc_s/f32 (get_local $fTemp31)))
				(set_local $iTemp33 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $iTemp32) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $iTemp32)))))) (i32.const 1)))
				(set_local $fTemp34 (f32.floor (get_local $fTemp31)))
				(set_local $fTemp35 (f32.add (get_local $fTemp30) (f32.sub (f32.const -1.) (get_local $fTemp34))))
				(set_local $fTemp36 (f32.sub (f32.const 0.) (get_local $fTemp35)))
				(set_local $fTemp37 (f32.add (get_local $fTemp30) (f32.sub (f32.const -2.) (get_local $fTemp34))))
				(set_local $fTemp38 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp37))))
				(set_local $fTemp39 (f32.add (get_local $fTemp30) (f32.sub (f32.const -3.) (get_local $fTemp34))))
				(set_local $fTemp40 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp39))))
				(set_local $fTemp41 (f32.add (get_local $fTemp30) (f32.sub (f32.const -4.) (get_local $fTemp34))))
				(set_local $fTemp42 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.25) (get_local $fTemp41))))
				(set_local $fTemp43 (f32.sub (get_local $fTemp30) (get_local $fTemp34)))
				(set_local $tmp_in4 (i32.add (get_local $iTemp32) (i32.const 2)))
				(set_local $iTemp44 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in4) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in4)))))) (i32.const 1)))
				(set_local $fTemp45 (f32.sub (f32.const 0.) (get_local $fTemp39)))
				(set_local $fTemp46 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp41))))
				(set_local $tmp_in5 (i32.add (get_local $iTemp32) (i32.const 1)))
				(set_local $iTemp47 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in5) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in5)))))) (i32.const 1)))
				(set_local $fTemp48 (f32.sub (f32.const 0.) (get_local $fTemp37)))
				(set_local $fTemp49 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp39))))
				(set_local $fTemp50 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp41))))
				(set_local $fTemp51 (f32.mul (get_local $fTemp35) (get_local $fTemp37)))
				(set_local $tmp_in6 (i32.add (get_local $iTemp32) (i32.const 3)))
				(set_local $iTemp52 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in6) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in6)))))) (i32.const 1)))
				(set_local $fTemp53 (f32.sub (f32.const 0.) (get_local $fTemp41)))
				(set_local $fTemp54 (f32.mul (get_local $fTemp51) (get_local $fTemp39)))
				(set_local $tmp_in7 (i32.add (get_local $iTemp32) (i32.const 4)))
				(set_local $iTemp55 (i32.add (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 8312))) (f32.convert_s/i32 (select (get_local $tmp_in7) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in7)))))) (i32.const 1)))
				(f32.store (i32.add (get_local $dsp) (i32.const 16544)) (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp33)) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp36)) (get_local $fTemp38)) (get_local $fTemp40)) (get_local $fTemp42)) (f32.mul (get_local $fTemp43) (f32.add (f32.add (f32.add (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp35) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp44)) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp45)) (get_local $fTemp46))) (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp47)) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp48)) (get_local $fTemp49)) (get_local $fTemp50))) (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp51) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp52)) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp53)))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp54) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8352) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp55)) (i32.const 2047)) (i32.const 2)))))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16552)) (f32.load (i32.add (get_local $dsp) (i32.const 16548))))
				(set_local $iRec21 (get_local $iRec30))
				(set_local $fRec16 (get_local $fRec19))
				(set_local $fRec17 (f32.load (i32.add (get_local $dsp) (i32.const 16552))))
				(set_local $fRec18 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 16552))) (f32.convert_s/i32 (get_local $iRec21))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 116))) (i32.const 2047)) (i32.const 2)))) (get_local $fRec16))
				(set_local $fRec12 (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (get_local $fTemp36) (get_local $fTemp38)) (get_local $fTemp40)) (get_local $fTemp42)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp33)) (i32.const 2047)) (i32.const 2)))))) (f32.mul (get_local $fTemp43) (f32.add (f32.add (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp51) (get_local $fTemp53)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp52)) (i32.const 2047)) (i32.const 2))))))) (f32.add (f32.mul (f32.mul (f32.mul (get_local $fTemp48) (get_local $fTemp49)) (get_local $fTemp50)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp47)) (i32.const 2047)) (i32.const 2)))))) (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp35) (get_local $fTemp45)) (get_local $fTemp46)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp44)) (i32.const 2047)) (i32.const 2))))))))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp54) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16560) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp55)) (i32.const 2047)) (i32.const 2)))))))))))
				(set_local $fRec13 (get_local $fRec17))
				(set_local $fRec14 (get_local $fRec18))
				(f32.store (i32.add (get_local $dsp) (i32.const 24752)) (get_local $fRec12))
				(set_local $fRec8 (f32.load (i32.add (get_local $dsp) (i32.const 24756))))
				(set_local $fRec9 (get_local $fRec13))
				(set_local $fRec10 (get_local $fRec14))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 116))) (i32.const 2047)) (i32.const 2)))) (get_local $fRec8))
				(set_local $fRec4 (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (get_local $fTemp8) (get_local $fTemp10)) (get_local $fTemp12)) (get_local $fTemp14)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp5)) (i32.const 2047)) (i32.const 2)))))) (f32.mul (get_local $fTemp15) (f32.add (f32.add (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp23) (get_local $fTemp25)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp24)) (i32.const 2047)) (i32.const 2))))))) (f32.add (f32.mul (f32.mul (f32.mul (get_local $fTemp20) (get_local $fTemp21)) (get_local $fTemp22)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp19)) (i32.const 2047)) (i32.const 2)))))) (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (get_local $fTemp17)) (get_local $fTemp18)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp16)) (i32.const 2047)) (i32.const 2))))))))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp26) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24760) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 116))) (get_local $iTemp27)) (i32.const 2047)) (i32.const 2)))))))))))
				(set_local $fRec5 (get_local $fRec9))
				(set_local $fRec6 (get_local $fRec10))
				(f32.store (i32.add (get_local $dsp) (i32.const 32952)) (get_local $fRec4))
				(f32.store (i32.add (get_local $dsp) (i32.const 32960)) (get_local $fRec6))
				(f32.store (i32.add (get_local $dsp) (i32.const 32968)) (f32.sub (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 32960))) (f32.mul (f32.const 0.995000005) (f32.load (i32.add (get_local $dsp) (i32.const 32972))))) (f32.load (i32.add (get_local $dsp) (i32.const 32964)))))
				(set_local $fTemp56 (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $dsp) (i32.const 32968)))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (get_local $fTemp56))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (get_local $fTemp56))
				(i32.store (i32.add (get_local $dsp) (i32.const 8)) (i32.load (i32.add (get_local $dsp) (i32.const 4))))
				(i32.store (i32.add (get_local $dsp) (i32.const 16)) (i32.load (i32.add (get_local $dsp) (i32.const 12))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.load (i32.add (get_local $dsp) (i32.const 20))))
				(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.load (i32.add (get_local $dsp) (i32.const 48))))
				(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.load (i32.add (get_local $dsp) (i32.const 56))))
				(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.load (i32.add (get_local $dsp) (i32.const 68))))
				(i32.store (i32.add (get_local $dsp) (i32.const 92)) (i32.load (i32.add (get_local $dsp) (i32.const 88))))
				(f32.store (i32.add (get_local $dsp) (i32.const 104)) (f32.load (i32.add (get_local $dsp) (i32.const 100))))
				(f32.store (i32.add (get_local $dsp) (i32.const 100)) (f32.load (i32.add (get_local $dsp) (i32.const 96))))
				(f32.store (i32.add (get_local $dsp) (i32.const 112)) (f32.load (i32.add (get_local $dsp) (i32.const 108))))
				(i32.store (i32.add (get_local $dsp) (i32.const 116)) (i32.add (i32.load (i32.add (get_local $dsp) (i32.const 116))) (i32.const 1)))
				(f32.store (i32.add (get_local $dsp) (i32.const 8328)) (f32.load (i32.add (get_local $dsp) (i32.const 8324))))
				(f32.store (i32.add (get_local $dsp) (i32.const 8340)) (f32.load (i32.add (get_local $dsp) (i32.const 8336))))
				(f32.store (i32.add (get_local $dsp) (i32.const 8348)) (f32.load (i32.add (get_local $dsp) (i32.const 8344))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16548)) (f32.load (i32.add (get_local $dsp) (i32.const 16544))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16556)) (f32.load (i32.add (get_local $dsp) (i32.const 16552))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24756)) (f32.load (i32.add (get_local $dsp) (i32.const 24752))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32956)) (f32.load (i32.add (get_local $dsp) (i32.const 32952))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32964)) (f32.load (i32.add (get_local $dsp) (i32.const 32960))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32972)) (f32.load (i32.add (get_local $dsp) (i32.const 32968))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
