
(module
	(import $tanf "env" "_tanf" (param f32) (result f32))
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"Violin\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"32956\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"copyright\":\"(c)Romain Michon, CCRMA (Stanford University), GRAME\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"description\":\"Simple violin physical model controlled with continuous parameters.\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"MIT\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Violin\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"violin\",\"items\":[{\"type\":\"vgroup\",\"label\":\"string\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"length\",\"address\":\"/violin/string/length\",\"index\":\"52\",\"meta\":[{\"0\":\"\"}],\"init\":\"0.75\",\"min\":\"0\",\"max\":\"2\",\"step\":\"0.01\"}]},{\"type\":\"vgroup\",\"label\":\"bow\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"velocity\",\"address\":\"/violin/bow/velocity\",\"index\":\"72\",\"meta\":[{\"0\":\"\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"pressure\",\"address\":\"/violin/bow/pressure\",\"index\":\"8304\",\"meta\":[{\"1\":\"\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"position\",\"address\":\"/violin/bow/position\",\"index\":\"40\",\"meta\":[{\"2\":\"\"}],\"init\":\"0.7\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"hslider\",\"label\":\"outGain\",\"address\":\"/violin/outGain\",\"index\":\"0\",\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 0))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 2))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 12)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 16)) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 20)) (call $tanf (f32.div (f32.const 1570.79639) (f32.load (i32.add (get_local $dsp) (i32.const 16))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.div (f32.const 1.) (f32.load (i32.add (get_local $dsp) (i32.const 20)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.div (f32.const 1.) (f32.add (f32.div (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 24))) (f32.const 0.5)) (f32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.const 1.))))
		(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.mul (f32.const 0.00882352982) (f32.load (i32.add (get_local $dsp) (i32.const 16)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.mul (f32.const 0.00147058826) (f32.load (i32.add (get_local $dsp) (i32.const 16)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 24724)) (f32.add (f32.div (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 24))) (f32.const -0.5)) (f32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.const 1.)))
		(f32.store (i32.add (get_local $dsp) (i32.const 24728)) (f32.mul (f32.const 2.) (f32.sub (f32.const 1.) (f32.div (f32.const 1.) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 20))) (f32.const 2.))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 24744)) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 24)))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 0)) (f32.const 0.5))
		(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.const 0.699999988))
		(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.const 0.75))
		(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 8304)) (f32.const 0.5))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(local $l10 i32)
		(local $l11 i32)
		(local $l12 i32)
		(local $l13 i32)
		(local $l14 i32)
		(local $l15 i32)
		(local $l16 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l10 (i32.const 0))
		(set_local $l11 (i32.const 0))
		(set_local $l12 (i32.const 0))
		(set_local $l13 (i32.const 0))
		(set_local $l14 (i32.const 0))
		(set_local $l15 (i32.const 0))
		(set_local $l16 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 4) (i32.shl (get_local $l0) (i32.const 2)))) (i32.const 0))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 2)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 44) (i32.shl (get_local $l1) (i32.const 2)))) (f32.const 0.))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 56) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 2)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 64) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 2)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 76) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 84) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 4)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(i32.store (i32.add (get_local $dsp) (i32.const 100)) (i32.const 0))
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 2048)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8296) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 2)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8308) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 2)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 2048)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		(set_local $l10 (i32.const 0))
		(loop $for-in-l10 
			(block $for-out-l10 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (get_local $l10) (i32.const 2)))) (f32.const 0.))
				(set_local $l10 (i32.add (get_local $l10) (i32.const 1)))
				(if (i32.lt_s (get_local $l10) (i32.const 2048)) (br $for-in-l10) (br $for-out-l10))
				
			)
		)
		(set_local $l11 (i32.const 0))
		(loop $for-in-l11 
			(block $for-out-l11 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24700) (i32.shl (get_local $l11) (i32.const 2)))) (f32.const 0.))
				(set_local $l11 (i32.add (get_local $l11) (i32.const 1)))
				(if (i32.lt_s (get_local $l11) (i32.const 2)) (br $for-in-l11) (br $for-out-l11))
				
			)
		)
		(set_local $l12 (i32.const 0))
		(loop $for-in-l12 
			(block $for-out-l12 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24708) (i32.shl (get_local $l12) (i32.const 2)))) (f32.const 0.))
				(set_local $l12 (i32.add (get_local $l12) (i32.const 1)))
				(if (i32.lt_s (get_local $l12) (i32.const 4)) (br $for-in-l12) (br $for-out-l12))
				
			)
		)
		(set_local $l13 (i32.const 0))
		(loop $for-in-l13 
			(block $for-out-l13 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24732) (i32.shl (get_local $l13) (i32.const 2)))) (f32.const 0.))
				(set_local $l13 (i32.add (get_local $l13) (i32.const 1)))
				(if (i32.lt_s (get_local $l13) (i32.const 3)) (br $for-in-l13) (br $for-out-l13))
				
			)
		)
		(set_local $l14 (i32.const 0))
		(loop $for-in-l14 
			(block $for-out-l14 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 24748) (i32.shl (get_local $l14) (i32.const 2)))) (i32.const 0))
				(set_local $l14 (i32.add (get_local $l14) (i32.const 1)))
				(if (i32.lt_s (get_local $l14) (i32.const 2)) (br $for-in-l14) (br $for-out-l14))
				
			)
		)
		(set_local $l15 (i32.const 0))
		(loop $for-in-l15 
			(block $for-out-l15 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (get_local $l15) (i32.const 2)))) (f32.const 0.))
				(set_local $l15 (i32.add (get_local $l15) (i32.const 1)))
				(if (i32.lt_s (get_local $l15) (i32.const 2048)) (br $for-in-l15) (br $for-out-l15))
				
			)
		)
		(set_local $l16 (i32.const 0))
		(loop $for-in-l16 
			(block $for-out-l16 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 32948) (i32.shl (get_local $l16) (i32.const 2)))) (f32.const 0.))
				(set_local $l16 (i32.add (get_local $l16) (i32.const 1)))
				(if (i32.lt_s (get_local $l16) (i32.const 2)) (br $for-in-l16) (br $for-out-l16))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 12))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $fSlow3 f32)
		(local $fSlow4 f32)
		(local $i i32)
		(local $iRec11 i32)
		(local $fRec15 f32)
		(local $fTemp0 f32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $iTemp3 i32)
		(local $iTemp4 i32)
		(local $fTemp5 f32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $fTemp8 f32)
		(local $fTemp9 f32)
		(local $fTemp10 f32)
		(local $fTemp11 f32)
		(local $fTemp12 f32)
		(local $fTemp13 f32)
		(local $fTemp14 f32)
		(local $tmp_in0 i32)
		(local $iTemp15 i32)
		(local $fTemp16 f32)
		(local $fTemp17 f32)
		(local $tmp_in1 i32)
		(local $iTemp18 i32)
		(local $fTemp19 f32)
		(local $fTemp20 f32)
		(local $fTemp21 f32)
		(local $fTemp22 f32)
		(local $tmp_in2 i32)
		(local $iTemp23 i32)
		(local $fTemp24 f32)
		(local $fTemp25 f32)
		(local $tmp_in3 i32)
		(local $iTemp26 i32)
		(local $iRec31 i32)
		(local $fTemp27 f32)
		(local $fTemp28 f32)
		(local $iTemp29 i32)
		(local $iTemp30 i32)
		(local $fTemp31 f32)
		(local $fTemp32 f32)
		(local $fTemp33 f32)
		(local $fTemp34 f32)
		(local $fTemp35 f32)
		(local $fTemp36 f32)
		(local $fTemp37 f32)
		(local $fTemp38 f32)
		(local $fTemp39 f32)
		(local $fTemp40 f32)
		(local $tmp_in4 i32)
		(local $iTemp41 i32)
		(local $fTemp42 f32)
		(local $fTemp43 f32)
		(local $tmp_in5 i32)
		(local $iTemp44 i32)
		(local $fTemp45 f32)
		(local $fTemp46 f32)
		(local $fTemp47 f32)
		(local $fTemp48 f32)
		(local $tmp_in6 i32)
		(local $iTemp49 i32)
		(local $fTemp50 f32)
		(local $fTemp51 f32)
		(local $tmp_in7 i32)
		(local $iTemp52 i32)
		(local $fTemp53 f32)
		(local $fTemp54 f32)
		(local $fRec23 f32)
		(local $fTemp55 f32)
		(local $fRec24 f32)
		(local $iRec25 i32)
		(local $fRec19 f32)
		(local $iRec21 i32)
		(local $iRec17 i32)
		(local $fTemp56 f32)
		(local $fRec12 f32)
		(local $fRec13 f32)
		(local $fRec7 f32)
		(local $fRec8 f32)
		(local $fRec9 f32)
		(local $fRec3 f32)
		(local $fRec4 f32)
		(local $fRec5 f32)
		(local $fRec1 f32)
		(local $fTemp57 f32)
		(local $j0 i32)
		(local $j1 i32)
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $fSlow3 (f32.const 0.))
		(set_local $fSlow4 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $iRec11 (i32.const 0))
		(set_local $fRec15 (f32.const 0.))
		(set_local $fTemp0 (f32.const 0.))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $iTemp3 (i32.const 0))
		(set_local $iTemp4 (i32.const 0))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $fTemp8 (f32.const 0.))
		(set_local $fTemp9 (f32.const 0.))
		(set_local $fTemp10 (f32.const 0.))
		(set_local $fTemp11 (f32.const 0.))
		(set_local $fTemp12 (f32.const 0.))
		(set_local $fTemp13 (f32.const 0.))
		(set_local $fTemp14 (f32.const 0.))
		(set_local $tmp_in0 (i32.const 0))
		(set_local $iTemp15 (i32.const 0))
		(set_local $fTemp16 (f32.const 0.))
		(set_local $fTemp17 (f32.const 0.))
		(set_local $tmp_in1 (i32.const 0))
		(set_local $iTemp18 (i32.const 0))
		(set_local $fTemp19 (f32.const 0.))
		(set_local $fTemp20 (f32.const 0.))
		(set_local $fTemp21 (f32.const 0.))
		(set_local $fTemp22 (f32.const 0.))
		(set_local $tmp_in2 (i32.const 0))
		(set_local $iTemp23 (i32.const 0))
		(set_local $fTemp24 (f32.const 0.))
		(set_local $fTemp25 (f32.const 0.))
		(set_local $tmp_in3 (i32.const 0))
		(set_local $iTemp26 (i32.const 0))
		(set_local $iRec31 (i32.const 0))
		(set_local $fTemp27 (f32.const 0.))
		(set_local $fTemp28 (f32.const 0.))
		(set_local $iTemp29 (i32.const 0))
		(set_local $iTemp30 (i32.const 0))
		(set_local $fTemp31 (f32.const 0.))
		(set_local $fTemp32 (f32.const 0.))
		(set_local $fTemp33 (f32.const 0.))
		(set_local $fTemp34 (f32.const 0.))
		(set_local $fTemp35 (f32.const 0.))
		(set_local $fTemp36 (f32.const 0.))
		(set_local $fTemp37 (f32.const 0.))
		(set_local $fTemp38 (f32.const 0.))
		(set_local $fTemp39 (f32.const 0.))
		(set_local $fTemp40 (f32.const 0.))
		(set_local $tmp_in4 (i32.const 0))
		(set_local $iTemp41 (i32.const 0))
		(set_local $fTemp42 (f32.const 0.))
		(set_local $fTemp43 (f32.const 0.))
		(set_local $tmp_in5 (i32.const 0))
		(set_local $iTemp44 (i32.const 0))
		(set_local $fTemp45 (f32.const 0.))
		(set_local $fTemp46 (f32.const 0.))
		(set_local $fTemp47 (f32.const 0.))
		(set_local $fTemp48 (f32.const 0.))
		(set_local $tmp_in6 (i32.const 0))
		(set_local $iTemp49 (i32.const 0))
		(set_local $fTemp50 (f32.const 0.))
		(set_local $fTemp51 (f32.const 0.))
		(set_local $tmp_in7 (i32.const 0))
		(set_local $iTemp52 (i32.const 0))
		(set_local $fTemp53 (f32.const 0.))
		(set_local $fTemp54 (f32.const 0.))
		(set_local $fRec23 (f32.const 0.))
		(set_local $fTemp55 (f32.const 0.))
		(set_local $fRec24 (f32.const 0.))
		(set_local $iRec25 (i32.const 0))
		(set_local $fRec19 (f32.const 0.))
		(set_local $iRec21 (i32.const 0))
		(set_local $iRec17 (i32.const 0))
		(set_local $fTemp56 (f32.const 0.))
		(set_local $fRec12 (f32.const 0.))
		(set_local $fRec13 (f32.const 0.))
		(set_local $fRec7 (f32.const 0.))
		(set_local $fRec8 (f32.const 0.))
		(set_local $fRec9 (f32.const 0.))
		(set_local $fRec3 (f32.const 0.))
		(set_local $fRec4 (f32.const 0.))
		(set_local $fRec5 (f32.const 0.))
		(set_local $fRec1 (f32.const 0.))
		(set_local $fTemp57 (f32.const 0.))
		(set_local $j0 (i32.const 3))
		(set_local $j1 (i32.const 3))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $fSlow0 (f32.load (i32.add (get_local $dsp) (i32.const 0))))
		(set_local $fSlow1 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 40)))))
		(set_local $fSlow2 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 52)))))
		(set_local $fSlow3 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 72)))))
		(set_local $fSlow4 (f32.mul (f32.const 0.00100000005) (f32.load (i32.add (get_local $dsp) (i32.const 8304)))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(i32.store (i32.add (get_local $dsp) (i32.const 4)) (i32.const 0))
				(set_local $iRec11 (i32.load (i32.add (get_local $dsp) (i32.const 8))))
				(set_local $fRec15 (f32.sub (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 24752)))) (f32.mul (f32.const 0.989264667) (f32.add (f32.mul (f32.const 0.600000024) (f32.load (i32.add (get_local $dsp) (i32.const 24716)))) (f32.mul (f32.const 0.200000003) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 24712))) (f32.load (i32.add (get_local $dsp) (i32.const 24720)))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.add (get_local $fSlow1) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 48))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.add (get_local $fSlow2) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 60))))))
				(set_local $fTemp0 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 56))) (f32.const -0.0799999982)))
				(set_local $fTemp1 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 36))) (f32.mul (f32.sub (f32.const 1.) (f32.load (i32.add (get_local $dsp) (i32.const 44)))) (get_local $fTemp0))))
				(set_local $fTemp2 (f32.add (get_local $fTemp1) (f32.const -1.49999499)))
				(set_local $iTemp3 (i32.trunc_s/f32 (get_local $fTemp2)))
				(set_local $iTemp4 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $iTemp3) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $iTemp3)))))))
				(set_local $fTemp5 (f32.floor (get_local $fTemp2)))
				(set_local $fTemp6 (f32.add (get_local $fTemp1) (f32.sub (f32.const -1.) (get_local $fTemp5))))
				(set_local $fTemp7 (f32.sub (f32.const 0.) (get_local $fTemp6)))
				(set_local $fTemp8 (f32.add (get_local $fTemp1) (f32.sub (f32.const -2.) (get_local $fTemp5))))
				(set_local $fTemp9 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp8))))
				(set_local $fTemp10 (f32.add (get_local $fTemp1) (f32.sub (f32.const -3.) (get_local $fTemp5))))
				(set_local $fTemp11 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp10))))
				(set_local $fTemp12 (f32.add (get_local $fTemp1) (f32.sub (f32.const -4.) (get_local $fTemp5))))
				(set_local $fTemp13 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.25) (get_local $fTemp12))))
				(set_local $fTemp14 (f32.sub (get_local $fTemp1) (get_local $fTemp5)))
				(set_local $tmp_in0 (i32.add (get_local $iTemp3) (i32.const 2)))
				(set_local $iTemp15 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in0) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in0)))))))
				(set_local $fTemp16 (f32.sub (f32.const 0.) (get_local $fTemp10)))
				(set_local $fTemp17 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp12))))
				(set_local $tmp_in1 (i32.add (get_local $iTemp3) (i32.const 1)))
				(set_local $iTemp18 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in1) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in1)))))))
				(set_local $fTemp19 (f32.sub (f32.const 0.) (get_local $fTemp8)))
				(set_local $fTemp20 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp10))))
				(set_local $fTemp21 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp12))))
				(set_local $fTemp22 (f32.mul (get_local $fTemp6) (get_local $fTemp8)))
				(set_local $tmp_in2 (i32.add (get_local $iTemp3) (i32.const 3)))
				(set_local $iTemp23 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in2) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in2)))))))
				(set_local $fTemp24 (f32.sub (f32.const 0.) (get_local $fTemp12)))
				(set_local $fTemp25 (f32.mul (get_local $fTemp22) (get_local $fTemp10)))
				(set_local $tmp_in3 (i32.add (get_local $iTemp3) (i32.const 4)))
				(set_local $iTemp26 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in3) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in3)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp4) (i32.const 1))) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp7)) (get_local $fTemp9)) (get_local $fTemp11)) (get_local $fTemp13)) (f32.mul (get_local $fTemp14) (f32.add (f32.add (f32.add (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp6) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp15) (i32.const 1))) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp16)) (get_local $fTemp17))) (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp18) (i32.const 1))) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp19)) (get_local $fTemp20)) (get_local $fTemp21))) (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp22) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp23) (i32.const 1))) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp24)))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp25) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp26) (i32.const 1))) (i32.const 2047)) (i32.const 2)))))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.add (get_local $fSlow3) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 80))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.load (i32.add (get_local $dsp) (i32.const 32952))))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.const 2047)) (i32.const 2)))) (f32.sub (f32.const 0.) (f32.mul (f32.const 0.99880147) (f32.add (f32.mul (f32.const 0.800000012) (f32.load (i32.add (get_local $dsp) (i32.const 92)))) (f32.mul (f32.const 0.100000001) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 88))) (f32.load (i32.add (get_local $dsp) (i32.const 96)))))))))
				(set_local $iRec31 (i32.const 0))
				(set_local $fTemp27 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 36))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 44))) (get_local $fTemp0))))
				(set_local $fTemp28 (f32.add (get_local $fTemp27) (f32.const -1.49999499)))
				(set_local $iTemp29 (i32.trunc_s/f32 (get_local $fTemp28)))
				(set_local $iTemp30 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $iTemp29) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $iTemp29)))))))
				(set_local $fTemp31 (f32.floor (get_local $fTemp28)))
				(set_local $fTemp32 (f32.add (get_local $fTemp27) (f32.sub (f32.const -1.) (get_local $fTemp31))))
				(set_local $fTemp33 (f32.sub (f32.const 0.) (get_local $fTemp32)))
				(set_local $fTemp34 (f32.add (get_local $fTemp27) (f32.sub (f32.const -2.) (get_local $fTemp31))))
				(set_local $fTemp35 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp34))))
				(set_local $fTemp36 (f32.add (get_local $fTemp27) (f32.sub (f32.const -3.) (get_local $fTemp31))))
				(set_local $fTemp37 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp36))))
				(set_local $fTemp38 (f32.add (get_local $fTemp27) (f32.sub (f32.const -4.) (get_local $fTemp31))))
				(set_local $fTemp39 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.25) (get_local $fTemp38))))
				(set_local $fTemp40 (f32.sub (get_local $fTemp27) (get_local $fTemp31)))
				(set_local $tmp_in4 (i32.add (get_local $iTemp29) (i32.const 2)))
				(set_local $iTemp41 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in4) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in4)))))))
				(set_local $fTemp42 (f32.sub (f32.const 0.) (get_local $fTemp36)))
				(set_local $fTemp43 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp38))))
				(set_local $tmp_in5 (i32.add (get_local $iTemp29) (i32.const 1)))
				(set_local $iTemp44 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in5) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in5)))))))
				(set_local $fTemp45 (f32.sub (f32.const 0.) (get_local $fTemp34)))
				(set_local $fTemp46 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.5) (get_local $fTemp36))))
				(set_local $fTemp47 (f32.sub (f32.const 0.) (f32.mul (f32.const 0.333333343) (get_local $fTemp38))))
				(set_local $fTemp48 (f32.mul (get_local $fTemp32) (get_local $fTemp34)))
				(set_local $tmp_in6 (i32.add (get_local $iTemp29) (i32.const 3)))
				(set_local $iTemp49 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in6) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in6)))))))
				(set_local $fTemp50 (f32.sub (f32.const 0.) (get_local $fTemp38)))
				(set_local $fTemp51 (f32.mul (get_local $fTemp48) (get_local $fTemp36)))
				(set_local $tmp_in7 (i32.add (get_local $iTemp29) (i32.const 4)))
				(set_local $iTemp52 (i32.trunc_s/f32 (f32.min (f32.load (i32.add (get_local $dsp) (i32.const 32))) (f32.convert_s/i32 (select (get_local $tmp_in7) (i32.const 0) (i32.lt_s (i32.const 0) (get_local $tmp_in7)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 8296)) (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp30) (i32.const 2))) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp33)) (get_local $fTemp35)) (get_local $fTemp37)) (get_local $fTemp39)) (f32.mul (get_local $fTemp40) (f32.add (f32.add (f32.add (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp32) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp41) (i32.const 2))) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp42)) (get_local $fTemp43))) (f32.mul (f32.mul (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp44) (i32.const 2))) (i32.const 2047)) (i32.const 2))))) (get_local $fTemp45)) (get_local $fTemp46)) (get_local $fTemp47))) (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp48) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp49) (i32.const 2))) (i32.const 2047)) (i32.const 2)))))) (get_local $fTemp50)))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp51) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 104) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp52) (i32.const 2))) (i32.const 2047)) (i32.const 2)))))))))))
				(set_local $fTemp53 (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 76))) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 68))) (f32.load (i32.add (get_local $dsp) (i32.const 8300))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 8308)) (f32.add (get_local $fSlow4) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 8312))))))
				(set_local $fTemp54 (f32.mul (get_local $fTemp53) (f32.min (f32.const 1.) (f32.div (f32.const 1.) (call $powf (f32.add (f32.abs (f32.mul (f32.sub (f32.const 5.) (f32.mul (f32.const 4.) (f32.load (i32.add (get_local $dsp) (i32.const 8308))))) (get_local $fTemp53))) (f32.const 0.75)) (f32.const 4.))))))
				(set_local $fRec23 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 68))) (get_local $fTemp54)))
				(set_local $fTemp55 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 8300))) (get_local $fTemp54)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.const 2047)) (i32.const 2)))) (get_local $fTemp55))
				(set_local $fRec24 (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (get_local $fTemp9)) (get_local $fTemp11)) (get_local $fTemp13)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (get_local $iTemp4)) (i32.const 2047)) (i32.const 2)))))) (f32.mul (get_local $fTemp14) (f32.add (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp25) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (get_local $iTemp26)) (i32.const 2047)) (i32.const 2))))))) (f32.add (f32.add (f32.mul (f32.mul (f32.mul (get_local $fTemp19) (get_local $fTemp20)) (get_local $fTemp21)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (get_local $iTemp18)) (i32.const 2047)) (i32.const 2)))))) (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp6) (get_local $fTemp16)) (get_local $fTemp17)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (get_local $iTemp15)) (i32.const 2047)) (i32.const 2)))))))) (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp22) (get_local $fTemp24)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 8316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (get_local $iTemp23)) (i32.const 2047)) (i32.const 2))))))))))))
				(set_local $iRec25 (get_local $iRec31))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.const 2047)) (i32.const 2)))) (get_local $fRec23))
				(set_local $fRec19 (f32.add (f32.mul (f32.mul (f32.mul (f32.mul (get_local $fTemp33) (get_local $fTemp35)) (get_local $fTemp37)) (get_local $fTemp39)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp30) (i32.const 1))) (i32.const 2047)) (i32.const 2)))))) (f32.mul (get_local $fTemp40) (f32.add (f32.add (f32.mul (f32.const 0.166666672) (f32.mul (f32.mul (get_local $fTemp48) (get_local $fTemp50)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp49) (i32.const 1))) (i32.const 2047)) (i32.const 2))))))) (f32.add (f32.mul (f32.mul (f32.mul (get_local $fTemp45) (get_local $fTemp46)) (get_local $fTemp47)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp44) (i32.const 1))) (i32.const 2047)) (i32.const 2)))))) (f32.mul (f32.const 0.5) (f32.mul (f32.mul (f32.mul (get_local $fTemp32) (get_local $fTemp42)) (get_local $fTemp43)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp41) (i32.const 1))) (i32.const 2047)) (i32.const 2))))))))) (f32.mul (f32.const 0.0416666679) (f32.mul (get_local $fTemp51) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16508) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.add (get_local $iTemp52) (i32.const 1))) (i32.const 2047)) (i32.const 2)))))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24700)) (get_local $fRec24))
				(set_local $iRec21 (get_local $iRec25))
				(f32.store (i32.add (get_local $dsp) (i32.const 24708)) (f32.load (i32.add (get_local $dsp) (i32.const 24704))))
				(set_local $iRec17 (get_local $iRec21))
				(f32.store (i32.add (get_local $dsp) (i32.const 24732)) (f32.sub (f32.load (i32.add (get_local $dsp) (i32.const 24712))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 28))) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 24724))) (f32.load (i32.add (get_local $dsp) (i32.const 24740)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 24728))) (f32.load (i32.add (get_local $dsp) (i32.const 24736))))))))
				(set_local $fTemp56 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 28))) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 24))) (f32.load (i32.add (get_local $dsp) (i32.const 24732)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 24744))) (f32.load (i32.add (get_local $dsp) (i32.const 24740)))))))
				(set_local $fRec12 (get_local $fTemp56))
				(set_local $fRec13 (f32.add (f32.convert_s/i32 (get_local $iRec17)) (get_local $fTemp56)))
				(i32.store (i32.add (get_local $dsp) (i32.const 24748)) (get_local $iRec11))
				(set_local $fRec7 (get_local $fRec15))
				(set_local $fRec8 (get_local $fRec12))
				(set_local $fRec9 (get_local $fRec13))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24756) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.const 2047)) (i32.const 2)))) (get_local $fRec7))
				(set_local $fRec3 (get_local $fRec19))
				(set_local $fRec4 (get_local $fRec8))
				(set_local $fRec5 (get_local $fRec9))
				(f32.store (i32.add (get_local $dsp) (i32.const 32948)) (get_local $fRec3))
				(set_local $fRec1 (get_local $fRec5))
				(set_local $fTemp57 (f32.mul (get_local $fSlow0) (get_local $fRec1)))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (get_local $fTemp57))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (get_local $fTemp57))
				(i32.store (i32.add (get_local $dsp) (i32.const 8)) (i32.load (i32.add (get_local $dsp) (i32.const 4))))
				(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.load (i32.add (get_local $dsp) (i32.const 44))))
				(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.load (i32.add (get_local $dsp) (i32.const 56))))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.load (i32.add (get_local $dsp) (i32.const 64))))
				(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.load (i32.add (get_local $dsp) (i32.const 76))))
				(set_local $j0 (i32.const 3))
				(loop $for-in-j0 
					(block $for-out-j0 
						(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 84) (i32.shl (get_local $j0) (i32.const 2)))) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 84) (i32.shl (i32.sub (get_local $j0) (i32.const 1)) (i32.const 2))))))
						(set_local $j0 (i32.sub (get_local $j0) (i32.const 1)))
						(if (i32.gt_s (get_local $j0) (i32.const 0)) (br $for-in-j0) (br $for-out-j0))
						
					)
				)
				(i32.store (i32.add (get_local $dsp) (i32.const 100)) (i32.add (i32.load (i32.add (get_local $dsp) (i32.const 100))) (i32.const 1)))
				(f32.store (i32.add (get_local $dsp) (i32.const 8300)) (f32.load (i32.add (get_local $dsp) (i32.const 8296))))
				(f32.store (i32.add (get_local $dsp) (i32.const 8312)) (f32.load (i32.add (get_local $dsp) (i32.const 8308))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24704)) (f32.load (i32.add (get_local $dsp) (i32.const 24700))))
				(set_local $j1 (i32.const 3))
				(loop $for-in-j1 
					(block $for-out-j1 
						(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24708) (i32.shl (get_local $j1) (i32.const 2)))) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 24708) (i32.shl (i32.sub (get_local $j1) (i32.const 1)) (i32.const 2))))))
						(set_local $j1 (i32.sub (get_local $j1) (i32.const 1)))
						(if (i32.gt_s (get_local $j1) (i32.const 0)) (br $for-in-j1) (br $for-out-j1))
						
					)
				)
				(f32.store (i32.add (get_local $dsp) (i32.const 24740)) (f32.load (i32.add (get_local $dsp) (i32.const 24736))))
				(f32.store (i32.add (get_local $dsp) (i32.const 24736)) (f32.load (i32.add (get_local $dsp) (i32.const 24732))))
				(i32.store (i32.add (get_local $dsp) (i32.const 24752)) (i32.load (i32.add (get_local $dsp) (i32.const 24748))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32952)) (f32.load (i32.add (get_local $dsp) (i32.const 32948))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
