
(module
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"DNN\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"4\",\"inputs\":\"8\",\"outputs\":\"8\",\"meta\":[{\"author\":\"JOS\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"license\":\"STK-4.3\"},{\"name\":\"DNN\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"DNN\",\"items\":[]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 8))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 8))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 0)) (get_local $samplingFreq))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		
	)
	(func $instanceClear (param $dsp i32)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 0))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $input0 i32)
		(local $input1 i32)
		(local $input2 i32)
		(local $input3 i32)
		(local $input4 i32)
		(local $input5 i32)
		(local $input6 i32)
		(local $input7 i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $output2 i32)
		(local $output3 i32)
		(local $output4 i32)
		(local $output5 i32)
		(local $output6 i32)
		(local $output7 i32)
		(local $i i32)
		(local $fTemp0 f32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $fTemp3 f32)
		(local $fTemp4 f32)
		(local $fTemp5 f32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $fTemp8 f32)
		(local $fTemp9 f32)
		(local $fTemp10 f32)
		(local $fTemp11 f32)
		(local $fTemp12 f32)
		(local $fTemp13 f32)
		(local $fTemp14 f32)
		(local $fTemp15 f32)
		(local $fTemp16 f32)
		(local $fTemp17 f32)
		(local $fTemp18 f32)
		(local $fTemp19 f32)
		(local $fTemp20 f32)
		(local $fTemp21 f32)
		(local $fTemp22 f32)
		(local $fTemp23 f32)
		(local $fTemp24 f32)
		(local $fTemp25 f32)
		(set_local $input0 (i32.const 0))
		(set_local $input1 (i32.const 0))
		(set_local $input2 (i32.const 0))
		(set_local $input3 (i32.const 0))
		(set_local $input4 (i32.const 0))
		(set_local $input5 (i32.const 0))
		(set_local $input6 (i32.const 0))
		(set_local $input7 (i32.const 0))
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $output2 (i32.const 0))
		(set_local $output3 (i32.const 0))
		(set_local $output4 (i32.const 0))
		(set_local $output5 (i32.const 0))
		(set_local $output6 (i32.const 0))
		(set_local $output7 (i32.const 0))
		(set_local $i (i32.const 0))
		(set_local $fTemp0 (f32.const 0.))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $fTemp4 (f32.const 0.))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $fTemp8 (f32.const 0.))
		(set_local $fTemp9 (f32.const 0.))
		(set_local $fTemp10 (f32.const 0.))
		(set_local $fTemp11 (f32.const 0.))
		(set_local $fTemp12 (f32.const 0.))
		(set_local $fTemp13 (f32.const 0.))
		(set_local $fTemp14 (f32.const 0.))
		(set_local $fTemp15 (f32.const 0.))
		(set_local $fTemp16 (f32.const 0.))
		(set_local $fTemp17 (f32.const 0.))
		(set_local $fTemp18 (f32.const 0.))
		(set_local $fTemp19 (f32.const 0.))
		(set_local $fTemp20 (f32.const 0.))
		(set_local $fTemp21 (f32.const 0.))
		(set_local $fTemp22 (f32.const 0.))
		(set_local $fTemp23 (f32.const 0.))
		(set_local $fTemp24 (f32.const 0.))
		(set_local $fTemp25 (f32.const 0.))
		(set_local $input0 (i32.load (i32.add (get_local $inputs) (i32.const 0))))
		(set_local $input1 (i32.load (i32.add (get_local $inputs) (i32.const 4))))
		(set_local $input2 (i32.load (i32.add (get_local $inputs) (i32.const 8))))
		(set_local $input3 (i32.load (i32.add (get_local $inputs) (i32.const 12))))
		(set_local $input4 (i32.load (i32.add (get_local $inputs) (i32.const 16))))
		(set_local $input5 (i32.load (i32.add (get_local $inputs) (i32.const 20))))
		(set_local $input6 (i32.load (i32.add (get_local $inputs) (i32.const 24))))
		(set_local $input7 (i32.load (i32.add (get_local $inputs) (i32.const 28))))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $output2 (i32.load (i32.add (get_local $outputs) (i32.const 8))))
		(set_local $output3 (i32.load (i32.add (get_local $outputs) (i32.const 12))))
		(set_local $output4 (i32.load (i32.add (get_local $outputs) (i32.const 16))))
		(set_local $output5 (i32.load (i32.add (get_local $outputs) (i32.const 20))))
		(set_local $output6 (i32.load (i32.add (get_local $outputs) (i32.const 24))))
		(set_local $output7 (i32.load (i32.add (get_local $outputs) (i32.const 28))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(set_local $fTemp0 (f32.load (i32.add (get_local $input7) (get_local $i))))
				(set_local $fTemp1 (f32.load (i32.add (get_local $input6) (get_local $i))))
				(set_local $fTemp2 (f32.load (i32.add (get_local $input5) (get_local $i))))
				(set_local $fTemp3 (f32.load (i32.add (get_local $input4) (get_local $i))))
				(set_local $fTemp4 (f32.load (i32.add (get_local $input2) (get_local $i))))
				(set_local $fTemp5 (f32.load (i32.add (get_local $input1) (get_local $i))))
				(set_local $fTemp6 (f32.load (i32.add (get_local $input3) (get_local $i))))
				(set_local $fTemp7 (f32.add (f32.mul (f32.const 30.) (get_local $fTemp0)) (f32.add (f32.mul (f32.const 60.) (get_local $fTemp1)) (f32.add (f32.mul (f32.const 10.) (get_local $fTemp2)) (f32.add (f32.mul (f32.const 40.) (get_local $fTemp3)) (f32.add (f32.add (f32.mul (f32.const 20.) (get_local $fTemp4)) (f32.mul (f32.const 50.) (get_local $fTemp5))) (f32.mul (f32.const 70.) (get_local $fTemp6))))))))
				(set_local $fTemp8 (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp7) (f32.const 0.))) (get_local $fTemp7)))
				(set_local $fTemp9 (f32.load (i32.add (get_local $input0) (get_local $i))))
				(set_local $fTemp10 (f32.add (f32.mul (f32.const 43.) (get_local $fTemp0)) (f32.add (f32.add (f32.mul (f32.const 23.) (get_local $fTemp2)) (f32.add (f32.mul (f32.const 53.) (get_local $fTemp3)) (f32.add (f32.mul (f32.const 3.) (get_local $fTemp6)) (f32.add (f32.mul (f32.const 33.) (get_local $fTemp4)) (f32.add (f32.mul (f32.const 13.) (get_local $fTemp9)) (f32.mul (f32.const 63.) (get_local $fTemp5))))))) (f32.mul (f32.const 73.) (get_local $fTemp1)))))
				(set_local $fTemp11 (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp10) (f32.const 0.))) (get_local $fTemp10)))
				(set_local $fTemp12 (f32.add (f32.mul (f32.const 61.) (get_local $fTemp0)) (f32.add (f32.mul (f32.const 11.) (get_local $fTemp1)) (f32.add (f32.mul (f32.const 41.) (get_local $fTemp2)) (f32.add (f32.add (f32.mul (f32.const 21.) (get_local $fTemp6)) (f32.add (f32.add (get_local $fTemp5) (f32.mul (f32.const 31.) (get_local $fTemp9))) (f32.mul (f32.const 51.) (get_local $fTemp4)))) (f32.mul (f32.const 71.) (get_local $fTemp3)))))))
				(set_local $fTemp13 (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp12) (f32.const 0.))) (get_local $fTemp12)))
				(set_local $fTemp14 (f32.add (f32.add (f32.mul (f32.const 24.) (get_local $fTemp1)) (f32.add (f32.mul (f32.const 54.) (get_local $fTemp2)) (f32.add (f32.mul (f32.const 4.) (get_local $fTemp3)) (f32.add (f32.mul (f32.const 34.) (get_local $fTemp6)) (f32.add (f32.add (f32.mul (f32.const 14.) (get_local $fTemp5)) (f32.mul (f32.const 44.) (get_local $fTemp9))) (f32.mul (f32.const 64.) (get_local $fTemp4))))))) (f32.mul (f32.const 74.) (get_local $fTemp0))))
				(set_local $fTemp15 (f32.mul (get_local $fTemp14) (f32.convert_s/i32 (f32.gt (get_local $fTemp14) (f32.const 0.)))))
				(set_local $fTemp16 (f32.add (f32.mul (f32.const 12.) (get_local $fTemp0)) (f32.add (f32.mul (f32.const 42.) (get_local $fTemp1)) (f32.add (f32.add (f32.mul (f32.const 22.) (get_local $fTemp3)) (f32.add (f32.mul (f32.const 52.) (get_local $fTemp6)) (f32.add (f32.mul (f32.const 2.) (get_local $fTemp4)) (f32.add (f32.mul (f32.const 32.) (get_local $fTemp5)) (f32.mul (f32.const 62.) (get_local $fTemp9)))))) (f32.mul (f32.const 72.) (get_local $fTemp2))))))
				(set_local $fTemp17 (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp16) (f32.const 0.))) (get_local $fTemp16)))
				(set_local $fTemp18 (f32.add (f32.add (f32.add (f32.add (f32.mul (f32.const 100.) (get_local $fTemp8)) (f32.mul (f32.const 110.) (get_local $fTemp11))) (f32.mul (f32.const 120.) (get_local $fTemp13))) (f32.mul (f32.const 130.) (get_local $fTemp15))) (f32.mul (f32.const 140.) (get_local $fTemp17))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (f32.mul (get_local $fTemp18) (f32.convert_s/i32 (f32.gt (get_local $fTemp18) (f32.const 0.)))))
				(set_local $fTemp19 (f32.add (f32.mul (f32.const 121.) (get_local $fTemp17)) (f32.add (f32.mul (f32.const 111.) (get_local $fTemp15)) (f32.add (f32.mul (f32.const 101.) (get_local $fTemp13)) (f32.add (f32.mul (f32.const 131.) (get_local $fTemp8)) (f32.mul (f32.const 141.) (get_local $fTemp11)))))))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp19) (f32.const 0.))) (get_local $fTemp19)))
				(set_local $fTemp20 (f32.add (f32.mul (f32.const 102.) (get_local $fTemp17)) (f32.add (f32.add (f32.add (f32.mul (f32.const 112.) (get_local $fTemp8)) (f32.mul (f32.const 122.) (get_local $fTemp11))) (f32.mul (f32.const 132.) (get_local $fTemp13))) (f32.mul (f32.const 142.) (get_local $fTemp15)))))
				(f32.store (i32.add (get_local $output2) (get_local $i)) (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp20) (f32.const 0.))) (get_local $fTemp20)))
				(set_local $fTemp21 (f32.add (f32.mul (f32.const 133.) (get_local $fTemp17)) (f32.add (f32.mul (f32.const 123.) (get_local $fTemp15)) (f32.add (f32.mul (f32.const 113.) (get_local $fTemp13)) (f32.add (f32.mul (f32.const 103.) (get_local $fTemp11)) (f32.mul (f32.const 143.) (get_local $fTemp8)))))))
				(f32.store (i32.add (get_local $output3) (get_local $i)) (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp21) (f32.const 0.))) (get_local $fTemp21)))
				(set_local $fTemp22 (f32.add (f32.mul (f32.const 114.) (get_local $fTemp17)) (f32.add (f32.mul (f32.const 104.) (get_local $fTemp15)) (f32.add (f32.add (f32.mul (f32.const 124.) (get_local $fTemp8)) (f32.mul (f32.const 134.) (get_local $fTemp11))) (f32.mul (f32.const 144.) (get_local $fTemp13))))))
				(f32.store (i32.add (get_local $output4) (get_local $i)) (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp22) (f32.const 0.))) (get_local $fTemp22)))
				(set_local $fTemp23 (f32.add (f32.add (f32.add (f32.add (f32.mul (f32.const 105.) (get_local $fTemp8)) (f32.mul (f32.const 115.) (get_local $fTemp11))) (f32.mul (f32.const 125.) (get_local $fTemp13))) (f32.mul (f32.const 135.) (get_local $fTemp15))) (f32.mul (f32.const 145.) (get_local $fTemp17))))
				(f32.store (i32.add (get_local $output5) (get_local $i)) (f32.mul (get_local $fTemp23) (f32.convert_s/i32 (f32.gt (get_local $fTemp23) (f32.const 0.)))))
				(set_local $fTemp24 (f32.add (f32.mul (f32.const 126.) (get_local $fTemp17)) (f32.add (f32.mul (f32.const 116.) (get_local $fTemp15)) (f32.add (f32.mul (f32.const 106.) (get_local $fTemp13)) (f32.add (f32.mul (f32.const 136.) (get_local $fTemp8)) (f32.mul (f32.const 146.) (get_local $fTemp11)))))))
				(f32.store (i32.add (get_local $output6) (get_local $i)) (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp24) (f32.const 0.))) (get_local $fTemp24)))
				(set_local $fTemp25 (f32.add (f32.mul (f32.const 107.) (get_local $fTemp17)) (f32.add (f32.add (f32.add (f32.mul (f32.const 117.) (get_local $fTemp8)) (f32.mul (f32.const 127.) (get_local $fTemp11))) (f32.mul (f32.const 137.) (get_local $fTemp13))) (f32.mul (f32.const 147.) (get_local $fTemp15)))))
				(f32.store (i32.add (get_local $output7) (get_local $i)) (f32.mul (f32.convert_s/i32 (f32.gt (get_local $fTemp25) (f32.const 0.))) (get_local $fTemp25)))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
