
(module
	(import $tanf "env" "_tanf" (param f32) (result f32))
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"multibandFilter\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"248\",\"inputs\":\"1\",\"outputs\":\"1\",\"meta\":[{\"author\":\"Grame\"},{\"bandfilter.dsp/author\":\"Grame\"},{\"bandfilter.dsp/copyright\":\"(c)GRAME 2006\"},{\"bandfilter.dsp/license\":\"BSD\"},{\"bandfilter.dsp/name\":\"bandFilter\"},{\"bandfilter.dsp/version\":\"1.0\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"(c)GRAME 2006\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"license\":\"BSD\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"multibandFilter\"},{\"version\":\"1.0\"}],\"ui\":[{\"type\":\"hgroup\",\"label\":\"Multi Band Filter\",\"items\":[{\"type\":\"vgroup\",\"label\":\"peak 0\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_0/Q_factor\",\"index\":\"124\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_0/freq\",\"index\":\"116\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"1000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_0/gain\",\"index\":\"120\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 1\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_1/Q_factor\",\"index\":\"112\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_1/freq\",\"index\":\"104\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"2000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_1/gain\",\"index\":\"108\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 2\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_2/Q_factor\",\"index\":\"100\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_2/freq\",\"index\":\"92\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"3000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_2/gain\",\"index\":\"96\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 3\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_3/Q_factor\",\"index\":\"88\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_3/freq\",\"index\":\"80\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"4000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_3/gain\",\"index\":\"84\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 4\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_4/Q_factor\",\"index\":\"76\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_4/freq\",\"index\":\"68\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"5000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_4/gain\",\"index\":\"72\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 5\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_5/Q_factor\",\"index\":\"64\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_5/freq\",\"index\":\"56\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"6000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_5/gain\",\"index\":\"60\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 6\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_6/Q_factor\",\"index\":\"52\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_6/freq\",\"index\":\"44\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"7000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_6/gain\",\"index\":\"48\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 7\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_7/Q_factor\",\"index\":\"40\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_7/freq\",\"index\":\"32\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"8000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_7/gain\",\"index\":\"36\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 8\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_8/Q_factor\",\"index\":\"28\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_8/freq\",\"index\":\"20\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"9000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_8/gain\",\"index\":\"24\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"peak 9\",\"items\":[{\"type\":\"nentry\",\"label\":\"Q factor\",\"address\":\"/Multi_Band_Filter/peak_9/Q_factor\",\"index\":\"16\",\"meta\":[{\"style\":\"knob\"}],\"init\":\"50\",\"min\":\"0.1\",\"max\":\"100\",\"step\":\"0.1\"},{\"type\":\"nentry\",\"label\":\"freq\",\"address\":\"/Multi_Band_Filter/peak_9/freq\",\"index\":\"8\",\"meta\":[{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"10000\",\"min\":\"20\",\"max\":\"20000\",\"step\":\"1\"},{\"type\":\"vslider\",\"label\":\"gain\",\"address\":\"/Multi_Band_Filter/peak_9/gain\",\"index\":\"12\",\"meta\":[{\"unit\":\"dB\"}],\"init\":\"0\",\"min\":\"-50\",\"max\":\"50\",\"step\":\"0.1\"}]}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 1))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 1))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 0)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 4)) (f32.div (f32.const 3.14159274) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 0))))))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 8)) (f32.const 10000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 12)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 16)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.const 9000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.const 8000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.const 7000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.const 6000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.const 5000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.const 4000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 88)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 92)) (f32.const 3000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 100)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 104)) (f32.const 2000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 108)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 112)) (f32.const 50.))
		(f32.store (i32.add (get_local $dsp) (i32.const 116)) (f32.const 1000.))
		(f32.store (i32.add (get_local $dsp) (i32.const 120)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 124)) (f32.const 50.))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 128) (i32.shl (get_local $l0) (i32.const 2)))) (f32.const 0.))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 3)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 140) (i32.shl (get_local $l1) (i32.const 2)))) (f32.const 0.))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 3)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 152) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 3)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 164) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 3)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 176) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 3)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 188) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 3)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 200) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 3)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 212) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 3)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 224) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 3)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 236) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 3)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 0))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $input0 i32)
		(local $output0 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $fSlow3 f32)
		(local $fSlow4 f32)
		(local $fSlow5 f32)
		(local $fSlow6 f32)
		(local $fSlow7 f32)
		(local $fSlow8 f32)
		(local $fSlow9 f32)
		(local $fSlow10 f32)
		(local $fSlow11 f32)
		(local $fSlow12 f32)
		(local $fSlow13 f32)
		(local $fSlow14 f32)
		(local $fSlow15 f32)
		(local $fSlow16 f32)
		(local $fSlow17 f32)
		(local $fSlow18 f32)
		(local $fSlow19 f32)
		(local $fSlow20 f32)
		(local $fSlow21 f32)
		(local $fSlow22 f32)
		(local $fSlow23 f32)
		(local $fSlow24 f32)
		(local $fSlow25 f32)
		(local $fSlow26 f32)
		(local $fSlow27 f32)
		(local $fSlow28 f32)
		(local $fSlow29 f32)
		(local $fSlow30 f32)
		(local $fSlow31 f32)
		(local $fSlow32 f32)
		(local $fSlow33 f32)
		(local $fSlow34 f32)
		(local $fSlow35 f32)
		(local $fSlow36 f32)
		(local $fSlow37 f32)
		(local $fSlow38 f32)
		(local $fSlow39 f32)
		(local $fSlow40 f32)
		(local $fSlow41 f32)
		(local $fSlow42 f32)
		(local $fSlow43 f32)
		(local $fSlow44 f32)
		(local $fSlow45 f32)
		(local $fSlow46 f32)
		(local $fSlow47 f32)
		(local $fSlow48 f32)
		(local $fSlow49 f32)
		(local $fSlow50 f32)
		(local $fSlow51 f32)
		(local $fSlow52 f32)
		(local $fSlow53 f32)
		(local $fSlow54 f32)
		(local $fSlow55 f32)
		(local $fSlow56 f32)
		(local $fSlow57 f32)
		(local $fSlow58 f32)
		(local $fSlow59 f32)
		(local $fSlow60 f32)
		(local $fSlow61 f32)
		(local $fSlow62 f32)
		(local $fSlow63 f32)
		(local $fSlow64 f32)
		(local $fSlow65 f32)
		(local $fSlow66 f32)
		(local $fSlow67 f32)
		(local $fSlow68 f32)
		(local $fSlow69 f32)
		(local $fSlow70 f32)
		(local $fSlow71 f32)
		(local $fSlow72 f32)
		(local $fSlow73 f32)
		(local $fSlow74 f32)
		(local $fSlow75 f32)
		(local $fSlow76 f32)
		(local $fSlow77 f32)
		(local $fSlow78 f32)
		(local $fSlow79 f32)
		(local $fSlow80 f32)
		(local $fSlow81 f32)
		(local $fSlow82 f32)
		(local $fSlow83 f32)
		(local $fSlow84 f32)
		(local $fSlow85 f32)
		(local $fSlow86 f32)
		(local $fSlow87 f32)
		(local $fSlow88 f32)
		(local $fSlow89 f32)
		(local $i i32)
		(local $fTemp0 f32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $fTemp3 f32)
		(local $fTemp4 f32)
		(local $fTemp5 f32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $fTemp8 f32)
		(local $fTemp9 f32)
		(set_local $input0 (i32.const 0))
		(set_local $output0 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $fSlow3 (f32.const 0.))
		(set_local $fSlow4 (f32.const 0.))
		(set_local $fSlow5 (f32.const 0.))
		(set_local $fSlow6 (f32.const 0.))
		(set_local $fSlow7 (f32.const 0.))
		(set_local $fSlow8 (f32.const 0.))
		(set_local $fSlow9 (f32.const 0.))
		(set_local $fSlow10 (f32.const 0.))
		(set_local $fSlow11 (f32.const 0.))
		(set_local $fSlow12 (f32.const 0.))
		(set_local $fSlow13 (f32.const 0.))
		(set_local $fSlow14 (f32.const 0.))
		(set_local $fSlow15 (f32.const 0.))
		(set_local $fSlow16 (f32.const 0.))
		(set_local $fSlow17 (f32.const 0.))
		(set_local $fSlow18 (f32.const 0.))
		(set_local $fSlow19 (f32.const 0.))
		(set_local $fSlow20 (f32.const 0.))
		(set_local $fSlow21 (f32.const 0.))
		(set_local $fSlow22 (f32.const 0.))
		(set_local $fSlow23 (f32.const 0.))
		(set_local $fSlow24 (f32.const 0.))
		(set_local $fSlow25 (f32.const 0.))
		(set_local $fSlow26 (f32.const 0.))
		(set_local $fSlow27 (f32.const 0.))
		(set_local $fSlow28 (f32.const 0.))
		(set_local $fSlow29 (f32.const 0.))
		(set_local $fSlow30 (f32.const 0.))
		(set_local $fSlow31 (f32.const 0.))
		(set_local $fSlow32 (f32.const 0.))
		(set_local $fSlow33 (f32.const 0.))
		(set_local $fSlow34 (f32.const 0.))
		(set_local $fSlow35 (f32.const 0.))
		(set_local $fSlow36 (f32.const 0.))
		(set_local $fSlow37 (f32.const 0.))
		(set_local $fSlow38 (f32.const 0.))
		(set_local $fSlow39 (f32.const 0.))
		(set_local $fSlow40 (f32.const 0.))
		(set_local $fSlow41 (f32.const 0.))
		(set_local $fSlow42 (f32.const 0.))
		(set_local $fSlow43 (f32.const 0.))
		(set_local $fSlow44 (f32.const 0.))
		(set_local $fSlow45 (f32.const 0.))
		(set_local $fSlow46 (f32.const 0.))
		(set_local $fSlow47 (f32.const 0.))
		(set_local $fSlow48 (f32.const 0.))
		(set_local $fSlow49 (f32.const 0.))
		(set_local $fSlow50 (f32.const 0.))
		(set_local $fSlow51 (f32.const 0.))
		(set_local $fSlow52 (f32.const 0.))
		(set_local $fSlow53 (f32.const 0.))
		(set_local $fSlow54 (f32.const 0.))
		(set_local $fSlow55 (f32.const 0.))
		(set_local $fSlow56 (f32.const 0.))
		(set_local $fSlow57 (f32.const 0.))
		(set_local $fSlow58 (f32.const 0.))
		(set_local $fSlow59 (f32.const 0.))
		(set_local $fSlow60 (f32.const 0.))
		(set_local $fSlow61 (f32.const 0.))
		(set_local $fSlow62 (f32.const 0.))
		(set_local $fSlow63 (f32.const 0.))
		(set_local $fSlow64 (f32.const 0.))
		(set_local $fSlow65 (f32.const 0.))
		(set_local $fSlow66 (f32.const 0.))
		(set_local $fSlow67 (f32.const 0.))
		(set_local $fSlow68 (f32.const 0.))
		(set_local $fSlow69 (f32.const 0.))
		(set_local $fSlow70 (f32.const 0.))
		(set_local $fSlow71 (f32.const 0.))
		(set_local $fSlow72 (f32.const 0.))
		(set_local $fSlow73 (f32.const 0.))
		(set_local $fSlow74 (f32.const 0.))
		(set_local $fSlow75 (f32.const 0.))
		(set_local $fSlow76 (f32.const 0.))
		(set_local $fSlow77 (f32.const 0.))
		(set_local $fSlow78 (f32.const 0.))
		(set_local $fSlow79 (f32.const 0.))
		(set_local $fSlow80 (f32.const 0.))
		(set_local $fSlow81 (f32.const 0.))
		(set_local $fSlow82 (f32.const 0.))
		(set_local $fSlow83 (f32.const 0.))
		(set_local $fSlow84 (f32.const 0.))
		(set_local $fSlow85 (f32.const 0.))
		(set_local $fSlow86 (f32.const 0.))
		(set_local $fSlow87 (f32.const 0.))
		(set_local $fSlow88 (f32.const 0.))
		(set_local $fSlow89 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $fTemp0 (f32.const 0.))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $fTemp4 (f32.const 0.))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $fTemp8 (f32.const 0.))
		(set_local $fTemp9 (f32.const 0.))
		(set_local $input0 (i32.load (i32.add (get_local $inputs) (i32.const 0))))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $fSlow0 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 8))))))
		(set_local $fSlow1 (f32.load (i32.add (get_local $dsp) (i32.const 16))))
		(set_local $fSlow2 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 12)))))) (get_local $fSlow1)))
		(set_local $fSlow3 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow0) (f32.add (get_local $fSlow0) (get_local $fSlow2))) (f32.const 1.))))
		(set_local $fSlow4 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow0) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow5 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
		(set_local $fSlow6 (f32.load (i32.add (get_local $dsp) (i32.const 28))))
		(set_local $fSlow7 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 24)))))) (get_local $fSlow6)))
		(set_local $fSlow8 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow5) (f32.add (get_local $fSlow5) (get_local $fSlow7))) (f32.const 1.))))
		(set_local $fSlow9 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow5) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow10 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 32))))))
		(set_local $fSlow11 (f32.load (i32.add (get_local $dsp) (i32.const 40))))
		(set_local $fSlow12 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 36)))))) (get_local $fSlow11)))
		(set_local $fSlow13 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow10) (f32.add (get_local $fSlow10) (get_local $fSlow12))) (f32.const 1.))))
		(set_local $fSlow14 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow10) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow15 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 44))))))
		(set_local $fSlow16 (f32.load (i32.add (get_local $dsp) (i32.const 52))))
		(set_local $fSlow17 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 48)))))) (get_local $fSlow16)))
		(set_local $fSlow18 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow15) (f32.add (get_local $fSlow15) (get_local $fSlow17))) (f32.const 1.))))
		(set_local $fSlow19 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow15) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow20 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 56))))))
		(set_local $fSlow21 (f32.load (i32.add (get_local $dsp) (i32.const 64))))
		(set_local $fSlow22 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 60)))))) (get_local $fSlow21)))
		(set_local $fSlow23 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow20) (f32.add (get_local $fSlow20) (get_local $fSlow22))) (f32.const 1.))))
		(set_local $fSlow24 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow20) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow25 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 68))))))
		(set_local $fSlow26 (f32.load (i32.add (get_local $dsp) (i32.const 76))))
		(set_local $fSlow27 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 72)))))) (get_local $fSlow26)))
		(set_local $fSlow28 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow25) (f32.add (get_local $fSlow25) (get_local $fSlow27))) (f32.const 1.))))
		(set_local $fSlow29 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow25) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow30 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 80))))))
		(set_local $fSlow31 (f32.load (i32.add (get_local $dsp) (i32.const 88))))
		(set_local $fSlow32 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 84)))))) (get_local $fSlow31)))
		(set_local $fSlow33 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow30) (f32.add (get_local $fSlow30) (get_local $fSlow32))) (f32.const 1.))))
		(set_local $fSlow34 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow30) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow35 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 92))))))
		(set_local $fSlow36 (f32.load (i32.add (get_local $dsp) (i32.const 100))))
		(set_local $fSlow37 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 96)))))) (get_local $fSlow36)))
		(set_local $fSlow38 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow35) (f32.add (get_local $fSlow35) (get_local $fSlow37))) (f32.const 1.))))
		(set_local $fSlow39 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow35) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow40 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 104))))))
		(set_local $fSlow41 (f32.load (i32.add (get_local $dsp) (i32.const 112))))
		(set_local $fSlow42 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 108)))))) (get_local $fSlow41)))
		(set_local $fSlow43 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow40) (f32.add (get_local $fSlow40) (get_local $fSlow42))) (f32.const 1.))))
		(set_local $fSlow44 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow40) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow45 (call $tanf (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 116))))))
		(set_local $fSlow46 (f32.load (i32.add (get_local $dsp) (i32.const 124))))
		(set_local $fSlow47 (f32.div (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.sub (f32.const 0.) (f32.load (i32.add (get_local $dsp) (i32.const 120)))))) (get_local $fSlow46)))
		(set_local $fSlow48 (f32.div (f32.const 1.) (f32.add (f32.mul (get_local $fSlow45) (f32.add (get_local $fSlow45) (get_local $fSlow47))) (f32.const 1.))))
		(set_local $fSlow49 (f32.mul (f32.const 2.) (f32.add (call $powf (get_local $fSlow45) (f32.const 2.)) (f32.const -1.))))
		(set_local $fSlow50 (f32.add (f32.mul (get_local $fSlow45) (f32.sub (get_local $fSlow45) (get_local $fSlow47))) (f32.const 1.)))
		(set_local $fSlow51 (f32.div (f32.const 1.) (get_local $fSlow46)))
		(set_local $fSlow52 (f32.add (f32.mul (get_local $fSlow45) (f32.add (get_local $fSlow45) (get_local $fSlow51))) (f32.const 1.)))
		(set_local $fSlow53 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow45) (f32.sub (get_local $fSlow51) (get_local $fSlow45)))))
		(set_local $fSlow54 (f32.add (f32.mul (get_local $fSlow40) (f32.sub (get_local $fSlow40) (get_local $fSlow42))) (f32.const 1.)))
		(set_local $fSlow55 (f32.div (f32.const 1.) (get_local $fSlow41)))
		(set_local $fSlow56 (f32.add (f32.mul (get_local $fSlow40) (f32.add (get_local $fSlow40) (get_local $fSlow55))) (f32.const 1.)))
		(set_local $fSlow57 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow40) (f32.sub (get_local $fSlow55) (get_local $fSlow40)))))
		(set_local $fSlow58 (f32.add (f32.mul (get_local $fSlow35) (f32.sub (get_local $fSlow35) (get_local $fSlow37))) (f32.const 1.)))
		(set_local $fSlow59 (f32.div (f32.const 1.) (get_local $fSlow36)))
		(set_local $fSlow60 (f32.add (f32.mul (get_local $fSlow35) (f32.add (get_local $fSlow35) (get_local $fSlow59))) (f32.const 1.)))
		(set_local $fSlow61 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow35) (f32.sub (get_local $fSlow59) (get_local $fSlow35)))))
		(set_local $fSlow62 (f32.add (f32.mul (get_local $fSlow30) (f32.sub (get_local $fSlow30) (get_local $fSlow32))) (f32.const 1.)))
		(set_local $fSlow63 (f32.div (f32.const 1.) (get_local $fSlow31)))
		(set_local $fSlow64 (f32.add (f32.mul (get_local $fSlow30) (f32.add (get_local $fSlow30) (get_local $fSlow63))) (f32.const 1.)))
		(set_local $fSlow65 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow30) (f32.sub (get_local $fSlow63) (get_local $fSlow30)))))
		(set_local $fSlow66 (f32.add (f32.mul (get_local $fSlow25) (f32.sub (get_local $fSlow25) (get_local $fSlow27))) (f32.const 1.)))
		(set_local $fSlow67 (f32.div (f32.const 1.) (get_local $fSlow26)))
		(set_local $fSlow68 (f32.add (f32.mul (get_local $fSlow25) (f32.add (get_local $fSlow25) (get_local $fSlow67))) (f32.const 1.)))
		(set_local $fSlow69 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow25) (f32.sub (get_local $fSlow67) (get_local $fSlow25)))))
		(set_local $fSlow70 (f32.add (f32.mul (get_local $fSlow20) (f32.sub (get_local $fSlow20) (get_local $fSlow22))) (f32.const 1.)))
		(set_local $fSlow71 (f32.div (f32.const 1.) (get_local $fSlow21)))
		(set_local $fSlow72 (f32.add (f32.mul (get_local $fSlow20) (f32.add (get_local $fSlow20) (get_local $fSlow71))) (f32.const 1.)))
		(set_local $fSlow73 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow20) (f32.sub (get_local $fSlow71) (get_local $fSlow20)))))
		(set_local $fSlow74 (f32.add (f32.mul (get_local $fSlow15) (f32.sub (get_local $fSlow15) (get_local $fSlow17))) (f32.const 1.)))
		(set_local $fSlow75 (f32.div (f32.const 1.) (get_local $fSlow16)))
		(set_local $fSlow76 (f32.add (f32.mul (get_local $fSlow15) (f32.add (get_local $fSlow15) (get_local $fSlow75))) (f32.const 1.)))
		(set_local $fSlow77 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow15) (f32.sub (get_local $fSlow75) (get_local $fSlow15)))))
		(set_local $fSlow78 (f32.add (f32.mul (get_local $fSlow10) (f32.sub (get_local $fSlow10) (get_local $fSlow12))) (f32.const 1.)))
		(set_local $fSlow79 (f32.div (f32.const 1.) (get_local $fSlow11)))
		(set_local $fSlow80 (f32.add (f32.mul (get_local $fSlow10) (f32.add (get_local $fSlow10) (get_local $fSlow79))) (f32.const 1.)))
		(set_local $fSlow81 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow10) (f32.sub (get_local $fSlow79) (get_local $fSlow10)))))
		(set_local $fSlow82 (f32.add (f32.mul (get_local $fSlow5) (f32.sub (get_local $fSlow5) (get_local $fSlow7))) (f32.const 1.)))
		(set_local $fSlow83 (f32.div (f32.const 1.) (get_local $fSlow6)))
		(set_local $fSlow84 (f32.add (f32.mul (get_local $fSlow5) (f32.add (get_local $fSlow5) (get_local $fSlow83))) (f32.const 1.)))
		(set_local $fSlow85 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow5) (f32.sub (get_local $fSlow83) (get_local $fSlow5)))))
		(set_local $fSlow86 (f32.add (f32.mul (get_local $fSlow0) (f32.sub (get_local $fSlow0) (get_local $fSlow2))) (f32.const 1.)))
		(set_local $fSlow87 (f32.div (f32.const 1.) (get_local $fSlow1)))
		(set_local $fSlow88 (f32.add (f32.mul (get_local $fSlow0) (f32.add (get_local $fSlow0) (get_local $fSlow87))) (f32.const 1.)))
		(set_local $fSlow89 (f32.sub (f32.const 1.) (f32.mul (get_local $fSlow0) (f32.sub (get_local $fSlow87) (get_local $fSlow0)))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(set_local $fTemp0 (f32.mul (get_local $fSlow49) (f32.load (i32.add (get_local $dsp) (i32.const 132)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 128)) (f32.sub (f32.load (i32.add (get_local $input0) (get_local $i))) (f32.mul (get_local $fSlow48) (f32.add (f32.mul (get_local $fSlow50) (f32.load (i32.add (get_local $dsp) (i32.const 136)))) (get_local $fTemp0)))))
				(set_local $fTemp1 (f32.mul (get_local $fSlow44) (f32.load (i32.add (get_local $dsp) (i32.const 144)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 140)) (f32.sub (f32.mul (get_local $fSlow48) (f32.add (f32.add (get_local $fTemp0) (f32.mul (get_local $fSlow52) (f32.load (i32.add (get_local $dsp) (i32.const 128))))) (f32.mul (get_local $fSlow53) (f32.load (i32.add (get_local $dsp) (i32.const 136)))))) (f32.mul (get_local $fSlow43) (f32.add (f32.mul (get_local $fSlow54) (f32.load (i32.add (get_local $dsp) (i32.const 148)))) (get_local $fTemp1)))))
				(set_local $fTemp2 (f32.mul (get_local $fSlow39) (f32.load (i32.add (get_local $dsp) (i32.const 156)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 152)) (f32.sub (f32.mul (get_local $fSlow43) (f32.add (f32.add (get_local $fTemp1) (f32.mul (get_local $fSlow56) (f32.load (i32.add (get_local $dsp) (i32.const 140))))) (f32.mul (get_local $fSlow57) (f32.load (i32.add (get_local $dsp) (i32.const 148)))))) (f32.mul (get_local $fSlow38) (f32.add (f32.mul (get_local $fSlow58) (f32.load (i32.add (get_local $dsp) (i32.const 160)))) (get_local $fTemp2)))))
				(set_local $fTemp3 (f32.mul (get_local $fSlow34) (f32.load (i32.add (get_local $dsp) (i32.const 168)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 164)) (f32.sub (f32.mul (get_local $fSlow38) (f32.add (f32.add (get_local $fTemp2) (f32.mul (get_local $fSlow60) (f32.load (i32.add (get_local $dsp) (i32.const 152))))) (f32.mul (get_local $fSlow61) (f32.load (i32.add (get_local $dsp) (i32.const 160)))))) (f32.mul (get_local $fSlow33) (f32.add (f32.mul (get_local $fSlow62) (f32.load (i32.add (get_local $dsp) (i32.const 172)))) (get_local $fTemp3)))))
				(set_local $fTemp4 (f32.mul (get_local $fSlow29) (f32.load (i32.add (get_local $dsp) (i32.const 180)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 176)) (f32.sub (f32.mul (get_local $fSlow33) (f32.add (f32.add (get_local $fTemp3) (f32.mul (get_local $fSlow64) (f32.load (i32.add (get_local $dsp) (i32.const 164))))) (f32.mul (get_local $fSlow65) (f32.load (i32.add (get_local $dsp) (i32.const 172)))))) (f32.mul (get_local $fSlow28) (f32.add (f32.mul (get_local $fSlow66) (f32.load (i32.add (get_local $dsp) (i32.const 184)))) (get_local $fTemp4)))))
				(set_local $fTemp5 (f32.mul (get_local $fSlow24) (f32.load (i32.add (get_local $dsp) (i32.const 192)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 188)) (f32.sub (f32.mul (get_local $fSlow28) (f32.add (f32.add (get_local $fTemp4) (f32.mul (get_local $fSlow68) (f32.load (i32.add (get_local $dsp) (i32.const 176))))) (f32.mul (get_local $fSlow69) (f32.load (i32.add (get_local $dsp) (i32.const 184)))))) (f32.mul (get_local $fSlow23) (f32.add (f32.mul (get_local $fSlow70) (f32.load (i32.add (get_local $dsp) (i32.const 196)))) (get_local $fTemp5)))))
				(set_local $fTemp6 (f32.mul (get_local $fSlow19) (f32.load (i32.add (get_local $dsp) (i32.const 204)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 200)) (f32.sub (f32.mul (get_local $fSlow23) (f32.add (f32.add (get_local $fTemp5) (f32.mul (get_local $fSlow72) (f32.load (i32.add (get_local $dsp) (i32.const 188))))) (f32.mul (get_local $fSlow73) (f32.load (i32.add (get_local $dsp) (i32.const 196)))))) (f32.mul (get_local $fSlow18) (f32.add (f32.mul (get_local $fSlow74) (f32.load (i32.add (get_local $dsp) (i32.const 208)))) (get_local $fTemp6)))))
				(set_local $fTemp7 (f32.mul (get_local $fSlow14) (f32.load (i32.add (get_local $dsp) (i32.const 216)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 212)) (f32.sub (f32.mul (get_local $fSlow18) (f32.add (f32.add (get_local $fTemp6) (f32.mul (get_local $fSlow76) (f32.load (i32.add (get_local $dsp) (i32.const 200))))) (f32.mul (get_local $fSlow77) (f32.load (i32.add (get_local $dsp) (i32.const 208)))))) (f32.mul (get_local $fSlow13) (f32.add (f32.mul (get_local $fSlow78) (f32.load (i32.add (get_local $dsp) (i32.const 220)))) (get_local $fTemp7)))))
				(set_local $fTemp8 (f32.mul (get_local $fSlow9) (f32.load (i32.add (get_local $dsp) (i32.const 228)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 224)) (f32.sub (f32.mul (get_local $fSlow13) (f32.add (f32.add (get_local $fTemp7) (f32.mul (get_local $fSlow80) (f32.load (i32.add (get_local $dsp) (i32.const 212))))) (f32.mul (get_local $fSlow81) (f32.load (i32.add (get_local $dsp) (i32.const 220)))))) (f32.mul (get_local $fSlow8) (f32.add (f32.mul (get_local $fSlow82) (f32.load (i32.add (get_local $dsp) (i32.const 232)))) (get_local $fTemp8)))))
				(set_local $fTemp9 (f32.mul (get_local $fSlow4) (f32.load (i32.add (get_local $dsp) (i32.const 240)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 236)) (f32.sub (f32.mul (get_local $fSlow8) (f32.add (f32.add (get_local $fTemp8) (f32.mul (get_local $fSlow84) (f32.load (i32.add (get_local $dsp) (i32.const 224))))) (f32.mul (get_local $fSlow85) (f32.load (i32.add (get_local $dsp) (i32.const 232)))))) (f32.mul (get_local $fSlow3) (f32.add (f32.mul (get_local $fSlow86) (f32.load (i32.add (get_local $dsp) (i32.const 244)))) (get_local $fTemp9)))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (f32.mul (get_local $fSlow3) (f32.add (f32.add (get_local $fTemp9) (f32.mul (get_local $fSlow88) (f32.load (i32.add (get_local $dsp) (i32.const 236))))) (f32.mul (get_local $fSlow89) (f32.load (i32.add (get_local $dsp) (i32.const 244)))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 136)) (f32.load (i32.add (get_local $dsp) (i32.const 132))))
				(f32.store (i32.add (get_local $dsp) (i32.const 132)) (f32.load (i32.add (get_local $dsp) (i32.const 128))))
				(f32.store (i32.add (get_local $dsp) (i32.const 148)) (f32.load (i32.add (get_local $dsp) (i32.const 144))))
				(f32.store (i32.add (get_local $dsp) (i32.const 144)) (f32.load (i32.add (get_local $dsp) (i32.const 140))))
				(f32.store (i32.add (get_local $dsp) (i32.const 160)) (f32.load (i32.add (get_local $dsp) (i32.const 156))))
				(f32.store (i32.add (get_local $dsp) (i32.const 156)) (f32.load (i32.add (get_local $dsp) (i32.const 152))))
				(f32.store (i32.add (get_local $dsp) (i32.const 172)) (f32.load (i32.add (get_local $dsp) (i32.const 168))))
				(f32.store (i32.add (get_local $dsp) (i32.const 168)) (f32.load (i32.add (get_local $dsp) (i32.const 164))))
				(f32.store (i32.add (get_local $dsp) (i32.const 184)) (f32.load (i32.add (get_local $dsp) (i32.const 180))))
				(f32.store (i32.add (get_local $dsp) (i32.const 180)) (f32.load (i32.add (get_local $dsp) (i32.const 176))))
				(f32.store (i32.add (get_local $dsp) (i32.const 196)) (f32.load (i32.add (get_local $dsp) (i32.const 192))))
				(f32.store (i32.add (get_local $dsp) (i32.const 192)) (f32.load (i32.add (get_local $dsp) (i32.const 188))))
				(f32.store (i32.add (get_local $dsp) (i32.const 208)) (f32.load (i32.add (get_local $dsp) (i32.const 204))))
				(f32.store (i32.add (get_local $dsp) (i32.const 204)) (f32.load (i32.add (get_local $dsp) (i32.const 200))))
				(f32.store (i32.add (get_local $dsp) (i32.const 220)) (f32.load (i32.add (get_local $dsp) (i32.const 216))))
				(f32.store (i32.add (get_local $dsp) (i32.const 216)) (f32.load (i32.add (get_local $dsp) (i32.const 212))))
				(f32.store (i32.add (get_local $dsp) (i32.const 232)) (f32.load (i32.add (get_local $dsp) (i32.const 228))))
				(f32.store (i32.add (get_local $dsp) (i32.const 228)) (f32.load (i32.add (get_local $dsp) (i32.const 224))))
				(f32.store (i32.add (get_local $dsp) (i32.const 244)) (f32.load (i32.add (get_local $dsp) (i32.const 240))))
				(f32.store (i32.add (get_local $dsp) (i32.const 240)) (f32.load (i32.add (get_local $dsp) (i32.const 236))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
