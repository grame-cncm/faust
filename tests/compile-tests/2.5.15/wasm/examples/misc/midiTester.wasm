
(module
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"midiTester\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"128\",\"inputs\":\"1\",\"outputs\":\"1\",\"meta\":[{\"author\":\"Vincent Rateau, GRAME\"},{\"license\":\"GPL v3\"},{\"name\":\"midiTester\"},{\"reference\":\"www.sonejo.net\"},{\"version\":\"1.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"FAUST MIDI TESTER\",\"items\":[{\"type\":\"hgroup\",\"label\":\"0x00\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"vgroup\",\"label\":\"CTRL IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"Ctrl Bool IN (Ctrl 100)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CTRL_IN/OUT/Ctrl_Bool_IN_(Ctrl_100)\",\"index\":\"112\",\"meta\":[{\"midi\":\"ctrl 100\"}]},{\"type\":\"hbargraph\",\"label\":\"Ctrl Bool OUT (Ctrl 101)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CTRL_IN/OUT/Ctrl_Bool_OUT_(Ctrl_101)\",\"index\":\"116\",\"meta\":[{\"midi\":\"ctrl 101\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"Ctrl Value IN (Ctrl 50)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CTRL_IN/OUT/Ctrl_Value_IN_(Ctrl_50)\",\"index\":\"104\",\"meta\":[{\"midi\":\"ctrl 50\"}],\"init\":\"60\",\"min\":\"0\",\"max\":\"127\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"Ctrl Value OUT (Ctrl 51)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CTRL_IN/OUT/Ctrl_Value_OUT_(Ctrl_51)\",\"index\":\"108\",\"meta\":[{\"midi\":\"ctrl 51\"}],\"min\":\"0\",\"max\":\"127\"}]},{\"type\":\"vgroup\",\"label\":\"MIDI SYNC (IN)\",\"items\":[{\"type\":\"checkbox\",\"label\":\"MIDI START/STOP\",\"address\":\"/FAUST_MIDI_TESTER/0x00/MIDI_SYNC_(IN)/MIDI_START/STOP\",\"index\":\"64\",\"meta\":[{\"midi\":\"start\"},{\"midi\":\"stop\"}]},{\"type\":\"checkbox\",\"label\":\"MIDI clock signal\",\"address\":\"/FAUST_MIDI_TESTER/0x00/MIDI_SYNC_(IN)/MIDI_clock_signal\",\"index\":\"68\",\"meta\":[{\"midi\":\"clock\"}]}]},{\"type\":\"vgroup\",\"label\":\"NOTE OFF IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"NoteOff Bool IN (Note 100)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_OFF_IN/OUT/NoteOff_Bool_IN_(Note_100)\",\"index\":\"72\",\"meta\":[{\"midi\":\"keyoff 100\"}]},{\"type\":\"hbargraph\",\"label\":\"NoteOff Bool OUT (Note 101)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_OFF_IN/OUT/NoteOff_Bool_OUT_(Note_101)\",\"index\":\"76\",\"meta\":[{\"midi\":\"keyoff 101\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"NoteOff Value IN (Note 50)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_OFF_IN/OUT/NoteOff_Value_IN_(Note_50)\",\"index\":\"80\",\"meta\":[{\"midi\":\"keyoff 50\"}],\"init\":\"60\",\"min\":\"0\",\"max\":\"127\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"NoteOff Value OUT (Note 51)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_OFF_IN/OUT/NoteOff_Value_OUT_(Note_51)\",\"index\":\"84\",\"meta\":[{\"midi\":\"keyoff 51\"}],\"min\":\"0\",\"max\":\"127\"}]},{\"type\":\"vgroup\",\"label\":\"NOTE ON IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"NoteOn Bool IN (Note 100)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_ON_IN/OUT/NoteOn_Bool_IN_(Note_100)\",\"index\":\"88\",\"meta\":[{\"midi\":\"keyon 100\"}]},{\"type\":\"hbargraph\",\"label\":\"NoteOn Bool OUT (Note 101)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_ON_IN/OUT/NoteOn_Bool_OUT_(Note_101)\",\"index\":\"92\",\"meta\":[{\"midi\":\"keyon 101\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"NoteOn Value IN (Note 50)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_ON_IN/OUT/NoteOn_Value_IN_(Note_50)\",\"index\":\"96\",\"meta\":[{\"midi\":\"keyon 50\"}],\"init\":\"60\",\"min\":\"0\",\"max\":\"127\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"NoteOn Value OUT (Note 51)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/NOTE_ON_IN/OUT/NoteOn_Value_OUT_(Note_51)\",\"index\":\"100\",\"meta\":[{\"midi\":\"keyon 51\"}],\"min\":\"0\",\"max\":\"127\"}]}]},{\"type\":\"hgroup\",\"label\":\"0x00\",\"meta\":[{\"2\":\"\"}],\"items\":[{\"type\":\"vgroup\",\"label\":\"CHANNEL AFTERTOUCH (CHAT) IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"Note CHAT Bool IN (Note 100)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CHANNEL_AFTERTOUCH_(CHAT)_IN/OUT/Note_CHAT_Bool_IN_(Note_100)\",\"index\":\"16\",\"meta\":[{\"midi\":\"chanpress 100\"}]},{\"type\":\"hbargraph\",\"label\":\"Note CHAT Bool OUT (Note 101)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CHANNEL_AFTERTOUCH_(CHAT)_IN/OUT/Note_CHAT_Bool_OUT_(Note_101)\",\"index\":\"20\",\"meta\":[{\"midi\":\"chanpress 101\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"Note CHAT Value IN (Note 50)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CHANNEL_AFTERTOUCH_(CHAT)_IN/OUT/Note_CHAT_Value_IN_(Note_50)\",\"index\":\"24\",\"meta\":[{\"midi\":\"chanpress 50\"}],\"init\":\"60\",\"min\":\"0\",\"max\":\"127\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"Note CHAT Value OUT (Note 51)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/CHANNEL_AFTERTOUCH_(CHAT)_IN/OUT/Note_CHAT_Value_OUT_(Note_51)\",\"index\":\"28\",\"meta\":[{\"midi\":\"chanpress 51\"}],\"min\":\"0\",\"max\":\"127\"}]},{\"type\":\"vgroup\",\"label\":\"KEY AFTERTOUCH (KAT) IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"Note KAT Bool IN (Note 100)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/KEY_AFTERTOUCH_(KAT)_IN/OUT/Note_KAT_Bool_IN_(Note_100)\",\"index\":\"48\",\"meta\":[{\"midi\":\"keypress 100\"}]},{\"type\":\"hbargraph\",\"label\":\"Note KAT Bool OUT (Note 101)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/KEY_AFTERTOUCH_(KAT)_IN/OUT/Note_KAT_Bool_OUT_(Note_101)\",\"index\":\"52\",\"meta\":[{\"midi\":\"keypress 101\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"Note KAT Value IN (Note 50)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/KEY_AFTERTOUCH_(KAT)_IN/OUT/Note_KAT_Value_IN_(Note_50)\",\"index\":\"56\",\"meta\":[{\"midi\":\"keypress 50\"}],\"init\":\"60\",\"min\":\"0\",\"max\":\"127\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"Note KAT Value OUT (Note 51)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/KEY_AFTERTOUCH_(KAT)_IN/OUT/Note_KAT_Value_OUT_(Note_51)\",\"index\":\"60\",\"meta\":[{\"midi\":\"keypress 51\"}],\"min\":\"0\",\"max\":\"127\"}]},{\"type\":\"vgroup\",\"label\":\"PITCHWHEEL IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"Pitchwheel Bool IN\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PITCHWHEEL_IN/OUT/Pitchwheel_Bool_IN\",\"index\":\"0\",\"meta\":[{\"midi\":\"pitchwheel\"}]},{\"type\":\"hbargraph\",\"label\":\"Pitchwheel Bool OUT\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PITCHWHEEL_IN/OUT/Pitchwheel_Bool_OUT\",\"index\":\"4\",\"meta\":[{\"midi\":\"pitchwheel\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"Pitchwheel Value IN\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PITCHWHEEL_IN/OUT/Pitchwheel_Value_IN\",\"index\":\"8\",\"meta\":[{\"midi\":\"pitchwheel\"}],\"init\":\"0\",\"min\":\"-8192\",\"max\":\"8191\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"Pitchwheel Value OUT\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PITCHWHEEL_IN/OUT/Pitchwheel_Value_OUT\",\"index\":\"12\",\"meta\":[{\"midi\":\"pitchwheel\"}],\"min\":\"-8192\",\"max\":\"8191\"}]},{\"type\":\"vgroup\",\"label\":\"PROGRAM CHANGE (PC) IN/OUT\",\"items\":[{\"type\":\"checkbox\",\"label\":\"ProgramChange Bool IN (PC 100)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PROGRAM_CHANGE_(PC)_IN/OUT/ProgramChange_Bool_IN_(PC_100)\",\"index\":\"32\",\"meta\":[{\"midi\":\"pgm 100\"}]},{\"type\":\"hbargraph\",\"label\":\"ProgramChange Bool OUT (PC 101)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PROGRAM_CHANGE_(PC)_IN/OUT/ProgramChange_Bool_OUT_(PC_101)\",\"index\":\"36\",\"meta\":[{\"midi\":\"pgm 101\"}],\"min\":\"0\",\"max\":\"1\"},{\"type\":\"hslider\",\"label\":\"ProgramChange Value IN (PC 50)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PROGRAM_CHANGE_(PC)_IN/OUT/ProgramChange_Value_IN_(PC_50)\",\"index\":\"40\",\"meta\":[{\"midi\":\"pgm 50\"}],\"init\":\"60\",\"min\":\"0\",\"max\":\"127\",\"step\":\"1\"},{\"type\":\"hbargraph\",\"label\":\"ProgramChange Value OUT (PC 51)\",\"address\":\"/FAUST_MIDI_TESTER/0x00/PROGRAM_CHANGE_(PC)_IN/OUT/ProgramChange_Value_OUT_(PC_51)\",\"index\":\"44\",\"meta\":[{\"midi\":\"pgm 51\"}],\"min\":\"0\",\"max\":\"127\"}]}]}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 1))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 1))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 124)) (get_local $samplingFreq))
		(i32.store (i32.add (get_local $dsp) (i32.const 120)) (i32.const 0))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 0)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 8)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 16)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.const 60.))
		(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.const 60.))
		(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.const 60.))
		(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.const 60.))
		(f32.store (i32.add (get_local $dsp) (i32.const 88)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.const 60.))
		(f32.store (i32.add (get_local $dsp) (i32.const 104)) (f32.const 60.))
		(f32.store (i32.add (get_local $dsp) (i32.const 112)) (f32.const 0.))
		
	)
	(func $instanceClear (param $dsp i32)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 124))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $input0 i32)
		(local $output0 i32)
		(local $i i32)
		(set_local $input0 (i32.const 0))
		(set_local $output0 (i32.const 0))
		(set_local $i (i32.const 0))
		(set_local $input0 (i32.load (i32.add (get_local $inputs) (i32.const 0))))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(f32.store (i32.add (get_local $dsp) (i32.const 4)) (f32.load (i32.add (get_local $dsp) (i32.const 0))))
		(f32.store (i32.add (get_local $dsp) (i32.const 12)) (f32.load (i32.add (get_local $dsp) (i32.const 8))))
		(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.load (i32.add (get_local $dsp) (i32.const 16))))
		(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.load (i32.add (get_local $dsp) (i32.const 24))))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.load (i32.add (get_local $dsp) (i32.const 32))))
		(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.load (i32.add (get_local $dsp) (i32.const 40))))
		(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.load (i32.add (get_local $dsp) (i32.const 48))))
		(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.load (i32.add (get_local $dsp) (i32.const 56))))
		(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.load (i32.add (get_local $dsp) (i32.const 72))))
		(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.load (i32.add (get_local $dsp) (i32.const 80))))
		(f32.store (i32.add (get_local $dsp) (i32.const 92)) (f32.load (i32.add (get_local $dsp) (i32.const 88))))
		(f32.store (i32.add (get_local $dsp) (i32.const 100)) (f32.load (i32.add (get_local $dsp) (i32.const 96))))
		(f32.store (i32.add (get_local $dsp) (i32.const 108)) (f32.load (i32.add (get_local $dsp) (i32.const 104))))
		(f32.store (i32.add (get_local $dsp) (i32.const 116)) (f32.load (i32.add (get_local $dsp) (i32.const 112))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(f32.store (i32.add (get_local $output0) (get_local $i)) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 120)))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
