
(module
	(import $expf "env" "_expf" (param f32) (result f32))
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(import $cosf "env" "_cosf" (param f32) (result f32))
	(import $sinf "env" "_sinf" (param f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"fourSourcesToOcto\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"108\",\"inputs\":\"4\",\"outputs\":\"8\",\"meta\":[{\"author\":\"CICM\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"(c)CICM 2013\"},{\"hoa.lib/author\":\"Pierre Guillot\"},{\"hoa.lib/copyright\":\"2012-2013 Guillot, Paris, Colafrancesco, CICM labex art H2H, U. Paris 8\"},{\"hoa.lib/name\":\"High Order Ambisonics library\"},{\"license\":\"BSD\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"fourSourcesToOcto\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"},{\"version\":\"1.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"fourSourcesToOcto\",\"items\":[{\"type\":\"hslider\",\"label\":\"Angle1\",\"address\":\"/fourSourcesToOcto/Angle1\",\"index\":\"60\",\"init\":\"0\",\"min\":\"-6.28319\",\"max\":\"6.28319\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Angle2\",\"address\":\"/fourSourcesToOcto/Angle2\",\"index\":\"72\",\"init\":\"0\",\"min\":\"-6.28319\",\"max\":\"6.28319\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Angle3\",\"address\":\"/fourSourcesToOcto/Angle3\",\"index\":\"84\",\"init\":\"0\",\"min\":\"-6.28319\",\"max\":\"6.28319\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Angle4\",\"address\":\"/fourSourcesToOcto/Angle4\",\"index\":\"96\",\"init\":\"0\",\"min\":\"-6.28319\",\"max\":\"6.28319\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Radius1\",\"address\":\"/fourSourcesToOcto/Radius1\",\"index\":\"12\",\"init\":\"1\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Radius2\",\"address\":\"/fourSourcesToOcto/Radius2\",\"index\":\"24\",\"init\":\"1\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Radius3\",\"address\":\"/fourSourcesToOcto/Radius3\",\"index\":\"36\",\"init\":\"1\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Radius4\",\"address\":\"/fourSourcesToOcto/Radius4\",\"index\":\"48\",\"init\":\"1\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.001\"}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 4))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 8))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 0)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 4)) (call $expf (f32.sub (f32.const 0.) (f32.div (f32.const 50.) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 0))))))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 8)) (f32.sub (f32.const 1.) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 12)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.const 0.))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16) (i32.shl (get_local $l0) (i32.const 2)))) (f32.const 0.))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 2)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 28) (i32.shl (get_local $l1) (i32.const 2)))) (f32.const 0.))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 40) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 2)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 52) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 2)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 64) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 76) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 2)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 88) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 2)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 100) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 2)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 0))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $input0 i32)
		(local $input1 i32)
		(local $input2 i32)
		(local $input3 i32)
		(local $output0 i32)
		(local $output1 i32)
		(local $output2 i32)
		(local $output3 i32)
		(local $output4 i32)
		(local $output5 i32)
		(local $output6 i32)
		(local $output7 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $fSlow3 f32)
		(local $fSlow4 f32)
		(local $fSlow5 f32)
		(local $fSlow6 f32)
		(local $fSlow7 f32)
		(local $i i32)
		(local $fTemp0 f32)
		(local $iTemp1 i32)
		(local $iTemp2 i32)
		(local $fTemp3 f32)
		(local $fTemp4 f32)
		(local $fTemp5 f32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $iTemp8 i32)
		(local $iTemp9 i32)
		(local $fTemp10 f32)
		(local $fTemp11 f32)
		(local $fTemp12 f32)
		(local $fTemp13 f32)
		(local $fTemp14 f32)
		(local $iTemp15 i32)
		(local $iTemp16 i32)
		(local $fTemp17 f32)
		(local $fTemp18 f32)
		(local $fTemp19 f32)
		(local $fTemp20 f32)
		(local $fTemp21 f32)
		(local $iTemp22 i32)
		(local $iTemp23 i32)
		(local $fTemp24 f32)
		(local $fTemp25 f32)
		(local $fTemp26 f32)
		(local $fTemp27 f32)
		(local $fTemp28 f32)
		(local $fTemp29 f32)
		(local $fTemp30 f32)
		(local $fTemp31 f32)
		(local $fTemp32 f32)
		(local $fTemp33 f32)
		(local $fTemp34 f32)
		(local $fTemp35 f32)
		(local $fTemp36 f32)
		(local $fTemp37 f32)
		(local $fTemp38 f32)
		(local $fTemp39 f32)
		(local $fTemp40 f32)
		(local $fTemp41 f32)
		(local $fTemp42 f32)
		(local $fTemp43 f32)
		(local $fTemp44 f32)
		(local $fTemp45 f32)
		(local $fTemp46 f32)
		(local $fTemp47 f32)
		(local $fTemp48 f32)
		(local $fTemp49 f32)
		(local $fTemp50 f32)
		(local $fTemp51 f32)
		(local $fTemp52 f32)
		(local $fTemp53 f32)
		(local $fTemp54 f32)
		(local $fTemp55 f32)
		(local $fTemp56 f32)
		(local $fTemp57 f32)
		(local $fTemp58 f32)
		(local $fTemp59 f32)
		(local $fTemp60 f32)
		(local $fTemp61 f32)
		(local $fTemp62 f32)
		(local $fTemp63 f32)
		(local $fTemp64 f32)
		(local $fTemp65 f32)
		(local $fTemp66 f32)
		(local $fTemp67 f32)
		(local $fTemp68 f32)
		(local $fTemp69 f32)
		(local $fTemp70 f32)
		(local $fTemp71 f32)
		(local $fTemp72 f32)
		(local $fTemp73 f32)
		(local $fTemp74 f32)
		(local $fTemp75 f32)
		(local $fTemp76 f32)
		(local $fTemp77 f32)
		(local $fTemp78 f32)
		(local $fTemp79 f32)
		(local $fTemp80 f32)
		(local $fTemp81 f32)
		(local $fTemp82 f32)
		(local $fTemp83 f32)
		(local $fTemp84 f32)
		(set_local $input0 (i32.const 0))
		(set_local $input1 (i32.const 0))
		(set_local $input2 (i32.const 0))
		(set_local $input3 (i32.const 0))
		(set_local $output0 (i32.const 0))
		(set_local $output1 (i32.const 0))
		(set_local $output2 (i32.const 0))
		(set_local $output3 (i32.const 0))
		(set_local $output4 (i32.const 0))
		(set_local $output5 (i32.const 0))
		(set_local $output6 (i32.const 0))
		(set_local $output7 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $fSlow3 (f32.const 0.))
		(set_local $fSlow4 (f32.const 0.))
		(set_local $fSlow5 (f32.const 0.))
		(set_local $fSlow6 (f32.const 0.))
		(set_local $fSlow7 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $fTemp0 (f32.const 0.))
		(set_local $iTemp1 (i32.const 0))
		(set_local $iTemp2 (i32.const 0))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $fTemp4 (f32.const 0.))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $iTemp8 (i32.const 0))
		(set_local $iTemp9 (i32.const 0))
		(set_local $fTemp10 (f32.const 0.))
		(set_local $fTemp11 (f32.const 0.))
		(set_local $fTemp12 (f32.const 0.))
		(set_local $fTemp13 (f32.const 0.))
		(set_local $fTemp14 (f32.const 0.))
		(set_local $iTemp15 (i32.const 0))
		(set_local $iTemp16 (i32.const 0))
		(set_local $fTemp17 (f32.const 0.))
		(set_local $fTemp18 (f32.const 0.))
		(set_local $fTemp19 (f32.const 0.))
		(set_local $fTemp20 (f32.const 0.))
		(set_local $fTemp21 (f32.const 0.))
		(set_local $iTemp22 (i32.const 0))
		(set_local $iTemp23 (i32.const 0))
		(set_local $fTemp24 (f32.const 0.))
		(set_local $fTemp25 (f32.const 0.))
		(set_local $fTemp26 (f32.const 0.))
		(set_local $fTemp27 (f32.const 0.))
		(set_local $fTemp28 (f32.const 0.))
		(set_local $fTemp29 (f32.const 0.))
		(set_local $fTemp30 (f32.const 0.))
		(set_local $fTemp31 (f32.const 0.))
		(set_local $fTemp32 (f32.const 0.))
		(set_local $fTemp33 (f32.const 0.))
		(set_local $fTemp34 (f32.const 0.))
		(set_local $fTemp35 (f32.const 0.))
		(set_local $fTemp36 (f32.const 0.))
		(set_local $fTemp37 (f32.const 0.))
		(set_local $fTemp38 (f32.const 0.))
		(set_local $fTemp39 (f32.const 0.))
		(set_local $fTemp40 (f32.const 0.))
		(set_local $fTemp41 (f32.const 0.))
		(set_local $fTemp42 (f32.const 0.))
		(set_local $fTemp43 (f32.const 0.))
		(set_local $fTemp44 (f32.const 0.))
		(set_local $fTemp45 (f32.const 0.))
		(set_local $fTemp46 (f32.const 0.))
		(set_local $fTemp47 (f32.const 0.))
		(set_local $fTemp48 (f32.const 0.))
		(set_local $fTemp49 (f32.const 0.))
		(set_local $fTemp50 (f32.const 0.))
		(set_local $fTemp51 (f32.const 0.))
		(set_local $fTemp52 (f32.const 0.))
		(set_local $fTemp53 (f32.const 0.))
		(set_local $fTemp54 (f32.const 0.))
		(set_local $fTemp55 (f32.const 0.))
		(set_local $fTemp56 (f32.const 0.))
		(set_local $fTemp57 (f32.const 0.))
		(set_local $fTemp58 (f32.const 0.))
		(set_local $fTemp59 (f32.const 0.))
		(set_local $fTemp60 (f32.const 0.))
		(set_local $fTemp61 (f32.const 0.))
		(set_local $fTemp62 (f32.const 0.))
		(set_local $fTemp63 (f32.const 0.))
		(set_local $fTemp64 (f32.const 0.))
		(set_local $fTemp65 (f32.const 0.))
		(set_local $fTemp66 (f32.const 0.))
		(set_local $fTemp67 (f32.const 0.))
		(set_local $fTemp68 (f32.const 0.))
		(set_local $fTemp69 (f32.const 0.))
		(set_local $fTemp70 (f32.const 0.))
		(set_local $fTemp71 (f32.const 0.))
		(set_local $fTemp72 (f32.const 0.))
		(set_local $fTemp73 (f32.const 0.))
		(set_local $fTemp74 (f32.const 0.))
		(set_local $fTemp75 (f32.const 0.))
		(set_local $fTemp76 (f32.const 0.))
		(set_local $fTemp77 (f32.const 0.))
		(set_local $fTemp78 (f32.const 0.))
		(set_local $fTemp79 (f32.const 0.))
		(set_local $fTemp80 (f32.const 0.))
		(set_local $fTemp81 (f32.const 0.))
		(set_local $fTemp82 (f32.const 0.))
		(set_local $fTemp83 (f32.const 0.))
		(set_local $fTemp84 (f32.const 0.))
		(set_local $input0 (i32.load (i32.add (get_local $inputs) (i32.const 0))))
		(set_local $input1 (i32.load (i32.add (get_local $inputs) (i32.const 4))))
		(set_local $input2 (i32.load (i32.add (get_local $inputs) (i32.const 8))))
		(set_local $input3 (i32.load (i32.add (get_local $inputs) (i32.const 12))))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $output1 (i32.load (i32.add (get_local $outputs) (i32.const 4))))
		(set_local $output2 (i32.load (i32.add (get_local $outputs) (i32.const 8))))
		(set_local $output3 (i32.load (i32.add (get_local $outputs) (i32.const 12))))
		(set_local $output4 (i32.load (i32.add (get_local $outputs) (i32.const 16))))
		(set_local $output5 (i32.load (i32.add (get_local $outputs) (i32.const 20))))
		(set_local $output6 (i32.load (i32.add (get_local $outputs) (i32.const 24))))
		(set_local $output7 (i32.load (i32.add (get_local $outputs) (i32.const 28))))
		(set_local $fSlow0 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 12)))))
		(set_local $fSlow1 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 24)))))
		(set_local $fSlow2 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 36)))))
		(set_local $fSlow3 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 48)))))
		(set_local $fSlow4 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 60)))))
		(set_local $fSlow5 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 72)))))
		(set_local $fSlow6 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 84)))))
		(set_local $fSlow7 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 8))) (f32.load (i32.add (get_local $dsp) (i32.const 96)))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(set_local $fTemp0 (f32.load (i32.add (get_local $input0) (get_local $i))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16)) (f32.add (get_local $fSlow0) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 20))))))
				(set_local $iTemp1 (f32.gt (f32.load (i32.add (get_local $dsp) (i32.const 16))) (f32.const 1.)))
				(set_local $iTemp2 (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 16))) (f32.const 1.)))
				(set_local $fTemp3 (f32.add (f32.convert_s/i32 (get_local $iTemp1)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 16))) (f32.convert_s/i32 (get_local $iTemp2)))))
				(set_local $fTemp4 (f32.add (f32.mul (f32.const 1.38629436) (f32.sub (f32.const 1.) (get_local $fTemp3))) (f32.const 1.)))
				(set_local $fTemp5 (f32.mul (get_local $fTemp0) (get_local $fTemp4)))
				(set_local $fTemp6 (f32.add (f32.convert_s/i32 (get_local $iTemp2)) (f32.mul (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 16))) (f32.const 2.)) (f32.convert_s/i32 (get_local $iTemp1)))))
				(set_local $fTemp7 (f32.load (i32.add (get_local $input1) (get_local $i))))
				(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.add (get_local $fSlow1) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 32))))))
				(set_local $iTemp8 (f32.gt (f32.load (i32.add (get_local $dsp) (i32.const 28))) (f32.const 1.)))
				(set_local $iTemp9 (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 28))) (f32.const 1.)))
				(set_local $fTemp10 (f32.add (f32.convert_s/i32 (get_local $iTemp8)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 28))) (f32.convert_s/i32 (get_local $iTemp9)))))
				(set_local $fTemp11 (f32.add (f32.mul (f32.const 1.38629436) (f32.sub (f32.const 1.) (get_local $fTemp10))) (f32.const 1.)))
				(set_local $fTemp12 (f32.mul (get_local $fTemp7) (get_local $fTemp11)))
				(set_local $fTemp13 (f32.add (f32.convert_s/i32 (get_local $iTemp9)) (f32.mul (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 28))) (f32.const 2.)) (f32.convert_s/i32 (get_local $iTemp8)))))
				(set_local $fTemp14 (f32.load (i32.add (get_local $input2) (get_local $i))))
				(f32.store (i32.add (get_local $dsp) (i32.const 40)) (f32.add (get_local $fSlow2) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 44))))))
				(set_local $iTemp15 (f32.gt (f32.load (i32.add (get_local $dsp) (i32.const 40))) (f32.const 1.)))
				(set_local $iTemp16 (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 40))) (f32.const 1.)))
				(set_local $fTemp17 (f32.add (f32.convert_s/i32 (get_local $iTemp15)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 40))) (f32.convert_s/i32 (get_local $iTemp16)))))
				(set_local $fTemp18 (f32.add (f32.mul (f32.const 1.38629436) (f32.sub (f32.const 1.) (get_local $fTemp17))) (f32.const 1.)))
				(set_local $fTemp19 (f32.mul (get_local $fTemp14) (get_local $fTemp18)))
				(set_local $fTemp20 (f32.add (f32.convert_s/i32 (get_local $iTemp16)) (f32.mul (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 40))) (f32.const 2.)) (f32.convert_s/i32 (get_local $iTemp15)))))
				(set_local $fTemp21 (f32.load (i32.add (get_local $input3) (get_local $i))))
				(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.add (get_local $fSlow3) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 56))))))
				(set_local $iTemp22 (f32.gt (f32.load (i32.add (get_local $dsp) (i32.const 52))) (f32.const 1.)))
				(set_local $iTemp23 (f32.lt (f32.load (i32.add (get_local $dsp) (i32.const 52))) (f32.const 1.)))
				(set_local $fTemp24 (f32.add (f32.convert_s/i32 (get_local $iTemp22)) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 52))) (f32.convert_s/i32 (get_local $iTemp23)))))
				(set_local $fTemp25 (f32.add (f32.mul (f32.const 1.38629436) (f32.sub (f32.const 1.) (get_local $fTemp24))) (f32.const 1.)))
				(set_local $fTemp26 (f32.mul (get_local $fTemp21) (get_local $fTemp25)))
				(set_local $fTemp27 (f32.add (f32.convert_s/i32 (get_local $iTemp23)) (f32.mul (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 52))) (f32.const 2.)) (f32.convert_s/i32 (get_local $iTemp22)))))
				(set_local $fTemp28 (f32.mul (f32.const 0.142857149) (f32.add (f32.add (f32.add (f32.div (get_local $fTemp5) (get_local $fTemp6)) (f32.div (get_local $fTemp12) (get_local $fTemp13))) (f32.div (get_local $fTemp19) (get_local $fTemp20))) (f32.div (get_local $fTemp26) (get_local $fTemp27)))))
				(set_local $fTemp29 (f32.mul (f32.const 2.) (get_local $fTemp3)))
				(set_local $fTemp30 (f32.add (f32.mul (f32.const 2.) (f32.mul (f32.mul (get_local $fTemp3) (f32.convert_s/i32 (f32.gt (get_local $fTemp29) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp29) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp29) (f32.const 1.)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.add (get_local $fSlow4) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 68))))))
				(set_local $fTemp31 (f32.mul (f32.const 2.) (get_local $fTemp10)))
				(set_local $fTemp32 (f32.add (f32.mul (f32.const 2.) (f32.mul (f32.mul (get_local $fTemp10) (f32.convert_s/i32 (f32.gt (get_local $fTemp31) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp31) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp31) (f32.const 1.)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.add (get_local $fSlow5) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 80))))))
				(set_local $fTemp33 (f32.mul (f32.const 2.) (get_local $fTemp17)))
				(set_local $fTemp34 (f32.add (f32.mul (f32.const 2.) (f32.mul (f32.mul (get_local $fTemp17) (f32.convert_s/i32 (f32.gt (get_local $fTemp33) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp33) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp33) (f32.const 1.)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 88)) (f32.add (get_local $fSlow6) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 92))))))
				(set_local $fTemp35 (f32.mul (f32.const 2.) (get_local $fTemp24)))
				(set_local $fTemp36 (f32.add (f32.mul (f32.const 2.) (f32.mul (f32.mul (get_local $fTemp24) (f32.convert_s/i32 (f32.gt (get_local $fTemp35) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp35) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp35) (f32.const 1.)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 100)) (f32.add (get_local $fSlow7) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 4))) (f32.load (i32.add (get_local $dsp) (i32.const 104))))))
				(set_local $fTemp37 (f32.add (f32.add (f32.add (f32.div (f32.mul (f32.mul (get_local $fTemp5) (get_local $fTemp30)) (call $cosf (f32.load (i32.add (get_local $dsp) (i32.const 64))))) (get_local $fTemp6)) (f32.div (f32.mul (f32.mul (get_local $fTemp12) (get_local $fTemp32)) (call $cosf (f32.load (i32.add (get_local $dsp) (i32.const 76))))) (get_local $fTemp13))) (f32.div (f32.mul (f32.mul (get_local $fTemp19) (get_local $fTemp34)) (call $cosf (f32.load (i32.add (get_local $dsp) (i32.const 88))))) (get_local $fTemp20))) (f32.div (f32.mul (f32.mul (get_local $fTemp26) (get_local $fTemp36)) (call $cosf (f32.load (i32.add (get_local $dsp) (i32.const 100))))) (get_local $fTemp27))))
				(set_local $fTemp38 (f32.mul (f32.const 0.214285716) (get_local $fTemp37)))
				(set_local $fTemp39 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 64)))))
				(set_local $fTemp40 (f32.mul (f32.const 1.38629436) (get_local $fTemp3)))
				(set_local $fTemp41 (f32.add (get_local $fTemp40) (f32.const -0.693147182)))
				(set_local $fTemp42 (f32.mul (f32.const 2.46630335) (get_local $fTemp41)))
				(set_local $fTemp43 (f32.add (f32.mul (f32.const 2.46630335) (f32.mul (f32.mul (get_local $fTemp41) (f32.convert_s/i32 (f32.gt (get_local $fTemp42) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp42) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp42) (f32.const 1.)))))
				(set_local $fTemp44 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 76)))))
				(set_local $fTemp45 (f32.mul (f32.const 1.38629436) (get_local $fTemp10)))
				(set_local $fTemp46 (f32.add (get_local $fTemp45) (f32.const -0.693147182)))
				(set_local $fTemp47 (f32.mul (f32.const 2.46630335) (get_local $fTemp46)))
				(set_local $fTemp48 (f32.add (f32.mul (f32.const 2.46630335) (f32.mul (f32.mul (get_local $fTemp46) (f32.convert_s/i32 (f32.gt (get_local $fTemp47) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp47) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp47) (f32.const 1.)))))
				(set_local $fTemp49 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 88)))))
				(set_local $fTemp50 (f32.mul (f32.const 1.38629436) (get_local $fTemp17)))
				(set_local $fTemp51 (f32.add (get_local $fTemp50) (f32.const -0.693147182)))
				(set_local $fTemp52 (f32.mul (f32.const 2.46630335) (get_local $fTemp51)))
				(set_local $fTemp53 (f32.add (f32.mul (f32.const 2.46630335) (f32.mul (f32.mul (get_local $fTemp51) (f32.convert_s/i32 (f32.gt (get_local $fTemp52) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp52) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp52) (f32.const 1.)))))
				(set_local $fTemp54 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 100)))))
				(set_local $fTemp55 (f32.mul (f32.const 1.38629436) (get_local $fTemp24)))
				(set_local $fTemp56 (f32.add (get_local $fTemp55) (f32.const -0.693147182)))
				(set_local $fTemp57 (f32.mul (f32.const 2.46630335) (get_local $fTemp56)))
				(set_local $fTemp58 (f32.add (f32.mul (f32.const 2.46630335) (f32.mul (f32.mul (get_local $fTemp56) (f32.convert_s/i32 (f32.gt (get_local $fTemp57) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp57) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp57) (f32.const 1.)))))
				(set_local $fTemp59 (f32.mul (f32.const 0.0857142881) (f32.add (f32.add (f32.add (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp0) (call $cosf (get_local $fTemp39))) (get_local $fTemp4)) (get_local $fTemp43)) (get_local $fTemp6)) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (call $cosf (get_local $fTemp44))) (get_local $fTemp11)) (get_local $fTemp48)) (get_local $fTemp13))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp14) (call $cosf (get_local $fTemp49))) (get_local $fTemp18)) (get_local $fTemp53)) (get_local $fTemp20))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp21) (call $cosf (get_local $fTemp54))) (get_local $fTemp25)) (get_local $fTemp58)) (get_local $fTemp27)))))
				(set_local $fTemp60 (f32.mul (f32.const 3.) (f32.load (i32.add (get_local $dsp) (i32.const 64)))))
				(set_local $fTemp61 (f32.add (get_local $fTemp40) (f32.const -1.09861231)))
				(set_local $fTemp62 (f32.mul (f32.const 3.47605944) (get_local $fTemp61)))
				(set_local $fTemp63 (f32.add (f32.mul (f32.const 3.47605944) (f32.mul (f32.mul (get_local $fTemp61) (f32.convert_s/i32 (f32.gt (get_local $fTemp62) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp62) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp62) (f32.const 1.)))))
				(set_local $fTemp64 (f32.mul (f32.const 3.) (f32.load (i32.add (get_local $dsp) (i32.const 76)))))
				(set_local $fTemp65 (f32.add (get_local $fTemp45) (f32.const -1.09861231)))
				(set_local $fTemp66 (f32.mul (f32.const 3.47605944) (get_local $fTemp65)))
				(set_local $fTemp67 (f32.add (f32.mul (f32.const 3.47605944) (f32.mul (f32.mul (get_local $fTemp65) (f32.convert_s/i32 (f32.gt (get_local $fTemp66) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp66) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp66) (f32.const 1.)))))
				(set_local $fTemp68 (f32.mul (f32.const 3.) (f32.load (i32.add (get_local $dsp) (i32.const 88)))))
				(set_local $fTemp69 (f32.add (get_local $fTemp50) (f32.const -1.09861231)))
				(set_local $fTemp70 (f32.mul (f32.const 3.47605944) (get_local $fTemp69)))
				(set_local $fTemp71 (f32.add (f32.mul (f32.const 3.47605944) (f32.mul (f32.mul (get_local $fTemp69) (f32.convert_s/i32 (f32.gt (get_local $fTemp70) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp70) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp70) (f32.const 1.)))))
				(set_local $fTemp72 (f32.mul (f32.const 3.) (f32.load (i32.add (get_local $dsp) (i32.const 100)))))
				(set_local $fTemp73 (f32.add (get_local $fTemp55) (f32.const -1.09861231)))
				(set_local $fTemp74 (f32.mul (f32.const 3.47605944) (get_local $fTemp73)))
				(set_local $fTemp75 (f32.add (f32.mul (f32.const 3.47605944) (f32.mul (f32.mul (get_local $fTemp73) (f32.convert_s/i32 (f32.gt (get_local $fTemp74) (f32.const 0.)))) (f32.convert_s/i32 (f32.le (get_local $fTemp74) (f32.const 1.))))) (f32.convert_s/i32 (f32.gt (get_local $fTemp74) (f32.const 1.)))))
				(set_local $fTemp76 (f32.add (f32.add (f32.add (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp0) (call $cosf (get_local $fTemp60))) (get_local $fTemp4)) (get_local $fTemp63)) (get_local $fTemp6)) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (call $cosf (get_local $fTemp64))) (get_local $fTemp11)) (get_local $fTemp67)) (get_local $fTemp13))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp14) (call $cosf (get_local $fTemp68))) (get_local $fTemp18)) (get_local $fTemp71)) (get_local $fTemp20))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp21) (call $cosf (get_local $fTemp72))) (get_local $fTemp25)) (get_local $fTemp75)) (get_local $fTemp27))))
				(set_local $fTemp77 (f32.mul (f32.const 0.0142857144) (get_local $fTemp76)))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (f32.add (f32.add (f32.add (get_local $fTemp28) (get_local $fTemp38)) (get_local $fTemp59)) (get_local $fTemp77)))
				(set_local $fTemp78 (f32.add (f32.add (f32.add (f32.div (f32.mul (f32.mul (get_local $fTemp5) (call $sinf (f32.load (i32.add (get_local $dsp) (i32.const 64))))) (get_local $fTemp30)) (get_local $fTemp6)) (f32.div (f32.mul (f32.mul (get_local $fTemp12) (call $sinf (f32.load (i32.add (get_local $dsp) (i32.const 76))))) (get_local $fTemp32)) (get_local $fTemp13))) (f32.div (f32.mul (f32.mul (get_local $fTemp19) (call $sinf (f32.load (i32.add (get_local $dsp) (i32.const 88))))) (get_local $fTemp34)) (get_local $fTemp20))) (f32.div (f32.mul (f32.mul (get_local $fTemp26) (call $sinf (f32.load (i32.add (get_local $dsp) (i32.const 100))))) (get_local $fTemp36)) (get_local $fTemp27))))
				(set_local $fTemp79 (f32.mul (f32.const 0.151522875) (get_local $fTemp78)))
				(set_local $fTemp80 (f32.mul (f32.const 0.0857142881) (f32.add (f32.add (f32.add (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp0) (call $sinf (get_local $fTemp39))) (get_local $fTemp4)) (get_local $fTemp43)) (get_local $fTemp6)) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (call $sinf (get_local $fTemp44))) (get_local $fTemp11)) (get_local $fTemp48)) (get_local $fTemp13))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp14) (call $sinf (get_local $fTemp49))) (get_local $fTemp18)) (get_local $fTemp53)) (get_local $fTemp20))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp21) (call $sinf (get_local $fTemp54))) (get_local $fTemp25)) (get_local $fTemp58)) (get_local $fTemp27)))))
				(set_local $fTemp81 (f32.add (f32.add (f32.add (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp0) (call $sinf (get_local $fTemp60))) (get_local $fTemp4)) (get_local $fTemp63)) (get_local $fTemp6)) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp7) (call $sinf (get_local $fTemp64))) (get_local $fTemp11)) (get_local $fTemp67)) (get_local $fTemp13))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp14) (call $sinf (get_local $fTemp68))) (get_local $fTemp18)) (get_local $fTemp71)) (get_local $fTemp20))) (f32.div (f32.mul (f32.mul (f32.mul (get_local $fTemp21) (call $sinf (get_local $fTemp72))) (get_local $fTemp25)) (get_local $fTemp75)) (get_local $fTemp27))))
				(f32.store (i32.add (get_local $output1) (get_local $i)) (f32.sub (f32.add (f32.add (f32.add (f32.add (get_local $fTemp28) (get_local $fTemp79)) (f32.mul (f32.const 0.151522875) (get_local $fTemp37))) (get_local $fTemp80)) (f32.mul (f32.const 0.0101015251) (get_local $fTemp81))) (f32.mul (f32.const 0.0101015251) (get_local $fTemp76))))
				(set_local $fTemp82 (f32.mul (f32.const 0.214285716) (get_local $fTemp78)))
				(set_local $fTemp83 (f32.mul (f32.const 0.0142857144) (get_local $fTemp81)))
				(f32.store (i32.add (get_local $output2) (get_local $i)) (f32.sub (f32.add (get_local $fTemp28) (get_local $fTemp82)) (f32.add (get_local $fTemp59) (get_local $fTemp83))))
				(set_local $fTemp84 (f32.mul (f32.const 0.151522875) (get_local $fTemp37)))
				(f32.store (i32.add (get_local $output3) (get_local $i)) (f32.sub (f32.add (f32.add (f32.add (get_local $fTemp28) (f32.mul (f32.const 0.151522875) (get_local $fTemp78))) (f32.mul (f32.const 0.0101015251) (get_local $fTemp81))) (f32.mul (f32.const 0.0101015251) (get_local $fTemp76))) (f32.add (get_local $fTemp80) (get_local $fTemp84))))
				(f32.store (i32.add (get_local $output4) (get_local $i)) (f32.sub (f32.add (get_local $fTemp28) (get_local $fTemp59)) (f32.add (get_local $fTemp38) (get_local $fTemp77))))
				(f32.store (i32.add (get_local $output5) (get_local $i)) (f32.sub (f32.add (f32.add (get_local $fTemp28) (get_local $fTemp80)) (f32.mul (f32.const 0.0101015251) (get_local $fTemp76))) (f32.add (f32.add (get_local $fTemp79) (f32.mul (f32.const 0.151522875) (get_local $fTemp37))) (f32.mul (f32.const 0.0101015251) (get_local $fTemp81)))))
				(f32.store (i32.add (get_local $output6) (get_local $i)) (f32.sub (f32.add (get_local $fTemp28) (get_local $fTemp83)) (f32.add (get_local $fTemp59) (get_local $fTemp82))))
				(f32.store (i32.add (get_local $output7) (get_local $i)) (f32.sub (f32.add (get_local $fTemp28) (get_local $fTemp84)) (f32.add (f32.add (f32.add (get_local $fTemp80) (f32.mul (f32.const 0.151522875) (get_local $fTemp78))) (f32.mul (f32.const 0.0101015251) (get_local $fTemp81))) (f32.mul (f32.const 0.0101015251) (get_local $fTemp76)))))
				(f32.store (i32.add (get_local $dsp) (i32.const 20)) (f32.load (i32.add (get_local $dsp) (i32.const 16))))
				(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.load (i32.add (get_local $dsp) (i32.const 28))))
				(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.load (i32.add (get_local $dsp) (i32.const 40))))
				(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.load (i32.add (get_local $dsp) (i32.const 52))))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (f32.load (i32.add (get_local $dsp) (i32.const 64))))
				(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.load (i32.add (get_local $dsp) (i32.const 76))))
				(f32.store (i32.add (get_local $dsp) (i32.const 92)) (f32.load (i32.add (get_local $dsp) (i32.const 88))))
				(f32.store (i32.add (get_local $dsp) (i32.const 104)) (f32.load (i32.add (get_local $dsp) (i32.const 100))))
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
