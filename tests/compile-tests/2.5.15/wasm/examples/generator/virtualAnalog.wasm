
(module
	(import $powf "env" "_powf" (param f32 f32) (result f32))
	(import $expf "env" "_expf" (param f32) (result f32))
	(export "getNumInputs" (func $getNumInputs))
	(export "getNumOutputs" (func $getNumOutputs))
	(export "getSampleRate" (func $getSampleRate))
	(export "init" (func $init))
	(export "instanceInit" (func $instanceInit))
	(export "instanceConstants" (func $instanceConstants))
	(export "instanceResetUserInterface" (func $instanceResetUserInterface))
	(export "instanceClear" (func $instanceClear))
	(export "setParamValue" (func $setParamValue))
	(export "getParamValue" (func $getParamValue))
	(export "compute" (func $compute))
	(import "env" "memoryBase" (global $memoryBase i32))
	(import "env" "tableBase" (global $tableBase i32))
	(import "env" "memory" (memory $0 1))
	(data (i32.const 0) "{\"name\":\"VirtualAnalog\",\"version\":\"2.5.15\",\"options\":\"wast/wasm, -scal -ftz 0\",\"size\":\"98804\",\"inputs\":\"1\",\"outputs\":\"1\",\"meta\":[{\"author\":\"JOS, revised by RM\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"description\":\"Virtual analog oscillator demo application.\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"VirtualAnalog\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"},{\"version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"VIRTUAL ANALOG OSCILLATORS\",\"meta\":[{\"0\":\"\"},{\"tooltip\":\"See Faust's oscillators.lib for documentation and references\"}],\"items\":[{\"type\":\"hgroup\",\"label\":\"Signal Levels\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"vslider\",\"label\":\"Sawtooth\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Sawtooth\",\"index\":\"32\",\"meta\":[{\"0\":\"\"},{\"style\":\"vslider\"}],\"init\":\"1\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"vgroup\",\"label\":\"Pulse Train\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"checkbox\",\"label\":\"Order 3\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Pulse_Train/Order_3\",\"index\":\"49556\",\"meta\":[{\"0\":\"\"},{\"tooltip\":\"When checked, use 3rd-order aliasing suppression (up from 2)  See if you can hear a difference with the freq high and swept\"}]},{\"type\":\"vslider\",\"label\":\"0x00\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Pulse_Train/0x00\",\"index\":\"49552\",\"meta\":[{\"1\":\"\"},{\"style\":\"vslider\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"vslider\",\"label\":\"Duty Cycle\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Pulse_Train/Duty_Cycle\",\"index\":\"49560\",\"meta\":[{\"2\":\"\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"vslider\",\"label\":\"Square\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Square\",\"index\":\"284\",\"meta\":[{\"2\":\"\"},{\"style\":\"vslider\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"vslider\",\"label\":\"Triangle\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Triangle\",\"index\":\"49524\",\"meta\":[{\"3\":\"\"},{\"style\":\"vslider\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"vslider\",\"label\":\"Pink Noise\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Pink_Noise\",\"index\":\"98776\",\"meta\":[{\"4\":\"\"},{\"style\":\"vslider\"},{\"tooltip\":\"Pink Noise (or 1/f noise) is   Constant-Q Noise, meaning that it has the same total power in every octave   (uses only amplitude controls)\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"vslider\",\"label\":\"Ext Input\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Levels/Ext_Input\",\"index\":\"0\",\"meta\":[{\"5\":\"\"},{\"style\":\"vslider\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]},{\"type\":\"hgroup\",\"label\":\"Signal Parameters\",\"meta\":[{\"1\":\"\"}],\"items\":[{\"type\":\"vgroup\",\"label\":\"0x00\",\"meta\":[{\"0\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Mix Amplitude\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Parameters/0x00/Mix_Amplitude\",\"index\":\"4\",\"meta\":[{\"1\":\"\"},{\"style\":\"hslider\"},{\"tooltip\":\"Sawtooth waveform amplitude\"},{\"unit\":\"dB\"}],\"init\":\"-20\",\"min\":\"-120\",\"max\":\"10\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"Frequency\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Parameters/0x00/Frequency\",\"index\":\"52\",\"meta\":[{\"2\":\"\"},{\"style\":\"hslider\"},{\"tooltip\":\"Sawtooth   frequency as a Piano Key (PK) number (A440 = key 49)\"},{\"unit\":\"PK\"}],\"init\":\"49\",\"min\":\"1\",\"max\":\"88\",\"step\":\"0.01\"}]},{\"type\":\"vslider\",\"label\":\"Detuning 1\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Parameters/Detuning_1\",\"index\":\"144\",\"meta\":[{\"3\":\"\"},{\"style\":\"knob\"},{\"tooltip\":\"Percentange frequency-shift up or down for second oscillator\"},{\"unit\":\"%%\"}],\"init\":\"-0.1\",\"min\":\"-10\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"vslider\",\"label\":\"Detuning 2\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Parameters/Detuning_2\",\"index\":\"212\",\"meta\":[{\"4\":\"\"},{\"style\":\"knob\"},{\"tooltip\":\"Percentange frequency-shift up or down for third detuned oscillator\"},{\"unit\":\"%%\"}],\"init\":\"0.1\",\"min\":\"-10\",\"max\":\"10\",\"step\":\"0.01\"},{\"type\":\"vslider\",\"label\":\"Portamento\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Parameters/Portamento\",\"index\":\"56\",\"meta\":[{\"5\":\"\"},{\"scale\":\"log\"},{\"style\":\"knob\"},{\"tooltip\":\"Portamento (frequency-glide) time-constant in seconds\"},{\"unit\":\"sec\"}],\"init\":\"0.1\",\"min\":\"0.001\",\"max\":\"10\",\"step\":\"0.001\"},{\"type\":\"nentry\",\"label\":\"Saw Order\",\"address\":\"/VIRTUAL_ANALOG_OSCILLATORS/Signal_Parameters/Saw_Order\",\"index\":\"36\",\"meta\":[{\"6\":\"\"},{\"tooltip\":\"Order of sawtooth aliasing  suppression\"}],\"init\":\"2\",\"min\":\"1\",\"max\":\"4\",\"step\":\"1\"}]}]}]}")
	
	(func $min_i (param $v10 i32) (param $v20 i32) (result i32)
		(return (select (get_local $v10) (get_local $v20) (i32.lt_s (get_local $v10) (get_local $v20))))
	)
	(func $max_i (param $v11 i32) (param $v21 i32) (result i32)
		(return (select (get_local $v21) (get_local $v11) (i32.lt_s (get_local $v11) (get_local $v21))))
	)
	(func $getNumInputs (param $dsp i32) (result i32)
		(return (i32.const 1))
	)
	(func $getNumOutputs (param $dsp i32) (result i32)
		(return (i32.const 1))
	)
	(func $classInit (param $dsp i32) (param $samplingFreq i32)
		
	)
	(func $instanceConstants (param $dsp i32) (param $samplingFreq i32)
		(i32.store (i32.add (get_local $dsp) (i32.const 40)) (get_local $samplingFreq))
		(f32.store (i32.add (get_local $dsp) (i32.const 44)) (f32.min (f32.const 192000.) (f32.max (f32.const 1.) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 40)))))))
		(f32.store (i32.add (get_local $dsp) (i32.const 48)) (f32.div (f32.const 1.) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 84)) (f32.mul (f32.const 0.25) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 96)) (f32.mul (f32.const 0.0416666679) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 44))) (f32.const 2.))))
		(f32.store (i32.add (get_local $dsp) (i32.const 116)) (f32.mul (f32.const 0.00520833349) (call $powf (f32.load (i32.add (get_local $dsp) (i32.const 44))) (f32.const 3.))))
		(f32.store (i32.add (get_local $dsp) (i32.const 280)) (f32.mul (f32.const 0.0833333358) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 16700)) (f32.mul (f32.const 0.5) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 49520)) (f32.div (f32.const 1.33333337) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		(f32.store (i32.add (get_local $dsp) (i32.const 49572)) (f32.mul (f32.const 0.013888889) (f32.load (i32.add (get_local $dsp) (i32.const 44)))))
		
	)
	(func $instanceResetUserInterface (param $dsp i32)
		(f32.store (i32.add (get_local $dsp) (i32.const 0)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 4)) (f32.const -20.))
		(f32.store (i32.add (get_local $dsp) (i32.const 32)) (f32.const 1.))
		(f32.store (i32.add (get_local $dsp) (i32.const 36)) (f32.const 2.))
		(f32.store (i32.add (get_local $dsp) (i32.const 52)) (f32.const 49.))
		(f32.store (i32.add (get_local $dsp) (i32.const 56)) (f32.const 0.100000001))
		(f32.store (i32.add (get_local $dsp) (i32.const 144)) (f32.const -0.100000001))
		(f32.store (i32.add (get_local $dsp) (i32.const 212)) (f32.const 0.100000001))
		(f32.store (i32.add (get_local $dsp) (i32.const 284)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 49524)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 49552)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 49556)) (f32.const 0.))
		(f32.store (i32.add (get_local $dsp) (i32.const 49560)) (f32.const 0.5))
		(f32.store (i32.add (get_local $dsp) (i32.const 98776)) (f32.const 0.))
		
	)
	(func $instanceClear (param $dsp i32)
		(local $l0 i32)
		(local $l1 i32)
		(local $l2 i32)
		(local $l3 i32)
		(local $l4 i32)
		(local $l5 i32)
		(local $l6 i32)
		(local $l7 i32)
		(local $l8 i32)
		(local $l9 i32)
		(local $l10 i32)
		(local $l11 i32)
		(local $l12 i32)
		(local $l13 i32)
		(local $l14 i32)
		(local $l15 i32)
		(local $l16 i32)
		(local $l17 i32)
		(local $l18 i32)
		(local $l19 i32)
		(local $l20 i32)
		(local $l21 i32)
		(local $l22 i32)
		(local $l23 i32)
		(local $l24 i32)
		(local $l25 i32)
		(local $l26 i32)
		(local $l27 i32)
		(local $l28 i32)
		(local $l29 i32)
		(local $l30 i32)
		(local $l31 i32)
		(local $l32 i32)
		(local $l33 i32)
		(local $l34 i32)
		(local $l35 i32)
		(local $l36 i32)
		(local $l37 i32)
		(local $l38 i32)
		(local $l39 i32)
		(local $l40 i32)
		(local $l41 i32)
		(local $l42 i32)
		(local $l43 i32)
		(local $l44 i32)
		(local $l45 i32)
		(local $l46 i32)
		(local $l47 i32)
		(local $l48 i32)
		(local $l49 i32)
		(local $l50 i32)
		(local $l51 i32)
		(local $l52 i32)
		(local $l53 i32)
		(set_local $l0 (i32.const 0))
		(set_local $l1 (i32.const 0))
		(set_local $l2 (i32.const 0))
		(set_local $l3 (i32.const 0))
		(set_local $l4 (i32.const 0))
		(set_local $l5 (i32.const 0))
		(set_local $l6 (i32.const 0))
		(set_local $l7 (i32.const 0))
		(set_local $l8 (i32.const 0))
		(set_local $l9 (i32.const 0))
		(set_local $l10 (i32.const 0))
		(set_local $l11 (i32.const 0))
		(set_local $l12 (i32.const 0))
		(set_local $l13 (i32.const 0))
		(set_local $l14 (i32.const 0))
		(set_local $l15 (i32.const 0))
		(set_local $l16 (i32.const 0))
		(set_local $l17 (i32.const 0))
		(set_local $l18 (i32.const 0))
		(set_local $l19 (i32.const 0))
		(set_local $l20 (i32.const 0))
		(set_local $l21 (i32.const 0))
		(set_local $l22 (i32.const 0))
		(set_local $l23 (i32.const 0))
		(set_local $l24 (i32.const 0))
		(set_local $l25 (i32.const 0))
		(set_local $l26 (i32.const 0))
		(set_local $l27 (i32.const 0))
		(set_local $l28 (i32.const 0))
		(set_local $l29 (i32.const 0))
		(set_local $l30 (i32.const 0))
		(set_local $l31 (i32.const 0))
		(set_local $l32 (i32.const 0))
		(set_local $l33 (i32.const 0))
		(set_local $l34 (i32.const 0))
		(set_local $l35 (i32.const 0))
		(set_local $l36 (i32.const 0))
		(set_local $l37 (i32.const 0))
		(set_local $l38 (i32.const 0))
		(set_local $l39 (i32.const 0))
		(set_local $l40 (i32.const 0))
		(set_local $l41 (i32.const 0))
		(set_local $l42 (i32.const 0))
		(set_local $l43 (i32.const 0))
		(set_local $l44 (i32.const 0))
		(set_local $l45 (i32.const 0))
		(set_local $l46 (i32.const 0))
		(set_local $l47 (i32.const 0))
		(set_local $l48 (i32.const 0))
		(set_local $l49 (i32.const 0))
		(set_local $l50 (i32.const 0))
		(set_local $l51 (i32.const 0))
		(set_local $l52 (i32.const 0))
		(set_local $l53 (i32.const 0))
		(set_local $l0 (i32.const 0))
		(loop $for-in-l0 
			(block $for-out-l0 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 8) (i32.shl (get_local $l0) (i32.const 2)))) (i32.const 0))
				(set_local $l0 (i32.add (get_local $l0) (i32.const 1)))
				(if (i32.lt_s (get_local $l0) (i32.const 4)) (br $for-in-l0) (br $for-out-l0))
				
			)
		)
		(set_local $l1 (i32.const 0))
		(loop $for-in-l1 
			(block $for-out-l1 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 24) (i32.shl (get_local $l1) (i32.const 2)))) (f32.const 0.))
				(set_local $l1 (i32.add (get_local $l1) (i32.const 1)))
				(if (i32.lt_s (get_local $l1) (i32.const 2)) (br $for-in-l1) (br $for-out-l1))
				
			)
		)
		(set_local $l2 (i32.const 0))
		(loop $for-in-l2 
			(block $for-out-l2 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 60) (i32.shl (get_local $l2) (i32.const 2)))) (f32.const 0.))
				(set_local $l2 (i32.add (get_local $l2) (i32.const 1)))
				(if (i32.lt_s (get_local $l2) (i32.const 2)) (br $for-in-l2) (br $for-out-l2))
				
			)
		)
		(set_local $l3 (i32.const 0))
		(loop $for-in-l3 
			(block $for-out-l3 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 68) (i32.shl (get_local $l3) (i32.const 2)))) (f32.const 0.))
				(set_local $l3 (i32.add (get_local $l3) (i32.const 1)))
				(if (i32.lt_s (get_local $l3) (i32.const 2)) (br $for-in-l3) (br $for-out-l3))
				
			)
		)
		(set_local $l4 (i32.const 0))
		(loop $for-in-l4 
			(block $for-out-l4 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 76) (i32.shl (get_local $l4) (i32.const 2)))) (f32.const 0.))
				(set_local $l4 (i32.add (get_local $l4) (i32.const 1)))
				(if (i32.lt_s (get_local $l4) (i32.const 2)) (br $for-in-l4) (br $for-out-l4))
				
			)
		)
		(set_local $l5 (i32.const 0))
		(loop $for-in-l5 
			(block $for-out-l5 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 88) (i32.shl (get_local $l5) (i32.const 2)))) (f32.const 0.))
				(set_local $l5 (i32.add (get_local $l5) (i32.const 1)))
				(if (i32.lt_s (get_local $l5) (i32.const 2)) (br $for-in-l5) (br $for-out-l5))
				
			)
		)
		(set_local $l6 (i32.const 0))
		(loop $for-in-l6 
			(block $for-out-l6 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 100) (i32.shl (get_local $l6) (i32.const 2)))) (f32.const 0.))
				(set_local $l6 (i32.add (get_local $l6) (i32.const 1)))
				(if (i32.lt_s (get_local $l6) (i32.const 2)) (br $for-in-l6) (br $for-out-l6))
				
			)
		)
		(set_local $l7 (i32.const 0))
		(loop $for-in-l7 
			(block $for-out-l7 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 108) (i32.shl (get_local $l7) (i32.const 2)))) (f32.const 0.))
				(set_local $l7 (i32.add (get_local $l7) (i32.const 1)))
				(if (i32.lt_s (get_local $l7) (i32.const 2)) (br $for-in-l7) (br $for-out-l7))
				
			)
		)
		(set_local $l8 (i32.const 0))
		(loop $for-in-l8 
			(block $for-out-l8 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 120) (i32.shl (get_local $l8) (i32.const 2)))) (f32.const 0.))
				(set_local $l8 (i32.add (get_local $l8) (i32.const 1)))
				(if (i32.lt_s (get_local $l8) (i32.const 2)) (br $for-in-l8) (br $for-out-l8))
				
			)
		)
		(set_local $l9 (i32.const 0))
		(loop $for-in-l9 
			(block $for-out-l9 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 128) (i32.shl (get_local $l9) (i32.const 2)))) (f32.const 0.))
				(set_local $l9 (i32.add (get_local $l9) (i32.const 1)))
				(if (i32.lt_s (get_local $l9) (i32.const 2)) (br $for-in-l9) (br $for-out-l9))
				
			)
		)
		(set_local $l10 (i32.const 0))
		(loop $for-in-l10 
			(block $for-out-l10 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 136) (i32.shl (get_local $l10) (i32.const 2)))) (f32.const 0.))
				(set_local $l10 (i32.add (get_local $l10) (i32.const 1)))
				(if (i32.lt_s (get_local $l10) (i32.const 2)) (br $for-in-l10) (br $for-out-l10))
				
			)
		)
		(set_local $l11 (i32.const 0))
		(loop $for-in-l11 
			(block $for-out-l11 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 148) (i32.shl (get_local $l11) (i32.const 2)))) (f32.const 0.))
				(set_local $l11 (i32.add (get_local $l11) (i32.const 1)))
				(if (i32.lt_s (get_local $l11) (i32.const 2)) (br $for-in-l11) (br $for-out-l11))
				
			)
		)
		(set_local $l12 (i32.const 0))
		(loop $for-in-l12 
			(block $for-out-l12 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 156) (i32.shl (get_local $l12) (i32.const 2)))) (f32.const 0.))
				(set_local $l12 (i32.add (get_local $l12) (i32.const 1)))
				(if (i32.lt_s (get_local $l12) (i32.const 2)) (br $for-in-l12) (br $for-out-l12))
				
			)
		)
		(set_local $l13 (i32.const 0))
		(loop $for-in-l13 
			(block $for-out-l13 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 164) (i32.shl (get_local $l13) (i32.const 2)))) (f32.const 0.))
				(set_local $l13 (i32.add (get_local $l13) (i32.const 1)))
				(if (i32.lt_s (get_local $l13) (i32.const 2)) (br $for-in-l13) (br $for-out-l13))
				
			)
		)
		(set_local $l14 (i32.const 0))
		(loop $for-in-l14 
			(block $for-out-l14 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 172) (i32.shl (get_local $l14) (i32.const 2)))) (f32.const 0.))
				(set_local $l14 (i32.add (get_local $l14) (i32.const 1)))
				(if (i32.lt_s (get_local $l14) (i32.const 2)) (br $for-in-l14) (br $for-out-l14))
				
			)
		)
		(set_local $l15 (i32.const 0))
		(loop $for-in-l15 
			(block $for-out-l15 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 180) (i32.shl (get_local $l15) (i32.const 2)))) (f32.const 0.))
				(set_local $l15 (i32.add (get_local $l15) (i32.const 1)))
				(if (i32.lt_s (get_local $l15) (i32.const 2)) (br $for-in-l15) (br $for-out-l15))
				
			)
		)
		(set_local $l16 (i32.const 0))
		(loop $for-in-l16 
			(block $for-out-l16 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 188) (i32.shl (get_local $l16) (i32.const 2)))) (f32.const 0.))
				(set_local $l16 (i32.add (get_local $l16) (i32.const 1)))
				(if (i32.lt_s (get_local $l16) (i32.const 2)) (br $for-in-l16) (br $for-out-l16))
				
			)
		)
		(set_local $l17 (i32.const 0))
		(loop $for-in-l17 
			(block $for-out-l17 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 196) (i32.shl (get_local $l17) (i32.const 2)))) (f32.const 0.))
				(set_local $l17 (i32.add (get_local $l17) (i32.const 1)))
				(if (i32.lt_s (get_local $l17) (i32.const 2)) (br $for-in-l17) (br $for-out-l17))
				
			)
		)
		(set_local $l18 (i32.const 0))
		(loop $for-in-l18 
			(block $for-out-l18 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 204) (i32.shl (get_local $l18) (i32.const 2)))) (f32.const 0.))
				(set_local $l18 (i32.add (get_local $l18) (i32.const 1)))
				(if (i32.lt_s (get_local $l18) (i32.const 2)) (br $for-in-l18) (br $for-out-l18))
				
			)
		)
		(set_local $l19 (i32.const 0))
		(loop $for-in-l19 
			(block $for-out-l19 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 216) (i32.shl (get_local $l19) (i32.const 2)))) (f32.const 0.))
				(set_local $l19 (i32.add (get_local $l19) (i32.const 1)))
				(if (i32.lt_s (get_local $l19) (i32.const 2)) (br $for-in-l19) (br $for-out-l19))
				
			)
		)
		(set_local $l20 (i32.const 0))
		(loop $for-in-l20 
			(block $for-out-l20 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 224) (i32.shl (get_local $l20) (i32.const 2)))) (f32.const 0.))
				(set_local $l20 (i32.add (get_local $l20) (i32.const 1)))
				(if (i32.lt_s (get_local $l20) (i32.const 2)) (br $for-in-l20) (br $for-out-l20))
				
			)
		)
		(set_local $l21 (i32.const 0))
		(loop $for-in-l21 
			(block $for-out-l21 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 232) (i32.shl (get_local $l21) (i32.const 2)))) (f32.const 0.))
				(set_local $l21 (i32.add (get_local $l21) (i32.const 1)))
				(if (i32.lt_s (get_local $l21) (i32.const 2)) (br $for-in-l21) (br $for-out-l21))
				
			)
		)
		(set_local $l22 (i32.const 0))
		(loop $for-in-l22 
			(block $for-out-l22 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 240) (i32.shl (get_local $l22) (i32.const 2)))) (f32.const 0.))
				(set_local $l22 (i32.add (get_local $l22) (i32.const 1)))
				(if (i32.lt_s (get_local $l22) (i32.const 2)) (br $for-in-l22) (br $for-out-l22))
				
			)
		)
		(set_local $l23 (i32.const 0))
		(loop $for-in-l23 
			(block $for-out-l23 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 248) (i32.shl (get_local $l23) (i32.const 2)))) (f32.const 0.))
				(set_local $l23 (i32.add (get_local $l23) (i32.const 1)))
				(if (i32.lt_s (get_local $l23) (i32.const 2)) (br $for-in-l23) (br $for-out-l23))
				
			)
		)
		(set_local $l24 (i32.const 0))
		(loop $for-in-l24 
			(block $for-out-l24 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 256) (i32.shl (get_local $l24) (i32.const 2)))) (f32.const 0.))
				(set_local $l24 (i32.add (get_local $l24) (i32.const 1)))
				(if (i32.lt_s (get_local $l24) (i32.const 2)) (br $for-in-l24) (br $for-out-l24))
				
			)
		)
		(set_local $l25 (i32.const 0))
		(loop $for-in-l25 
			(block $for-out-l25 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 264) (i32.shl (get_local $l25) (i32.const 2)))) (f32.const 0.))
				(set_local $l25 (i32.add (get_local $l25) (i32.const 1)))
				(if (i32.lt_s (get_local $l25) (i32.const 2)) (br $for-in-l25) (br $for-out-l25))
				
			)
		)
		(set_local $l26 (i32.const 0))
		(loop $for-in-l26 
			(block $for-out-l26 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 272) (i32.shl (get_local $l26) (i32.const 2)))) (f32.const 0.))
				(set_local $l26 (i32.add (get_local $l26) (i32.const 1)))
				(if (i32.lt_s (get_local $l26) (i32.const 2)) (br $for-in-l26) (br $for-out-l26))
				
			)
		)
		(set_local $l27 (i32.const 0))
		(loop $for-in-l27 
			(block $for-out-l27 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 288) (i32.shl (get_local $l27) (i32.const 2)))) (f32.const 0.))
				(set_local $l27 (i32.add (get_local $l27) (i32.const 1)))
				(if (i32.lt_s (get_local $l27) (i32.const 2)) (br $for-in-l27) (br $for-out-l27))
				
			)
		)
		(set_local $l28 (i32.const 0))
		(loop $for-in-l28 
			(block $for-out-l28 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 296) (i32.shl (get_local $l28) (i32.const 2)))) (f32.const 0.))
				(set_local $l28 (i32.add (get_local $l28) (i32.const 1)))
				(if (i32.lt_s (get_local $l28) (i32.const 2)) (br $for-in-l28) (br $for-out-l28))
				
			)
		)
		(set_local $l29 (i32.const 0))
		(loop $for-in-l29 
			(block $for-out-l29 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 304) (i32.shl (get_local $l29) (i32.const 2)))) (f32.const 0.))
				(set_local $l29 (i32.add (get_local $l29) (i32.const 1)))
				(if (i32.lt_s (get_local $l29) (i32.const 2)) (br $for-in-l29) (br $for-out-l29))
				
			)
		)
		(i32.store (i32.add (get_local $dsp) (i32.const 312)) (i32.const 0))
		(set_local $l30 (i32.const 0))
		(loop $for-in-l30 
			(block $for-out-l30 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 316) (i32.shl (get_local $l30) (i32.const 2)))) (f32.const 0.))
				(set_local $l30 (i32.add (get_local $l30) (i32.const 1)))
				(if (i32.lt_s (get_local $l30) (i32.const 4096)) (br $for-in-l30) (br $for-out-l30))
				
			)
		)
		(set_local $l31 (i32.const 0))
		(loop $for-in-l31 
			(block $for-out-l31 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16704) (i32.shl (get_local $l31) (i32.const 2)))) (f32.const 0.))
				(set_local $l31 (i32.add (get_local $l31) (i32.const 1)))
				(if (i32.lt_s (get_local $l31) (i32.const 2)) (br $for-in-l31) (br $for-out-l31))
				
			)
		)
		(set_local $l32 (i32.const 0))
		(loop $for-in-l32 
			(block $for-out-l32 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16712) (i32.shl (get_local $l32) (i32.const 2)))) (f32.const 0.))
				(set_local $l32 (i32.add (get_local $l32) (i32.const 1)))
				(if (i32.lt_s (get_local $l32) (i32.const 2)) (br $for-in-l32) (br $for-out-l32))
				
			)
		)
		(set_local $l33 (i32.const 0))
		(loop $for-in-l33 
			(block $for-out-l33 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16720) (i32.shl (get_local $l33) (i32.const 2)))) (f32.const 0.))
				(set_local $l33 (i32.add (get_local $l33) (i32.const 1)))
				(if (i32.lt_s (get_local $l33) (i32.const 2)) (br $for-in-l33) (br $for-out-l33))
				
			)
		)
		(set_local $l34 (i32.const 0))
		(loop $for-in-l34 
			(block $for-out-l34 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16728) (i32.shl (get_local $l34) (i32.const 2)))) (f32.const 0.))
				(set_local $l34 (i32.add (get_local $l34) (i32.const 1)))
				(if (i32.lt_s (get_local $l34) (i32.const 4096)) (br $for-in-l34) (br $for-out-l34))
				
			)
		)
		(set_local $l35 (i32.const 0))
		(loop $for-in-l35 
			(block $for-out-l35 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 33112) (i32.shl (get_local $l35) (i32.const 2)))) (f32.const 0.))
				(set_local $l35 (i32.add (get_local $l35) (i32.const 1)))
				(if (i32.lt_s (get_local $l35) (i32.const 2)) (br $for-in-l35) (br $for-out-l35))
				
			)
		)
		(set_local $l36 (i32.const 0))
		(loop $for-in-l36 
			(block $for-out-l36 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 33120) (i32.shl (get_local $l36) (i32.const 2)))) (f32.const 0.))
				(set_local $l36 (i32.add (get_local $l36) (i32.const 1)))
				(if (i32.lt_s (get_local $l36) (i32.const 2)) (br $for-in-l36) (br $for-out-l36))
				
			)
		)
		(set_local $l37 (i32.const 0))
		(loop $for-in-l37 
			(block $for-out-l37 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 33128) (i32.shl (get_local $l37) (i32.const 2)))) (f32.const 0.))
				(set_local $l37 (i32.add (get_local $l37) (i32.const 1)))
				(if (i32.lt_s (get_local $l37) (i32.const 2)) (br $for-in-l37) (br $for-out-l37))
				
			)
		)
		(set_local $l38 (i32.const 0))
		(loop $for-in-l38 
			(block $for-out-l38 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 33136) (i32.shl (get_local $l38) (i32.const 2)))) (f32.const 0.))
				(set_local $l38 (i32.add (get_local $l38) (i32.const 1)))
				(if (i32.lt_s (get_local $l38) (i32.const 4096)) (br $for-in-l38) (br $for-out-l38))
				
			)
		)
		(set_local $l39 (i32.const 0))
		(loop $for-in-l39 
			(block $for-out-l39 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49528) (i32.shl (get_local $l39) (i32.const 2)))) (f32.const 0.))
				(set_local $l39 (i32.add (get_local $l39) (i32.const 1)))
				(if (i32.lt_s (get_local $l39) (i32.const 2)) (br $for-in-l39) (br $for-out-l39))
				
			)
		)
		(set_local $l40 (i32.const 0))
		(loop $for-in-l40 
			(block $for-out-l40 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49536) (i32.shl (get_local $l40) (i32.const 2)))) (f32.const 0.))
				(set_local $l40 (i32.add (get_local $l40) (i32.const 1)))
				(if (i32.lt_s (get_local $l40) (i32.const 2)) (br $for-in-l40) (br $for-out-l40))
				
			)
		)
		(set_local $l41 (i32.const 0))
		(loop $for-in-l41 
			(block $for-out-l41 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49544) (i32.shl (get_local $l41) (i32.const 2)))) (f32.const 0.))
				(set_local $l41 (i32.add (get_local $l41) (i32.const 1)))
				(if (i32.lt_s (get_local $l41) (i32.const 2)) (br $for-in-l41) (br $for-out-l41))
				
			)
		)
		(set_local $l42 (i32.const 0))
		(loop $for-in-l42 
			(block $for-out-l42 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49564) (i32.shl (get_local $l42) (i32.const 2)))) (f32.const 0.))
				(set_local $l42 (i32.add (get_local $l42) (i32.const 1)))
				(if (i32.lt_s (get_local $l42) (i32.const 2)) (br $for-in-l42) (br $for-out-l42))
				
			)
		)
		(set_local $l43 (i32.const 0))
		(loop $for-in-l43 
			(block $for-out-l43 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49576) (i32.shl (get_local $l43) (i32.const 2)))) (f32.const 0.))
				(set_local $l43 (i32.add (get_local $l43) (i32.const 1)))
				(if (i32.lt_s (get_local $l43) (i32.const 2)) (br $for-in-l43) (br $for-out-l43))
				
			)
		)
		(set_local $l44 (i32.const 0))
		(loop $for-in-l44 
			(block $for-out-l44 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49584) (i32.shl (get_local $l44) (i32.const 2)))) (f32.const 0.))
				(set_local $l44 (i32.add (get_local $l44) (i32.const 1)))
				(if (i32.lt_s (get_local $l44) (i32.const 2)) (br $for-in-l44) (br $for-out-l44))
				
			)
		)
		(set_local $l45 (i32.const 0))
		(loop $for-in-l45 
			(block $for-out-l45 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49592) (i32.shl (get_local $l45) (i32.const 2)))) (f32.const 0.))
				(set_local $l45 (i32.add (get_local $l45) (i32.const 1)))
				(if (i32.lt_s (get_local $l45) (i32.const 4096)) (br $for-in-l45) (br $for-out-l45))
				
			)
		)
		(set_local $l46 (i32.const 0))
		(loop $for-in-l46 
			(block $for-out-l46 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65976) (i32.shl (get_local $l46) (i32.const 2)))) (f32.const 0.))
				(set_local $l46 (i32.add (get_local $l46) (i32.const 1)))
				(if (i32.lt_s (get_local $l46) (i32.const 2)) (br $for-in-l46) (br $for-out-l46))
				
			)
		)
		(set_local $l47 (i32.const 0))
		(loop $for-in-l47 
			(block $for-out-l47 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65984) (i32.shl (get_local $l47) (i32.const 2)))) (f32.const 0.))
				(set_local $l47 (i32.add (get_local $l47) (i32.const 1)))
				(if (i32.lt_s (get_local $l47) (i32.const 2)) (br $for-in-l47) (br $for-out-l47))
				
			)
		)
		(set_local $l48 (i32.const 0))
		(loop $for-in-l48 
			(block $for-out-l48 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65992) (i32.shl (get_local $l48) (i32.const 2)))) (f32.const 0.))
				(set_local $l48 (i32.add (get_local $l48) (i32.const 1)))
				(if (i32.lt_s (get_local $l48) (i32.const 4096)) (br $for-in-l48) (br $for-out-l48))
				
			)
		)
		(set_local $l49 (i32.const 0))
		(loop $for-in-l49 
			(block $for-out-l49 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 82376) (i32.shl (get_local $l49) (i32.const 2)))) (f32.const 0.))
				(set_local $l49 (i32.add (get_local $l49) (i32.const 1)))
				(if (i32.lt_s (get_local $l49) (i32.const 2)) (br $for-in-l49) (br $for-out-l49))
				
			)
		)
		(set_local $l50 (i32.const 0))
		(loop $for-in-l50 
			(block $for-out-l50 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 82384) (i32.shl (get_local $l50) (i32.const 2)))) (f32.const 0.))
				(set_local $l50 (i32.add (get_local $l50) (i32.const 1)))
				(if (i32.lt_s (get_local $l50) (i32.const 2)) (br $for-in-l50) (br $for-out-l50))
				
			)
		)
		(set_local $l51 (i32.const 0))
		(loop $for-in-l51 
			(block $for-out-l51 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 82392) (i32.shl (get_local $l51) (i32.const 2)))) (f32.const 0.))
				(set_local $l51 (i32.add (get_local $l51) (i32.const 1)))
				(if (i32.lt_s (get_local $l51) (i32.const 4096)) (br $for-in-l51) (br $for-out-l51))
				
			)
		)
		(set_local $l52 (i32.const 0))
		(loop $for-in-l52 
			(block $for-out-l52 
				(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 98780) (i32.shl (get_local $l52) (i32.const 2)))) (i32.const 0))
				(set_local $l52 (i32.add (get_local $l52) (i32.const 1)))
				(if (i32.lt_s (get_local $l52) (i32.const 2)) (br $for-in-l52) (br $for-out-l52))
				
			)
		)
		(set_local $l53 (i32.const 0))
		(loop $for-in-l53 
			(block $for-out-l53 
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 98788) (i32.shl (get_local $l53) (i32.const 2)))) (f32.const 0.))
				(set_local $l53 (i32.add (get_local $l53) (i32.const 1)))
				(if (i32.lt_s (get_local $l53) (i32.const 4)) (br $for-in-l53) (br $for-out-l53))
				
			)
		)
		
	)
	(func $init (param $dsp i32) (param $samplingFreq i32)
		(call $classInit (get_local $dsp) (get_local $samplingFreq))
		(call $instanceInit (get_local $dsp) (get_local $samplingFreq))
		
	)
	(func $instanceInit (param $dsp i32) (param $samplingFreq i32)
		(call $instanceConstants (get_local $dsp) (get_local $samplingFreq))
		(call $instanceResetUserInterface (get_local $dsp))
		(call $instanceClear (get_local $dsp))
		
	)
	(func $getSampleRate (param $dsp i32) (result i32)
		(return (i32.load (i32.add (get_local $dsp) (i32.const 40))))
	)
	(func $setParamValue (param $dsp i32) (param $index i32) (param $value f32)
		(f32.store 
			(i32.add (get_local $dsp) (get_local $index))
			(get_local $value)
		)
	)
	(func $getParamValue (param $dsp i32) (param $index i32) (result f32)
		(return (f32.load (i32.add (get_local $dsp) (get_local $index))))
	)
	(func $compute (param $dsp i32) (param $count i32) (param $inputs i32) (param $outputs i32)
		(local $input0 i32)
		(local $output0 i32)
		(local $fSlow0 f32)
		(local $fSlow1 f32)
		(local $fSlow2 f32)
		(local $iSlow3 i32)
		(local $iSlow4 i32)
		(local $iSlow5 i32)
		(local $fSlow6 f32)
		(local $fSlow7 f32)
		(local $iSlow8 i32)
		(local $fSlow9 f32)
		(local $fSlow10 f32)
		(local $fSlow11 f32)
		(local $fSlow12 f32)
		(local $fSlow13 f32)
		(local $fSlow14 f32)
		(local $fSlow15 f32)
		(local $fSlow16 f32)
		(local $fSlow17 f32)
		(local $fSlow18 f32)
		(local $i i32)
		(local $fTemp0 f32)
		(local $fTemp1 f32)
		(local $fTemp2 f32)
		(local $fTemp3 f32)
		(local $fTemp4 f32)
		(local $fTemp5 f32)
		(local $fTemp6 f32)
		(local $fTemp7 f32)
		(local $fTemp8 f32)
		(local $fTemp9 f32)
		(local $fTemp10 f32)
		(local $fTemp11 f32)
		(local $fTemp12 f32)
		(local $fTemp13 f32)
		(local $fTemp14 f32)
		(local $fTemp15 f32)
		(local $fTemp16 f32)
		(local $fTemp17 f32)
		(local $fTemp18 f32)
		(local $fTemp19 f32)
		(local $fTemp20 f32)
		(local $fTemp21 f32)
		(local $fTemp22 f32)
		(local $fTemp23 f32)
		(local $fTemp24 f32)
		(local $fTemp25 f32)
		(local $fTemp26 f32)
		(local $fTemp27 f32)
		(local $fTemp28 f32)
		(local $fTemp29 f32)
		(local $fTemp30 f32)
		(local $fTemp31 f32)
		(local $fTemp32 f32)
		(local $fTemp33 f32)
		(local $fTemp34 f32)
		(local $fTemp35 f32)
		(local $fTemp36 f32)
		(local $fTemp37 f32)
		(local $fTemp38 f32)
		(local $fTemp39 f32)
		(local $iTemp40 i32)
		(local $fTemp41 f32)
		(local $fTemp42 f32)
		(local $fTemp43 f32)
		(local $fTemp44 f32)
		(local $fTemp45 f32)
		(local $fTemp46 f32)
		(local $fTemp47 f32)
		(local $fTemp48 f32)
		(local $fTemp49 f32)
		(local $fTemp50 f32)
		(local $iTemp51 i32)
		(local $fTemp52 f32)
		(local $fTemp53 f32)
		(local $fTemp54 f32)
		(local $fTemp55 f32)
		(local $fTemp56 f32)
		(local $fTemp57 f32)
		(local $fTemp58 f32)
		(local $fTemp59 f32)
		(local $fTemp60 f32)
		(local $fTemp61 f32)
		(local $iTemp62 i32)
		(local $fTemp63 f32)
		(local $fTemp64 f32)
		(local $fTemp65 f32)
		(local $fTemp66 f32)
		(local $fTemp67 f32)
		(local $iTemp68 i32)
		(local $fTemp69 f32)
		(local $iTemp70 i32)
		(local $fTemp71 f32)
		(local $fTemp72 f32)
		(local $fTemp73 f32)
		(local $iTemp74 i32)
		(local $fTemp75 f32)
		(local $iTemp76 i32)
		(local $fTemp77 f32)
		(local $fTemp78 f32)
		(local $fTemp79 f32)
		(local $iTemp80 i32)
		(local $fTemp81 f32)
		(local $iTemp82 i32)
		(local $fTemp83 f32)
		(local $fTemp84 f32)
		(local $fTemp85 f32)
		(local $fTemp86 f32)
		(local $fTemp87 f32)
		(local $fTemp88 f32)
		(local $fTemp89 f32)
		(local $fTemp90 f32)
		(local $fTemp91 f32)
		(local $j0 i32)
		(local $j1 i32)
		(set_local $input0 (i32.const 0))
		(set_local $output0 (i32.const 0))
		(set_local $fSlow0 (f32.const 0.))
		(set_local $fSlow1 (f32.const 0.))
		(set_local $fSlow2 (f32.const 0.))
		(set_local $iSlow3 (i32.const 0))
		(set_local $iSlow4 (i32.const 0))
		(set_local $iSlow5 (i32.const 0))
		(set_local $fSlow6 (f32.const 0.))
		(set_local $fSlow7 (f32.const 0.))
		(set_local $iSlow8 (i32.const 0))
		(set_local $fSlow9 (f32.const 0.))
		(set_local $fSlow10 (f32.const 0.))
		(set_local $fSlow11 (f32.const 0.))
		(set_local $fSlow12 (f32.const 0.))
		(set_local $fSlow13 (f32.const 0.))
		(set_local $fSlow14 (f32.const 0.))
		(set_local $fSlow15 (f32.const 0.))
		(set_local $fSlow16 (f32.const 0.))
		(set_local $fSlow17 (f32.const 0.))
		(set_local $fSlow18 (f32.const 0.))
		(set_local $i (i32.const 0))
		(set_local $fTemp0 (f32.const 0.))
		(set_local $fTemp1 (f32.const 0.))
		(set_local $fTemp2 (f32.const 0.))
		(set_local $fTemp3 (f32.const 0.))
		(set_local $fTemp4 (f32.const 0.))
		(set_local $fTemp5 (f32.const 0.))
		(set_local $fTemp6 (f32.const 0.))
		(set_local $fTemp7 (f32.const 0.))
		(set_local $fTemp8 (f32.const 0.))
		(set_local $fTemp9 (f32.const 0.))
		(set_local $fTemp10 (f32.const 0.))
		(set_local $fTemp11 (f32.const 0.))
		(set_local $fTemp12 (f32.const 0.))
		(set_local $fTemp13 (f32.const 0.))
		(set_local $fTemp14 (f32.const 0.))
		(set_local $fTemp15 (f32.const 0.))
		(set_local $fTemp16 (f32.const 0.))
		(set_local $fTemp17 (f32.const 0.))
		(set_local $fTemp18 (f32.const 0.))
		(set_local $fTemp19 (f32.const 0.))
		(set_local $fTemp20 (f32.const 0.))
		(set_local $fTemp21 (f32.const 0.))
		(set_local $fTemp22 (f32.const 0.))
		(set_local $fTemp23 (f32.const 0.))
		(set_local $fTemp24 (f32.const 0.))
		(set_local $fTemp25 (f32.const 0.))
		(set_local $fTemp26 (f32.const 0.))
		(set_local $fTemp27 (f32.const 0.))
		(set_local $fTemp28 (f32.const 0.))
		(set_local $fTemp29 (f32.const 0.))
		(set_local $fTemp30 (f32.const 0.))
		(set_local $fTemp31 (f32.const 0.))
		(set_local $fTemp32 (f32.const 0.))
		(set_local $fTemp33 (f32.const 0.))
		(set_local $fTemp34 (f32.const 0.))
		(set_local $fTemp35 (f32.const 0.))
		(set_local $fTemp36 (f32.const 0.))
		(set_local $fTemp37 (f32.const 0.))
		(set_local $fTemp38 (f32.const 0.))
		(set_local $fTemp39 (f32.const 0.))
		(set_local $iTemp40 (i32.const 0))
		(set_local $fTemp41 (f32.const 0.))
		(set_local $fTemp42 (f32.const 0.))
		(set_local $fTemp43 (f32.const 0.))
		(set_local $fTemp44 (f32.const 0.))
		(set_local $fTemp45 (f32.const 0.))
		(set_local $fTemp46 (f32.const 0.))
		(set_local $fTemp47 (f32.const 0.))
		(set_local $fTemp48 (f32.const 0.))
		(set_local $fTemp49 (f32.const 0.))
		(set_local $fTemp50 (f32.const 0.))
		(set_local $iTemp51 (i32.const 0))
		(set_local $fTemp52 (f32.const 0.))
		(set_local $fTemp53 (f32.const 0.))
		(set_local $fTemp54 (f32.const 0.))
		(set_local $fTemp55 (f32.const 0.))
		(set_local $fTemp56 (f32.const 0.))
		(set_local $fTemp57 (f32.const 0.))
		(set_local $fTemp58 (f32.const 0.))
		(set_local $fTemp59 (f32.const 0.))
		(set_local $fTemp60 (f32.const 0.))
		(set_local $fTemp61 (f32.const 0.))
		(set_local $iTemp62 (i32.const 0))
		(set_local $fTemp63 (f32.const 0.))
		(set_local $fTemp64 (f32.const 0.))
		(set_local $fTemp65 (f32.const 0.))
		(set_local $fTemp66 (f32.const 0.))
		(set_local $fTemp67 (f32.const 0.))
		(set_local $iTemp68 (i32.const 0))
		(set_local $fTemp69 (f32.const 0.))
		(set_local $iTemp70 (i32.const 0))
		(set_local $fTemp71 (f32.const 0.))
		(set_local $fTemp72 (f32.const 0.))
		(set_local $fTemp73 (f32.const 0.))
		(set_local $iTemp74 (i32.const 0))
		(set_local $fTemp75 (f32.const 0.))
		(set_local $iTemp76 (i32.const 0))
		(set_local $fTemp77 (f32.const 0.))
		(set_local $fTemp78 (f32.const 0.))
		(set_local $fTemp79 (f32.const 0.))
		(set_local $iTemp80 (i32.const 0))
		(set_local $fTemp81 (f32.const 0.))
		(set_local $iTemp82 (i32.const 0))
		(set_local $fTemp83 (f32.const 0.))
		(set_local $fTemp84 (f32.const 0.))
		(set_local $fTemp85 (f32.const 0.))
		(set_local $fTemp86 (f32.const 0.))
		(set_local $fTemp87 (f32.const 0.))
		(set_local $fTemp88 (f32.const 0.))
		(set_local $fTemp89 (f32.const 0.))
		(set_local $fTemp90 (f32.const 0.))
		(set_local $fTemp91 (f32.const 0.))
		(set_local $j0 (i32.const 3))
		(set_local $j1 (i32.const 3))
		(set_local $input0 (i32.load (i32.add (get_local $inputs) (i32.const 0))))
		(set_local $output0 (i32.load (i32.add (get_local $outputs) (i32.const 0))))
		(set_local $fSlow0 (f32.load (i32.add (get_local $dsp) (i32.const 0))))
		(set_local $fSlow1 (f32.mul (f32.const 0.00100000005) (call $powf (f32.const 10.) (f32.mul (f32.const 0.0500000007) (f32.load (i32.add (get_local $dsp) (i32.const 4)))))))
		(set_local $fSlow2 (f32.mul (f32.const 0.333333343) (f32.load (i32.add (get_local $dsp) (i32.const 32)))))
		(set_local $iSlow3 (i32.trunc_s/f32 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 36))) (f32.const -1.))))
		(set_local $iSlow4 (i32.ge_s (get_local $iSlow3) (i32.const 2)))
		(set_local $iSlow5 (i32.ge_s (get_local $iSlow3) (i32.const 1)))
		(set_local $fSlow6 (call $expf (f32.sub (f32.const 0.) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 56)))))))
		(set_local $fSlow7 (f32.mul (f32.const 440.) (f32.mul (call $powf (f32.const 2.) (f32.mul (f32.const 0.0833333358) (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 52))) (f32.const -49.)))) (f32.sub (f32.const 1.) (get_local $fSlow6)))))
		(set_local $iSlow8 (i32.ge_s (get_local $iSlow3) (i32.const 3)))
		(set_local $fSlow9 (f32.sub (f32.const 1.) (f32.mul (f32.const 0.00999999978) (f32.load (i32.add (get_local $dsp) (i32.const 144))))))
		(set_local $fSlow10 (f32.add (f32.mul (f32.const 0.00999999978) (f32.load (i32.add (get_local $dsp) (i32.const 212)))) (f32.const 1.)))
		(set_local $fSlow11 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 280))) (f32.load (i32.add (get_local $dsp) (i32.const 284)))))
		(set_local $fSlow12 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 49520))) (f32.load (i32.add (get_local $dsp) (i32.const 49524)))))
		(set_local $fSlow13 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 44))) (f32.load (i32.add (get_local $dsp) (i32.const 49552)))))
		(set_local $fSlow14 (f32.load (i32.add (get_local $dsp) (i32.const 49556))))
		(set_local $fSlow15 (f32.mul (f32.const 0.0833333358) (f32.sub (f32.const 1.) (get_local $fSlow14))))
		(set_local $fSlow16 (f32.mul (f32.const 0.00999999978) (f32.load (i32.add (get_local $dsp) (i32.const 49560)))))
		(set_local $fSlow17 (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 49572))) (get_local $fSlow14)))
		(set_local $fSlow18 (f32.load (i32.add (get_local $dsp) (i32.const 98776))))
		(set_local $i (i32.const 0))
		(loop $for-in-i 
			(block $for-out-i 
				(i32.store (i32.add (get_local $dsp) (i32.const 8)) (i32.const 1))
				(f32.store (i32.add (get_local $dsp) (i32.const 24)) (f32.add (get_local $fSlow1) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 28))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 60)) (f32.add (get_local $fSlow7) (f32.mul (get_local $fSlow6) (f32.load (i32.add (get_local $dsp) (i32.const 64))))))
				(set_local $fTemp0 (f32.max (f32.const 20.) (f32.abs (f32.load (i32.add (get_local $dsp) (i32.const 60))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 68)) (get_local $fTemp0))
				(set_local $fTemp1 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 80))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 72))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 76)) (f32.sub (get_local $fTemp1) (f32.floor (get_local $fTemp1))))
				(set_local $fTemp2 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 76)))))
				(set_local $fTemp3 (f32.add (get_local $fTemp2) (f32.const -1.)))
				(set_local $fTemp4 (call $powf (get_local $fTemp3) (f32.const 2.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 88)) (get_local $fTemp4))
				(set_local $fTemp5 (call $powf (get_local $fTemp3) (f32.const 3.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 100)) (f32.add (get_local $fTemp5) (f32.sub (f32.const 1.) (get_local $fTemp2))))
				(set_local $fTemp6 (f32.div (f32.add (get_local $fTemp5) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp2) (f32.load (i32.add (get_local $dsp) (i32.const 104)))))) (get_local $fTemp0)))
				(f32.store (i32.add (get_local $dsp) (i32.const 108)) (get_local $fTemp6))
				(set_local $fTemp7 (f32.mul (get_local $fTemp4) (f32.add (get_local $fTemp4) (f32.const -2.))))
				(f32.store (i32.add (get_local $dsp) (i32.const 120)) (get_local $fTemp7))
				(set_local $fTemp8 (f32.div (f32.sub (get_local $fTemp7) (f32.load (i32.add (get_local $dsp) (i32.const 124)))) (get_local $fTemp0)))
				(f32.store (i32.add (get_local $dsp) (i32.const 128)) (get_local $fTemp8))
				(set_local $fTemp9 (f32.div (f32.sub (get_local $fTemp8) (f32.load (i32.add (get_local $dsp) (i32.const 132)))) (get_local $fTemp0)))
				(f32.store (i32.add (get_local $dsp) (i32.const 136)) (get_local $fTemp9))
				(set_local $fTemp10 (f32.mul (get_local $fSlow9) (f32.load (i32.add (get_local $dsp) (i32.const 60)))))
				(set_local $fTemp11 (f32.max (f32.const 20.) (f32.abs (get_local $fTemp10))))
				(f32.store (i32.add (get_local $dsp) (i32.const 148)) (get_local $fTemp11))
				(set_local $fTemp12 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 160))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 152))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 156)) (f32.sub (get_local $fTemp12) (f32.floor (get_local $fTemp12))))
				(set_local $fTemp13 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 156)))))
				(set_local $fTemp14 (f32.add (get_local $fTemp13) (f32.const -1.)))
				(set_local $fTemp15 (call $powf (get_local $fTemp14) (f32.const 2.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 164)) (get_local $fTemp15))
				(set_local $fTemp16 (call $powf (get_local $fTemp14) (f32.const 3.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 172)) (f32.add (get_local $fTemp16) (f32.sub (f32.const 1.) (get_local $fTemp13))))
				(set_local $fTemp17 (f32.div (f32.add (get_local $fTemp16) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp13) (f32.load (i32.add (get_local $dsp) (i32.const 176)))))) (get_local $fTemp11)))
				(f32.store (i32.add (get_local $dsp) (i32.const 180)) (get_local $fTemp17))
				(set_local $fTemp18 (f32.mul (get_local $fTemp15) (f32.add (get_local $fTemp15) (f32.const -2.))))
				(f32.store (i32.add (get_local $dsp) (i32.const 188)) (get_local $fTemp18))
				(set_local $fTemp19 (f32.div (f32.sub (get_local $fTemp18) (f32.load (i32.add (get_local $dsp) (i32.const 192)))) (get_local $fTemp11)))
				(f32.store (i32.add (get_local $dsp) (i32.const 196)) (get_local $fTemp19))
				(set_local $fTemp20 (f32.div (f32.sub (get_local $fTemp19) (f32.load (i32.add (get_local $dsp) (i32.const 200)))) (get_local $fTemp11)))
				(f32.store (i32.add (get_local $dsp) (i32.const 204)) (get_local $fTemp20))
				(set_local $fTemp21 (f32.mul (get_local $fSlow10) (f32.load (i32.add (get_local $dsp) (i32.const 60)))))
				(set_local $fTemp22 (f32.max (f32.const 20.) (f32.abs (get_local $fTemp21))))
				(f32.store (i32.add (get_local $dsp) (i32.const 216)) (get_local $fTemp22))
				(set_local $fTemp23 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 228))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 220))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 224)) (f32.sub (get_local $fTemp23) (f32.floor (get_local $fTemp23))))
				(set_local $fTemp24 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 224)))))
				(set_local $fTemp25 (f32.add (get_local $fTemp24) (f32.const -1.)))
				(set_local $fTemp26 (call $powf (get_local $fTemp25) (f32.const 2.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 232)) (get_local $fTemp26))
				(set_local $fTemp27 (call $powf (get_local $fTemp25) (f32.const 3.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 240)) (f32.add (get_local $fTemp27) (f32.sub (f32.const 1.) (get_local $fTemp24))))
				(set_local $fTemp28 (f32.div (f32.add (get_local $fTemp27) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp24) (f32.load (i32.add (get_local $dsp) (i32.const 244)))))) (get_local $fTemp22)))
				(f32.store (i32.add (get_local $dsp) (i32.const 248)) (get_local $fTemp28))
				(set_local $fTemp29 (f32.mul (get_local $fTemp26) (f32.add (get_local $fTemp26) (f32.const -2.))))
				(f32.store (i32.add (get_local $dsp) (i32.const 256)) (get_local $fTemp29))
				(set_local $fTemp30 (f32.div (f32.sub (get_local $fTemp29) (f32.load (i32.add (get_local $dsp) (i32.const 260)))) (get_local $fTemp22)))
				(f32.store (i32.add (get_local $dsp) (i32.const 264)) (get_local $fTemp30))
				(set_local $fTemp31 (f32.div (f32.sub (get_local $fTemp30) (f32.load (i32.add (get_local $dsp) (i32.const 268)))) (get_local $fTemp22)))
				(f32.store (i32.add (get_local $dsp) (i32.const 272)) (get_local $fTemp31))
				(set_local $fTemp32 (f32.max (f32.load (i32.add (get_local $dsp) (i32.const 60))) (f32.const 23.4489498)))
				(set_local $fTemp33 (f32.max (f32.const 20.) (f32.abs (get_local $fTemp32))))
				(f32.store (i32.add (get_local $dsp) (i32.const 288)) (get_local $fTemp33))
				(set_local $fTemp34 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 300))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 292))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 296)) (f32.sub (get_local $fTemp34) (f32.floor (get_local $fTemp34))))
				(set_local $fTemp35 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 296)))))
				(set_local $fTemp36 (f32.add (get_local $fTemp35) (f32.const -1.)))
				(set_local $fTemp37 (call $powf (get_local $fTemp36) (f32.const 2.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 304)) (get_local $fTemp37))
				(set_local $fTemp38 (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))) (f32.sub (get_local $fTemp37) (f32.load (i32.add (get_local $dsp) (i32.const 308))))) (get_local $fTemp33)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 316) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 4095)) (i32.const 2)))) (get_local $fTemp38))
				(set_local $fTemp39 (f32.max (f32.const 0.) (f32.min (f32.const 2047.) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 16700))) (get_local $fTemp32)))))
				(set_local $iTemp40 (i32.trunc_s/f32 (get_local $fTemp39)))
				(set_local $fTemp41 (f32.floor (get_local $fTemp39)))
				(set_local $fTemp42 (f32.sub (f32.sub (get_local $fTemp38) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp40)) (i32.const 4095)) (i32.const 2))))) (f32.add (get_local $fTemp41) (f32.sub (f32.const 1.) (get_local $fTemp39))))) (f32.mul (f32.sub (get_local $fTemp39) (get_local $fTemp41)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.add (get_local $iTemp40) (i32.const 1))) (i32.const 4095)) (i32.const 2))))))))
				(set_local $fTemp43 (f32.max (get_local $fTemp10) (f32.const 23.4489498)))
				(set_local $fTemp44 (f32.max (f32.const 20.) (f32.abs (get_local $fTemp43))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16704)) (get_local $fTemp44))
				(set_local $fTemp45 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 16716))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 16708))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16712)) (f32.sub (get_local $fTemp45) (f32.floor (get_local $fTemp45))))
				(set_local $fTemp46 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 16712)))))
				(set_local $fTemp47 (f32.add (get_local $fTemp46) (f32.const -1.)))
				(set_local $fTemp48 (call $powf (get_local $fTemp47) (f32.const 2.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 16720)) (get_local $fTemp48))
				(set_local $fTemp49 (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))) (f32.sub (get_local $fTemp48) (f32.load (i32.add (get_local $dsp) (i32.const 16724))))) (get_local $fTemp44)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 16728) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 4095)) (i32.const 2)))) (get_local $fTemp49))
				(set_local $fTemp50 (f32.max (f32.const 0.) (f32.min (f32.const 2047.) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 16700))) (get_local $fTemp43)))))
				(set_local $iTemp51 (i32.trunc_s/f32 (get_local $fTemp50)))
				(set_local $fTemp52 (f32.floor (get_local $fTemp50)))
				(set_local $fTemp53 (f32.sub (f32.sub (get_local $fTemp49) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16728) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp51)) (i32.const 4095)) (i32.const 2))))) (f32.add (get_local $fTemp52) (f32.sub (f32.const 1.) (get_local $fTemp50))))) (f32.mul (f32.sub (get_local $fTemp50) (get_local $fTemp52)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16728) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.add (get_local $iTemp51) (i32.const 1))) (i32.const 4095)) (i32.const 2))))))))
				(set_local $fTemp54 (f32.max (get_local $fTemp21) (f32.const 23.4489498)))
				(set_local $fTemp55 (f32.max (f32.const 20.) (f32.abs (get_local $fTemp54))))
				(f32.store (i32.add (get_local $dsp) (i32.const 33112)) (get_local $fTemp55))
				(set_local $fTemp56 (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 33124))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 48))) (f32.load (i32.add (get_local $dsp) (i32.const 33116))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 33120)) (f32.sub (get_local $fTemp56) (f32.floor (get_local $fTemp56))))
				(set_local $fTemp57 (f32.mul (f32.const 2.) (f32.load (i32.add (get_local $dsp) (i32.const 33120)))))
				(set_local $fTemp58 (f32.add (get_local $fTemp57) (f32.const -1.)))
				(set_local $fTemp59 (call $powf (get_local $fTemp58) (f32.const 2.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 33128)) (get_local $fTemp59))
				(set_local $fTemp60 (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))) (f32.sub (get_local $fTemp59) (f32.load (i32.add (get_local $dsp) (i32.const 33132))))) (get_local $fTemp55)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 33136) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 4095)) (i32.const 2)))) (get_local $fTemp60))
				(set_local $fTemp61 (f32.max (f32.const 0.) (f32.min (f32.const 2047.) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 16700))) (get_local $fTemp54)))))
				(set_local $iTemp62 (i32.trunc_s/f32 (get_local $fTemp61)))
				(set_local $fTemp63 (f32.floor (get_local $fTemp61)))
				(set_local $fTemp64 (f32.sub (f32.sub (get_local $fTemp60) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 33136) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp62)) (i32.const 4095)) (i32.const 2))))) (f32.add (get_local $fTemp63) (f32.sub (f32.const 1.) (get_local $fTemp61))))) (f32.mul (f32.sub (get_local $fTemp61) (get_local $fTemp63)) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 33136) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.add (get_local $iTemp62) (i32.const 1))) (i32.const 4095)) (i32.const 2))))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49528)) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 84))) (get_local $fTemp42)) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 49532))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49536)) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 84))) (get_local $fTemp53)) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 49540))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49544)) (f32.add (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 84))) (get_local $fTemp64)) (f32.mul (f32.const 0.999000013) (f32.load (i32.add (get_local $dsp) (i32.const 49548))))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49564)) (f32.add (get_local $fSlow16) (f32.mul (f32.const 0.99000001) (f32.load (i32.add (get_local $dsp) (i32.const 49568))))))
				(set_local $fTemp65 (f32.max (f32.const 0.) (f32.min (f32.const 2047.) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 44))) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 49564))) (get_local $fTemp32))))))
				(set_local $fTemp66 (f32.floor (get_local $fTemp65)))
				(set_local $fTemp67 (f32.add (get_local $fTemp66) (f32.sub (f32.const 1.) (get_local $fTemp65))))
				(set_local $iTemp68 (i32.trunc_s/f32 (get_local $fTemp65)))
				(set_local $fTemp69 (f32.sub (get_local $fTemp65) (get_local $fTemp66)))
				(set_local $iTemp70 (i32.add (get_local $iTemp68) (i32.const 1)))
				(set_local $fTemp71 (f32.max (f32.const 0.) (f32.min (f32.const 2047.) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 44))) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 49564))) (get_local $fTemp43))))))
				(set_local $fTemp72 (f32.floor (get_local $fTemp71)))
				(set_local $fTemp73 (f32.add (get_local $fTemp72) (f32.sub (f32.const 1.) (get_local $fTemp71))))
				(set_local $iTemp74 (i32.trunc_s/f32 (get_local $fTemp71)))
				(set_local $fTemp75 (f32.sub (get_local $fTemp71) (get_local $fTemp72)))
				(set_local $iTemp76 (i32.add (get_local $iTemp74) (i32.const 1)))
				(set_local $fTemp77 (f32.max (f32.const 0.) (f32.min (f32.const 2047.) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 44))) (f32.div (f32.load (i32.add (get_local $dsp) (i32.const 49564))) (get_local $fTemp54))))))
				(set_local $fTemp78 (f32.floor (get_local $fTemp77)))
				(set_local $fTemp79 (f32.add (get_local $fTemp78) (f32.sub (f32.const 1.) (get_local $fTemp77))))
				(set_local $iTemp80 (i32.trunc_s/f32 (get_local $fTemp77)))
				(set_local $fTemp81 (f32.sub (get_local $fTemp77) (get_local $fTemp78)))
				(set_local $iTemp82 (i32.add (get_local $iTemp80) (i32.const 1)))
				(set_local $fTemp83 (call $powf (get_local $fTemp36) (f32.const 3.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 49576)) (f32.add (get_local $fTemp83) (f32.sub (f32.const 1.) (get_local $fTemp35))))
				(set_local $fTemp84 (f32.div (f32.add (get_local $fTemp83) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp35) (f32.load (i32.add (get_local $dsp) (i32.const 49580)))))) (get_local $fTemp33)))
				(f32.store (i32.add (get_local $dsp) (i32.const 49584)) (get_local $fTemp84))
				(set_local $fTemp85 (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))) (f32.sub (get_local $fTemp84) (f32.load (i32.add (get_local $dsp) (i32.const 49588))))) (get_local $fTemp33)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 49592) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 4095)) (i32.const 2)))) (get_local $fTemp85))
				(set_local $fTemp86 (call $powf (get_local $fTemp47) (f32.const 3.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 65976)) (f32.add (get_local $fTemp86) (f32.sub (f32.const 1.) (get_local $fTemp46))))
				(set_local $fTemp87 (f32.div (f32.add (get_local $fTemp86) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp46) (f32.load (i32.add (get_local $dsp) (i32.const 65980)))))) (get_local $fTemp44)))
				(f32.store (i32.add (get_local $dsp) (i32.const 65984)) (get_local $fTemp87))
				(set_local $fTemp88 (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))) (f32.sub (get_local $fTemp87) (f32.load (i32.add (get_local $dsp) (i32.const 65988))))) (get_local $fTemp44)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 65992) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 4095)) (i32.const 2)))) (get_local $fTemp88))
				(set_local $fTemp89 (call $powf (get_local $fTemp58) (f32.const 3.)))
				(f32.store (i32.add (get_local $dsp) (i32.const 82376)) (f32.add (get_local $fTemp89) (f32.sub (f32.const 1.) (get_local $fTemp57))))
				(set_local $fTemp90 (f32.div (f32.add (get_local $fTemp89) (f32.sub (f32.const 1.) (f32.add (get_local $fTemp57) (f32.load (i32.add (get_local $dsp) (i32.const 82380)))))) (get_local $fTemp55)))
				(f32.store (i32.add (get_local $dsp) (i32.const 82384)) (get_local $fTemp90))
				(set_local $fTemp91 (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))) (f32.sub (get_local $fTemp90) (f32.load (i32.add (get_local $dsp) (i32.const 82388))))) (get_local $fTemp55)))
				(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 82392) (i32.shl (i32.and (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 4095)) (i32.const 2)))) (get_local $fTemp91))
				(i32.store (i32.add (get_local $dsp) (i32.const 98780)) (i32.add (i32.mul (i32.const 1103515245) (i32.load (i32.add (get_local $dsp) (i32.const 98784)))) (i32.const 12345)))
				(f32.store (i32.add (get_local $dsp) (i32.const 98788)) (f32.sub (f32.add (f32.mul (f32.const 0.522189379) (f32.load (i32.add (get_local $dsp) (i32.const 98800)))) (f32.add (f32.mul (f32.const 4.65661287e-10) (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 98780))))) (f32.mul (f32.const 2.49495602) (f32.load (i32.add (get_local $dsp) (i32.const 98792)))))) (f32.mul (f32.const 2.0172658) (f32.load (i32.add (get_local $dsp) (i32.const 98796))))))
				(f32.store (i32.add (get_local $output0) (get_local $i)) (f32.add (f32.mul (get_local $fSlow0) (f32.load (i32.add (get_local $input0) (get_local $i)))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 24))) (f32.add (f32.add (f32.add (f32.add (f32.mul (get_local $fSlow2) (f32.add (f32.add (select (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 116))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.sub (get_local $fTemp9) (f32.load (i32.add (get_local $dsp) (i32.const 140))))) (get_local $fTemp0))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 96))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))) (f32.sub (get_local $fTemp6) (f32.load (i32.add (get_local $dsp) (i32.const 112))))) (get_local $fTemp0))) (get_local $iSlow8)) (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 84))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))) (f32.sub (get_local $fTemp4) (f32.load (i32.add (get_local $dsp) (i32.const 92))))) (get_local $fTemp0))) (get_local $fTemp3) (get_local $iSlow5)) (get_local $iSlow4)) (select (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 116))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.sub (get_local $fTemp20) (f32.load (i32.add (get_local $dsp) (i32.const 208))))) (get_local $fTemp11))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 96))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))) (f32.sub (get_local $fTemp17) (f32.load (i32.add (get_local $dsp) (i32.const 184))))) (get_local $fTemp11))) (get_local $iSlow8)) (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 84))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))) (f32.sub (get_local $fTemp15) (f32.load (i32.add (get_local $dsp) (i32.const 168))))) (get_local $fTemp11))) (get_local $fTemp14) (get_local $iSlow5)) (get_local $iSlow4))) (select (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 116))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 20)))) (f32.sub (get_local $fTemp31) (f32.load (i32.add (get_local $dsp) (i32.const 276))))) (get_local $fTemp22))) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 96))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 16)))) (f32.sub (get_local $fTemp28) (f32.load (i32.add (get_local $dsp) (i32.const 252))))) (get_local $fTemp22))) (get_local $iSlow8)) (select (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 84))) (f32.div (f32.mul (f32.convert_s/i32 (i32.load (i32.add (get_local $dsp) (i32.const 12)))) (f32.sub (get_local $fTemp26) (f32.load (i32.add (get_local $dsp) (i32.const 236))))) (get_local $fTemp22))) (get_local $fTemp25) (get_local $iSlow5)) (get_local $iSlow4)))) (f32.mul (get_local $fSlow11) (f32.add (f32.add (get_local $fTemp42) (get_local $fTemp53)) (get_local $fTemp64)))) (f32.mul (get_local $fSlow12) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.const 60))) (f32.add (f32.add (f32.load (i32.add (get_local $dsp) (i32.const 49528))) (f32.mul (get_local $fSlow9) (f32.load (i32.add (get_local $dsp) (i32.const 49536))))) (f32.mul (get_local $fSlow10) (f32.load (i32.add (get_local $dsp) (i32.const 49544)))))))) (f32.mul (get_local $fSlow13) (f32.add (f32.mul (get_local $fSlow15) (f32.add (f32.add (f32.sub (f32.sub (get_local $fTemp38) (f32.mul (get_local $fTemp67) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp68)) (i32.const 4095)) (i32.const 2))))))) (f32.mul (get_local $fTemp69) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 316) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp70)) (i32.const 4095)) (i32.const 2))))))) (f32.sub (f32.sub (get_local $fTemp49) (f32.mul (get_local $fTemp73) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16728) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp74)) (i32.const 4095)) (i32.const 2))))))) (f32.mul (get_local $fTemp75) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 16728) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp76)) (i32.const 4095)) (i32.const 2)))))))) (f32.sub (f32.sub (get_local $fTemp60) (f32.mul (get_local $fTemp79) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 33136) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp80)) (i32.const 4095)) (i32.const 2))))))) (f32.mul (get_local $fTemp81) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 33136) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp82)) (i32.const 4095)) (i32.const 2))))))))) (f32.mul (get_local $fSlow17) (f32.add (f32.add (f32.sub (f32.sub (get_local $fTemp85) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 49592) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp68)) (i32.const 4095)) (i32.const 2))))) (get_local $fTemp67))) (f32.mul (get_local $fTemp69) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 49592) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp70)) (i32.const 4095)) (i32.const 2))))))) (f32.sub (f32.sub (get_local $fTemp88) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 65992) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp74)) (i32.const 4095)) (i32.const 2))))) (get_local $fTemp73))) (f32.mul (get_local $fTemp75) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 65992) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp76)) (i32.const 4095)) (i32.const 2)))))))) (f32.sub (f32.sub (get_local $fTemp91) (f32.mul (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 82392) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp80)) (i32.const 4095)) (i32.const 2))))) (get_local $fTemp79))) (f32.mul (get_local $fTemp81) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 82392) (i32.shl (i32.and (i32.sub (i32.load (i32.add (get_local $dsp) (i32.const 312))) (get_local $iTemp82)) (i32.const 4095)) (i32.const 2)))))))))))) (f32.mul (get_local $fSlow18) (f32.sub (f32.add (f32.mul (f32.const 0.0499220341) (f32.load (i32.add (get_local $dsp) (i32.const 98788)))) (f32.mul (f32.const 0.0506126992) (f32.load (i32.add (get_local $dsp) (i32.const 98796))))) (f32.add (f32.mul (f32.const 0.0959935337) (f32.load (i32.add (get_local $dsp) (i32.const 98792)))) (f32.mul (f32.const 0.00440878607) (f32.load (i32.add (get_local $dsp) (i32.const 98800)))))))))))
				(set_local $j0 (i32.const 3))
				(loop $for-in-j0 
					(block $for-out-j0 
						(i32.store (i32.add (get_local $dsp) (i32.add (i32.const 8) (i32.shl (get_local $j0) (i32.const 2)))) (i32.load (i32.add (get_local $dsp) (i32.add (i32.const 8) (i32.shl (i32.sub (get_local $j0) (i32.const 1)) (i32.const 2))))))
						(set_local $j0 (i32.sub (get_local $j0) (i32.const 1)))
						(if (i32.gt_s (get_local $j0) (i32.const 0)) (br $for-in-j0) (br $for-out-j0))
						
					)
				)
				(f32.store (i32.add (get_local $dsp) (i32.const 28)) (f32.load (i32.add (get_local $dsp) (i32.const 24))))
				(f32.store (i32.add (get_local $dsp) (i32.const 64)) (f32.load (i32.add (get_local $dsp) (i32.const 60))))
				(f32.store (i32.add (get_local $dsp) (i32.const 72)) (f32.load (i32.add (get_local $dsp) (i32.const 68))))
				(f32.store (i32.add (get_local $dsp) (i32.const 80)) (f32.load (i32.add (get_local $dsp) (i32.const 76))))
				(f32.store (i32.add (get_local $dsp) (i32.const 92)) (f32.load (i32.add (get_local $dsp) (i32.const 88))))
				(f32.store (i32.add (get_local $dsp) (i32.const 104)) (f32.load (i32.add (get_local $dsp) (i32.const 100))))
				(f32.store (i32.add (get_local $dsp) (i32.const 112)) (f32.load (i32.add (get_local $dsp) (i32.const 108))))
				(f32.store (i32.add (get_local $dsp) (i32.const 124)) (f32.load (i32.add (get_local $dsp) (i32.const 120))))
				(f32.store (i32.add (get_local $dsp) (i32.const 132)) (f32.load (i32.add (get_local $dsp) (i32.const 128))))
				(f32.store (i32.add (get_local $dsp) (i32.const 140)) (f32.load (i32.add (get_local $dsp) (i32.const 136))))
				(f32.store (i32.add (get_local $dsp) (i32.const 152)) (f32.load (i32.add (get_local $dsp) (i32.const 148))))
				(f32.store (i32.add (get_local $dsp) (i32.const 160)) (f32.load (i32.add (get_local $dsp) (i32.const 156))))
				(f32.store (i32.add (get_local $dsp) (i32.const 168)) (f32.load (i32.add (get_local $dsp) (i32.const 164))))
				(f32.store (i32.add (get_local $dsp) (i32.const 176)) (f32.load (i32.add (get_local $dsp) (i32.const 172))))
				(f32.store (i32.add (get_local $dsp) (i32.const 184)) (f32.load (i32.add (get_local $dsp) (i32.const 180))))
				(f32.store (i32.add (get_local $dsp) (i32.const 192)) (f32.load (i32.add (get_local $dsp) (i32.const 188))))
				(f32.store (i32.add (get_local $dsp) (i32.const 200)) (f32.load (i32.add (get_local $dsp) (i32.const 196))))
				(f32.store (i32.add (get_local $dsp) (i32.const 208)) (f32.load (i32.add (get_local $dsp) (i32.const 204))))
				(f32.store (i32.add (get_local $dsp) (i32.const 220)) (f32.load (i32.add (get_local $dsp) (i32.const 216))))
				(f32.store (i32.add (get_local $dsp) (i32.const 228)) (f32.load (i32.add (get_local $dsp) (i32.const 224))))
				(f32.store (i32.add (get_local $dsp) (i32.const 236)) (f32.load (i32.add (get_local $dsp) (i32.const 232))))
				(f32.store (i32.add (get_local $dsp) (i32.const 244)) (f32.load (i32.add (get_local $dsp) (i32.const 240))))
				(f32.store (i32.add (get_local $dsp) (i32.const 252)) (f32.load (i32.add (get_local $dsp) (i32.const 248))))
				(f32.store (i32.add (get_local $dsp) (i32.const 260)) (f32.load (i32.add (get_local $dsp) (i32.const 256))))
				(f32.store (i32.add (get_local $dsp) (i32.const 268)) (f32.load (i32.add (get_local $dsp) (i32.const 264))))
				(f32.store (i32.add (get_local $dsp) (i32.const 276)) (f32.load (i32.add (get_local $dsp) (i32.const 272))))
				(f32.store (i32.add (get_local $dsp) (i32.const 292)) (f32.load (i32.add (get_local $dsp) (i32.const 288))))
				(f32.store (i32.add (get_local $dsp) (i32.const 300)) (f32.load (i32.add (get_local $dsp) (i32.const 296))))
				(f32.store (i32.add (get_local $dsp) (i32.const 308)) (f32.load (i32.add (get_local $dsp) (i32.const 304))))
				(i32.store (i32.add (get_local $dsp) (i32.const 312)) (i32.add (i32.load (i32.add (get_local $dsp) (i32.const 312))) (i32.const 1)))
				(f32.store (i32.add (get_local $dsp) (i32.const 16708)) (f32.load (i32.add (get_local $dsp) (i32.const 16704))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16716)) (f32.load (i32.add (get_local $dsp) (i32.const 16712))))
				(f32.store (i32.add (get_local $dsp) (i32.const 16724)) (f32.load (i32.add (get_local $dsp) (i32.const 16720))))
				(f32.store (i32.add (get_local $dsp) (i32.const 33116)) (f32.load (i32.add (get_local $dsp) (i32.const 33112))))
				(f32.store (i32.add (get_local $dsp) (i32.const 33124)) (f32.load (i32.add (get_local $dsp) (i32.const 33120))))
				(f32.store (i32.add (get_local $dsp) (i32.const 33132)) (f32.load (i32.add (get_local $dsp) (i32.const 33128))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49532)) (f32.load (i32.add (get_local $dsp) (i32.const 49528))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49540)) (f32.load (i32.add (get_local $dsp) (i32.const 49536))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49548)) (f32.load (i32.add (get_local $dsp) (i32.const 49544))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49568)) (f32.load (i32.add (get_local $dsp) (i32.const 49564))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49580)) (f32.load (i32.add (get_local $dsp) (i32.const 49576))))
				(f32.store (i32.add (get_local $dsp) (i32.const 49588)) (f32.load (i32.add (get_local $dsp) (i32.const 49584))))
				(f32.store (i32.add (get_local $dsp) (i32.const 65980)) (f32.load (i32.add (get_local $dsp) (i32.const 65976))))
				(f32.store (i32.add (get_local $dsp) (i32.const 65988)) (f32.load (i32.add (get_local $dsp) (i32.const 65984))))
				(f32.store (i32.add (get_local $dsp) (i32.const 82380)) (f32.load (i32.add (get_local $dsp) (i32.const 82376))))
				(f32.store (i32.add (get_local $dsp) (i32.const 82388)) (f32.load (i32.add (get_local $dsp) (i32.const 82384))))
				(i32.store (i32.add (get_local $dsp) (i32.const 98784)) (i32.load (i32.add (get_local $dsp) (i32.const 98780))))
				(set_local $j1 (i32.const 3))
				(loop $for-in-j1 
					(block $for-out-j1 
						(f32.store (i32.add (get_local $dsp) (i32.add (i32.const 98788) (i32.shl (get_local $j1) (i32.const 2)))) (f32.load (i32.add (get_local $dsp) (i32.add (i32.const 98788) (i32.shl (i32.sub (get_local $j1) (i32.const 1)) (i32.const 2))))))
						(set_local $j1 (i32.sub (get_local $j1) (i32.const 1)))
						(if (i32.gt_s (get_local $j1) (i32.const 0)) (br $for-in-j1) (br $for-out-j1))
						
					)
				)
				(set_local $i (i32.add (get_local $i) (i32.const 4)))
				(if (i32.lt_s (get_local $i) (i32.mul (i32.const 4) (get_local $count))) (br $for-in-i) (br $for-out-i))
				
			)
		)
		
	)
	
)
