//----------------------------------------------------------
// name: "reverbDesigner"
//
// Code generated with Faust 2.5.15 (https://faust.grame.fr)
//----------------------------------------------------------

/* link with  */
#include <math.h>
#ifndef FAUSTPOWER
#define FAUSTPOWER
#include <cmath>
template <int N> inline int faustpower(int x)              { return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <> 	 inline int faustpower<0>(int x)            { return 1; }
template <> 	 inline int faustpower<1>(int x)            { return x; }
template <> 	 inline int faustpower<2>(int x)            { return x*x; }
template <int N> inline float faustpower(float x)            { return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <> 	 inline float faustpower<0>(float x)          { return 1; }
template <> 	 inline float faustpower<1>(float x)          { return x; }
template <> 	 inline float faustpower<2>(float x)          { return x*x; }
#endif

// algorithm is required for min and max
#include <algorithm>
#include "gui/UI.h"

using namespace std;

// the struct below are not defined in UI.h
struct dsp {
};

struct Meta {
	void declare(const char*, const char*) {}
};
#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif 


#ifndef FAUSTCLASS 
#define FAUSTCLASS mydsp
#endif

class mydsp : public dsp {
  private:
	FAUSTFLOAT 	fslider0;
	FAUSTFLOAT 	fcheckbox0;
	int 	iRec17[2];
	float 	fRec16[4];
	float 	fTempPerm0;
	FAUSTFLOAT 	fbutton0;
	float 	fVec0[2];
	int 	iTempPerm1;
	FAUSTFLOAT 	fbutton1;
	float 	fVec1[2];
	int 	iTempPerm2;
	FAUSTFLOAT 	fcheckbox1;
	float 	fTempPerm3;
	FAUSTFLOAT 	fbutton2;
	float 	fConst0;
	float 	fConst1;
	float 	fConst2;
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT 	fslider2;
	FAUSTFLOAT 	fslider3;
	float 	fConst3;
	FAUSTFLOAT 	fslider4;
	float 	fRec22[2];
	float 	fRec21[3];
	FAUSTFLOAT 	fslider5;
	float 	fTempPerm4;
	float 	fRec20[3];
	FAUSTFLOAT 	fslider6;
	float 	fTempPerm5;
	float 	fRec19[3];
	FAUSTFLOAT 	fslider7;
	float 	fTempPerm6;
	float 	fRec18[3];
	FAUSTFLOAT 	fslider8;
	float 	fRec28[2];
	float 	fRec27[3];
	float 	fTempPerm7;
	float 	fTempPerm8;
	float 	fVec2[2];
	float 	fRec26[2];
	float 	fRec25[3];
	float 	fTempPerm9;
	float 	fRec24[3];
	float 	fTempPerm10;
	float 	fRec23[3];
	FAUSTFLOAT 	fslider9;
	float 	fRec33[2];
	float 	fRec32[3];
	float 	fTempPerm11;
	float 	fTempPerm12;
	float 	fVec3[2];
	float 	fRec31[2];
	float 	fRec30[3];
	float 	fTempPerm13;
	float 	fRec29[3];
	FAUSTFLOAT 	fslider10;
	float 	fRec37[2];
	float 	fRec36[3];
	float 	fTempPerm14;
	float 	fTempPerm15;
	float 	fVec4[2];
	float 	fRec35[2];
	float 	fRec34[3];
	FAUSTFLOAT 	fslider11;
	float 	fRec39[2];
	float 	fRec38[3];
	float 	fTempPerm16;
	float 	fRec44[2];
	float 	fRec43[3];
	float 	fTempPerm17;
	float 	fRec42[3];
	float 	fTempPerm18;
	float 	fRec41[3];
	float 	fTempPerm19;
	float 	fRec40[3];
	float 	fRec50[2];
	float 	fRec49[3];
	float 	fTempPerm20;
	float 	fTempPerm21;
	float 	fVec5[2];
	float 	fRec48[2];
	float 	fRec47[3];
	float 	fTempPerm22;
	float 	fRec46[3];
	float 	fTempPerm23;
	float 	fRec45[3];
	float 	fRec55[2];
	float 	fRec54[3];
	float 	fTempPerm24;
	float 	fTempPerm25;
	float 	fVec6[2];
	float 	fRec53[2];
	float 	fRec52[3];
	float 	fTempPerm26;
	float 	fRec51[3];
	float 	fRec59[2];
	float 	fRec58[3];
	float 	fTempPerm27;
	float 	fTempPerm28;
	float 	fVec7[2];
	float 	fRec57[2];
	float 	fRec56[3];
	float 	fRec61[2];
	float 	fRec60[3];
	float 	fTempPerm29;
	float 	fTempPerm30;
	float 	fRec66[2];
	float 	fRec65[3];
	float 	fTempPerm31;
	float 	fRec64[3];
	float 	fTempPerm32;
	float 	fRec63[3];
	float 	fTempPerm33;
	float 	fRec62[3];
	float 	fRec72[2];
	float 	fRec71[3];
	float 	fTempPerm34;
	float 	fTempPerm35;
	float 	fVec8[2];
	float 	fRec70[2];
	float 	fRec69[3];
	float 	fTempPerm36;
	float 	fRec68[3];
	float 	fTempPerm37;
	float 	fRec67[3];
	float 	fRec77[2];
	float 	fRec76[3];
	float 	fTempPerm38;
	float 	fTempPerm39;
	float 	fVec9[2];
	float 	fRec75[2];
	float 	fRec74[3];
	float 	fTempPerm40;
	float 	fRec73[3];
	float 	fRec81[2];
	float 	fRec80[3];
	float 	fTempPerm41;
	float 	fTempPerm42;
	float 	fVec10[2];
	float 	fRec79[2];
	float 	fRec78[3];
	float 	fRec83[2];
	float 	fRec82[3];
	float 	fTempPerm43;
	float 	fRec88[2];
	float 	fRec87[3];
	float 	fTempPerm44;
	float 	fRec86[3];
	float 	fTempPerm45;
	float 	fRec85[3];
	float 	fTempPerm46;
	float 	fRec84[3];
	float 	fRec94[2];
	float 	fRec93[3];
	float 	fTempPerm47;
	float 	fTempPerm48;
	float 	fVec11[2];
	float 	fRec92[2];
	float 	fRec91[3];
	float 	fTempPerm49;
	float 	fRec90[3];
	float 	fTempPerm50;
	float 	fRec89[3];
	float 	fRec99[2];
	float 	fRec98[3];
	float 	fTempPerm51;
	float 	fTempPerm52;
	float 	fVec12[2];
	float 	fRec97[2];
	float 	fRec96[3];
	float 	fTempPerm53;
	float 	fRec95[3];
	float 	fRec103[2];
	float 	fRec102[3];
	float 	fTempPerm54;
	float 	fTempPerm55;
	float 	fVec13[2];
	float 	fRec101[2];
	float 	fRec100[3];
	float 	fRec105[2];
	float 	fRec104[3];
	float 	fTempPerm56;
	float 	fTempPerm57;
	float 	fTempPerm58;
	float 	fRec110[2];
	float 	fRec109[3];
	float 	fTempPerm59;
	float 	fRec108[3];
	float 	fTempPerm60;
	float 	fRec107[3];
	float 	fTempPerm61;
	float 	fRec106[3];
	float 	fRec116[2];
	float 	fRec115[3];
	float 	fTempPerm62;
	float 	fTempPerm63;
	float 	fVec14[2];
	float 	fRec114[2];
	float 	fRec113[3];
	float 	fTempPerm64;
	float 	fRec112[3];
	float 	fTempPerm65;
	float 	fRec111[3];
	float 	fRec121[2];
	float 	fRec120[3];
	float 	fTempPerm66;
	float 	fTempPerm67;
	float 	fVec15[2];
	float 	fRec119[2];
	float 	fRec118[3];
	float 	fTempPerm68;
	float 	fRec117[3];
	float 	fRec125[2];
	float 	fRec124[3];
	float 	fTempPerm69;
	float 	fTempPerm70;
	float 	fVec16[2];
	float 	fRec123[2];
	float 	fRec122[3];
	float 	fRec127[2];
	float 	fRec126[3];
	float 	fTempPerm71;
	float 	fRec132[2];
	float 	fRec131[3];
	float 	fTempPerm72;
	float 	fRec130[3];
	float 	fTempPerm73;
	float 	fRec129[3];
	float 	fTempPerm74;
	float 	fRec128[3];
	float 	fRec138[2];
	float 	fRec137[3];
	float 	fTempPerm75;
	float 	fTempPerm76;
	float 	fVec17[2];
	float 	fRec136[2];
	float 	fRec135[3];
	float 	fTempPerm77;
	float 	fRec134[3];
	float 	fTempPerm78;
	float 	fRec133[3];
	float 	fRec143[2];
	float 	fRec142[3];
	float 	fTempPerm79;
	float 	fTempPerm80;
	float 	fVec18[2];
	float 	fRec141[2];
	float 	fRec140[3];
	float 	fTempPerm81;
	float 	fRec139[3];
	float 	fRec147[2];
	float 	fRec146[3];
	float 	fTempPerm82;
	float 	fTempPerm83;
	float 	fVec19[2];
	float 	fRec145[2];
	float 	fRec144[3];
	float 	fRec149[2];
	float 	fRec148[3];
	float 	fTempPerm84;
	float 	fTempPerm85;
	float 	fRec154[2];
	float 	fRec153[3];
	float 	fTempPerm86;
	float 	fRec152[3];
	float 	fTempPerm87;
	float 	fRec151[3];
	float 	fTempPerm88;
	float 	fRec150[3];
	float 	fRec160[2];
	float 	fRec159[3];
	float 	fTempPerm89;
	float 	fTempPerm90;
	float 	fVec20[2];
	float 	fRec158[2];
	float 	fRec157[3];
	float 	fTempPerm91;
	float 	fRec156[3];
	float 	fTempPerm92;
	float 	fRec155[3];
	float 	fRec165[2];
	float 	fRec164[3];
	float 	fTempPerm93;
	float 	fTempPerm94;
	float 	fVec21[2];
	float 	fRec163[2];
	float 	fRec162[3];
	float 	fTempPerm95;
	float 	fRec161[3];
	float 	fRec169[2];
	float 	fRec168[3];
	float 	fTempPerm96;
	float 	fTempPerm97;
	float 	fVec22[2];
	float 	fRec167[2];
	float 	fRec166[3];
	float 	fRec171[2];
	float 	fRec170[3];
	float 	fTempPerm98;
	float 	fRec176[2];
	float 	fRec175[3];
	float 	fTempPerm99;
	float 	fRec174[3];
	float 	fTempPerm100;
	float 	fRec173[3];
	float 	fTempPerm101;
	float 	fRec172[3];
	float 	fRec182[2];
	float 	fRec181[3];
	float 	fTempPerm102;
	float 	fTempPerm103;
	float 	fVec23[2];
	float 	fRec180[2];
	float 	fRec179[3];
	float 	fTempPerm104;
	float 	fRec178[3];
	float 	fTempPerm105;
	float 	fRec177[3];
	float 	fRec187[2];
	float 	fRec186[3];
	float 	fTempPerm106;
	float 	fTempPerm107;
	float 	fVec24[2];
	float 	fRec185[2];
	float 	fRec184[3];
	float 	fTempPerm108;
	float 	fRec183[3];
	float 	fRec191[2];
	float 	fRec190[3];
	float 	fTempPerm109;
	float 	fTempPerm110;
	float 	fVec25[2];
	float 	fRec189[2];
	float 	fRec188[3];
	float 	fRec193[2];
	float 	fRec192[3];
	float 	fTempPerm111;
	float 	fTempPerm112;
	float 	fTempPerm113;
	float 	fTempPerm114;
	float 	fRec198[2];
	float 	fRec197[3];
	float 	fTempPerm115;
	float 	fRec196[3];
	float 	fTempPerm116;
	float 	fRec195[3];
	float 	fTempPerm117;
	float 	fRec194[3];
	float 	fRec204[2];
	float 	fRec203[3];
	float 	fTempPerm118;
	float 	fTempPerm119;
	float 	fVec26[2];
	float 	fRec202[2];
	float 	fRec201[3];
	float 	fTempPerm120;
	float 	fRec200[3];
	float 	fTempPerm121;
	float 	fRec199[3];
	float 	fRec209[2];
	float 	fRec208[3];
	float 	fTempPerm122;
	float 	fTempPerm123;
	float 	fVec27[2];
	float 	fRec207[2];
	float 	fRec206[3];
	float 	fTempPerm124;
	float 	fRec205[3];
	float 	fRec213[2];
	float 	fRec212[3];
	float 	fTempPerm125;
	float 	fTempPerm126;
	float 	fVec28[2];
	float 	fRec211[2];
	float 	fRec210[3];
	float 	fRec215[2];
	float 	fRec214[3];
	float 	fTempPerm127;
	float 	fRec220[2];
	float 	fRec219[3];
	float 	fTempPerm128;
	float 	fRec218[3];
	float 	fTempPerm129;
	float 	fRec217[3];
	float 	fTempPerm130;
	float 	fRec216[3];
	float 	fRec226[2];
	float 	fRec225[3];
	float 	fTempPerm131;
	float 	fTempPerm132;
	float 	fVec29[2];
	float 	fRec224[2];
	float 	fRec223[3];
	float 	fTempPerm133;
	float 	fRec222[3];
	float 	fTempPerm134;
	float 	fRec221[3];
	float 	fRec231[2];
	float 	fRec230[3];
	float 	fTempPerm135;
	float 	fTempPerm136;
	float 	fVec30[2];
	float 	fRec229[2];
	float 	fRec228[3];
	float 	fTempPerm137;
	float 	fRec227[3];
	float 	fRec235[2];
	float 	fRec234[3];
	float 	fTempPerm138;
	float 	fTempPerm139;
	float 	fVec31[2];
	float 	fRec233[2];
	float 	fRec232[3];
	float 	fRec237[2];
	float 	fRec236[3];
	float 	fTempPerm140;
	float 	fTempPerm141;
	float 	fRec242[2];
	float 	fRec241[3];
	float 	fTempPerm142;
	float 	fRec240[3];
	float 	fTempPerm143;
	float 	fRec239[3];
	float 	fTempPerm144;
	float 	fRec238[3];
	float 	fRec248[2];
	float 	fRec247[3];
	float 	fTempPerm145;
	float 	fTempPerm146;
	float 	fVec32[2];
	float 	fRec246[2];
	float 	fRec245[3];
	float 	fTempPerm147;
	float 	fRec244[3];
	float 	fTempPerm148;
	float 	fRec243[3];
	float 	fRec253[2];
	float 	fRec252[3];
	float 	fTempPerm149;
	float 	fTempPerm150;
	float 	fVec33[2];
	float 	fRec251[2];
	float 	fRec250[3];
	float 	fTempPerm151;
	float 	fRec249[3];
	float 	fRec257[2];
	float 	fRec256[3];
	float 	fTempPerm152;
	float 	fTempPerm153;
	float 	fVec34[2];
	float 	fRec255[2];
	float 	fRec254[3];
	float 	fRec259[2];
	float 	fRec258[3];
	float 	fTempPerm154;
	float 	fRec264[2];
	float 	fRec263[3];
	float 	fTempPerm155;
	float 	fRec262[3];
	float 	fTempPerm156;
	float 	fRec261[3];
	float 	fTempPerm157;
	float 	fRec260[3];
	float 	fRec270[2];
	float 	fRec269[3];
	float 	fTempPerm158;
	float 	fTempPerm159;
	float 	fVec35[2];
	float 	fRec268[2];
	float 	fRec267[3];
	float 	fTempPerm160;
	float 	fRec266[3];
	float 	fTempPerm161;
	float 	fRec265[3];
	float 	fRec275[2];
	float 	fRec274[3];
	float 	fTempPerm162;
	float 	fTempPerm163;
	float 	fVec36[2];
	float 	fRec273[2];
	float 	fRec272[3];
	float 	fTempPerm164;
	float 	fRec271[3];
	float 	fRec279[2];
	float 	fRec278[3];
	float 	fTempPerm165;
	float 	fTempPerm166;
	float 	fVec37[2];
	float 	fRec277[2];
	float 	fRec276[3];
	float 	fRec281[2];
	float 	fRec280[3];
	float 	fTempPerm167;
	float 	fTempPerm168;
	float 	fTempPerm169;
	float 	fRec286[2];
	float 	fRec285[3];
	float 	fTempPerm170;
	float 	fRec284[3];
	float 	fTempPerm171;
	float 	fRec283[3];
	float 	fTempPerm172;
	float 	fRec282[3];
	float 	fRec292[2];
	float 	fRec291[3];
	float 	fTempPerm173;
	float 	fTempPerm174;
	float 	fVec38[2];
	float 	fRec290[2];
	float 	fRec289[3];
	float 	fTempPerm175;
	float 	fRec288[3];
	float 	fTempPerm176;
	float 	fRec287[3];
	float 	fRec297[2];
	float 	fRec296[3];
	float 	fTempPerm177;
	float 	fTempPerm178;
	float 	fVec39[2];
	float 	fRec295[2];
	float 	fRec294[3];
	float 	fTempPerm179;
	float 	fRec293[3];
	float 	fRec301[2];
	float 	fRec300[3];
	float 	fTempPerm180;
	float 	fTempPerm181;
	float 	fVec40[2];
	float 	fRec299[2];
	float 	fRec298[3];
	float 	fRec303[2];
	float 	fRec302[3];
	float 	fTempPerm182;
	float 	fRec308[2];
	float 	fRec307[3];
	float 	fTempPerm183;
	float 	fRec306[3];
	float 	fTempPerm184;
	float 	fRec305[3];
	float 	fTempPerm185;
	float 	fRec304[3];
	float 	fRec314[2];
	float 	fRec313[3];
	float 	fTempPerm186;
	float 	fTempPerm187;
	float 	fVec41[2];
	float 	fRec312[2];
	float 	fRec311[3];
	float 	fTempPerm188;
	float 	fRec310[3];
	float 	fTempPerm189;
	float 	fRec309[3];
	float 	fRec319[2];
	float 	fRec318[3];
	float 	fTempPerm190;
	float 	fTempPerm191;
	float 	fVec42[2];
	float 	fRec317[2];
	float 	fRec316[3];
	float 	fTempPerm192;
	float 	fRec315[3];
	float 	fRec323[2];
	float 	fRec322[3];
	float 	fTempPerm193;
	float 	fTempPerm194;
	float 	fVec43[2];
	float 	fRec321[2];
	float 	fRec320[3];
	float 	fRec325[2];
	float 	fRec324[3];
	float 	fTempPerm195;
	float 	fTempPerm196;
	float 	fRec330[2];
	float 	fRec329[3];
	float 	fTempPerm197;
	float 	fRec328[3];
	float 	fTempPerm198;
	float 	fRec327[3];
	float 	fTempPerm199;
	float 	fRec326[3];
	float 	fRec336[2];
	float 	fRec335[3];
	float 	fTempPerm200;
	float 	fTempPerm201;
	float 	fVec44[2];
	float 	fRec334[2];
	float 	fRec333[3];
	float 	fTempPerm202;
	float 	fRec332[3];
	float 	fTempPerm203;
	float 	fRec331[3];
	float 	fRec341[2];
	float 	fRec340[3];
	float 	fTempPerm204;
	float 	fTempPerm205;
	float 	fVec45[2];
	float 	fRec339[2];
	float 	fRec338[3];
	float 	fTempPerm206;
	float 	fRec337[3];
	float 	fRec345[2];
	float 	fRec344[3];
	float 	fTempPerm207;
	float 	fTempPerm208;
	float 	fVec46[2];
	float 	fRec343[2];
	float 	fRec342[3];
	float 	fRec347[2];
	float 	fRec346[3];
	float 	fTempPerm209;
	float 	fRec352[2];
	float 	fRec351[3];
	float 	fTempPerm210;
	float 	fRec350[3];
	float 	fTempPerm211;
	float 	fRec349[3];
	float 	fTempPerm212;
	float 	fRec348[3];
	float 	fRec358[2];
	float 	fRec357[3];
	float 	fTempPerm213;
	float 	fTempPerm214;
	float 	fVec47[2];
	float 	fRec356[2];
	float 	fRec355[3];
	float 	fTempPerm215;
	float 	fRec354[3];
	float 	fTempPerm216;
	float 	fRec353[3];
	float 	fRec363[2];
	float 	fRec362[3];
	float 	fTempPerm217;
	float 	fTempPerm218;
	float 	fVec48[2];
	float 	fRec361[2];
	float 	fRec360[3];
	float 	fTempPerm219;
	float 	fRec359[3];
	float 	fRec367[2];
	float 	fRec366[3];
	float 	fTempPerm220;
	float 	fTempPerm221;
	float 	fVec49[2];
	float 	fRec365[2];
	float 	fRec364[3];
	float 	fRec369[2];
	float 	fRec368[3];
	float 	fTempPerm222;
	float 	fTempPerm223;
	float 	fTempPerm224;
	float 	fTempPerm225;
	int 	IOTA;
	float 	fVec50[16384];
	float 	fRec0[3];
	FAUSTFLOAT 	fbutton3;
	float 	fVec51[2];
	int 	iTempPerm226;
	float 	fTempPerm227;
	float 	fVec52[16384];
	float 	fRec1[3];
	float 	fTempPerm228;
	float 	fTempPerm229;
	float 	fTempPerm230;
	float 	fVec53[16384];
	float 	fRec2[3];
	float 	fTempPerm231;
	float 	fVec54[16384];
	float 	fRec3[3];
	float 	fTempPerm232;
	float 	fTempPerm233;
	float 	fTempPerm234;
	float 	fTempPerm235;
	float 	fTempPerm236;
	float 	fTempPerm237;
	float 	fVec55[16384];
	float 	fRec4[3];
	float 	fVec56[16384];
	float 	fRec5[3];
	float 	fTempPerm238;
	float 	fTempPerm239;
	float 	fVec57[16384];
	float 	fRec6[3];
	float 	fVec58[16384];
	float 	fRec7[3];
	float 	fTempPerm240;
	float 	fTempPerm241;
	float 	fTempPerm242;
	float 	fTempPerm243;
	float 	fTempPerm244;
	float 	fTempPerm245;
	float 	fTempPerm246;
	float 	fTempPerm247;
	float 	fTempPerm248;
	float 	fTempPerm249;
	float 	fTempPerm250;
	float 	fTempPerm251;
	float 	fTempPerm252;
	float 	fTempPerm253;
	float 	fVec59[16384];
	float 	fRec8[3];
	float 	fVec60[16384];
	float 	fRec9[3];
	float 	fTempPerm254;
	float 	fTempPerm255;
	float 	fVec61[16384];
	float 	fRec10[3];
	float 	fVec62[16384];
	float 	fRec11[3];
	float 	fTempPerm256;
	float 	fTempPerm257;
	float 	fTempPerm258;
	float 	fTempPerm259;
	float 	fTempPerm260;
	float 	fTempPerm261;
	float 	fVec63[16384];
	float 	fRec12[3];
	float 	fVec64[16384];
	float 	fRec13[3];
	float 	fTempPerm262;
	float 	fTempPerm263;
	float 	fVec65[16384];
	float 	fRec14[3];
	float 	fVec66[16384];
	float 	fRec15[3];
	int fSamplingFreq;

  public:
	virtual void metadata(Meta* m) { 
		m->declare("analyzers.lib/name", "Faust Analyzer Library");
		m->declare("analyzers.lib/version", "0.0");
		m->declare("basics.lib/name", "Faust Basic Element Library");
		m->declare("basics.lib/version", "0.0");
		m->declare("delays.lib/name", "Faust Delay Library");
		m->declare("delays.lib/version", "0.0");
		m->declare("filters.lib/name", "Faust Filters Library");
		m->declare("filters.lib/version", "0.0");
		m->declare("maths.lib/author", "GRAME");
		m->declare("maths.lib/copyright", "GRAME");
		m->declare("maths.lib/license", "LGPL with exception");
		m->declare("maths.lib/name", "Faust Math Library");
		m->declare("maths.lib/version", "2.1");
		m->declare("name", "reverbDesigner");
		m->declare("noises.lib/name", "Faust Noise Generator Library");
		m->declare("noises.lib/version", "0.0");
		m->declare("reverbs.lib/name", "Faust Reverb Library");
		m->declare("reverbs.lib/version", "0.0");
		m->declare("signals.lib/name", "Faust Signal Routing Library");
		m->declare("signals.lib/version", "0.0");
	}

	virtual int getNumInputs() { return 4; }
	virtual int getNumOutputs() { return 2; }
	static void classInit(int samplingFreq) {
	}
	virtual void instanceConstants(int samplingFreq) {
		fSamplingFreq = samplingFreq;
		fTempPerm0 = 0;
		iTempPerm1 = 0;
		iTempPerm2 = 0;
		fTempPerm3 = 0;
		fConst0 = min(192000.0f, max(1.0f, (float)fSamplingFreq));
		fConst1 = (1.0f / fConst0);
		fConst2 = (0.0029154518950437317f * fConst0);
		fConst3 = (3.1415926535897931f / fConst0);
		fTempPerm4 = 0;
		fTempPerm5 = 0;
		fTempPerm6 = 0;
		fTempPerm7 = 0;
		fTempPerm8 = 0;
		fTempPerm9 = 0;
		fTempPerm10 = 0;
		fTempPerm11 = 0;
		fTempPerm12 = 0;
		fTempPerm13 = 0;
		fTempPerm14 = 0;
		fTempPerm15 = 0;
		fTempPerm16 = 0;
		fTempPerm17 = 0;
		fTempPerm18 = 0;
		fTempPerm19 = 0;
		fTempPerm20 = 0;
		fTempPerm21 = 0;
		fTempPerm22 = 0;
		fTempPerm23 = 0;
		fTempPerm24 = 0;
		fTempPerm25 = 0;
		fTempPerm26 = 0;
		fTempPerm27 = 0;
		fTempPerm28 = 0;
		fTempPerm29 = 0;
		fTempPerm30 = 0;
		fTempPerm31 = 0;
		fTempPerm32 = 0;
		fTempPerm33 = 0;
		fTempPerm34 = 0;
		fTempPerm35 = 0;
		fTempPerm36 = 0;
		fTempPerm37 = 0;
		fTempPerm38 = 0;
		fTempPerm39 = 0;
		fTempPerm40 = 0;
		fTempPerm41 = 0;
		fTempPerm42 = 0;
		fTempPerm43 = 0;
		fTempPerm44 = 0;
		fTempPerm45 = 0;
		fTempPerm46 = 0;
		fTempPerm47 = 0;
		fTempPerm48 = 0;
		fTempPerm49 = 0;
		fTempPerm50 = 0;
		fTempPerm51 = 0;
		fTempPerm52 = 0;
		fTempPerm53 = 0;
		fTempPerm54 = 0;
		fTempPerm55 = 0;
		fTempPerm56 = 0;
		fTempPerm57 = 0;
		fTempPerm58 = 0;
		fTempPerm59 = 0;
		fTempPerm60 = 0;
		fTempPerm61 = 0;
		fTempPerm62 = 0;
		fTempPerm63 = 0;
		fTempPerm64 = 0;
		fTempPerm65 = 0;
		fTempPerm66 = 0;
		fTempPerm67 = 0;
		fTempPerm68 = 0;
		fTempPerm69 = 0;
		fTempPerm70 = 0;
		fTempPerm71 = 0;
		fTempPerm72 = 0;
		fTempPerm73 = 0;
		fTempPerm74 = 0;
		fTempPerm75 = 0;
		fTempPerm76 = 0;
		fTempPerm77 = 0;
		fTempPerm78 = 0;
		fTempPerm79 = 0;
		fTempPerm80 = 0;
		fTempPerm81 = 0;
		fTempPerm82 = 0;
		fTempPerm83 = 0;
		fTempPerm84 = 0;
		fTempPerm85 = 0;
		fTempPerm86 = 0;
		fTempPerm87 = 0;
		fTempPerm88 = 0;
		fTempPerm89 = 0;
		fTempPerm90 = 0;
		fTempPerm91 = 0;
		fTempPerm92 = 0;
		fTempPerm93 = 0;
		fTempPerm94 = 0;
		fTempPerm95 = 0;
		fTempPerm96 = 0;
		fTempPerm97 = 0;
		fTempPerm98 = 0;
		fTempPerm99 = 0;
		fTempPerm100 = 0;
		fTempPerm101 = 0;
		fTempPerm102 = 0;
		fTempPerm103 = 0;
		fTempPerm104 = 0;
		fTempPerm105 = 0;
		fTempPerm106 = 0;
		fTempPerm107 = 0;
		fTempPerm108 = 0;
		fTempPerm109 = 0;
		fTempPerm110 = 0;
		fTempPerm111 = 0;
		fTempPerm112 = 0;
		fTempPerm113 = 0;
		fTempPerm114 = 0;
		fTempPerm115 = 0;
		fTempPerm116 = 0;
		fTempPerm117 = 0;
		fTempPerm118 = 0;
		fTempPerm119 = 0;
		fTempPerm120 = 0;
		fTempPerm121 = 0;
		fTempPerm122 = 0;
		fTempPerm123 = 0;
		fTempPerm124 = 0;
		fTempPerm125 = 0;
		fTempPerm126 = 0;
		fTempPerm127 = 0;
		fTempPerm128 = 0;
		fTempPerm129 = 0;
		fTempPerm130 = 0;
		fTempPerm131 = 0;
		fTempPerm132 = 0;
		fTempPerm133 = 0;
		fTempPerm134 = 0;
		fTempPerm135 = 0;
		fTempPerm136 = 0;
		fTempPerm137 = 0;
		fTempPerm138 = 0;
		fTempPerm139 = 0;
		fTempPerm140 = 0;
		fTempPerm141 = 0;
		fTempPerm142 = 0;
		fTempPerm143 = 0;
		fTempPerm144 = 0;
		fTempPerm145 = 0;
		fTempPerm146 = 0;
		fTempPerm147 = 0;
		fTempPerm148 = 0;
		fTempPerm149 = 0;
		fTempPerm150 = 0;
		fTempPerm151 = 0;
		fTempPerm152 = 0;
		fTempPerm153 = 0;
		fTempPerm154 = 0;
		fTempPerm155 = 0;
		fTempPerm156 = 0;
		fTempPerm157 = 0;
		fTempPerm158 = 0;
		fTempPerm159 = 0;
		fTempPerm160 = 0;
		fTempPerm161 = 0;
		fTempPerm162 = 0;
		fTempPerm163 = 0;
		fTempPerm164 = 0;
		fTempPerm165 = 0;
		fTempPerm166 = 0;
		fTempPerm167 = 0;
		fTempPerm168 = 0;
		fTempPerm169 = 0;
		fTempPerm170 = 0;
		fTempPerm171 = 0;
		fTempPerm172 = 0;
		fTempPerm173 = 0;
		fTempPerm174 = 0;
		fTempPerm175 = 0;
		fTempPerm176 = 0;
		fTempPerm177 = 0;
		fTempPerm178 = 0;
		fTempPerm179 = 0;
		fTempPerm180 = 0;
		fTempPerm181 = 0;
		fTempPerm182 = 0;
		fTempPerm183 = 0;
		fTempPerm184 = 0;
		fTempPerm185 = 0;
		fTempPerm186 = 0;
		fTempPerm187 = 0;
		fTempPerm188 = 0;
		fTempPerm189 = 0;
		fTempPerm190 = 0;
		fTempPerm191 = 0;
		fTempPerm192 = 0;
		fTempPerm193 = 0;
		fTempPerm194 = 0;
		fTempPerm195 = 0;
		fTempPerm196 = 0;
		fTempPerm197 = 0;
		fTempPerm198 = 0;
		fTempPerm199 = 0;
		fTempPerm200 = 0;
		fTempPerm201 = 0;
		fTempPerm202 = 0;
		fTempPerm203 = 0;
		fTempPerm204 = 0;
		fTempPerm205 = 0;
		fTempPerm206 = 0;
		fTempPerm207 = 0;
		fTempPerm208 = 0;
		fTempPerm209 = 0;
		fTempPerm210 = 0;
		fTempPerm211 = 0;
		fTempPerm212 = 0;
		fTempPerm213 = 0;
		fTempPerm214 = 0;
		fTempPerm215 = 0;
		fTempPerm216 = 0;
		fTempPerm217 = 0;
		fTempPerm218 = 0;
		fTempPerm219 = 0;
		fTempPerm220 = 0;
		fTempPerm221 = 0;
		fTempPerm222 = 0;
		fTempPerm223 = 0;
		fTempPerm224 = 0;
		fTempPerm225 = 0;
		iTempPerm226 = 0;
		fTempPerm227 = 0;
		fTempPerm228 = 0;
		fTempPerm229 = 0;
		fTempPerm230 = 0;
		fTempPerm231 = 0;
		fTempPerm232 = 0;
		fTempPerm233 = 0;
		fTempPerm234 = 0;
		fTempPerm235 = 0;
		fTempPerm236 = 0;
		fTempPerm237 = 0;
		fTempPerm238 = 0;
		fTempPerm239 = 0;
		fTempPerm240 = 0;
		fTempPerm241 = 0;
		fTempPerm242 = 0;
		fTempPerm243 = 0;
		fTempPerm244 = 0;
		fTempPerm245 = 0;
		fTempPerm246 = 0;
		fTempPerm247 = 0;
		fTempPerm248 = 0;
		fTempPerm249 = 0;
		fTempPerm250 = 0;
		fTempPerm251 = 0;
		fTempPerm252 = 0;
		fTempPerm253 = 0;
		fTempPerm254 = 0;
		fTempPerm255 = 0;
		fTempPerm256 = 0;
		fTempPerm257 = 0;
		fTempPerm258 = 0;
		fTempPerm259 = 0;
		fTempPerm260 = 0;
		fTempPerm261 = 0;
		fTempPerm262 = 0;
		fTempPerm263 = 0;
	}
	virtual void instanceResetUserInterface() {
		fslider0 = -40.0f;
		fcheckbox0 = 0.0;
		fbutton0 = 0.0;
		fbutton1 = 0.0;
		fcheckbox1 = 0.0;
		fbutton2 = 0.0;
		fslider1 = 46.0f;
		fslider2 = 63.0f;
		fslider3 = 2.7000000000000002f;
		fslider4 = 4000.0f;
		fslider5 = 2000.0f;
		fslider6 = 1000.0f;
		fslider7 = 500.0f;
		fslider8 = 3.7999999999999998f;
		fslider9 = 5.0f;
		fslider10 = 6.5f;
		fslider11 = 8.4000000000000004f;
		fbutton3 = 0.0;
	}
	virtual void instanceClear() {
		for (int i=0; i<2; i++) iRec17[i] = 0;
		for (int i=0; i<4; i++) fRec16[i] = 0;
		for (int i=0; i<2; i++) fVec0[i] = 0;
		for (int i=0; i<2; i++) fVec1[i] = 0;
		for (int i=0; i<2; i++) fRec22[i] = 0;
		for (int i=0; i<3; i++) fRec21[i] = 0;
		for (int i=0; i<3; i++) fRec20[i] = 0;
		for (int i=0; i<3; i++) fRec19[i] = 0;
		for (int i=0; i<3; i++) fRec18[i] = 0;
		for (int i=0; i<2; i++) fRec28[i] = 0;
		for (int i=0; i<3; i++) fRec27[i] = 0;
		for (int i=0; i<2; i++) fVec2[i] = 0;
		for (int i=0; i<2; i++) fRec26[i] = 0;
		for (int i=0; i<3; i++) fRec25[i] = 0;
		for (int i=0; i<3; i++) fRec24[i] = 0;
		for (int i=0; i<3; i++) fRec23[i] = 0;
		for (int i=0; i<2; i++) fRec33[i] = 0;
		for (int i=0; i<3; i++) fRec32[i] = 0;
		for (int i=0; i<2; i++) fVec3[i] = 0;
		for (int i=0; i<2; i++) fRec31[i] = 0;
		for (int i=0; i<3; i++) fRec30[i] = 0;
		for (int i=0; i<3; i++) fRec29[i] = 0;
		for (int i=0; i<2; i++) fRec37[i] = 0;
		for (int i=0; i<3; i++) fRec36[i] = 0;
		for (int i=0; i<2; i++) fVec4[i] = 0;
		for (int i=0; i<2; i++) fRec35[i] = 0;
		for (int i=0; i<3; i++) fRec34[i] = 0;
		for (int i=0; i<2; i++) fRec39[i] = 0;
		for (int i=0; i<3; i++) fRec38[i] = 0;
		for (int i=0; i<2; i++) fRec44[i] = 0;
		for (int i=0; i<3; i++) fRec43[i] = 0;
		for (int i=0; i<3; i++) fRec42[i] = 0;
		for (int i=0; i<3; i++) fRec41[i] = 0;
		for (int i=0; i<3; i++) fRec40[i] = 0;
		for (int i=0; i<2; i++) fRec50[i] = 0;
		for (int i=0; i<3; i++) fRec49[i] = 0;
		for (int i=0; i<2; i++) fVec5[i] = 0;
		for (int i=0; i<2; i++) fRec48[i] = 0;
		for (int i=0; i<3; i++) fRec47[i] = 0;
		for (int i=0; i<3; i++) fRec46[i] = 0;
		for (int i=0; i<3; i++) fRec45[i] = 0;
		for (int i=0; i<2; i++) fRec55[i] = 0;
		for (int i=0; i<3; i++) fRec54[i] = 0;
		for (int i=0; i<2; i++) fVec6[i] = 0;
		for (int i=0; i<2; i++) fRec53[i] = 0;
		for (int i=0; i<3; i++) fRec52[i] = 0;
		for (int i=0; i<3; i++) fRec51[i] = 0;
		for (int i=0; i<2; i++) fRec59[i] = 0;
		for (int i=0; i<3; i++) fRec58[i] = 0;
		for (int i=0; i<2; i++) fVec7[i] = 0;
		for (int i=0; i<2; i++) fRec57[i] = 0;
		for (int i=0; i<3; i++) fRec56[i] = 0;
		for (int i=0; i<2; i++) fRec61[i] = 0;
		for (int i=0; i<3; i++) fRec60[i] = 0;
		for (int i=0; i<2; i++) fRec66[i] = 0;
		for (int i=0; i<3; i++) fRec65[i] = 0;
		for (int i=0; i<3; i++) fRec64[i] = 0;
		for (int i=0; i<3; i++) fRec63[i] = 0;
		for (int i=0; i<3; i++) fRec62[i] = 0;
		for (int i=0; i<2; i++) fRec72[i] = 0;
		for (int i=0; i<3; i++) fRec71[i] = 0;
		for (int i=0; i<2; i++) fVec8[i] = 0;
		for (int i=0; i<2; i++) fRec70[i] = 0;
		for (int i=0; i<3; i++) fRec69[i] = 0;
		for (int i=0; i<3; i++) fRec68[i] = 0;
		for (int i=0; i<3; i++) fRec67[i] = 0;
		for (int i=0; i<2; i++) fRec77[i] = 0;
		for (int i=0; i<3; i++) fRec76[i] = 0;
		for (int i=0; i<2; i++) fVec9[i] = 0;
		for (int i=0; i<2; i++) fRec75[i] = 0;
		for (int i=0; i<3; i++) fRec74[i] = 0;
		for (int i=0; i<3; i++) fRec73[i] = 0;
		for (int i=0; i<2; i++) fRec81[i] = 0;
		for (int i=0; i<3; i++) fRec80[i] = 0;
		for (int i=0; i<2; i++) fVec10[i] = 0;
		for (int i=0; i<2; i++) fRec79[i] = 0;
		for (int i=0; i<3; i++) fRec78[i] = 0;
		for (int i=0; i<2; i++) fRec83[i] = 0;
		for (int i=0; i<3; i++) fRec82[i] = 0;
		for (int i=0; i<2; i++) fRec88[i] = 0;
		for (int i=0; i<3; i++) fRec87[i] = 0;
		for (int i=0; i<3; i++) fRec86[i] = 0;
		for (int i=0; i<3; i++) fRec85[i] = 0;
		for (int i=0; i<3; i++) fRec84[i] = 0;
		for (int i=0; i<2; i++) fRec94[i] = 0;
		for (int i=0; i<3; i++) fRec93[i] = 0;
		for (int i=0; i<2; i++) fVec11[i] = 0;
		for (int i=0; i<2; i++) fRec92[i] = 0;
		for (int i=0; i<3; i++) fRec91[i] = 0;
		for (int i=0; i<3; i++) fRec90[i] = 0;
		for (int i=0; i<3; i++) fRec89[i] = 0;
		for (int i=0; i<2; i++) fRec99[i] = 0;
		for (int i=0; i<3; i++) fRec98[i] = 0;
		for (int i=0; i<2; i++) fVec12[i] = 0;
		for (int i=0; i<2; i++) fRec97[i] = 0;
		for (int i=0; i<3; i++) fRec96[i] = 0;
		for (int i=0; i<3; i++) fRec95[i] = 0;
		for (int i=0; i<2; i++) fRec103[i] = 0;
		for (int i=0; i<3; i++) fRec102[i] = 0;
		for (int i=0; i<2; i++) fVec13[i] = 0;
		for (int i=0; i<2; i++) fRec101[i] = 0;
		for (int i=0; i<3; i++) fRec100[i] = 0;
		for (int i=0; i<2; i++) fRec105[i] = 0;
		for (int i=0; i<3; i++) fRec104[i] = 0;
		for (int i=0; i<2; i++) fRec110[i] = 0;
		for (int i=0; i<3; i++) fRec109[i] = 0;
		for (int i=0; i<3; i++) fRec108[i] = 0;
		for (int i=0; i<3; i++) fRec107[i] = 0;
		for (int i=0; i<3; i++) fRec106[i] = 0;
		for (int i=0; i<2; i++) fRec116[i] = 0;
		for (int i=0; i<3; i++) fRec115[i] = 0;
		for (int i=0; i<2; i++) fVec14[i] = 0;
		for (int i=0; i<2; i++) fRec114[i] = 0;
		for (int i=0; i<3; i++) fRec113[i] = 0;
		for (int i=0; i<3; i++) fRec112[i] = 0;
		for (int i=0; i<3; i++) fRec111[i] = 0;
		for (int i=0; i<2; i++) fRec121[i] = 0;
		for (int i=0; i<3; i++) fRec120[i] = 0;
		for (int i=0; i<2; i++) fVec15[i] = 0;
		for (int i=0; i<2; i++) fRec119[i] = 0;
		for (int i=0; i<3; i++) fRec118[i] = 0;
		for (int i=0; i<3; i++) fRec117[i] = 0;
		for (int i=0; i<2; i++) fRec125[i] = 0;
		for (int i=0; i<3; i++) fRec124[i] = 0;
		for (int i=0; i<2; i++) fVec16[i] = 0;
		for (int i=0; i<2; i++) fRec123[i] = 0;
		for (int i=0; i<3; i++) fRec122[i] = 0;
		for (int i=0; i<2; i++) fRec127[i] = 0;
		for (int i=0; i<3; i++) fRec126[i] = 0;
		for (int i=0; i<2; i++) fRec132[i] = 0;
		for (int i=0; i<3; i++) fRec131[i] = 0;
		for (int i=0; i<3; i++) fRec130[i] = 0;
		for (int i=0; i<3; i++) fRec129[i] = 0;
		for (int i=0; i<3; i++) fRec128[i] = 0;
		for (int i=0; i<2; i++) fRec138[i] = 0;
		for (int i=0; i<3; i++) fRec137[i] = 0;
		for (int i=0; i<2; i++) fVec17[i] = 0;
		for (int i=0; i<2; i++) fRec136[i] = 0;
		for (int i=0; i<3; i++) fRec135[i] = 0;
		for (int i=0; i<3; i++) fRec134[i] = 0;
		for (int i=0; i<3; i++) fRec133[i] = 0;
		for (int i=0; i<2; i++) fRec143[i] = 0;
		for (int i=0; i<3; i++) fRec142[i] = 0;
		for (int i=0; i<2; i++) fVec18[i] = 0;
		for (int i=0; i<2; i++) fRec141[i] = 0;
		for (int i=0; i<3; i++) fRec140[i] = 0;
		for (int i=0; i<3; i++) fRec139[i] = 0;
		for (int i=0; i<2; i++) fRec147[i] = 0;
		for (int i=0; i<3; i++) fRec146[i] = 0;
		for (int i=0; i<2; i++) fVec19[i] = 0;
		for (int i=0; i<2; i++) fRec145[i] = 0;
		for (int i=0; i<3; i++) fRec144[i] = 0;
		for (int i=0; i<2; i++) fRec149[i] = 0;
		for (int i=0; i<3; i++) fRec148[i] = 0;
		for (int i=0; i<2; i++) fRec154[i] = 0;
		for (int i=0; i<3; i++) fRec153[i] = 0;
		for (int i=0; i<3; i++) fRec152[i] = 0;
		for (int i=0; i<3; i++) fRec151[i] = 0;
		for (int i=0; i<3; i++) fRec150[i] = 0;
		for (int i=0; i<2; i++) fRec160[i] = 0;
		for (int i=0; i<3; i++) fRec159[i] = 0;
		for (int i=0; i<2; i++) fVec20[i] = 0;
		for (int i=0; i<2; i++) fRec158[i] = 0;
		for (int i=0; i<3; i++) fRec157[i] = 0;
		for (int i=0; i<3; i++) fRec156[i] = 0;
		for (int i=0; i<3; i++) fRec155[i] = 0;
		for (int i=0; i<2; i++) fRec165[i] = 0;
		for (int i=0; i<3; i++) fRec164[i] = 0;
		for (int i=0; i<2; i++) fVec21[i] = 0;
		for (int i=0; i<2; i++) fRec163[i] = 0;
		for (int i=0; i<3; i++) fRec162[i] = 0;
		for (int i=0; i<3; i++) fRec161[i] = 0;
		for (int i=0; i<2; i++) fRec169[i] = 0;
		for (int i=0; i<3; i++) fRec168[i] = 0;
		for (int i=0; i<2; i++) fVec22[i] = 0;
		for (int i=0; i<2; i++) fRec167[i] = 0;
		for (int i=0; i<3; i++) fRec166[i] = 0;
		for (int i=0; i<2; i++) fRec171[i] = 0;
		for (int i=0; i<3; i++) fRec170[i] = 0;
		for (int i=0; i<2; i++) fRec176[i] = 0;
		for (int i=0; i<3; i++) fRec175[i] = 0;
		for (int i=0; i<3; i++) fRec174[i] = 0;
		for (int i=0; i<3; i++) fRec173[i] = 0;
		for (int i=0; i<3; i++) fRec172[i] = 0;
		for (int i=0; i<2; i++) fRec182[i] = 0;
		for (int i=0; i<3; i++) fRec181[i] = 0;
		for (int i=0; i<2; i++) fVec23[i] = 0;
		for (int i=0; i<2; i++) fRec180[i] = 0;
		for (int i=0; i<3; i++) fRec179[i] = 0;
		for (int i=0; i<3; i++) fRec178[i] = 0;
		for (int i=0; i<3; i++) fRec177[i] = 0;
		for (int i=0; i<2; i++) fRec187[i] = 0;
		for (int i=0; i<3; i++) fRec186[i] = 0;
		for (int i=0; i<2; i++) fVec24[i] = 0;
		for (int i=0; i<2; i++) fRec185[i] = 0;
		for (int i=0; i<3; i++) fRec184[i] = 0;
		for (int i=0; i<3; i++) fRec183[i] = 0;
		for (int i=0; i<2; i++) fRec191[i] = 0;
		for (int i=0; i<3; i++) fRec190[i] = 0;
		for (int i=0; i<2; i++) fVec25[i] = 0;
		for (int i=0; i<2; i++) fRec189[i] = 0;
		for (int i=0; i<3; i++) fRec188[i] = 0;
		for (int i=0; i<2; i++) fRec193[i] = 0;
		for (int i=0; i<3; i++) fRec192[i] = 0;
		for (int i=0; i<2; i++) fRec198[i] = 0;
		for (int i=0; i<3; i++) fRec197[i] = 0;
		for (int i=0; i<3; i++) fRec196[i] = 0;
		for (int i=0; i<3; i++) fRec195[i] = 0;
		for (int i=0; i<3; i++) fRec194[i] = 0;
		for (int i=0; i<2; i++) fRec204[i] = 0;
		for (int i=0; i<3; i++) fRec203[i] = 0;
		for (int i=0; i<2; i++) fVec26[i] = 0;
		for (int i=0; i<2; i++) fRec202[i] = 0;
		for (int i=0; i<3; i++) fRec201[i] = 0;
		for (int i=0; i<3; i++) fRec200[i] = 0;
		for (int i=0; i<3; i++) fRec199[i] = 0;
		for (int i=0; i<2; i++) fRec209[i] = 0;
		for (int i=0; i<3; i++) fRec208[i] = 0;
		for (int i=0; i<2; i++) fVec27[i] = 0;
		for (int i=0; i<2; i++) fRec207[i] = 0;
		for (int i=0; i<3; i++) fRec206[i] = 0;
		for (int i=0; i<3; i++) fRec205[i] = 0;
		for (int i=0; i<2; i++) fRec213[i] = 0;
		for (int i=0; i<3; i++) fRec212[i] = 0;
		for (int i=0; i<2; i++) fVec28[i] = 0;
		for (int i=0; i<2; i++) fRec211[i] = 0;
		for (int i=0; i<3; i++) fRec210[i] = 0;
		for (int i=0; i<2; i++) fRec215[i] = 0;
		for (int i=0; i<3; i++) fRec214[i] = 0;
		for (int i=0; i<2; i++) fRec220[i] = 0;
		for (int i=0; i<3; i++) fRec219[i] = 0;
		for (int i=0; i<3; i++) fRec218[i] = 0;
		for (int i=0; i<3; i++) fRec217[i] = 0;
		for (int i=0; i<3; i++) fRec216[i] = 0;
		for (int i=0; i<2; i++) fRec226[i] = 0;
		for (int i=0; i<3; i++) fRec225[i] = 0;
		for (int i=0; i<2; i++) fVec29[i] = 0;
		for (int i=0; i<2; i++) fRec224[i] = 0;
		for (int i=0; i<3; i++) fRec223[i] = 0;
		for (int i=0; i<3; i++) fRec222[i] = 0;
		for (int i=0; i<3; i++) fRec221[i] = 0;
		for (int i=0; i<2; i++) fRec231[i] = 0;
		for (int i=0; i<3; i++) fRec230[i] = 0;
		for (int i=0; i<2; i++) fVec30[i] = 0;
		for (int i=0; i<2; i++) fRec229[i] = 0;
		for (int i=0; i<3; i++) fRec228[i] = 0;
		for (int i=0; i<3; i++) fRec227[i] = 0;
		for (int i=0; i<2; i++) fRec235[i] = 0;
		for (int i=0; i<3; i++) fRec234[i] = 0;
		for (int i=0; i<2; i++) fVec31[i] = 0;
		for (int i=0; i<2; i++) fRec233[i] = 0;
		for (int i=0; i<3; i++) fRec232[i] = 0;
		for (int i=0; i<2; i++) fRec237[i] = 0;
		for (int i=0; i<3; i++) fRec236[i] = 0;
		for (int i=0; i<2; i++) fRec242[i] = 0;
		for (int i=0; i<3; i++) fRec241[i] = 0;
		for (int i=0; i<3; i++) fRec240[i] = 0;
		for (int i=0; i<3; i++) fRec239[i] = 0;
		for (int i=0; i<3; i++) fRec238[i] = 0;
		for (int i=0; i<2; i++) fRec248[i] = 0;
		for (int i=0; i<3; i++) fRec247[i] = 0;
		for (int i=0; i<2; i++) fVec32[i] = 0;
		for (int i=0; i<2; i++) fRec246[i] = 0;
		for (int i=0; i<3; i++) fRec245[i] = 0;
		for (int i=0; i<3; i++) fRec244[i] = 0;
		for (int i=0; i<3; i++) fRec243[i] = 0;
		for (int i=0; i<2; i++) fRec253[i] = 0;
		for (int i=0; i<3; i++) fRec252[i] = 0;
		for (int i=0; i<2; i++) fVec33[i] = 0;
		for (int i=0; i<2; i++) fRec251[i] = 0;
		for (int i=0; i<3; i++) fRec250[i] = 0;
		for (int i=0; i<3; i++) fRec249[i] = 0;
		for (int i=0; i<2; i++) fRec257[i] = 0;
		for (int i=0; i<3; i++) fRec256[i] = 0;
		for (int i=0; i<2; i++) fVec34[i] = 0;
		for (int i=0; i<2; i++) fRec255[i] = 0;
		for (int i=0; i<3; i++) fRec254[i] = 0;
		for (int i=0; i<2; i++) fRec259[i] = 0;
		for (int i=0; i<3; i++) fRec258[i] = 0;
		for (int i=0; i<2; i++) fRec264[i] = 0;
		for (int i=0; i<3; i++) fRec263[i] = 0;
		for (int i=0; i<3; i++) fRec262[i] = 0;
		for (int i=0; i<3; i++) fRec261[i] = 0;
		for (int i=0; i<3; i++) fRec260[i] = 0;
		for (int i=0; i<2; i++) fRec270[i] = 0;
		for (int i=0; i<3; i++) fRec269[i] = 0;
		for (int i=0; i<2; i++) fVec35[i] = 0;
		for (int i=0; i<2; i++) fRec268[i] = 0;
		for (int i=0; i<3; i++) fRec267[i] = 0;
		for (int i=0; i<3; i++) fRec266[i] = 0;
		for (int i=0; i<3; i++) fRec265[i] = 0;
		for (int i=0; i<2; i++) fRec275[i] = 0;
		for (int i=0; i<3; i++) fRec274[i] = 0;
		for (int i=0; i<2; i++) fVec36[i] = 0;
		for (int i=0; i<2; i++) fRec273[i] = 0;
		for (int i=0; i<3; i++) fRec272[i] = 0;
		for (int i=0; i<3; i++) fRec271[i] = 0;
		for (int i=0; i<2; i++) fRec279[i] = 0;
		for (int i=0; i<3; i++) fRec278[i] = 0;
		for (int i=0; i<2; i++) fVec37[i] = 0;
		for (int i=0; i<2; i++) fRec277[i] = 0;
		for (int i=0; i<3; i++) fRec276[i] = 0;
		for (int i=0; i<2; i++) fRec281[i] = 0;
		for (int i=0; i<3; i++) fRec280[i] = 0;
		for (int i=0; i<2; i++) fRec286[i] = 0;
		for (int i=0; i<3; i++) fRec285[i] = 0;
		for (int i=0; i<3; i++) fRec284[i] = 0;
		for (int i=0; i<3; i++) fRec283[i] = 0;
		for (int i=0; i<3; i++) fRec282[i] = 0;
		for (int i=0; i<2; i++) fRec292[i] = 0;
		for (int i=0; i<3; i++) fRec291[i] = 0;
		for (int i=0; i<2; i++) fVec38[i] = 0;
		for (int i=0; i<2; i++) fRec290[i] = 0;
		for (int i=0; i<3; i++) fRec289[i] = 0;
		for (int i=0; i<3; i++) fRec288[i] = 0;
		for (int i=0; i<3; i++) fRec287[i] = 0;
		for (int i=0; i<2; i++) fRec297[i] = 0;
		for (int i=0; i<3; i++) fRec296[i] = 0;
		for (int i=0; i<2; i++) fVec39[i] = 0;
		for (int i=0; i<2; i++) fRec295[i] = 0;
		for (int i=0; i<3; i++) fRec294[i] = 0;
		for (int i=0; i<3; i++) fRec293[i] = 0;
		for (int i=0; i<2; i++) fRec301[i] = 0;
		for (int i=0; i<3; i++) fRec300[i] = 0;
		for (int i=0; i<2; i++) fVec40[i] = 0;
		for (int i=0; i<2; i++) fRec299[i] = 0;
		for (int i=0; i<3; i++) fRec298[i] = 0;
		for (int i=0; i<2; i++) fRec303[i] = 0;
		for (int i=0; i<3; i++) fRec302[i] = 0;
		for (int i=0; i<2; i++) fRec308[i] = 0;
		for (int i=0; i<3; i++) fRec307[i] = 0;
		for (int i=0; i<3; i++) fRec306[i] = 0;
		for (int i=0; i<3; i++) fRec305[i] = 0;
		for (int i=0; i<3; i++) fRec304[i] = 0;
		for (int i=0; i<2; i++) fRec314[i] = 0;
		for (int i=0; i<3; i++) fRec313[i] = 0;
		for (int i=0; i<2; i++) fVec41[i] = 0;
		for (int i=0; i<2; i++) fRec312[i] = 0;
		for (int i=0; i<3; i++) fRec311[i] = 0;
		for (int i=0; i<3; i++) fRec310[i] = 0;
		for (int i=0; i<3; i++) fRec309[i] = 0;
		for (int i=0; i<2; i++) fRec319[i] = 0;
		for (int i=0; i<3; i++) fRec318[i] = 0;
		for (int i=0; i<2; i++) fVec42[i] = 0;
		for (int i=0; i<2; i++) fRec317[i] = 0;
		for (int i=0; i<3; i++) fRec316[i] = 0;
		for (int i=0; i<3; i++) fRec315[i] = 0;
		for (int i=0; i<2; i++) fRec323[i] = 0;
		for (int i=0; i<3; i++) fRec322[i] = 0;
		for (int i=0; i<2; i++) fVec43[i] = 0;
		for (int i=0; i<2; i++) fRec321[i] = 0;
		for (int i=0; i<3; i++) fRec320[i] = 0;
		for (int i=0; i<2; i++) fRec325[i] = 0;
		for (int i=0; i<3; i++) fRec324[i] = 0;
		for (int i=0; i<2; i++) fRec330[i] = 0;
		for (int i=0; i<3; i++) fRec329[i] = 0;
		for (int i=0; i<3; i++) fRec328[i] = 0;
		for (int i=0; i<3; i++) fRec327[i] = 0;
		for (int i=0; i<3; i++) fRec326[i] = 0;
		for (int i=0; i<2; i++) fRec336[i] = 0;
		for (int i=0; i<3; i++) fRec335[i] = 0;
		for (int i=0; i<2; i++) fVec44[i] = 0;
		for (int i=0; i<2; i++) fRec334[i] = 0;
		for (int i=0; i<3; i++) fRec333[i] = 0;
		for (int i=0; i<3; i++) fRec332[i] = 0;
		for (int i=0; i<3; i++) fRec331[i] = 0;
		for (int i=0; i<2; i++) fRec341[i] = 0;
		for (int i=0; i<3; i++) fRec340[i] = 0;
		for (int i=0; i<2; i++) fVec45[i] = 0;
		for (int i=0; i<2; i++) fRec339[i] = 0;
		for (int i=0; i<3; i++) fRec338[i] = 0;
		for (int i=0; i<3; i++) fRec337[i] = 0;
		for (int i=0; i<2; i++) fRec345[i] = 0;
		for (int i=0; i<3; i++) fRec344[i] = 0;
		for (int i=0; i<2; i++) fVec46[i] = 0;
		for (int i=0; i<2; i++) fRec343[i] = 0;
		for (int i=0; i<3; i++) fRec342[i] = 0;
		for (int i=0; i<2; i++) fRec347[i] = 0;
		for (int i=0; i<3; i++) fRec346[i] = 0;
		for (int i=0; i<2; i++) fRec352[i] = 0;
		for (int i=0; i<3; i++) fRec351[i] = 0;
		for (int i=0; i<3; i++) fRec350[i] = 0;
		for (int i=0; i<3; i++) fRec349[i] = 0;
		for (int i=0; i<3; i++) fRec348[i] = 0;
		for (int i=0; i<2; i++) fRec358[i] = 0;
		for (int i=0; i<3; i++) fRec357[i] = 0;
		for (int i=0; i<2; i++) fVec47[i] = 0;
		for (int i=0; i<2; i++) fRec356[i] = 0;
		for (int i=0; i<3; i++) fRec355[i] = 0;
		for (int i=0; i<3; i++) fRec354[i] = 0;
		for (int i=0; i<3; i++) fRec353[i] = 0;
		for (int i=0; i<2; i++) fRec363[i] = 0;
		for (int i=0; i<3; i++) fRec362[i] = 0;
		for (int i=0; i<2; i++) fVec48[i] = 0;
		for (int i=0; i<2; i++) fRec361[i] = 0;
		for (int i=0; i<3; i++) fRec360[i] = 0;
		for (int i=0; i<3; i++) fRec359[i] = 0;
		for (int i=0; i<2; i++) fRec367[i] = 0;
		for (int i=0; i<3; i++) fRec366[i] = 0;
		for (int i=0; i<2; i++) fVec49[i] = 0;
		for (int i=0; i<2; i++) fRec365[i] = 0;
		for (int i=0; i<3; i++) fRec364[i] = 0;
		for (int i=0; i<2; i++) fRec369[i] = 0;
		for (int i=0; i<3; i++) fRec368[i] = 0;
		IOTA = 0;
		for (int i=0; i<16384; i++) fVec50[i] = 0;
		for (int i=0; i<3; i++) fRec0[i] = 0;
		for (int i=0; i<2; i++) fVec51[i] = 0;
		for (int i=0; i<16384; i++) fVec52[i] = 0;
		for (int i=0; i<3; i++) fRec1[i] = 0;
		for (int i=0; i<16384; i++) fVec53[i] = 0;
		for (int i=0; i<3; i++) fRec2[i] = 0;
		for (int i=0; i<16384; i++) fVec54[i] = 0;
		for (int i=0; i<3; i++) fRec3[i] = 0;
		for (int i=0; i<16384; i++) fVec55[i] = 0;
		for (int i=0; i<3; i++) fRec4[i] = 0;
		for (int i=0; i<16384; i++) fVec56[i] = 0;
		for (int i=0; i<3; i++) fRec5[i] = 0;
		for (int i=0; i<16384; i++) fVec57[i] = 0;
		for (int i=0; i<3; i++) fRec6[i] = 0;
		for (int i=0; i<16384; i++) fVec58[i] = 0;
		for (int i=0; i<3; i++) fRec7[i] = 0;
		for (int i=0; i<16384; i++) fVec59[i] = 0;
		for (int i=0; i<3; i++) fRec8[i] = 0;
		for (int i=0; i<16384; i++) fVec60[i] = 0;
		for (int i=0; i<3; i++) fRec9[i] = 0;
		for (int i=0; i<16384; i++) fVec61[i] = 0;
		for (int i=0; i<3; i++) fRec10[i] = 0;
		for (int i=0; i<16384; i++) fVec62[i] = 0;
		for (int i=0; i<3; i++) fRec11[i] = 0;
		for (int i=0; i<16384; i++) fVec63[i] = 0;
		for (int i=0; i<3; i++) fRec12[i] = 0;
		for (int i=0; i<16384; i++) fVec64[i] = 0;
		for (int i=0; i<3; i++) fRec13[i] = 0;
		for (int i=0; i<16384; i++) fVec65[i] = 0;
		for (int i=0; i<3; i++) fRec14[i] = 0;
		for (int i=0; i<16384; i++) fVec66[i] = 0;
		for (int i=0; i<3; i++) fRec15[i] = 0;
	}
	virtual void init(int samplingFreq) {
		classInit(samplingFreq);
		instanceInit(samplingFreq);
	}
	virtual void instanceInit(int samplingFreq) {
		instanceConstants(samplingFreq);
		instanceResetUserInterface();
		instanceClear();
	}
	virtual mydsp* clone() {
		return new mydsp();
	}
	virtual int getSampleRate() {
		return fSamplingFreq;
	}
	virtual void buildUserInterface(UI* ui_interface) {
		ui_interface->openVerticalBox("reverbDesigner");
		ui_interface->declare(0, "tooltip", "See Faust's reverbs.lib for documentation and references");
		ui_interface->openVerticalBox("FEEDBACK DELAY NETWORK (FDN) REVERBERATOR, ORDER 16");
		ui_interface->declare(0, "1", "");
		ui_interface->openVerticalBox("Band Crossover Frequencies");
		ui_interface->declare(&fslider7, "0", "");
		ui_interface->declare(&fslider7, "scale", "log");
		ui_interface->declare(&fslider7, "tooltip", "Each delay-line signal is split into frequency-bands for separate  decay-time control in each band");
		ui_interface->declare(&fslider7, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 0 upper edge in Hz", &fslider7, 500.0f, 100.0f, 10000.0f, 1.0f);
		ui_interface->declare(&fslider6, "1", "");
		ui_interface->declare(&fslider6, "scale", "log");
		ui_interface->declare(&fslider6, "tooltip", "Each delay-line signal is split into frequency-bands for separate  decay-time control in each band");
		ui_interface->declare(&fslider6, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 1 upper edge in Hz", &fslider6, 1000.0f, 100.0f, 10000.0f, 1.0f);
		ui_interface->declare(&fslider5, "2", "");
		ui_interface->declare(&fslider5, "scale", "log");
		ui_interface->declare(&fslider5, "tooltip", "Each delay-line signal is split into frequency-bands for separate  decay-time control in each band");
		ui_interface->declare(&fslider5, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 2 upper edge in Hz", &fslider5, 2000.0f, 100.0f, 10000.0f, 1.0f);
		ui_interface->declare(&fslider4, "3", "");
		ui_interface->declare(&fslider4, "scale", "log");
		ui_interface->declare(&fslider4, "tooltip", "Each delay-line signal is split into frequency-bands for separate  decay-time control in each band");
		ui_interface->declare(&fslider4, "unit", "Hz");
		ui_interface->addHorizontalSlider("Band 3 upper edge in Hz", &fslider4, 4000.0f, 100.0f, 10000.0f, 1.0f);
		ui_interface->closeBox();
		ui_interface->declare(0, "2", "");
		ui_interface->openHorizontalBox("Band Decay Times (T60)");
		ui_interface->declare(&fslider11, "0", "");
		ui_interface->declare(&fslider11, "scale", "log");
		ui_interface->declare(&fslider11, "tooltip", "T60 is the 60dB   decay-time in seconds. For concert halls, an overall reverberation time (T60) near   1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each   frequency band.  In real rooms, higher frequency bands generally decay faster due   to absorption and scattering.");
		ui_interface->declare(&fslider11, "unit", "s");
		ui_interface->addVerticalSlider("0", &fslider11, 8.4000000000000004f, 0.10000000000000001f, 100.0f, 0.10000000000000001f);
		ui_interface->declare(&fslider10, "1", "");
		ui_interface->declare(&fslider10, "scale", "log");
		ui_interface->declare(&fslider10, "tooltip", "T60 is the 60dB   decay-time in seconds. For concert halls, an overall reverberation time (T60) near   1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each   frequency band.  In real rooms, higher frequency bands generally decay faster due   to absorption and scattering.");
		ui_interface->declare(&fslider10, "unit", "s");
		ui_interface->addVerticalSlider("1", &fslider10, 6.5f, 0.10000000000000001f, 100.0f, 0.10000000000000001f);
		ui_interface->declare(&fslider9, "2", "");
		ui_interface->declare(&fslider9, "scale", "log");
		ui_interface->declare(&fslider9, "tooltip", "T60 is the 60dB   decay-time in seconds. For concert halls, an overall reverberation time (T60) near   1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each   frequency band.  In real rooms, higher frequency bands generally decay faster due   to absorption and scattering.");
		ui_interface->declare(&fslider9, "unit", "s");
		ui_interface->addVerticalSlider("2", &fslider9, 5.0f, 0.10000000000000001f, 100.0f, 0.10000000000000001f);
		ui_interface->declare(&fslider8, "3", "");
		ui_interface->declare(&fslider8, "scale", "log");
		ui_interface->declare(&fslider8, "tooltip", "T60 is the 60dB   decay-time in seconds. For concert halls, an overall reverberation time (T60) near   1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each   frequency band.  In real rooms, higher frequency bands generally decay faster due   to absorption and scattering.");
		ui_interface->declare(&fslider8, "unit", "s");
		ui_interface->addVerticalSlider("3", &fslider8, 3.7999999999999998f, 0.10000000000000001f, 100.0f, 0.10000000000000001f);
		ui_interface->declare(&fslider3, "4", "");
		ui_interface->declare(&fslider3, "scale", "log");
		ui_interface->declare(&fslider3, "tooltip", "T60 is the 60dB   decay-time in seconds. For concert halls, an overall reverberation time (T60) near   1.9 seconds is typical [Beranek 2004]. Here we may set T60 independently in each   frequency band.  In real rooms, higher frequency bands generally decay faster due   to absorption and scattering.");
		ui_interface->declare(&fslider3, "unit", "s");
		ui_interface->addVerticalSlider("4", &fslider3, 2.7000000000000002f, 0.10000000000000001f, 100.0f, 0.10000000000000001f);
		ui_interface->closeBox();
		ui_interface->declare(0, "3", "");
		ui_interface->openVerticalBox("Room Dimensions");
		ui_interface->declare(&fslider1, "1", "");
		ui_interface->declare(&fslider1, "scale", "log");
		ui_interface->declare(&fslider1, "tooltip", "This length (in meters) determines the shortest delay-line used in the FDN  reverberator. Think of it as the shortest wall-to-wall separation in the room.");
		ui_interface->declare(&fslider1, "unit", "m");
		ui_interface->addHorizontalSlider("min acoustic ray length", &fslider1, 46.0f, 0.10000000000000001f, 63.0f, 0.10000000000000001f);
		ui_interface->declare(&fslider2, "2", "");
		ui_interface->declare(&fslider2, "scale", "log");
		ui_interface->declare(&fslider2, "tooltip", "This length (in meters) determines the longest delay-line used in the   FDN reverberator. Think of it as the largest wall-to-wall separation in the room.");
		ui_interface->declare(&fslider2, "unit", "m");
		ui_interface->addHorizontalSlider("max acoustic ray length", &fslider2, 63.0f, 0.10000000000000001f, 63.0f, 0.10000000000000001f);
		ui_interface->closeBox();
		ui_interface->declare(0, "4", "");
		ui_interface->openHorizontalBox("Input Controls");
		ui_interface->declare(0, "3", "");
		ui_interface->openVerticalBox("Reverb State");
		ui_interface->declare(&fbutton2, "1", "");
		ui_interface->declare(&fbutton2, "tooltip", "Hold down 'Quench' to clear the reverberator");
		ui_interface->addButton("Quench", &fbutton2);
		ui_interface->closeBox();
		ui_interface->closeBox();
		ui_interface->closeBox();
		ui_interface->declare(0, "1", "");
		ui_interface->openVerticalBox("Input Config");
		ui_interface->declare(&fcheckbox1, "1", "");
		ui_interface->declare(&fcheckbox1, "tooltip", "When this is checked, the stereo external audio inputs are   disabled (good for hearing the impulse response or pink-noise response alone)");
		ui_interface->addCheckButton("Mute Ext Inputs", &fcheckbox1);
		ui_interface->declare(&fcheckbox0, "2", "");
		ui_interface->declare(&fcheckbox0, "tooltip", "Pink Noise (or 1/f noise) is Constant-Q Noise (useful for adjusting   the EQ sections)");
		ui_interface->addCheckButton("Pink Noise", &fcheckbox0);
		ui_interface->closeBox();
		ui_interface->declare(0, "2", "");
		ui_interface->openHorizontalBox("Impulse Selection");
		ui_interface->declare(&fbutton1, "1", "");
		ui_interface->declare(&fbutton1, "tooltip", "Send impulse into LEFT channel");
		ui_interface->addButton("Left", &fbutton1);
		ui_interface->declare(&fbutton0, "2", "");
		ui_interface->declare(&fbutton0, "tooltip", "Send impulse into LEFT and RIGHT channels");
		ui_interface->addButton("Center", &fbutton0);
		ui_interface->declare(&fbutton3, "3", "");
		ui_interface->declare(&fbutton3, "tooltip", "Send impulse into RIGHT channel");
		ui_interface->addButton("Right", &fbutton3);
		ui_interface->closeBox();
		ui_interface->declare(&fslider0, "3", "");
		ui_interface->declare(&fslider0, "tooltip", "Output scale factor");
		ui_interface->declare(&fslider0, "unit", "dB");
		ui_interface->addHorizontalSlider("Output Level (dB)", &fslider0, -40.0f, -70.0f, 20.0f, 0.10000000000000001f);
		ui_interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		//zone1
		//zone2
		float 	fSlow0 = powf(10,(0.050000000000000003f * float(fslider0)));
		float 	fSlow1 = (0.10000000000000001f * float(fcheckbox0));
		float 	fSlow2 = float(fbutton0);
		float 	fSlow3 = float(fbutton1);
		float 	fSlow4 = (1 - float(fcheckbox1));
		float 	fSlow5 = (0.25f * (1.0f - (0.5f * float(fbutton2))));
		float 	fSlow6 = float(fslider1);
		float 	fSlow7 = (float(fslider2) / fSlow6);
		float 	fSlow8 = powf(2,floorf(((1.4426950408889634f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.0f))))) + 0.5f)));
		float 	fSlow9 = (0 - (6.9077552789821377f * fSlow8));
		float 	fSlow10 = float(fslider3);
		float 	fSlow11 = expf((fConst1 * (fSlow9 / fSlow10)));
		float 	fSlow12 = tanf((fConst3 * float(fslider4)));
		float 	fSlow13 = (1.0f / fSlow12);
		float 	fSlow14 = (((fSlow13 + 1.0000000000000002f) / fSlow12) + 1);
		float 	fSlow15 = (1.0f / fSlow14);
		float 	fSlow16 = (1.0f / faustpower<2>(fSlow12));
		float 	fSlow17 = (fSlow13 + 1);
		float 	fSlow18 = (0 - ((1 - fSlow13) / fSlow17));
		float 	fSlow19 = (1.0f / fSlow17);
		float 	fSlow20 = (0 - fSlow13);
		float 	fSlow21 = (2 * (1 - fSlow16));
		float 	fSlow22 = (((fSlow13 + -1.0000000000000002f) / fSlow12) + 1);
		float 	fSlow23 = (2 * (0 - fSlow16));
		float 	fSlow24 = tanf((fConst3 * float(fslider5)));
		float 	fSlow25 = (1.0f / fSlow24);
		float 	fSlow26 = (1.0f / (((fSlow25 + 1.0f) / fSlow24) + 1));
		float 	fSlow27 = (1 - ((1.0f - fSlow25) / fSlow24));
		float 	fSlow28 = (1.0f / faustpower<2>(fSlow24));
		float 	fSlow29 = (2 * (1 - fSlow28));
		float 	fSlow30 = tanf((fConst3 * float(fslider6)));
		float 	fSlow31 = (1.0f / fSlow30);
		float 	fSlow32 = (1.0f / (((fSlow31 + 1.0f) / fSlow30) + 1));
		float 	fSlow33 = (1 - ((1.0f - fSlow31) / fSlow30));
		float 	fSlow34 = (1.0f / faustpower<2>(fSlow30));
		float 	fSlow35 = (2 * (1 - fSlow34));
		float 	fSlow36 = tanf((fConst3 * float(fslider7)));
		float 	fSlow37 = (1.0f / fSlow36);
		float 	fSlow38 = (1.0f / (((fSlow37 + 1.0f) / fSlow36) + 1));
		float 	fSlow39 = (1 - ((1.0f - fSlow37) / fSlow36));
		float 	fSlow40 = (1.0f / faustpower<2>(fSlow36));
		float 	fSlow41 = (2 * (1 - fSlow40));
		float 	fSlow42 = float(fslider8);
		float 	fSlow43 = expf((fConst1 * (fSlow9 / fSlow42)));
		float 	fSlow44 = (((fSlow25 + 1.0000000000000002f) / fSlow24) + 1);
		float 	fSlow45 = (1.0f / fSlow44);
		float 	fSlow46 = (fSlow25 + 1);
		float 	fSlow47 = (0 - ((1 - fSlow25) / fSlow46));
		float 	fSlow48 = (1.0f / fSlow46);
		float 	fSlow49 = (0 - fSlow25);
		float 	fSlow50 = (1.0f / (fSlow14 * fSlow24));
		float 	fSlow51 = (((fSlow25 + -1.0000000000000002f) / fSlow24) + 1);
		float 	fSlow52 = (2 * (0 - fSlow28));
		float 	fSlow53 = float(fslider9);
		float 	fSlow54 = expf((fConst1 * (fSlow9 / fSlow53)));
		float 	fSlow55 = (((fSlow31 + 1.0000000000000002f) / fSlow30) + 1);
		float 	fSlow56 = (1.0f / fSlow55);
		float 	fSlow57 = (fSlow31 + 1);
		float 	fSlow58 = (0 - ((1 - fSlow31) / fSlow57));
		float 	fSlow59 = (1.0f / fSlow57);
		float 	fSlow60 = (0 - fSlow31);
		float 	fSlow61 = (1.0f / (fSlow44 * fSlow30));
		float 	fSlow62 = (((fSlow31 + -1.0000000000000002f) / fSlow30) + 1);
		float 	fSlow63 = (2 * (0 - fSlow34));
		float 	fSlow64 = (1.0f / (((fSlow37 + 1.0000000000000002f) / fSlow36) + 1));
		float 	fSlow65 = float(fslider10);
		float 	fSlow66 = expf((fConst1 * (fSlow9 / fSlow65)));
		float 	fSlow67 = (fSlow37 + 1);
		float 	fSlow68 = (0 - ((1 - fSlow37) / fSlow67));
		float 	fSlow69 = (1.0f / fSlow67);
		float 	fSlow70 = (0 - fSlow37);
		float 	fSlow71 = (1.0f / (fSlow55 * fSlow36));
		float 	fSlow72 = (((fSlow37 + -1.0000000000000002f) / fSlow36) + 1);
		float 	fSlow73 = (2 * (0 - fSlow40));
		float 	fSlow74 = float(fslider11);
		float 	fSlow75 = expf((fConst1 * (fSlow9 / fSlow74)));
		float 	fSlow76 = powf(23,floorf(((0.318928988903801f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.53333333333333333f))))) + 0.5f)));
		float 	fSlow77 = (0 - (6.9077552789821377f * fSlow76));
		float 	fSlow78 = expf((fConst1 * (fSlow77 / fSlow10)));
		float 	fSlow79 = expf((fConst1 * (fSlow77 / fSlow42)));
		float 	fSlow80 = expf((fConst1 * (fSlow77 / fSlow53)));
		float 	fSlow81 = expf((fConst1 * (fSlow77 / fSlow65)));
		float 	fSlow82 = expf((fConst1 * (fSlow77 / fSlow74)));
		float 	fSlow83 = powf(11,floorf(((0.41703239142424631f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.26666666666666666f))))) + 0.5f)));
		float 	fSlow84 = (0 - (6.9077552789821377f * fSlow83));
		float 	fSlow85 = expf((fConst1 * (fSlow84 / fSlow10)));
		float 	fSlow86 = expf((fConst1 * (fSlow84 / fSlow42)));
		float 	fSlow87 = expf((fConst1 * (fSlow84 / fSlow53)));
		float 	fSlow88 = expf((fConst1 * (fSlow84 / fSlow65)));
		float 	fSlow89 = expf((fConst1 * (fSlow84 / fSlow74)));
		float 	fSlow90 = powf(41,floorf(((0.26928250806439102f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.80000000000000004f))))) + 0.5f)));
		float 	fSlow91 = (0 - (6.9077552789821377f * fSlow90));
		float 	fSlow92 = expf((fConst1 * (fSlow91 / fSlow10)));
		float 	fSlow93 = expf((fConst1 * (fSlow91 / fSlow42)));
		float 	fSlow94 = expf((fConst1 * (fSlow91 / fSlow53)));
		float 	fSlow95 = expf((fConst1 * (fSlow91 / fSlow65)));
		float 	fSlow96 = expf((fConst1 * (fSlow91 / fSlow74)));
		float 	fSlow97 = powf(5,floorf(((0.62133493455961186f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.13333333333333333f))))) + 0.5f)));
		float 	fSlow98 = (0 - (6.9077552789821377f * fSlow97));
		float 	fSlow99 = expf((fConst1 * (fSlow98 / fSlow10)));
		float 	fSlow100 = expf((fConst1 * (fSlow98 / fSlow42)));
		float 	fSlow101 = expf((fConst1 * (fSlow98 / fSlow53)));
		float 	fSlow102 = expf((fConst1 * (fSlow98 / fSlow65)));
		float 	fSlow103 = expf((fConst1 * (fSlow98 / fSlow74)));
		float 	fSlow104 = powf(31,floorf(((0.29120667621996243f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.66666666666666663f))))) + 0.5f)));
		float 	fSlow105 = (0 - (6.9077552789821377f * fSlow104));
		float 	fSlow106 = expf((fConst1 * (fSlow105 / fSlow10)));
		float 	fSlow107 = expf((fConst1 * (fSlow105 / fSlow42)));
		float 	fSlow108 = expf((fConst1 * (fSlow105 / fSlow53)));
		float 	fSlow109 = expf((fConst1 * (fSlow105 / fSlow65)));
		float 	fSlow110 = expf((fConst1 * (fSlow105 / fSlow74)));
		float 	fSlow111 = powf(17,floorf(((0.35295612386476116f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.40000000000000002f))))) + 0.5f)));
		float 	fSlow112 = (0 - (6.9077552789821377f * fSlow111));
		float 	fSlow113 = expf((fConst1 * (fSlow112 / fSlow10)));
		float 	fSlow114 = expf((fConst1 * (fSlow112 / fSlow42)));
		float 	fSlow115 = expf((fConst1 * (fSlow112 / fSlow53)));
		float 	fSlow116 = expf((fConst1 * (fSlow112 / fSlow65)));
		float 	fSlow117 = expf((fConst1 * (fSlow112 / fSlow74)));
		float 	fSlow118 = powf(47,floorf(((0.25973030217227155f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.93333333333333335f))))) + 0.5f)));
		float 	fSlow119 = (0 - (6.9077552789821377f * fSlow118));
		float 	fSlow120 = expf((fConst1 * (fSlow119 / fSlow10)));
		float 	fSlow121 = expf((fConst1 * (fSlow119 / fSlow42)));
		float 	fSlow122 = expf((fConst1 * (fSlow119 / fSlow53)));
		float 	fSlow123 = expf((fConst1 * (fSlow119 / fSlow65)));
		float 	fSlow124 = expf((fConst1 * (fSlow119 / fSlow74)));
		float 	fSlow125 = powf(3,floorf(((0.91023922662683732f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.066666666666666666f))))) + 0.5f)));
		float 	fSlow126 = (0 - (6.9077552789821377f * fSlow125));
		float 	fSlow127 = expf((fConst1 * (fSlow126 / fSlow10)));
		float 	fSlow128 = expf((fConst1 * (fSlow126 / fSlow42)));
		float 	fSlow129 = expf((fConst1 * (fSlow126 / fSlow53)));
		float 	fSlow130 = expf((fConst1 * (fSlow126 / fSlow65)));
		float 	fSlow131 = expf((fConst1 * (fSlow126 / fSlow74)));
		float 	fSlow132 = powf(29,floorf(((0.29697420437337008f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.59999999999999998f))))) + 0.5f)));
		float 	fSlow133 = (0 - (6.9077552789821377f * fSlow132));
		float 	fSlow134 = expf((fConst1 * (fSlow133 / fSlow10)));
		float 	fSlow135 = expf((fConst1 * (fSlow133 / fSlow42)));
		float 	fSlow136 = expf((fConst1 * (fSlow133 / fSlow53)));
		float 	fSlow137 = expf((fConst1 * (fSlow133 / fSlow65)));
		float 	fSlow138 = expf((fConst1 * (fSlow133 / fSlow74)));
		float 	fSlow139 = powf(13,floorf(((0.38987124525128009f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.33333333333333331f))))) + 0.5f)));
		float 	fSlow140 = (0 - (6.9077552789821377f * fSlow139));
		float 	fSlow141 = expf((fConst1 * (fSlow140 / fSlow10)));
		float 	fSlow142 = expf((fConst1 * (fSlow140 / fSlow42)));
		float 	fSlow143 = expf((fConst1 * (fSlow140 / fSlow53)));
		float 	fSlow144 = expf((fConst1 * (fSlow140 / fSlow65)));
		float 	fSlow145 = expf((fConst1 * (fSlow140 / fSlow74)));
		float 	fSlow146 = powf(43,floorf(((0.265872585674852f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.8666666666666667f))))) + 0.5f)));
		float 	fSlow147 = (0 - (6.9077552789821377f * fSlow146));
		float 	fSlow148 = expf((fConst1 * (fSlow147 / fSlow10)));
		float 	fSlow149 = expf((fConst1 * (fSlow147 / fSlow42)));
		float 	fSlow150 = expf((fConst1 * (fSlow147 / fSlow53)));
		float 	fSlow151 = expf((fConst1 * (fSlow147 / fSlow65)));
		float 	fSlow152 = expf((fConst1 * (fSlow147 / fSlow74)));
		float 	fSlow153 = powf(7,floorf(((0.51389834236975074f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.20000000000000001f))))) + 0.5f)));
		float 	fSlow154 = (0 - (6.9077552789821377f * fSlow153));
		float 	fSlow155 = expf((fConst1 * (fSlow154 / fSlow10)));
		float 	fSlow156 = expf((fConst1 * (fSlow154 / fSlow42)));
		float 	fSlow157 = expf((fConst1 * (fSlow154 / fSlow53)));
		float 	fSlow158 = expf((fConst1 * (fSlow154 / fSlow65)));
		float 	fSlow159 = expf((fConst1 * (fSlow154 / fSlow74)));
		float 	fSlow160 = powf(37,floorf(((0.27693789340885738f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.73333333333333328f))))) + 0.5f)));
		float 	fSlow161 = (0 - (6.9077552789821377f * fSlow160));
		float 	fSlow162 = expf((fConst1 * (fSlow161 / fSlow10)));
		float 	fSlow163 = expf((fConst1 * (fSlow161 / fSlow42)));
		float 	fSlow164 = expf((fConst1 * (fSlow161 / fSlow53)));
		float 	fSlow165 = expf((fConst1 * (fSlow161 / fSlow65)));
		float 	fSlow166 = expf((fConst1 * (fSlow161 / fSlow74)));
		float 	fSlow167 = powf(19,floorf(((0.3396232718951086f * logf((fConst2 * (fSlow6 * powf(fSlow7,0.46666666666666667f))))) + 0.5f)));
		float 	fSlow168 = (0 - (6.9077552789821377f * fSlow167));
		float 	fSlow169 = expf((fConst1 * (fSlow168 / fSlow10)));
		float 	fSlow170 = expf((fConst1 * (fSlow168 / fSlow42)));
		float 	fSlow171 = expf((fConst1 * (fSlow168 / fSlow53)));
		float 	fSlow172 = expf((fConst1 * (fSlow168 / fSlow65)));
		float 	fSlow173 = expf((fConst1 * (fSlow168 / fSlow74)));
		float 	fSlow174 = powf(53,floorf(((0.25187064875169968f * logf((fConst2 * (fSlow6 * powf(fSlow7,1.0f))))) + 0.5f)));
		float 	fSlow175 = (0 - (6.9077552789821377f * fSlow174));
		float 	fSlow176 = expf((fConst1 * (fSlow175 / fSlow10)));
		float 	fSlow177 = expf((fConst1 * (fSlow175 / fSlow42)));
		float 	fSlow178 = expf((fConst1 * (fSlow175 / fSlow53)));
		float 	fSlow179 = expf((fConst1 * (fSlow175 / fSlow65)));
		float 	fSlow180 = expf((fConst1 * (fSlow175 / fSlow74)));
		int 	iSlow181 = int(min((float)8192, max((float)0, (fSlow8 + -1))));
		float 	fSlow182 = float(fbutton3);
		int 	iSlow183 = int(min((float)8192, max((float)0, (fSlow125 + -1))));
		int 	iSlow184 = int(min((float)8192, max((float)0, (fSlow97 + -1))));
		int 	iSlow185 = int(min((float)8192, max((float)0, (fSlow153 + -1))));
		int 	iSlow186 = int(min((float)8192, max((float)0, (fSlow83 + -1))));
		int 	iSlow187 = int(min((float)8192, max((float)0, (fSlow139 + -1))));
		int 	iSlow188 = int(min((float)8192, max((float)0, (fSlow111 + -1))));
		int 	iSlow189 = int(min((float)8192, max((float)0, (fSlow167 + -1))));
		int 	iSlow190 = int(min((float)8192, max((float)0, (fSlow76 + -1))));
		int 	iSlow191 = int(min((float)8192, max((float)0, (fSlow132 + -1))));
		int 	iSlow192 = int(min((float)8192, max((float)0, (fSlow104 + -1))));
		int 	iSlow193 = int(min((float)8192, max((float)0, (fSlow160 + -1))));
		int 	iSlow194 = int(min((float)8192, max((float)0, (fSlow90 + -1))));
		int 	iSlow195 = int(min((float)8192, max((float)0, (fSlow146 + -1))));
		int 	iSlow196 = int(min((float)8192, max((float)0, (fSlow118 + -1))));
		int 	iSlow197 = int(min((float)8192, max((float)0, (fSlow174 + -1))));
		//zone2b
		//zone3
		FAUSTFLOAT* input0 = input[0];
		FAUSTFLOAT* input1 = input[1];
		FAUSTFLOAT* input2 = input[2];
		FAUSTFLOAT* input3 = input[3];
		FAUSTFLOAT* output0 = output[0];
		FAUSTFLOAT* output1 = output[1];
		//LoopGraphScalar
		for (int i=0; i<count; i++) {
			iRec17[0] = ((1103515245 * iRec17[1]) + 12345);
			fRec16[0] = (((0.52218940000000003f * fRec16[3]) + ((4.6566128752457969e-10f * iRec17[0]) + (2.4949560019999999f * fRec16[1]))) - (2.0172658750000001f * fRec16[2]));
			fTempPerm0 = (fSlow1 * (((0.049922034999999997f * fRec16[0]) + (0.050612698999999997f * fRec16[2])) - ((0.095993537000000004f * fRec16[1]) + (0.0044087859999999996f * fRec16[3]))));
			fVec0[0] = fSlow2;
			iTempPerm1 = ((fSlow2 - fVec0[1]) > 0);
			fVec1[0] = fSlow3;
			iTempPerm2 = ((fSlow3 - fVec1[1]) > 0);
			fTempPerm3 = (fSlow4 * (float)input2[i]);
			fRec22[0] = ((fSlow18 * fRec22[1]) + (fSlow19 * ((fSlow13 * fRec0[1]) + (fSlow20 * fRec0[2]))));
			fRec21[0] = (fRec22[0] - (fSlow15 * ((fSlow21 * fRec21[1]) + (fSlow22 * fRec21[2]))));
			fTempPerm4 = (fSlow29 * fRec20[1]);
			fRec20[0] = ((fSlow15 * (((fSlow16 * fRec21[0]) + (fSlow23 * fRec21[1])) + (fSlow16 * fRec21[2]))) - (fSlow26 * ((fSlow27 * fRec20[2]) + fTempPerm4)));
			fTempPerm5 = (fSlow35 * fRec19[1]);
			fRec19[0] = ((fRec20[2] + (fSlow26 * (fTempPerm4 + (fSlow27 * fRec20[0])))) - (fSlow32 * ((fSlow33 * fRec19[2]) + fTempPerm5)));
			fTempPerm6 = (fSlow41 * fRec18[1]);
			fRec18[0] = ((fRec19[2] + (fSlow32 * (fTempPerm5 + (fSlow33 * fRec19[0])))) - (fSlow38 * ((fSlow39 * fRec18[2]) + fTempPerm6)));
			fRec28[0] = ((fSlow18 * fRec28[1]) + (fSlow19 * (fRec0[1] + fRec0[2])));
			fRec27[0] = (fRec28[0] - (fSlow15 * ((fSlow21 * fRec27[1]) + (fSlow22 * fRec27[2]))));
			fTempPerm7 = (fRec27[2] + (fRec27[0] + (2.0f * fRec27[1])));
			fTempPerm8 = (fSlow15 * fTempPerm7);
			fVec2[0] = fTempPerm8;
			fRec26[0] = ((fSlow47 * fRec26[1]) + (fSlow48 * ((fSlow49 * fVec2[1]) + (fSlow50 * fTempPerm7))));
			fRec25[0] = (fRec26[0] - (fSlow45 * ((fSlow29 * fRec25[1]) + (fSlow51 * fRec25[2]))));
			fTempPerm9 = (fSlow35 * fRec24[1]);
			fRec24[0] = ((fSlow45 * (((fSlow28 * fRec25[0]) + (fSlow52 * fRec25[1])) + (fSlow28 * fRec25[2]))) - (fSlow32 * (fTempPerm9 + (fSlow33 * fRec24[2]))));
			fTempPerm10 = (fSlow41 * fRec23[1]);
			fRec23[0] = ((fRec24[2] + (fSlow32 * (fTempPerm9 + (fSlow33 * fRec24[0])))) - (fSlow38 * (fTempPerm10 + (fSlow39 * fRec23[2]))));
			fRec33[0] = ((fSlow47 * fRec33[1]) + (fSlow48 * (fVec2[0] + fVec2[1])));
			fRec32[0] = (fRec33[0] - (fSlow45 * ((fSlow29 * fRec32[1]) + (fSlow51 * fRec32[2]))));
			fTempPerm11 = (fRec32[2] + (fRec32[0] + (2.0f * fRec32[1])));
			fTempPerm12 = (fSlow45 * fTempPerm11);
			fVec3[0] = fTempPerm12;
			fRec31[0] = ((fSlow58 * fRec31[1]) + (fSlow59 * ((fSlow60 * fVec3[1]) + (fSlow61 * fTempPerm11))));
			fRec30[0] = (fRec31[0] - (fSlow56 * ((fSlow35 * fRec30[1]) + (fSlow62 * fRec30[2]))));
			fTempPerm13 = (fSlow41 * fRec29[1]);
			fRec29[0] = ((fSlow56 * (((fSlow34 * fRec30[0]) + (fSlow63 * fRec30[1])) + (fSlow34 * fRec30[2]))) - (fSlow38 * (fTempPerm13 + (fSlow39 * fRec29[2]))));
			fRec37[0] = ((fSlow58 * fRec37[1]) + (fSlow59 * (fVec3[0] + fVec3[1])));
			fRec36[0] = (fRec37[0] - (fSlow56 * ((fSlow35 * fRec36[1]) + (fSlow62 * fRec36[2]))));
			fTempPerm14 = (fRec36[2] + (fRec36[0] + (2.0f * fRec36[1])));
			fTempPerm15 = (fSlow56 * fTempPerm14);
			fVec4[0] = fTempPerm15;
			fRec35[0] = ((fSlow68 * fRec35[1]) + (fSlow69 * ((fSlow70 * fVec4[1]) + (fSlow71 * fTempPerm14))));
			fRec34[0] = (fRec35[0] - (fSlow64 * ((fSlow41 * fRec34[1]) + (fSlow72 * fRec34[2]))));
			fRec39[0] = ((fSlow68 * fRec39[1]) + (fSlow69 * (fVec4[0] + fVec4[1])));
			fRec38[0] = (fRec39[0] - (fSlow64 * ((fSlow41 * fRec38[1]) + (fSlow72 * fRec38[2]))));
			fTempPerm16 = ((((fSlow11 * (fRec18[2] + (fSlow38 * (fTempPerm6 + (fSlow39 * fRec18[0]))))) + (fSlow43 * (fRec23[2] + (fSlow38 * (fTempPerm10 + (fSlow39 * fRec23[0])))))) + (fSlow54 * (fRec29[2] + (fSlow38 * (fTempPerm13 + (fSlow39 * fRec29[0])))))) + (fSlow64 * ((fSlow66 * (((fSlow40 * fRec34[0]) + (fSlow73 * fRec34[1])) + (fSlow40 * fRec34[2]))) + (fSlow75 * (fRec38[2] + (fRec38[0] + (2.0f * fRec38[1])))))));
			fRec44[0] = ((fSlow18 * fRec44[1]) + (fSlow19 * ((fSlow13 * fRec8[1]) + (fSlow20 * fRec8[2]))));
			fRec43[0] = (fRec44[0] - (fSlow15 * ((fSlow21 * fRec43[1]) + (fSlow22 * fRec43[2]))));
			fTempPerm17 = (fSlow29 * fRec42[1]);
			fRec42[0] = ((fSlow15 * (((fSlow16 * fRec43[0]) + (fSlow23 * fRec43[1])) + (fSlow16 * fRec43[2]))) - (fSlow26 * (fTempPerm17 + (fSlow27 * fRec42[2]))));
			fTempPerm18 = (fSlow35 * fRec41[1]);
			fRec41[0] = ((fRec42[2] + (fSlow26 * (fTempPerm17 + (fSlow27 * fRec42[0])))) - (fSlow32 * (fTempPerm18 + (fSlow33 * fRec41[2]))));
			fTempPerm19 = (fSlow41 * fRec40[1]);
			fRec40[0] = ((fRec41[2] + (fSlow32 * (fTempPerm18 + (fSlow33 * fRec41[0])))) - (fSlow38 * (fTempPerm19 + (fSlow39 * fRec40[2]))));
			fRec50[0] = ((fSlow18 * fRec50[1]) + (fSlow19 * (fRec8[1] + fRec8[2])));
			fRec49[0] = (fRec50[0] - (fSlow15 * ((fSlow21 * fRec49[1]) + (fSlow22 * fRec49[2]))));
			fTempPerm20 = (fRec49[2] + (fRec49[0] + (2.0f * fRec49[1])));
			fTempPerm21 = (fSlow15 * fTempPerm20);
			fVec5[0] = fTempPerm21;
			fRec48[0] = ((fSlow47 * fRec48[1]) + (fSlow48 * ((fSlow49 * fVec5[1]) + (fSlow50 * fTempPerm20))));
			fRec47[0] = (fRec48[0] - (fSlow45 * ((fSlow29 * fRec47[1]) + (fSlow51 * fRec47[2]))));
			fTempPerm22 = (fSlow35 * fRec46[1]);
			fRec46[0] = ((fSlow45 * (((fSlow28 * fRec47[0]) + (fSlow52 * fRec47[1])) + (fSlow28 * fRec47[2]))) - (fSlow32 * (fTempPerm22 + (fSlow33 * fRec46[2]))));
			fTempPerm23 = (fSlow41 * fRec45[1]);
			fRec45[0] = ((fRec46[2] + (fSlow32 * (fTempPerm22 + (fSlow33 * fRec46[0])))) - (fSlow38 * (fTempPerm23 + (fSlow39 * fRec45[2]))));
			fRec55[0] = ((fSlow47 * fRec55[1]) + (fSlow48 * (fVec5[1] + fVec5[0])));
			fRec54[0] = (fRec55[0] - (fSlow45 * ((fSlow29 * fRec54[1]) + (fSlow51 * fRec54[2]))));
			fTempPerm24 = (fRec54[2] + (fRec54[0] + (2.0f * fRec54[1])));
			fTempPerm25 = (fSlow45 * fTempPerm24);
			fVec6[0] = fTempPerm25;
			fRec53[0] = ((fSlow58 * fRec53[1]) + (fSlow59 * ((fSlow60 * fVec6[1]) + (fSlow61 * fTempPerm24))));
			fRec52[0] = (fRec53[0] - (fSlow56 * ((fSlow35 * fRec52[1]) + (fSlow62 * fRec52[2]))));
			fTempPerm26 = (fSlow41 * fRec51[1]);
			fRec51[0] = ((fSlow56 * (((fSlow34 * fRec52[0]) + (fSlow63 * fRec52[1])) + (fSlow34 * fRec52[2]))) - (fSlow38 * (fTempPerm26 + (fSlow39 * fRec51[2]))));
			fRec59[0] = ((fSlow58 * fRec59[1]) + (fSlow59 * (fVec6[1] + fVec6[0])));
			fRec58[0] = (fRec59[0] - (fSlow56 * ((fSlow35 * fRec58[1]) + (fSlow62 * fRec58[2]))));
			fTempPerm27 = (fRec58[2] + (fRec58[0] + (2.0f * fRec58[1])));
			fTempPerm28 = (fSlow56 * fTempPerm27);
			fVec7[0] = fTempPerm28;
			fRec57[0] = ((fSlow68 * fRec57[1]) + (fSlow69 * ((fSlow70 * fVec7[1]) + (fSlow71 * fTempPerm27))));
			fRec56[0] = (fRec57[0] - (fSlow64 * ((fSlow41 * fRec56[1]) + (fSlow72 * fRec56[2]))));
			fRec61[0] = ((fSlow68 * fRec61[1]) + (fSlow69 * (fVec7[1] + fVec7[0])));
			fRec60[0] = (fRec61[0] - (fSlow64 * ((fSlow41 * fRec60[1]) + (fSlow72 * fRec60[2]))));
			fTempPerm29 = ((((fSlow78 * (fRec40[2] + (fSlow38 * (fTempPerm19 + (fSlow39 * fRec40[0]))))) + (fSlow79 * (fRec45[2] + (fSlow38 * (fTempPerm23 + (fSlow39 * fRec45[0])))))) + (fSlow80 * (fRec51[2] + (fSlow38 * (fTempPerm26 + (fSlow39 * fRec51[0])))))) + (fSlow64 * ((fSlow81 * (((fSlow40 * fRec56[0]) + (fSlow73 * fRec56[1])) + (fSlow40 * fRec56[2]))) + (fSlow82 * (fRec60[2] + (fRec60[0] + (2.0f * fRec60[1])))))));
			fTempPerm30 = (fTempPerm16 + fTempPerm29);
			fRec66[0] = ((fSlow18 * fRec66[1]) + (fSlow19 * ((fSlow13 * fRec4[1]) + (fSlow20 * fRec4[2]))));
			fRec65[0] = (fRec66[0] - (fSlow15 * ((fSlow21 * fRec65[1]) + (fSlow22 * fRec65[2]))));
			fTempPerm31 = (fSlow29 * fRec64[1]);
			fRec64[0] = ((fSlow15 * (((fSlow16 * fRec65[0]) + (fSlow23 * fRec65[1])) + (fSlow16 * fRec65[2]))) - (fSlow26 * (fTempPerm31 + (fSlow27 * fRec64[2]))));
			fTempPerm32 = (fSlow35 * fRec63[1]);
			fRec63[0] = ((fRec64[2] + (fSlow26 * (fTempPerm31 + (fSlow27 * fRec64[0])))) - (fSlow32 * (fTempPerm32 + (fSlow33 * fRec63[2]))));
			fTempPerm33 = (fSlow41 * fRec62[1]);
			fRec62[0] = ((fRec63[2] + (fSlow32 * (fTempPerm32 + (fSlow33 * fRec63[0])))) - (fSlow38 * (fTempPerm33 + (fSlow39 * fRec62[2]))));
			fRec72[0] = ((fSlow18 * fRec72[1]) + (fSlow19 * (fRec4[1] + fRec4[2])));
			fRec71[0] = (fRec72[0] - (fSlow15 * ((fSlow21 * fRec71[1]) + (fSlow22 * fRec71[2]))));
			fTempPerm34 = (fRec71[2] + (fRec71[0] + (2.0f * fRec71[1])));
			fTempPerm35 = (fSlow15 * fTempPerm34);
			fVec8[0] = fTempPerm35;
			fRec70[0] = ((fSlow47 * fRec70[1]) + (fSlow48 * ((fSlow49 * fVec8[1]) + (fSlow50 * fTempPerm34))));
			fRec69[0] = (fRec70[0] - (fSlow45 * ((fSlow29 * fRec69[1]) + (fSlow51 * fRec69[2]))));
			fTempPerm36 = (fSlow35 * fRec68[1]);
			fRec68[0] = ((fSlow45 * (((fSlow28 * fRec69[0]) + (fSlow52 * fRec69[1])) + (fSlow28 * fRec69[2]))) - (fSlow32 * (fTempPerm36 + (fSlow33 * fRec68[2]))));
			fTempPerm37 = (fSlow41 * fRec67[1]);
			fRec67[0] = ((fRec68[2] + (fSlow32 * (fTempPerm36 + (fSlow33 * fRec68[0])))) - (fSlow38 * (fTempPerm37 + (fSlow39 * fRec67[2]))));
			fRec77[0] = ((fSlow47 * fRec77[1]) + (fSlow48 * (fVec8[1] + fVec8[0])));
			fRec76[0] = (fRec77[0] - (fSlow45 * ((fSlow29 * fRec76[1]) + (fSlow51 * fRec76[2]))));
			fTempPerm38 = (fRec76[2] + (fRec76[0] + (2.0f * fRec76[1])));
			fTempPerm39 = (fSlow45 * fTempPerm38);
			fVec9[0] = fTempPerm39;
			fRec75[0] = ((fSlow58 * fRec75[1]) + (fSlow59 * ((fSlow60 * fVec9[1]) + (fSlow61 * fTempPerm38))));
			fRec74[0] = (fRec75[0] - (fSlow56 * ((fSlow35 * fRec74[1]) + (fSlow62 * fRec74[2]))));
			fTempPerm40 = (fSlow41 * fRec73[1]);
			fRec73[0] = ((fSlow56 * (((fSlow34 * fRec74[0]) + (fSlow63 * fRec74[1])) + (fSlow34 * fRec74[2]))) - (fSlow38 * (fTempPerm40 + (fSlow39 * fRec73[2]))));
			fRec81[0] = ((fSlow58 * fRec81[1]) + (fSlow59 * (fVec9[1] + fVec9[0])));
			fRec80[0] = (fRec81[0] - (fSlow56 * ((fSlow35 * fRec80[1]) + (fSlow62 * fRec80[2]))));
			fTempPerm41 = (fRec80[2] + (fRec80[0] + (2.0f * fRec80[1])));
			fTempPerm42 = (fSlow56 * fTempPerm41);
			fVec10[0] = fTempPerm42;
			fRec79[0] = ((fSlow68 * fRec79[1]) + (fSlow69 * ((fSlow70 * fVec10[1]) + (fSlow71 * fTempPerm41))));
			fRec78[0] = (fRec79[0] - (fSlow64 * ((fSlow41 * fRec78[1]) + (fSlow72 * fRec78[2]))));
			fRec83[0] = ((fSlow68 * fRec83[1]) + (fSlow69 * (fVec10[1] + fVec10[0])));
			fRec82[0] = (fRec83[0] - (fSlow64 * ((fSlow41 * fRec82[1]) + (fSlow72 * fRec82[2]))));
			fTempPerm43 = ((((fSlow85 * (fRec62[2] + (fSlow38 * (fTempPerm33 + (fSlow39 * fRec62[0]))))) + (fSlow86 * (fRec67[2] + (fSlow38 * (fTempPerm37 + (fSlow39 * fRec67[0])))))) + (fSlow87 * (fRec73[2] + (fSlow38 * (fTempPerm40 + (fSlow39 * fRec73[0])))))) + (fSlow64 * ((fSlow88 * (((fSlow40 * fRec78[0]) + (fSlow73 * fRec78[1])) + (fSlow40 * fRec78[2]))) + (fSlow89 * (fRec82[2] + (fRec82[0] + (2.0f * fRec82[1])))))));
			fRec88[0] = ((fSlow18 * fRec88[1]) + (fSlow19 * ((fSlow13 * fRec12[1]) + (fSlow20 * fRec12[2]))));
			fRec87[0] = (fRec88[0] - (fSlow15 * ((fSlow21 * fRec87[1]) + (fSlow22 * fRec87[2]))));
			fTempPerm44 = (fSlow29 * fRec86[1]);
			fRec86[0] = ((fSlow15 * (((fSlow16 * fRec87[0]) + (fSlow23 * fRec87[1])) + (fSlow16 * fRec87[2]))) - (fSlow26 * (fTempPerm44 + (fSlow27 * fRec86[2]))));
			fTempPerm45 = (fSlow35 * fRec85[1]);
			fRec85[0] = ((fRec86[2] + (fSlow26 * (fTempPerm44 + (fSlow27 * fRec86[0])))) - (fSlow32 * (fTempPerm45 + (fSlow33 * fRec85[2]))));
			fTempPerm46 = (fSlow41 * fRec84[1]);
			fRec84[0] = ((fRec85[2] + (fSlow32 * (fTempPerm45 + (fSlow33 * fRec85[0])))) - (fSlow38 * (fTempPerm46 + (fSlow39 * fRec84[2]))));
			fRec94[0] = ((fSlow18 * fRec94[1]) + (fSlow19 * (fRec12[1] + fRec12[2])));
			fRec93[0] = (fRec94[0] - (fSlow15 * ((fSlow21 * fRec93[1]) + (fSlow22 * fRec93[2]))));
			fTempPerm47 = (fRec93[2] + (fRec93[0] + (2.0f * fRec93[1])));
			fTempPerm48 = (fSlow15 * fTempPerm47);
			fVec11[0] = fTempPerm48;
			fRec92[0] = ((fSlow47 * fRec92[1]) + (fSlow48 * ((fSlow49 * fVec11[1]) + (fSlow50 * fTempPerm47))));
			fRec91[0] = (fRec92[0] - (fSlow45 * ((fSlow29 * fRec91[1]) + (fSlow51 * fRec91[2]))));
			fTempPerm49 = (fSlow35 * fRec90[1]);
			fRec90[0] = ((fSlow45 * (((fSlow28 * fRec91[0]) + (fSlow52 * fRec91[1])) + (fSlow28 * fRec91[2]))) - (fSlow32 * (fTempPerm49 + (fSlow33 * fRec90[2]))));
			fTempPerm50 = (fSlow41 * fRec89[1]);
			fRec89[0] = ((fRec90[2] + (fSlow32 * (fTempPerm49 + (fSlow33 * fRec90[0])))) - (fSlow38 * (fTempPerm50 + (fSlow39 * fRec89[2]))));
			fRec99[0] = ((fSlow47 * fRec99[1]) + (fSlow48 * (fVec11[1] + fVec11[0])));
			fRec98[0] = (fRec99[0] - (fSlow45 * ((fSlow29 * fRec98[1]) + (fSlow51 * fRec98[2]))));
			fTempPerm51 = (fRec98[2] + (fRec98[0] + (2.0f * fRec98[1])));
			fTempPerm52 = (fSlow45 * fTempPerm51);
			fVec12[0] = fTempPerm52;
			fRec97[0] = ((fSlow58 * fRec97[1]) + (fSlow59 * ((fSlow60 * fVec12[1]) + (fSlow61 * fTempPerm51))));
			fRec96[0] = (fRec97[0] - (fSlow56 * ((fSlow35 * fRec96[1]) + (fSlow62 * fRec96[2]))));
			fTempPerm53 = (fSlow41 * fRec95[1]);
			fRec95[0] = ((fSlow56 * (((fSlow34 * fRec96[0]) + (fSlow63 * fRec96[1])) + (fSlow34 * fRec96[2]))) - (fSlow38 * (fTempPerm53 + (fSlow39 * fRec95[2]))));
			fRec103[0] = ((fSlow58 * fRec103[1]) + (fSlow59 * (fVec12[1] + fVec12[0])));
			fRec102[0] = (fRec103[0] - (fSlow56 * ((fSlow35 * fRec102[1]) + (fSlow62 * fRec102[2]))));
			fTempPerm54 = (fRec102[2] + (fRec102[0] + (2.0f * fRec102[1])));
			fTempPerm55 = (fSlow56 * fTempPerm54);
			fVec13[0] = fTempPerm55;
			fRec101[0] = ((fSlow68 * fRec101[1]) + (fSlow69 * ((fSlow70 * fVec13[1]) + (fSlow71 * fTempPerm54))));
			fRec100[0] = (fRec101[0] - (fSlow64 * ((fSlow41 * fRec100[1]) + (fSlow72 * fRec100[2]))));
			fRec105[0] = ((fSlow68 * fRec105[1]) + (fSlow69 * (fVec13[1] + fVec13[0])));
			fRec104[0] = (fRec105[0] - (fSlow64 * ((fSlow41 * fRec104[1]) + (fSlow72 * fRec104[2]))));
			fTempPerm56 = ((((fSlow92 * (fRec84[2] + (fSlow38 * (fTempPerm46 + (fSlow39 * fRec84[0]))))) + (fSlow93 * (fRec89[2] + (fSlow38 * (fTempPerm50 + (fSlow39 * fRec89[0])))))) + (fSlow94 * (fRec95[2] + (fSlow38 * (fTempPerm53 + (fSlow39 * fRec95[0])))))) + (fSlow64 * ((fSlow95 * (((fSlow40 * fRec100[0]) + (fSlow73 * fRec100[1])) + (fSlow40 * fRec100[2]))) + (fSlow96 * (fRec104[2] + (fRec104[0] + (2.0f * fRec104[1])))))));
			fTempPerm57 = (fTempPerm43 + fTempPerm56);
			fTempPerm58 = (fTempPerm30 + fTempPerm57);
			fRec110[0] = ((fSlow18 * fRec110[1]) + (fSlow19 * ((fSlow13 * fRec2[1]) + (fSlow20 * fRec2[2]))));
			fRec109[0] = (fRec110[0] - (fSlow15 * ((fSlow21 * fRec109[1]) + (fSlow22 * fRec109[2]))));
			fTempPerm59 = (fSlow29 * fRec108[1]);
			fRec108[0] = ((fSlow15 * (((fSlow16 * fRec109[0]) + (fSlow23 * fRec109[1])) + (fSlow16 * fRec109[2]))) - (fSlow26 * (fTempPerm59 + (fSlow27 * fRec108[2]))));
			fTempPerm60 = (fSlow35 * fRec107[1]);
			fRec107[0] = ((fRec108[2] + (fSlow26 * (fTempPerm59 + (fSlow27 * fRec108[0])))) - (fSlow32 * (fTempPerm60 + (fSlow33 * fRec107[2]))));
			fTempPerm61 = (fSlow41 * fRec106[1]);
			fRec106[0] = ((fRec107[2] + (fSlow32 * (fTempPerm60 + (fSlow33 * fRec107[0])))) - (fSlow38 * (fTempPerm61 + (fSlow39 * fRec106[2]))));
			fRec116[0] = ((fSlow18 * fRec116[1]) + (fSlow19 * (fRec2[1] + fRec2[2])));
			fRec115[0] = (fRec116[0] - (fSlow15 * ((fSlow21 * fRec115[1]) + (fSlow22 * fRec115[2]))));
			fTempPerm62 = (fRec115[2] + (fRec115[0] + (2.0f * fRec115[1])));
			fTempPerm63 = (fSlow15 * fTempPerm62);
			fVec14[0] = fTempPerm63;
			fRec114[0] = ((fSlow47 * fRec114[1]) + (fSlow48 * ((fSlow49 * fVec14[1]) + (fSlow50 * fTempPerm62))));
			fRec113[0] = (fRec114[0] - (fSlow45 * ((fSlow29 * fRec113[1]) + (fSlow51 * fRec113[2]))));
			fTempPerm64 = (fSlow35 * fRec112[1]);
			fRec112[0] = ((fSlow45 * (((fSlow28 * fRec113[0]) + (fSlow52 * fRec113[1])) + (fSlow28 * fRec113[2]))) - (fSlow32 * (fTempPerm64 + (fSlow33 * fRec112[2]))));
			fTempPerm65 = (fSlow41 * fRec111[1]);
			fRec111[0] = ((fRec112[2] + (fSlow32 * (fTempPerm64 + (fSlow33 * fRec112[0])))) - (fSlow38 * (fTempPerm65 + (fSlow39 * fRec111[2]))));
			fRec121[0] = ((fSlow47 * fRec121[1]) + (fSlow48 * (fVec14[1] + fVec14[0])));
			fRec120[0] = (fRec121[0] - (fSlow45 * ((fSlow29 * fRec120[1]) + (fSlow51 * fRec120[2]))));
			fTempPerm66 = (fRec120[2] + (fRec120[0] + (2.0f * fRec120[1])));
			fTempPerm67 = (fSlow45 * fTempPerm66);
			fVec15[0] = fTempPerm67;
			fRec119[0] = ((fSlow58 * fRec119[1]) + (fSlow59 * ((fSlow60 * fVec15[1]) + (fSlow61 * fTempPerm66))));
			fRec118[0] = (fRec119[0] - (fSlow56 * ((fSlow35 * fRec118[1]) + (fSlow62 * fRec118[2]))));
			fTempPerm68 = (fSlow41 * fRec117[1]);
			fRec117[0] = ((fSlow56 * (((fSlow34 * fRec118[0]) + (fSlow63 * fRec118[1])) + (fSlow34 * fRec118[2]))) - (fSlow38 * (fTempPerm68 + (fSlow39 * fRec117[2]))));
			fRec125[0] = ((fSlow58 * fRec125[1]) + (fSlow59 * (fVec15[1] + fVec15[0])));
			fRec124[0] = (fRec125[0] - (fSlow56 * ((fSlow35 * fRec124[1]) + (fSlow62 * fRec124[2]))));
			fTempPerm69 = (fRec124[2] + (fRec124[0] + (2.0f * fRec124[1])));
			fTempPerm70 = (fSlow56 * fTempPerm69);
			fVec16[0] = fTempPerm70;
			fRec123[0] = ((fSlow68 * fRec123[1]) + (fSlow69 * ((fSlow70 * fVec16[1]) + (fSlow71 * fTempPerm69))));
			fRec122[0] = (fRec123[0] - (fSlow64 * ((fSlow41 * fRec122[1]) + (fSlow72 * fRec122[2]))));
			fRec127[0] = ((fSlow68 * fRec127[1]) + (fSlow69 * (fVec16[1] + fVec16[0])));
			fRec126[0] = (fRec127[0] - (fSlow64 * ((fSlow41 * fRec126[1]) + (fSlow72 * fRec126[2]))));
			fTempPerm71 = ((((fSlow99 * (fRec106[2] + (fSlow38 * (fTempPerm61 + (fSlow39 * fRec106[0]))))) + (fSlow100 * (fRec111[2] + (fSlow38 * (fTempPerm65 + (fSlow39 * fRec111[0])))))) + (fSlow101 * (fRec117[2] + (fSlow38 * (fTempPerm68 + (fSlow39 * fRec117[0])))))) + (fSlow64 * ((fSlow102 * (((fSlow40 * fRec122[0]) + (fSlow73 * fRec122[1])) + (fSlow40 * fRec122[2]))) + (fSlow103 * (fRec126[2] + (fRec126[0] + (2.0f * fRec126[1])))))));
			fRec132[0] = ((fSlow18 * fRec132[1]) + (fSlow19 * ((fSlow13 * fRec10[1]) + (fSlow20 * fRec10[2]))));
			fRec131[0] = (fRec132[0] - (fSlow15 * ((fSlow21 * fRec131[1]) + (fSlow22 * fRec131[2]))));
			fTempPerm72 = (fSlow29 * fRec130[1]);
			fRec130[0] = ((fSlow15 * (((fSlow16 * fRec131[0]) + (fSlow23 * fRec131[1])) + (fSlow16 * fRec131[2]))) - (fSlow26 * (fTempPerm72 + (fSlow27 * fRec130[2]))));
			fTempPerm73 = (fSlow35 * fRec129[1]);
			fRec129[0] = ((fRec130[2] + (fSlow26 * (fTempPerm72 + (fSlow27 * fRec130[0])))) - (fSlow32 * (fTempPerm73 + (fSlow33 * fRec129[2]))));
			fTempPerm74 = (fSlow41 * fRec128[1]);
			fRec128[0] = ((fRec129[2] + (fSlow32 * (fTempPerm73 + (fSlow33 * fRec129[0])))) - (fSlow38 * (fTempPerm74 + (fSlow39 * fRec128[2]))));
			fRec138[0] = ((fSlow18 * fRec138[1]) + (fSlow19 * (fRec10[1] + fRec10[2])));
			fRec137[0] = (fRec138[0] - (fSlow15 * ((fSlow21 * fRec137[1]) + (fSlow22 * fRec137[2]))));
			fTempPerm75 = (fRec137[2] + (fRec137[0] + (2.0f * fRec137[1])));
			fTempPerm76 = (fSlow15 * fTempPerm75);
			fVec17[0] = fTempPerm76;
			fRec136[0] = ((fSlow47 * fRec136[1]) + (fSlow48 * ((fSlow49 * fVec17[1]) + (fSlow50 * fTempPerm75))));
			fRec135[0] = (fRec136[0] - (fSlow45 * ((fSlow29 * fRec135[1]) + (fSlow51 * fRec135[2]))));
			fTempPerm77 = (fSlow35 * fRec134[1]);
			fRec134[0] = ((fSlow45 * (((fSlow28 * fRec135[0]) + (fSlow52 * fRec135[1])) + (fSlow28 * fRec135[2]))) - (fSlow32 * (fTempPerm77 + (fSlow33 * fRec134[2]))));
			fTempPerm78 = (fSlow41 * fRec133[1]);
			fRec133[0] = ((fRec134[2] + (fSlow32 * (fTempPerm77 + (fSlow33 * fRec134[0])))) - (fSlow38 * (fTempPerm78 + (fSlow39 * fRec133[2]))));
			fRec143[0] = ((fSlow47 * fRec143[1]) + (fSlow48 * (fVec17[1] + fVec17[0])));
			fRec142[0] = (fRec143[0] - (fSlow45 * ((fSlow29 * fRec142[1]) + (fSlow51 * fRec142[2]))));
			fTempPerm79 = (fRec142[2] + (fRec142[0] + (2.0f * fRec142[1])));
			fTempPerm80 = (fSlow45 * fTempPerm79);
			fVec18[0] = fTempPerm80;
			fRec141[0] = ((fSlow58 * fRec141[1]) + (fSlow59 * ((fSlow60 * fVec18[1]) + (fSlow61 * fTempPerm79))));
			fRec140[0] = (fRec141[0] - (fSlow56 * ((fSlow35 * fRec140[1]) + (fSlow62 * fRec140[2]))));
			fTempPerm81 = (fSlow41 * fRec139[1]);
			fRec139[0] = ((fSlow56 * (((fSlow34 * fRec140[0]) + (fSlow63 * fRec140[1])) + (fSlow34 * fRec140[2]))) - (fSlow38 * (fTempPerm81 + (fSlow39 * fRec139[2]))));
			fRec147[0] = ((fSlow58 * fRec147[1]) + (fSlow59 * (fVec18[1] + fVec18[0])));
			fRec146[0] = (fRec147[0] - (fSlow56 * ((fSlow35 * fRec146[1]) + (fSlow62 * fRec146[2]))));
			fTempPerm82 = (fRec146[2] + (fRec146[0] + (2.0f * fRec146[1])));
			fTempPerm83 = (fSlow56 * fTempPerm82);
			fVec19[0] = fTempPerm83;
			fRec145[0] = ((fSlow68 * fRec145[1]) + (fSlow69 * ((fSlow70 * fVec19[1]) + (fSlow71 * fTempPerm82))));
			fRec144[0] = (fRec145[0] - (fSlow64 * ((fSlow41 * fRec144[1]) + (fSlow72 * fRec144[2]))));
			fRec149[0] = ((fSlow68 * fRec149[1]) + (fSlow69 * (fVec19[1] + fVec19[0])));
			fRec148[0] = (fRec149[0] - (fSlow64 * ((fSlow41 * fRec148[1]) + (fSlow72 * fRec148[2]))));
			fTempPerm84 = ((((fSlow106 * (fRec128[2] + (fSlow38 * (fTempPerm74 + (fSlow39 * fRec128[0]))))) + (fSlow107 * (fRec133[2] + (fSlow38 * (fTempPerm78 + (fSlow39 * fRec133[0])))))) + (fSlow108 * (fRec139[2] + (fSlow38 * (fTempPerm81 + (fSlow39 * fRec139[0])))))) + (fSlow64 * ((fSlow109 * (((fSlow40 * fRec144[0]) + (fSlow73 * fRec144[1])) + (fSlow40 * fRec144[2]))) + (fSlow110 * (fRec148[2] + (fRec148[0] + (2.0f * fRec148[1])))))));
			fTempPerm85 = (fTempPerm71 + fTempPerm84);
			fRec154[0] = ((fSlow18 * fRec154[1]) + (fSlow19 * ((fSlow13 * fRec6[1]) + (fSlow20 * fRec6[2]))));
			fRec153[0] = (fRec154[0] - (fSlow15 * ((fSlow21 * fRec153[1]) + (fSlow22 * fRec153[2]))));
			fTempPerm86 = (fSlow29 * fRec152[1]);
			fRec152[0] = ((fSlow15 * (((fSlow16 * fRec153[0]) + (fSlow23 * fRec153[1])) + (fSlow16 * fRec153[2]))) - (fSlow26 * (fTempPerm86 + (fSlow27 * fRec152[2]))));
			fTempPerm87 = (fSlow35 * fRec151[1]);
			fRec151[0] = ((fRec152[2] + (fSlow26 * (fTempPerm86 + (fSlow27 * fRec152[0])))) - (fSlow32 * (fTempPerm87 + (fSlow33 * fRec151[2]))));
			fTempPerm88 = (fSlow41 * fRec150[1]);
			fRec150[0] = ((fRec151[2] + (fSlow32 * (fTempPerm87 + (fSlow33 * fRec151[0])))) - (fSlow38 * (fTempPerm88 + (fSlow39 * fRec150[2]))));
			fRec160[0] = ((fSlow18 * fRec160[1]) + (fSlow19 * (fRec6[1] + fRec6[2])));
			fRec159[0] = (fRec160[0] - (fSlow15 * ((fSlow21 * fRec159[1]) + (fSlow22 * fRec159[2]))));
			fTempPerm89 = (fRec159[2] + (fRec159[0] + (2.0f * fRec159[1])));
			fTempPerm90 = (fSlow15 * fTempPerm89);
			fVec20[0] = fTempPerm90;
			fRec158[0] = ((fSlow47 * fRec158[1]) + (fSlow48 * ((fSlow49 * fVec20[1]) + (fSlow50 * fTempPerm89))));
			fRec157[0] = (fRec158[0] - (fSlow45 * ((fSlow29 * fRec157[1]) + (fSlow51 * fRec157[2]))));
			fTempPerm91 = (fSlow35 * fRec156[1]);
			fRec156[0] = ((fSlow45 * (((fSlow28 * fRec157[0]) + (fSlow52 * fRec157[1])) + (fSlow28 * fRec157[2]))) - (fSlow32 * (fTempPerm91 + (fSlow33 * fRec156[2]))));
			fTempPerm92 = (fSlow41 * fRec155[1]);
			fRec155[0] = ((fRec156[2] + (fSlow32 * (fTempPerm91 + (fSlow33 * fRec156[0])))) - (fSlow38 * (fTempPerm92 + (fSlow39 * fRec155[2]))));
			fRec165[0] = ((fSlow47 * fRec165[1]) + (fSlow48 * (fVec20[1] + fVec20[0])));
			fRec164[0] = (fRec165[0] - (fSlow45 * ((fSlow29 * fRec164[1]) + (fSlow51 * fRec164[2]))));
			fTempPerm93 = (fRec164[2] + (fRec164[0] + (2.0f * fRec164[1])));
			fTempPerm94 = (fSlow45 * fTempPerm93);
			fVec21[0] = fTempPerm94;
			fRec163[0] = ((fSlow58 * fRec163[1]) + (fSlow59 * ((fSlow60 * fVec21[1]) + (fSlow61 * fTempPerm93))));
			fRec162[0] = (fRec163[0] - (fSlow56 * ((fSlow35 * fRec162[1]) + (fSlow62 * fRec162[2]))));
			fTempPerm95 = (fSlow41 * fRec161[1]);
			fRec161[0] = ((fSlow56 * (((fSlow34 * fRec162[0]) + (fSlow63 * fRec162[1])) + (fSlow34 * fRec162[2]))) - (fSlow38 * (fTempPerm95 + (fSlow39 * fRec161[2]))));
			fRec169[0] = ((fSlow58 * fRec169[1]) + (fSlow59 * (fVec21[1] + fVec21[0])));
			fRec168[0] = (fRec169[0] - (fSlow56 * ((fSlow35 * fRec168[1]) + (fSlow62 * fRec168[2]))));
			fTempPerm96 = (fRec168[2] + (fRec168[0] + (2.0f * fRec168[1])));
			fTempPerm97 = (fSlow56 * fTempPerm96);
			fVec22[0] = fTempPerm97;
			fRec167[0] = ((fSlow68 * fRec167[1]) + (fSlow69 * ((fSlow70 * fVec22[1]) + (fSlow71 * fTempPerm96))));
			fRec166[0] = (fRec167[0] - (fSlow64 * ((fSlow41 * fRec166[1]) + (fSlow72 * fRec166[2]))));
			fRec171[0] = ((fSlow68 * fRec171[1]) + (fSlow69 * (fVec22[1] + fVec22[0])));
			fRec170[0] = (fRec171[0] - (fSlow64 * ((fSlow41 * fRec170[1]) + (fSlow72 * fRec170[2]))));
			fTempPerm98 = ((((fSlow113 * (fRec150[2] + (fSlow38 * (fTempPerm88 + (fSlow39 * fRec150[0]))))) + (fSlow114 * (fRec155[2] + (fSlow38 * (fTempPerm92 + (fSlow39 * fRec155[0])))))) + (fSlow115 * (fRec161[2] + (fSlow38 * (fTempPerm95 + (fSlow39 * fRec161[0])))))) + (fSlow64 * ((fSlow116 * (((fSlow40 * fRec166[0]) + (fSlow73 * fRec166[1])) + (fSlow40 * fRec166[2]))) + (fSlow117 * (fRec170[2] + (fRec170[0] + (2.0f * fRec170[1])))))));
			fRec176[0] = ((fSlow18 * fRec176[1]) + (fSlow19 * ((fSlow13 * fRec14[1]) + (fSlow20 * fRec14[2]))));
			fRec175[0] = (fRec176[0] - (fSlow15 * ((fSlow21 * fRec175[1]) + (fSlow22 * fRec175[2]))));
			fTempPerm99 = (fSlow29 * fRec174[1]);
			fRec174[0] = ((fSlow15 * (((fSlow16 * fRec175[0]) + (fSlow23 * fRec175[1])) + (fSlow16 * fRec175[2]))) - (fSlow26 * (fTempPerm99 + (fSlow27 * fRec174[2]))));
			fTempPerm100 = (fSlow35 * fRec173[1]);
			fRec173[0] = ((fRec174[2] + (fSlow26 * (fTempPerm99 + (fSlow27 * fRec174[0])))) - (fSlow32 * (fTempPerm100 + (fSlow33 * fRec173[2]))));
			fTempPerm101 = (fSlow41 * fRec172[1]);
			fRec172[0] = ((fRec173[2] + (fSlow32 * (fTempPerm100 + (fSlow33 * fRec173[0])))) - (fSlow38 * (fTempPerm101 + (fSlow39 * fRec172[2]))));
			fRec182[0] = ((fSlow18 * fRec182[1]) + (fSlow19 * (fRec14[1] + fRec14[2])));
			fRec181[0] = (fRec182[0] - (fSlow15 * ((fSlow21 * fRec181[1]) + (fSlow22 * fRec181[2]))));
			fTempPerm102 = (fRec181[2] + (fRec181[0] + (2.0f * fRec181[1])));
			fTempPerm103 = (fSlow15 * fTempPerm102);
			fVec23[0] = fTempPerm103;
			fRec180[0] = ((fSlow47 * fRec180[1]) + (fSlow48 * ((fSlow49 * fVec23[1]) + (fSlow50 * fTempPerm102))));
			fRec179[0] = (fRec180[0] - (fSlow45 * ((fSlow29 * fRec179[1]) + (fSlow51 * fRec179[2]))));
			fTempPerm104 = (fSlow35 * fRec178[1]);
			fRec178[0] = ((fSlow45 * (((fSlow28 * fRec179[0]) + (fSlow52 * fRec179[1])) + (fSlow28 * fRec179[2]))) - (fSlow32 * (fTempPerm104 + (fSlow33 * fRec178[2]))));
			fTempPerm105 = (fSlow41 * fRec177[1]);
			fRec177[0] = ((fRec178[2] + (fSlow32 * (fTempPerm104 + (fSlow33 * fRec178[0])))) - (fSlow38 * (fTempPerm105 + (fSlow39 * fRec177[2]))));
			fRec187[0] = ((fSlow47 * fRec187[1]) + (fSlow48 * (fVec23[1] + fVec23[0])));
			fRec186[0] = (fRec187[0] - (fSlow45 * ((fSlow29 * fRec186[1]) + (fSlow51 * fRec186[2]))));
			fTempPerm106 = (fRec186[2] + (fRec186[0] + (2.0f * fRec186[1])));
			fTempPerm107 = (fSlow45 * fTempPerm106);
			fVec24[0] = fTempPerm107;
			fRec185[0] = ((fSlow58 * fRec185[1]) + (fSlow59 * ((fSlow60 * fVec24[1]) + (fSlow61 * fTempPerm106))));
			fRec184[0] = (fRec185[0] - (fSlow56 * ((fSlow35 * fRec184[1]) + (fSlow62 * fRec184[2]))));
			fTempPerm108 = (fSlow41 * fRec183[1]);
			fRec183[0] = ((fSlow56 * (((fSlow34 * fRec184[0]) + (fSlow63 * fRec184[1])) + (fSlow34 * fRec184[2]))) - (fSlow38 * (fTempPerm108 + (fSlow39 * fRec183[2]))));
			fRec191[0] = ((fSlow58 * fRec191[1]) + (fSlow59 * (fVec24[1] + fVec24[0])));
			fRec190[0] = (fRec191[0] - (fSlow56 * ((fSlow35 * fRec190[1]) + (fSlow62 * fRec190[2]))));
			fTempPerm109 = (fRec190[2] + (fRec190[0] + (2.0f * fRec190[1])));
			fTempPerm110 = (fSlow56 * fTempPerm109);
			fVec25[0] = fTempPerm110;
			fRec189[0] = ((fSlow68 * fRec189[1]) + (fSlow69 * ((fSlow70 * fVec25[1]) + (fSlow71 * fTempPerm109))));
			fRec188[0] = (fRec189[0] - (fSlow64 * ((fSlow41 * fRec188[1]) + (fSlow72 * fRec188[2]))));
			fRec193[0] = ((fSlow68 * fRec193[1]) + (fSlow69 * (fVec25[1] + fVec25[0])));
			fRec192[0] = (fRec193[0] - (fSlow64 * ((fSlow41 * fRec192[1]) + (fSlow72 * fRec192[2]))));
			fTempPerm111 = ((((fSlow120 * (fRec172[2] + (fSlow38 * (fTempPerm101 + (fSlow39 * fRec172[0]))))) + (fSlow121 * (fRec177[2] + (fSlow38 * (fTempPerm105 + (fSlow39 * fRec177[0])))))) + (fSlow122 * (fRec183[2] + (fSlow38 * (fTempPerm108 + (fSlow39 * fRec183[0])))))) + (fSlow64 * ((fSlow123 * (((fSlow40 * fRec188[0]) + (fSlow73 * fRec188[1])) + (fSlow40 * fRec188[2]))) + (fSlow124 * (fRec192[2] + (fRec192[0] + (2.0f * fRec192[1])))))));
			fTempPerm112 = (fTempPerm98 + fTempPerm111);
			fTempPerm113 = (fTempPerm85 + fTempPerm112);
			fTempPerm114 = (fTempPerm58 + fTempPerm113);
			fRec198[0] = ((fSlow18 * fRec198[1]) + (fSlow19 * ((fSlow13 * fRec1[1]) + (fSlow20 * fRec1[2]))));
			fRec197[0] = (fRec198[0] - (fSlow15 * ((fSlow21 * fRec197[1]) + (fSlow22 * fRec197[2]))));
			fTempPerm115 = (fSlow29 * fRec196[1]);
			fRec196[0] = ((fSlow15 * (((fSlow16 * fRec197[0]) + (fSlow23 * fRec197[1])) + (fSlow16 * fRec197[2]))) - (fSlow26 * (fTempPerm115 + (fSlow27 * fRec196[2]))));
			fTempPerm116 = (fSlow35 * fRec195[1]);
			fRec195[0] = ((fRec196[2] + (fSlow26 * (fTempPerm115 + (fSlow27 * fRec196[0])))) - (fSlow32 * (fTempPerm116 + (fSlow33 * fRec195[2]))));
			fTempPerm117 = (fSlow41 * fRec194[1]);
			fRec194[0] = ((fRec195[2] + (fSlow32 * (fTempPerm116 + (fSlow33 * fRec195[0])))) - (fSlow38 * (fTempPerm117 + (fSlow39 * fRec194[2]))));
			fRec204[0] = ((fSlow18 * fRec204[1]) + (fSlow19 * (fRec1[1] + fRec1[2])));
			fRec203[0] = (fRec204[0] - (fSlow15 * ((fSlow21 * fRec203[1]) + (fSlow22 * fRec203[2]))));
			fTempPerm118 = (fRec203[2] + (fRec203[0] + (2.0f * fRec203[1])));
			fTempPerm119 = (fSlow15 * fTempPerm118);
			fVec26[0] = fTempPerm119;
			fRec202[0] = ((fSlow47 * fRec202[1]) + (fSlow48 * ((fSlow49 * fVec26[1]) + (fSlow50 * fTempPerm118))));
			fRec201[0] = (fRec202[0] - (fSlow45 * ((fSlow29 * fRec201[1]) + (fSlow51 * fRec201[2]))));
			fTempPerm120 = (fSlow35 * fRec200[1]);
			fRec200[0] = ((fSlow45 * (((fSlow28 * fRec201[0]) + (fSlow52 * fRec201[1])) + (fSlow28 * fRec201[2]))) - (fSlow32 * (fTempPerm120 + (fSlow33 * fRec200[2]))));
			fTempPerm121 = (fSlow41 * fRec199[1]);
			fRec199[0] = ((fRec200[2] + (fSlow32 * (fTempPerm120 + (fSlow33 * fRec200[0])))) - (fSlow38 * (fTempPerm121 + (fSlow39 * fRec199[2]))));
			fRec209[0] = ((fSlow47 * fRec209[1]) + (fSlow48 * (fVec26[1] + fVec26[0])));
			fRec208[0] = (fRec209[0] - (fSlow45 * ((fSlow29 * fRec208[1]) + (fSlow51 * fRec208[2]))));
			fTempPerm122 = (fRec208[2] + (fRec208[0] + (2.0f * fRec208[1])));
			fTempPerm123 = (fSlow45 * fTempPerm122);
			fVec27[0] = fTempPerm123;
			fRec207[0] = ((fSlow58 * fRec207[1]) + (fSlow59 * ((fSlow60 * fVec27[1]) + (fSlow61 * fTempPerm122))));
			fRec206[0] = (fRec207[0] - (fSlow56 * ((fSlow35 * fRec206[1]) + (fSlow62 * fRec206[2]))));
			fTempPerm124 = (fSlow41 * fRec205[1]);
			fRec205[0] = ((fSlow56 * (((fSlow34 * fRec206[0]) + (fSlow63 * fRec206[1])) + (fSlow34 * fRec206[2]))) - (fSlow38 * (fTempPerm124 + (fSlow39 * fRec205[2]))));
			fRec213[0] = ((fSlow58 * fRec213[1]) + (fSlow59 * (fVec27[1] + fVec27[0])));
			fRec212[0] = (fRec213[0] - (fSlow56 * ((fSlow35 * fRec212[1]) + (fSlow62 * fRec212[2]))));
			fTempPerm125 = (fRec212[2] + (fRec212[0] + (2.0f * fRec212[1])));
			fTempPerm126 = (fSlow56 * fTempPerm125);
			fVec28[0] = fTempPerm126;
			fRec211[0] = ((fSlow68 * fRec211[1]) + (fSlow69 * ((fSlow70 * fVec28[1]) + (fSlow71 * fTempPerm125))));
			fRec210[0] = (fRec211[0] - (fSlow64 * ((fSlow41 * fRec210[1]) + (fSlow72 * fRec210[2]))));
			fRec215[0] = ((fSlow68 * fRec215[1]) + (fSlow69 * (fVec28[1] + fVec28[0])));
			fRec214[0] = (fRec215[0] - (fSlow64 * ((fSlow41 * fRec214[1]) + (fSlow72 * fRec214[2]))));
			fTempPerm127 = ((((fSlow127 * (fRec194[2] + (fSlow38 * (fTempPerm117 + (fSlow39 * fRec194[0]))))) + (fSlow128 * (fRec199[2] + (fSlow38 * (fTempPerm121 + (fSlow39 * fRec199[0])))))) + (fSlow129 * (fRec205[2] + (fSlow38 * (fTempPerm124 + (fSlow39 * fRec205[0])))))) + (fSlow64 * ((fSlow130 * (((fSlow40 * fRec210[0]) + (fSlow73 * fRec210[1])) + (fSlow40 * fRec210[2]))) + (fSlow131 * (fRec214[2] + (fRec214[0] + (2.0f * fRec214[1])))))));
			fRec220[0] = ((fSlow18 * fRec220[1]) + (fSlow19 * ((fSlow13 * fRec9[1]) + (fSlow20 * fRec9[2]))));
			fRec219[0] = (fRec220[0] - (fSlow15 * ((fSlow21 * fRec219[1]) + (fSlow22 * fRec219[2]))));
			fTempPerm128 = (fSlow29 * fRec218[1]);
			fRec218[0] = ((fSlow15 * (((fSlow16 * fRec219[0]) + (fSlow23 * fRec219[1])) + (fSlow16 * fRec219[2]))) - (fSlow26 * (fTempPerm128 + (fSlow27 * fRec218[2]))));
			fTempPerm129 = (fSlow35 * fRec217[1]);
			fRec217[0] = ((fRec218[2] + (fSlow26 * (fTempPerm128 + (fSlow27 * fRec218[0])))) - (fSlow32 * (fTempPerm129 + (fSlow33 * fRec217[2]))));
			fTempPerm130 = (fSlow41 * fRec216[1]);
			fRec216[0] = ((fRec217[2] + (fSlow32 * (fTempPerm129 + (fSlow33 * fRec217[0])))) - (fSlow38 * (fTempPerm130 + (fSlow39 * fRec216[2]))));
			fRec226[0] = ((fSlow18 * fRec226[1]) + (fSlow19 * (fRec9[1] + fRec9[2])));
			fRec225[0] = (fRec226[0] - (fSlow15 * ((fSlow21 * fRec225[1]) + (fSlow22 * fRec225[2]))));
			fTempPerm131 = (fRec225[2] + (fRec225[0] + (2.0f * fRec225[1])));
			fTempPerm132 = (fSlow15 * fTempPerm131);
			fVec29[0] = fTempPerm132;
			fRec224[0] = ((fSlow47 * fRec224[1]) + (fSlow48 * ((fSlow49 * fVec29[1]) + (fSlow50 * fTempPerm131))));
			fRec223[0] = (fRec224[0] - (fSlow45 * ((fSlow29 * fRec223[1]) + (fSlow51 * fRec223[2]))));
			fTempPerm133 = (fSlow35 * fRec222[1]);
			fRec222[0] = ((fSlow45 * (((fSlow28 * fRec223[0]) + (fSlow52 * fRec223[1])) + (fSlow28 * fRec223[2]))) - (fSlow32 * (fTempPerm133 + (fSlow33 * fRec222[2]))));
			fTempPerm134 = (fSlow41 * fRec221[1]);
			fRec221[0] = ((fRec222[2] + (fSlow32 * (fTempPerm133 + (fSlow33 * fRec222[0])))) - (fSlow38 * (fTempPerm134 + (fSlow39 * fRec221[2]))));
			fRec231[0] = ((fSlow47 * fRec231[1]) + (fSlow48 * (fVec29[1] + fVec29[0])));
			fRec230[0] = (fRec231[0] - (fSlow45 * ((fSlow29 * fRec230[1]) + (fSlow51 * fRec230[2]))));
			fTempPerm135 = (fRec230[2] + (fRec230[0] + (2.0f * fRec230[1])));
			fTempPerm136 = (fSlow45 * fTempPerm135);
			fVec30[0] = fTempPerm136;
			fRec229[0] = ((fSlow58 * fRec229[1]) + (fSlow59 * ((fSlow60 * fVec30[1]) + (fSlow61 * fTempPerm135))));
			fRec228[0] = (fRec229[0] - (fSlow56 * ((fSlow35 * fRec228[1]) + (fSlow62 * fRec228[2]))));
			fTempPerm137 = (fSlow41 * fRec227[1]);
			fRec227[0] = ((fSlow56 * (((fSlow34 * fRec228[0]) + (fSlow63 * fRec228[1])) + (fSlow34 * fRec228[2]))) - (fSlow38 * (fTempPerm137 + (fSlow39 * fRec227[2]))));
			fRec235[0] = ((fSlow58 * fRec235[1]) + (fSlow59 * (fVec30[1] + fVec30[0])));
			fRec234[0] = (fRec235[0] - (fSlow56 * ((fSlow35 * fRec234[1]) + (fSlow62 * fRec234[2]))));
			fTempPerm138 = (fRec234[2] + (fRec234[0] + (2.0f * fRec234[1])));
			fTempPerm139 = (fSlow56 * fTempPerm138);
			fVec31[0] = fTempPerm139;
			fRec233[0] = ((fSlow68 * fRec233[1]) + (fSlow69 * ((fSlow70 * fVec31[1]) + (fSlow71 * fTempPerm138))));
			fRec232[0] = (fRec233[0] - (fSlow64 * ((fSlow41 * fRec232[1]) + (fSlow72 * fRec232[2]))));
			fRec237[0] = ((fSlow68 * fRec237[1]) + (fSlow69 * (fVec31[1] + fVec31[0])));
			fRec236[0] = (fRec237[0] - (fSlow64 * ((fSlow41 * fRec236[1]) + (fSlow72 * fRec236[2]))));
			fTempPerm140 = ((((fSlow134 * (fRec216[2] + (fSlow38 * (fTempPerm130 + (fSlow39 * fRec216[0]))))) + (fSlow135 * (fRec221[2] + (fSlow38 * (fTempPerm134 + (fSlow39 * fRec221[0])))))) + (fSlow136 * (fRec227[2] + (fSlow38 * (fTempPerm137 + (fSlow39 * fRec227[0])))))) + (fSlow64 * ((fSlow137 * (((fSlow40 * fRec232[0]) + (fSlow73 * fRec232[1])) + (fSlow40 * fRec232[2]))) + (fSlow138 * (fRec236[2] + (fRec236[0] + (2.0f * fRec236[1])))))));
			fTempPerm141 = (fTempPerm127 + fTempPerm140);
			fRec242[0] = ((fSlow18 * fRec242[1]) + (fSlow19 * ((fSlow13 * fRec5[1]) + (fSlow20 * fRec5[2]))));
			fRec241[0] = (fRec242[0] - (fSlow15 * ((fSlow21 * fRec241[1]) + (fSlow22 * fRec241[2]))));
			fTempPerm142 = (fSlow29 * fRec240[1]);
			fRec240[0] = ((fSlow15 * (((fSlow16 * fRec241[0]) + (fSlow23 * fRec241[1])) + (fSlow16 * fRec241[2]))) - (fSlow26 * (fTempPerm142 + (fSlow27 * fRec240[2]))));
			fTempPerm143 = (fSlow35 * fRec239[1]);
			fRec239[0] = ((fRec240[2] + (fSlow26 * (fTempPerm142 + (fSlow27 * fRec240[0])))) - (fSlow32 * (fTempPerm143 + (fSlow33 * fRec239[2]))));
			fTempPerm144 = (fSlow41 * fRec238[1]);
			fRec238[0] = ((fRec239[2] + (fSlow32 * (fTempPerm143 + (fSlow33 * fRec239[0])))) - (fSlow38 * (fTempPerm144 + (fSlow39 * fRec238[2]))));
			fRec248[0] = ((fSlow18 * fRec248[1]) + (fSlow19 * (fRec5[1] + fRec5[2])));
			fRec247[0] = (fRec248[0] - (fSlow15 * ((fSlow21 * fRec247[1]) + (fSlow22 * fRec247[2]))));
			fTempPerm145 = (fRec247[2] + (fRec247[0] + (2.0f * fRec247[1])));
			fTempPerm146 = (fSlow15 * fTempPerm145);
			fVec32[0] = fTempPerm146;
			fRec246[0] = ((fSlow47 * fRec246[1]) + (fSlow48 * ((fSlow49 * fVec32[1]) + (fSlow50 * fTempPerm145))));
			fRec245[0] = (fRec246[0] - (fSlow45 * ((fSlow29 * fRec245[1]) + (fSlow51 * fRec245[2]))));
			fTempPerm147 = (fSlow35 * fRec244[1]);
			fRec244[0] = ((fSlow45 * (((fSlow28 * fRec245[0]) + (fSlow52 * fRec245[1])) + (fSlow28 * fRec245[2]))) - (fSlow32 * (fTempPerm147 + (fSlow33 * fRec244[2]))));
			fTempPerm148 = (fSlow41 * fRec243[1]);
			fRec243[0] = ((fRec244[2] + (fSlow32 * (fTempPerm147 + (fSlow33 * fRec244[0])))) - (fSlow38 * (fTempPerm148 + (fSlow39 * fRec243[2]))));
			fRec253[0] = ((fSlow47 * fRec253[1]) + (fSlow48 * (fVec32[1] + fVec32[0])));
			fRec252[0] = (fRec253[0] - (fSlow45 * ((fSlow29 * fRec252[1]) + (fSlow51 * fRec252[2]))));
			fTempPerm149 = (fRec252[2] + (fRec252[0] + (2.0f * fRec252[1])));
			fTempPerm150 = (fSlow45 * fTempPerm149);
			fVec33[0] = fTempPerm150;
			fRec251[0] = ((fSlow58 * fRec251[1]) + (fSlow59 * ((fSlow60 * fVec33[1]) + (fSlow61 * fTempPerm149))));
			fRec250[0] = (fRec251[0] - (fSlow56 * ((fSlow35 * fRec250[1]) + (fSlow62 * fRec250[2]))));
			fTempPerm151 = (fSlow41 * fRec249[1]);
			fRec249[0] = ((fSlow56 * (((fSlow34 * fRec250[0]) + (fSlow63 * fRec250[1])) + (fSlow34 * fRec250[2]))) - (fSlow38 * (fTempPerm151 + (fSlow39 * fRec249[2]))));
			fRec257[0] = ((fSlow58 * fRec257[1]) + (fSlow59 * (fVec33[1] + fVec33[0])));
			fRec256[0] = (fRec257[0] - (fSlow56 * ((fSlow35 * fRec256[1]) + (fSlow62 * fRec256[2]))));
			fTempPerm152 = (fRec256[2] + (fRec256[0] + (2.0f * fRec256[1])));
			fTempPerm153 = (fSlow56 * fTempPerm152);
			fVec34[0] = fTempPerm153;
			fRec255[0] = ((fSlow68 * fRec255[1]) + (fSlow69 * ((fSlow70 * fVec34[1]) + (fSlow71 * fTempPerm152))));
			fRec254[0] = (fRec255[0] - (fSlow64 * ((fSlow41 * fRec254[1]) + (fSlow72 * fRec254[2]))));
			fRec259[0] = ((fSlow68 * fRec259[1]) + (fSlow69 * (fVec34[1] + fVec34[0])));
			fRec258[0] = (fRec259[0] - (fSlow64 * ((fSlow41 * fRec258[1]) + (fSlow72 * fRec258[2]))));
			fTempPerm154 = ((((fSlow141 * (fRec238[2] + (fSlow38 * (fTempPerm144 + (fSlow39 * fRec238[0]))))) + (fSlow142 * (fRec243[2] + (fSlow38 * (fTempPerm148 + (fSlow39 * fRec243[0])))))) + (fSlow143 * (fRec249[2] + (fSlow38 * (fTempPerm151 + (fSlow39 * fRec249[0])))))) + (fSlow64 * ((fSlow144 * (((fSlow40 * fRec254[0]) + (fSlow73 * fRec254[1])) + (fSlow40 * fRec254[2]))) + (fSlow145 * (fRec258[2] + (fRec258[0] + (2.0f * fRec258[1])))))));
			fRec264[0] = ((fSlow18 * fRec264[1]) + (fSlow19 * ((fSlow13 * fRec13[1]) + (fSlow20 * fRec13[2]))));
			fRec263[0] = (fRec264[0] - (fSlow15 * ((fSlow21 * fRec263[1]) + (fSlow22 * fRec263[2]))));
			fTempPerm155 = (fSlow29 * fRec262[1]);
			fRec262[0] = ((fSlow15 * (((fSlow16 * fRec263[0]) + (fSlow23 * fRec263[1])) + (fSlow16 * fRec263[2]))) - (fSlow26 * (fTempPerm155 + (fSlow27 * fRec262[2]))));
			fTempPerm156 = (fSlow35 * fRec261[1]);
			fRec261[0] = ((fRec262[2] + (fSlow26 * (fTempPerm155 + (fSlow27 * fRec262[0])))) - (fSlow32 * (fTempPerm156 + (fSlow33 * fRec261[2]))));
			fTempPerm157 = (fSlow41 * fRec260[1]);
			fRec260[0] = ((fRec261[2] + (fSlow32 * (fTempPerm156 + (fSlow33 * fRec261[0])))) - (fSlow38 * (fTempPerm157 + (fSlow39 * fRec260[2]))));
			fRec270[0] = ((fSlow18 * fRec270[1]) + (fSlow19 * (fRec13[1] + fRec13[2])));
			fRec269[0] = (fRec270[0] - (fSlow15 * ((fSlow21 * fRec269[1]) + (fSlow22 * fRec269[2]))));
			fTempPerm158 = (fRec269[2] + (fRec269[0] + (2.0f * fRec269[1])));
			fTempPerm159 = (fSlow15 * fTempPerm158);
			fVec35[0] = fTempPerm159;
			fRec268[0] = ((fSlow47 * fRec268[1]) + (fSlow48 * ((fSlow49 * fVec35[1]) + (fSlow50 * fTempPerm158))));
			fRec267[0] = (fRec268[0] - (fSlow45 * ((fSlow29 * fRec267[1]) + (fSlow51 * fRec267[2]))));
			fTempPerm160 = (fSlow35 * fRec266[1]);
			fRec266[0] = ((fSlow45 * (((fSlow28 * fRec267[0]) + (fSlow52 * fRec267[1])) + (fSlow28 * fRec267[2]))) - (fSlow32 * (fTempPerm160 + (fSlow33 * fRec266[2]))));
			fTempPerm161 = (fSlow41 * fRec265[1]);
			fRec265[0] = ((fRec266[2] + (fSlow32 * (fTempPerm160 + (fSlow33 * fRec266[0])))) - (fSlow38 * (fTempPerm161 + (fSlow39 * fRec265[2]))));
			fRec275[0] = ((fSlow47 * fRec275[1]) + (fSlow48 * (fVec35[1] + fVec35[0])));
			fRec274[0] = (fRec275[0] - (fSlow45 * ((fSlow29 * fRec274[1]) + (fSlow51 * fRec274[2]))));
			fTempPerm162 = (fRec274[2] + (fRec274[0] + (2.0f * fRec274[1])));
			fTempPerm163 = (fSlow45 * fTempPerm162);
			fVec36[0] = fTempPerm163;
			fRec273[0] = ((fSlow58 * fRec273[1]) + (fSlow59 * ((fSlow60 * fVec36[1]) + (fSlow61 * fTempPerm162))));
			fRec272[0] = (fRec273[0] - (fSlow56 * ((fSlow35 * fRec272[1]) + (fSlow62 * fRec272[2]))));
			fTempPerm164 = (fSlow41 * fRec271[1]);
			fRec271[0] = ((fSlow56 * (((fSlow34 * fRec272[0]) + (fSlow63 * fRec272[1])) + (fSlow34 * fRec272[2]))) - (fSlow38 * (fTempPerm164 + (fSlow39 * fRec271[2]))));
			fRec279[0] = ((fSlow58 * fRec279[1]) + (fSlow59 * (fVec36[1] + fVec36[0])));
			fRec278[0] = (fRec279[0] - (fSlow56 * ((fSlow35 * fRec278[1]) + (fSlow62 * fRec278[2]))));
			fTempPerm165 = (fRec278[2] + (fRec278[0] + (2.0f * fRec278[1])));
			fTempPerm166 = (fSlow56 * fTempPerm165);
			fVec37[0] = fTempPerm166;
			fRec277[0] = ((fSlow68 * fRec277[1]) + (fSlow69 * ((fSlow70 * fVec37[1]) + (fSlow71 * fTempPerm165))));
			fRec276[0] = (fRec277[0] - (fSlow64 * ((fSlow41 * fRec276[1]) + (fSlow72 * fRec276[2]))));
			fRec281[0] = ((fSlow68 * fRec281[1]) + (fSlow69 * (fVec37[1] + fVec37[0])));
			fRec280[0] = (fRec281[0] - (fSlow64 * ((fSlow41 * fRec280[1]) + (fSlow72 * fRec280[2]))));
			fTempPerm167 = ((((fSlow148 * (fRec260[2] + (fSlow38 * (fTempPerm157 + (fSlow39 * fRec260[0]))))) + (fSlow149 * (fRec265[2] + (fSlow38 * (fTempPerm161 + (fSlow39 * fRec265[0])))))) + (fSlow150 * (fRec271[2] + (fSlow38 * (fTempPerm164 + (fSlow39 * fRec271[0])))))) + (fSlow64 * ((fSlow151 * (((fSlow40 * fRec276[0]) + (fSlow73 * fRec276[1])) + (fSlow40 * fRec276[2]))) + (fSlow152 * (fRec280[2] + (fRec280[0] + (2.0f * fRec280[1])))))));
			fTempPerm168 = (fTempPerm154 + fTempPerm167);
			fTempPerm169 = (fTempPerm141 + fTempPerm168);
			fRec286[0] = ((fSlow18 * fRec286[1]) + (fSlow19 * ((fSlow13 * fRec3[1]) + (fSlow20 * fRec3[2]))));
			fRec285[0] = (fRec286[0] - (fSlow15 * ((fSlow21 * fRec285[1]) + (fSlow22 * fRec285[2]))));
			fTempPerm170 = (fSlow29 * fRec284[1]);
			fRec284[0] = ((fSlow15 * (((fSlow16 * fRec285[0]) + (fSlow23 * fRec285[1])) + (fSlow16 * fRec285[2]))) - (fSlow26 * (fTempPerm170 + (fSlow27 * fRec284[2]))));
			fTempPerm171 = (fSlow35 * fRec283[1]);
			fRec283[0] = ((fRec284[2] + (fSlow26 * (fTempPerm170 + (fSlow27 * fRec284[0])))) - (fSlow32 * (fTempPerm171 + (fSlow33 * fRec283[2]))));
			fTempPerm172 = (fSlow41 * fRec282[1]);
			fRec282[0] = ((fRec283[2] + (fSlow32 * (fTempPerm171 + (fSlow33 * fRec283[0])))) - (fSlow38 * (fTempPerm172 + (fSlow39 * fRec282[2]))));
			fRec292[0] = ((fSlow18 * fRec292[1]) + (fSlow19 * (fRec3[1] + fRec3[2])));
			fRec291[0] = (fRec292[0] - (fSlow15 * ((fSlow21 * fRec291[1]) + (fSlow22 * fRec291[2]))));
			fTempPerm173 = (fRec291[2] + (fRec291[0] + (2.0f * fRec291[1])));
			fTempPerm174 = (fSlow15 * fTempPerm173);
			fVec38[0] = fTempPerm174;
			fRec290[0] = ((fSlow47 * fRec290[1]) + (fSlow48 * ((fSlow49 * fVec38[1]) + (fSlow50 * fTempPerm173))));
			fRec289[0] = (fRec290[0] - (fSlow45 * ((fSlow29 * fRec289[1]) + (fSlow51 * fRec289[2]))));
			fTempPerm175 = (fSlow35 * fRec288[1]);
			fRec288[0] = ((fSlow45 * (((fSlow28 * fRec289[0]) + (fSlow52 * fRec289[1])) + (fSlow28 * fRec289[2]))) - (fSlow32 * (fTempPerm175 + (fSlow33 * fRec288[2]))));
			fTempPerm176 = (fSlow41 * fRec287[1]);
			fRec287[0] = ((fRec288[2] + (fSlow32 * (fTempPerm175 + (fSlow33 * fRec288[0])))) - (fSlow38 * (fTempPerm176 + (fSlow39 * fRec287[2]))));
			fRec297[0] = ((fSlow47 * fRec297[1]) + (fSlow48 * (fVec38[1] + fVec38[0])));
			fRec296[0] = (fRec297[0] - (fSlow45 * ((fSlow29 * fRec296[1]) + (fSlow51 * fRec296[2]))));
			fTempPerm177 = (fRec296[2] + (fRec296[0] + (2.0f * fRec296[1])));
			fTempPerm178 = (fSlow45 * fTempPerm177);
			fVec39[0] = fTempPerm178;
			fRec295[0] = ((fSlow58 * fRec295[1]) + (fSlow59 * ((fSlow60 * fVec39[1]) + (fSlow61 * fTempPerm177))));
			fRec294[0] = (fRec295[0] - (fSlow56 * ((fSlow35 * fRec294[1]) + (fSlow62 * fRec294[2]))));
			fTempPerm179 = (fSlow41 * fRec293[1]);
			fRec293[0] = ((fSlow56 * (((fSlow34 * fRec294[0]) + (fSlow63 * fRec294[1])) + (fSlow34 * fRec294[2]))) - (fSlow38 * (fTempPerm179 + (fSlow39 * fRec293[2]))));
			fRec301[0] = ((fSlow58 * fRec301[1]) + (fSlow59 * (fVec39[1] + fVec39[0])));
			fRec300[0] = (fRec301[0] - (fSlow56 * ((fSlow35 * fRec300[1]) + (fSlow62 * fRec300[2]))));
			fTempPerm180 = (fRec300[2] + (fRec300[0] + (2.0f * fRec300[1])));
			fTempPerm181 = (fSlow56 * fTempPerm180);
			fVec40[0] = fTempPerm181;
			fRec299[0] = ((fSlow68 * fRec299[1]) + (fSlow69 * ((fSlow70 * fVec40[1]) + (fSlow71 * fTempPerm180))));
			fRec298[0] = (fRec299[0] - (fSlow64 * ((fSlow41 * fRec298[1]) + (fSlow72 * fRec298[2]))));
			fRec303[0] = ((fSlow68 * fRec303[1]) + (fSlow69 * (fVec40[1] + fVec40[0])));
			fRec302[0] = (fRec303[0] - (fSlow64 * ((fSlow41 * fRec302[1]) + (fSlow72 * fRec302[2]))));
			fTempPerm182 = ((((fSlow155 * (fRec282[2] + (fSlow38 * (fTempPerm172 + (fSlow39 * fRec282[0]))))) + (fSlow156 * (fRec287[2] + (fSlow38 * (fTempPerm176 + (fSlow39 * fRec287[0])))))) + (fSlow157 * (fRec293[2] + (fSlow38 * (fTempPerm179 + (fSlow39 * fRec293[0])))))) + (fSlow64 * ((fSlow158 * (((fSlow40 * fRec298[0]) + (fSlow73 * fRec298[1])) + (fSlow40 * fRec298[2]))) + (fSlow159 * (fRec302[2] + (fRec302[0] + (2.0f * fRec302[1])))))));
			fRec308[0] = ((fSlow18 * fRec308[1]) + (fSlow19 * ((fSlow13 * fRec11[1]) + (fSlow20 * fRec11[2]))));
			fRec307[0] = (fRec308[0] - (fSlow15 * ((fSlow21 * fRec307[1]) + (fSlow22 * fRec307[2]))));
			fTempPerm183 = (fSlow29 * fRec306[1]);
			fRec306[0] = ((fSlow15 * (((fSlow16 * fRec307[0]) + (fSlow23 * fRec307[1])) + (fSlow16 * fRec307[2]))) - (fSlow26 * (fTempPerm183 + (fSlow27 * fRec306[2]))));
			fTempPerm184 = (fSlow35 * fRec305[1]);
			fRec305[0] = ((fRec306[2] + (fSlow26 * (fTempPerm183 + (fSlow27 * fRec306[0])))) - (fSlow32 * (fTempPerm184 + (fSlow33 * fRec305[2]))));
			fTempPerm185 = (fSlow41 * fRec304[1]);
			fRec304[0] = ((fRec305[2] + (fSlow32 * (fTempPerm184 + (fSlow33 * fRec305[0])))) - (fSlow38 * (fTempPerm185 + (fSlow39 * fRec304[2]))));
			fRec314[0] = ((fSlow18 * fRec314[1]) + (fSlow19 * (fRec11[1] + fRec11[2])));
			fRec313[0] = (fRec314[0] - (fSlow15 * ((fSlow21 * fRec313[1]) + (fSlow22 * fRec313[2]))));
			fTempPerm186 = (fRec313[2] + (fRec313[0] + (2.0f * fRec313[1])));
			fTempPerm187 = (fSlow15 * fTempPerm186);
			fVec41[0] = fTempPerm187;
			fRec312[0] = ((fSlow47 * fRec312[1]) + (fSlow48 * ((fSlow49 * fVec41[1]) + (fSlow50 * fTempPerm186))));
			fRec311[0] = (fRec312[0] - (fSlow45 * ((fSlow29 * fRec311[1]) + (fSlow51 * fRec311[2]))));
			fTempPerm188 = (fSlow35 * fRec310[1]);
			fRec310[0] = ((fSlow45 * (((fSlow28 * fRec311[0]) + (fSlow52 * fRec311[1])) + (fSlow28 * fRec311[2]))) - (fSlow32 * (fTempPerm188 + (fSlow33 * fRec310[2]))));
			fTempPerm189 = (fSlow41 * fRec309[1]);
			fRec309[0] = ((fRec310[2] + (fSlow32 * (fTempPerm188 + (fSlow33 * fRec310[0])))) - (fSlow38 * (fTempPerm189 + (fSlow39 * fRec309[2]))));
			fRec319[0] = ((fSlow47 * fRec319[1]) + (fSlow48 * (fVec41[1] + fVec41[0])));
			fRec318[0] = (fRec319[0] - (fSlow45 * ((fSlow29 * fRec318[1]) + (fSlow51 * fRec318[2]))));
			fTempPerm190 = (fRec318[2] + (fRec318[0] + (2.0f * fRec318[1])));
			fTempPerm191 = (fSlow45 * fTempPerm190);
			fVec42[0] = fTempPerm191;
			fRec317[0] = ((fSlow58 * fRec317[1]) + (fSlow59 * ((fSlow60 * fVec42[1]) + (fSlow61 * fTempPerm190))));
			fRec316[0] = (fRec317[0] - (fSlow56 * ((fSlow35 * fRec316[1]) + (fSlow62 * fRec316[2]))));
			fTempPerm192 = (fSlow41 * fRec315[1]);
			fRec315[0] = ((fSlow56 * (((fSlow34 * fRec316[0]) + (fSlow63 * fRec316[1])) + (fSlow34 * fRec316[2]))) - (fSlow38 * (fTempPerm192 + (fSlow39 * fRec315[2]))));
			fRec323[0] = ((fSlow58 * fRec323[1]) + (fSlow59 * (fVec42[1] + fVec42[0])));
			fRec322[0] = (fRec323[0] - (fSlow56 * ((fSlow35 * fRec322[1]) + (fSlow62 * fRec322[2]))));
			fTempPerm193 = (fRec322[2] + (fRec322[0] + (2.0f * fRec322[1])));
			fTempPerm194 = (fSlow56 * fTempPerm193);
			fVec43[0] = fTempPerm194;
			fRec321[0] = ((fSlow68 * fRec321[1]) + (fSlow69 * ((fSlow70 * fVec43[1]) + (fSlow71 * fTempPerm193))));
			fRec320[0] = (fRec321[0] - (fSlow64 * ((fSlow41 * fRec320[1]) + (fSlow72 * fRec320[2]))));
			fRec325[0] = ((fSlow68 * fRec325[1]) + (fSlow69 * (fVec43[1] + fVec43[0])));
			fRec324[0] = (fRec325[0] - (fSlow64 * ((fSlow41 * fRec324[1]) + (fSlow72 * fRec324[2]))));
			fTempPerm195 = ((((fSlow162 * (fRec304[2] + (fSlow38 * (fTempPerm185 + (fSlow39 * fRec304[0]))))) + (fSlow163 * (fRec309[2] + (fSlow38 * (fTempPerm189 + (fSlow39 * fRec309[0])))))) + (fSlow164 * (fRec315[2] + (fSlow38 * (fTempPerm192 + (fSlow39 * fRec315[0])))))) + (fSlow64 * ((fSlow165 * (((fSlow40 * fRec320[0]) + (fSlow73 * fRec320[1])) + (fSlow40 * fRec320[2]))) + (fSlow166 * (fRec324[2] + (fRec324[0] + (2.0f * fRec324[1])))))));
			fTempPerm196 = (fTempPerm182 + fTempPerm195);
			fRec330[0] = ((fSlow18 * fRec330[1]) + (fSlow19 * ((fSlow13 * fRec7[1]) + (fSlow20 * fRec7[2]))));
			fRec329[0] = (fRec330[0] - (fSlow15 * ((fSlow21 * fRec329[1]) + (fSlow22 * fRec329[2]))));
			fTempPerm197 = (fSlow29 * fRec328[1]);
			fRec328[0] = ((fSlow15 * (((fSlow16 * fRec329[0]) + (fSlow23 * fRec329[1])) + (fSlow16 * fRec329[2]))) - (fSlow26 * (fTempPerm197 + (fSlow27 * fRec328[2]))));
			fTempPerm198 = (fSlow35 * fRec327[1]);
			fRec327[0] = ((fRec328[2] + (fSlow26 * (fTempPerm197 + (fSlow27 * fRec328[0])))) - (fSlow32 * (fTempPerm198 + (fSlow33 * fRec327[2]))));
			fTempPerm199 = (fSlow41 * fRec326[1]);
			fRec326[0] = ((fRec327[2] + (fSlow32 * (fTempPerm198 + (fSlow33 * fRec327[0])))) - (fSlow38 * (fTempPerm199 + (fSlow39 * fRec326[2]))));
			fRec336[0] = ((fSlow18 * fRec336[1]) + (fSlow19 * (fRec7[1] + fRec7[2])));
			fRec335[0] = (fRec336[0] - (fSlow15 * ((fSlow21 * fRec335[1]) + (fSlow22 * fRec335[2]))));
			fTempPerm200 = (fRec335[2] + (fRec335[0] + (2.0f * fRec335[1])));
			fTempPerm201 = (fSlow15 * fTempPerm200);
			fVec44[0] = fTempPerm201;
			fRec334[0] = ((fSlow47 * fRec334[1]) + (fSlow48 * ((fSlow49 * fVec44[1]) + (fSlow50 * fTempPerm200))));
			fRec333[0] = (fRec334[0] - (fSlow45 * ((fSlow29 * fRec333[1]) + (fSlow51 * fRec333[2]))));
			fTempPerm202 = (fSlow35 * fRec332[1]);
			fRec332[0] = ((fSlow45 * (((fSlow28 * fRec333[0]) + (fSlow52 * fRec333[1])) + (fSlow28 * fRec333[2]))) - (fSlow32 * (fTempPerm202 + (fSlow33 * fRec332[2]))));
			fTempPerm203 = (fSlow41 * fRec331[1]);
			fRec331[0] = ((fRec332[2] + (fSlow32 * (fTempPerm202 + (fSlow33 * fRec332[0])))) - (fSlow38 * (fTempPerm203 + (fSlow39 * fRec331[2]))));
			fRec341[0] = ((fSlow47 * fRec341[1]) + (fSlow48 * (fVec44[1] + fVec44[0])));
			fRec340[0] = (fRec341[0] - (fSlow45 * ((fSlow29 * fRec340[1]) + (fSlow51 * fRec340[2]))));
			fTempPerm204 = (fRec340[2] + (fRec340[0] + (2.0f * fRec340[1])));
			fTempPerm205 = (fSlow45 * fTempPerm204);
			fVec45[0] = fTempPerm205;
			fRec339[0] = ((fSlow58 * fRec339[1]) + (fSlow59 * ((fSlow60 * fVec45[1]) + (fSlow61 * fTempPerm204))));
			fRec338[0] = (fRec339[0] - (fSlow56 * ((fSlow35 * fRec338[1]) + (fSlow62 * fRec338[2]))));
			fTempPerm206 = (fSlow41 * fRec337[1]);
			fRec337[0] = ((fSlow56 * (((fSlow34 * fRec338[0]) + (fSlow63 * fRec338[1])) + (fSlow34 * fRec338[2]))) - (fSlow38 * (fTempPerm206 + (fSlow39 * fRec337[2]))));
			fRec345[0] = ((fSlow58 * fRec345[1]) + (fSlow59 * (fVec45[1] + fVec45[0])));
			fRec344[0] = (fRec345[0] - (fSlow56 * ((fSlow35 * fRec344[1]) + (fSlow62 * fRec344[2]))));
			fTempPerm207 = (fRec344[2] + (fRec344[0] + (2.0f * fRec344[1])));
			fTempPerm208 = (fSlow56 * fTempPerm207);
			fVec46[0] = fTempPerm208;
			fRec343[0] = ((fSlow68 * fRec343[1]) + (fSlow69 * ((fSlow70 * fVec46[1]) + (fSlow71 * fTempPerm207))));
			fRec342[0] = (fRec343[0] - (fSlow64 * ((fSlow41 * fRec342[1]) + (fSlow72 * fRec342[2]))));
			fRec347[0] = ((fSlow68 * fRec347[1]) + (fSlow69 * (fVec46[1] + fVec46[0])));
			fRec346[0] = (fRec347[0] - (fSlow64 * ((fSlow41 * fRec346[1]) + (fSlow72 * fRec346[2]))));
			fTempPerm209 = ((((fSlow169 * (fRec326[2] + (fSlow38 * (fTempPerm199 + (fSlow39 * fRec326[0]))))) + (fSlow170 * (fRec331[2] + (fSlow38 * (fTempPerm203 + (fSlow39 * fRec331[0])))))) + (fSlow171 * (fRec337[2] + (fSlow38 * (fTempPerm206 + (fSlow39 * fRec337[0])))))) + (fSlow64 * ((fSlow172 * (((fSlow40 * fRec342[0]) + (fSlow73 * fRec342[1])) + (fSlow40 * fRec342[2]))) + (fSlow173 * (fRec346[2] + (fRec346[0] + (2.0f * fRec346[1])))))));
			fRec352[0] = ((fSlow18 * fRec352[1]) + (fSlow19 * ((fSlow13 * fRec15[1]) + (fSlow20 * fRec15[2]))));
			fRec351[0] = (fRec352[0] - (fSlow15 * ((fSlow21 * fRec351[1]) + (fSlow22 * fRec351[2]))));
			fTempPerm210 = (fSlow29 * fRec350[1]);
			fRec350[0] = ((fSlow15 * (((fSlow16 * fRec351[0]) + (fSlow23 * fRec351[1])) + (fSlow16 * fRec351[2]))) - (fSlow26 * (fTempPerm210 + (fSlow27 * fRec350[2]))));
			fTempPerm211 = (fSlow35 * fRec349[1]);
			fRec349[0] = ((fRec350[2] + (fSlow26 * (fTempPerm210 + (fSlow27 * fRec350[0])))) - (fSlow32 * (fTempPerm211 + (fSlow33 * fRec349[2]))));
			fTempPerm212 = (fSlow41 * fRec348[1]);
			fRec348[0] = ((fRec349[2] + (fSlow32 * (fTempPerm211 + (fSlow33 * fRec349[0])))) - (fSlow38 * (fTempPerm212 + (fSlow39 * fRec348[2]))));
			fRec358[0] = ((fSlow18 * fRec358[1]) + (fSlow19 * (fRec15[1] + fRec15[2])));
			fRec357[0] = (fRec358[0] - (fSlow15 * ((fSlow21 * fRec357[1]) + (fSlow22 * fRec357[2]))));
			fTempPerm213 = (fRec357[2] + (fRec357[0] + (2.0f * fRec357[1])));
			fTempPerm214 = (fSlow15 * fTempPerm213);
			fVec47[0] = fTempPerm214;
			fRec356[0] = ((fSlow47 * fRec356[1]) + (fSlow48 * ((fSlow49 * fVec47[1]) + (fSlow50 * fTempPerm213))));
			fRec355[0] = (fRec356[0] - (fSlow45 * ((fSlow29 * fRec355[1]) + (fSlow51 * fRec355[2]))));
			fTempPerm215 = (fSlow35 * fRec354[1]);
			fRec354[0] = ((fSlow45 * (((fSlow28 * fRec355[0]) + (fSlow52 * fRec355[1])) + (fSlow28 * fRec355[2]))) - (fSlow32 * (fTempPerm215 + (fSlow33 * fRec354[2]))));
			fTempPerm216 = (fSlow41 * fRec353[1]);
			fRec353[0] = ((fRec354[2] + (fSlow32 * (fTempPerm215 + (fSlow33 * fRec354[0])))) - (fSlow38 * (fTempPerm216 + (fSlow39 * fRec353[2]))));
			fRec363[0] = ((fSlow47 * fRec363[1]) + (fSlow48 * (fVec47[1] + fVec47[0])));
			fRec362[0] = (fRec363[0] - (fSlow45 * ((fSlow29 * fRec362[1]) + (fSlow51 * fRec362[2]))));
			fTempPerm217 = (fRec362[2] + (fRec362[0] + (2.0f * fRec362[1])));
			fTempPerm218 = (fSlow45 * fTempPerm217);
			fVec48[0] = fTempPerm218;
			fRec361[0] = ((fSlow58 * fRec361[1]) + (fSlow59 * ((fSlow60 * fVec48[1]) + (fSlow61 * fTempPerm217))));
			fRec360[0] = (fRec361[0] - (fSlow56 * ((fSlow35 * fRec360[1]) + (fSlow62 * fRec360[2]))));
			fTempPerm219 = (fSlow41 * fRec359[1]);
			fRec359[0] = ((fSlow56 * (((fSlow34 * fRec360[0]) + (fSlow63 * fRec360[1])) + (fSlow34 * fRec360[2]))) - (fSlow38 * (fTempPerm219 + (fSlow39 * fRec359[2]))));
			fRec367[0] = ((fSlow58 * fRec367[1]) + (fSlow59 * (fVec48[1] + fVec48[0])));
			fRec366[0] = (fRec367[0] - (fSlow56 * ((fSlow35 * fRec366[1]) + (fSlow62 * fRec366[2]))));
			fTempPerm220 = (fRec366[2] + (fRec366[0] + (2.0f * fRec366[1])));
			fTempPerm221 = (fSlow56 * fTempPerm220);
			fVec49[0] = fTempPerm221;
			fRec365[0] = ((fSlow68 * fRec365[1]) + (fSlow69 * ((fSlow70 * fVec49[1]) + (fSlow71 * fTempPerm220))));
			fRec364[0] = (fRec365[0] - (fSlow64 * ((fSlow41 * fRec364[1]) + (fSlow72 * fRec364[2]))));
			fRec369[0] = ((fSlow68 * fRec369[1]) + (fSlow69 * (fVec49[1] + fVec49[0])));
			fRec368[0] = (fRec369[0] - (fSlow64 * ((fSlow41 * fRec368[1]) + (fSlow72 * fRec368[2]))));
			fTempPerm222 = ((((fSlow176 * (fRec348[2] + (fSlow38 * (fTempPerm212 + (fSlow39 * fRec348[0]))))) + (fSlow177 * (fRec353[2] + (fSlow38 * (fTempPerm216 + (fSlow39 * fRec353[0])))))) + (fSlow178 * (fRec359[2] + (fSlow38 * (fTempPerm219 + (fSlow39 * fRec359[0])))))) + (fSlow64 * ((fSlow179 * (((fSlow40 * fRec364[0]) + (fSlow73 * fRec364[1])) + (fSlow40 * fRec364[2]))) + (fSlow180 * (fRec368[2] + (fRec368[0] + (2.0f * fRec368[1])))))));
			fTempPerm223 = (fTempPerm209 + fTempPerm222);
			fTempPerm224 = (fTempPerm196 + fTempPerm223);
			fTempPerm225 = (fTempPerm169 + fTempPerm224);
			fVec50[IOTA&16383] = (fTempPerm0 + (iTempPerm1 + (iTempPerm2 + (fTempPerm3 + (fSlow5 * (fTempPerm114 + fTempPerm225))))));
			fRec0[0] = fVec50[(IOTA-iSlow181)&16383];
			fVec51[0] = fSlow182;
			iTempPerm226 = ((fSlow182 - fVec51[1]) > 0);
			fTempPerm227 = ((fSlow4 * (float)input3[i]) + (iTempPerm1 + fTempPerm0));
			fVec52[IOTA&16383] = (iTempPerm226 + ((fSlow5 * (fTempPerm114 - fTempPerm225)) + fTempPerm227));
			fRec1[0] = fVec52[(IOTA-iSlow183)&16383];
			fTempPerm228 = ((iTempPerm1 + (fTempPerm3 + iTempPerm2)) + fTempPerm0);
			fTempPerm229 = (fTempPerm58 - fTempPerm113);
			fTempPerm230 = (fTempPerm169 - fTempPerm224);
			fVec53[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm229 + fTempPerm230)));
			fRec2[0] = fVec53[(IOTA-iSlow184)&16383];
			fTempPerm231 = (iTempPerm226 + fTempPerm227);
			fVec54[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm229 - fTempPerm230)));
			fRec3[0] = fVec54[(IOTA-iSlow185)&16383];
			fTempPerm232 = (fTempPerm30 - fTempPerm57);
			fTempPerm233 = (fTempPerm85 - fTempPerm112);
			fTempPerm234 = (fTempPerm232 + fTempPerm233);
			fTempPerm235 = (fTempPerm141 - fTempPerm168);
			fTempPerm236 = (fTempPerm196 - fTempPerm223);
			fTempPerm237 = (fTempPerm235 + fTempPerm236);
			fVec55[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm234 + fTempPerm237)));
			fRec4[0] = fVec55[(IOTA-iSlow186)&16383];
			fVec56[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm234 - fTempPerm237)));
			fRec5[0] = fVec56[(IOTA-iSlow187)&16383];
			fTempPerm238 = (fTempPerm232 - fTempPerm233);
			fTempPerm239 = (fTempPerm235 - fTempPerm236);
			fVec57[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm238 + fTempPerm239)));
			fRec6[0] = fVec57[(IOTA-iSlow188)&16383];
			fVec58[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm238 - fTempPerm239)));
			fRec7[0] = fVec58[(IOTA-iSlow189)&16383];
			fTempPerm240 = (fTempPerm16 - fTempPerm29);
			fTempPerm241 = (fTempPerm43 - fTempPerm56);
			fTempPerm242 = (fTempPerm240 + fTempPerm241);
			fTempPerm243 = (fTempPerm71 - fTempPerm84);
			fTempPerm244 = (fTempPerm98 - fTempPerm111);
			fTempPerm245 = (fTempPerm243 + fTempPerm244);
			fTempPerm246 = (fTempPerm242 + fTempPerm245);
			fTempPerm247 = (fTempPerm127 - fTempPerm140);
			fTempPerm248 = (fTempPerm154 - fTempPerm167);
			fTempPerm249 = (fTempPerm247 + fTempPerm248);
			fTempPerm250 = (fTempPerm209 - fTempPerm222);
			fTempPerm251 = (fTempPerm182 - fTempPerm195);
			fTempPerm252 = (fTempPerm250 + fTempPerm251);
			fTempPerm253 = (fTempPerm249 + fTempPerm252);
			fVec59[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm246 + fTempPerm253)));
			fRec8[0] = fVec59[(IOTA-iSlow190)&16383];
			fVec60[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm246 - fTempPerm253)));
			fRec9[0] = fVec60[(IOTA-iSlow191)&16383];
			fTempPerm254 = (fTempPerm242 - fTempPerm245);
			fTempPerm255 = (fTempPerm249 - fTempPerm252);
			fVec61[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm254 + fTempPerm255)));
			fRec10[0] = fVec61[(IOTA-iSlow192)&16383];
			fVec62[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm254 - fTempPerm255)));
			fRec11[0] = fVec62[(IOTA-iSlow193)&16383];
			fTempPerm256 = (fTempPerm240 - fTempPerm241);
			fTempPerm257 = (fTempPerm243 - fTempPerm244);
			fTempPerm258 = (fTempPerm256 + fTempPerm257);
			fTempPerm259 = (fTempPerm247 - fTempPerm248);
			fTempPerm260 = (fTempPerm251 - fTempPerm250);
			fTempPerm261 = (fTempPerm259 + fTempPerm260);
			fVec63[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm258 + fTempPerm261)));
			fRec12[0] = fVec63[(IOTA-iSlow194)&16383];
			fVec64[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm258 - fTempPerm261)));
			fRec13[0] = fVec64[(IOTA-iSlow195)&16383];
			fTempPerm262 = (fTempPerm256 - fTempPerm257);
			fTempPerm263 = (fTempPerm259 - fTempPerm260);
			fVec65[IOTA&16383] = (fTempPerm228 + (fSlow5 * (fTempPerm262 + fTempPerm263)));
			fRec14[0] = fVec65[(IOTA-iSlow196)&16383];
			fVec66[IOTA&16383] = (fTempPerm231 + (fSlow5 * (fTempPerm262 - fTempPerm263)));
			fRec15[0] = fVec66[(IOTA-iSlow197)&16383];
			output0[i] = (FAUSTFLOAT)(fSlow0 * (((((((fRec0[0] + fRec2[0]) + fRec4[0]) + fRec6[0]) + fRec8[0]) + fRec10[0]) + fRec12[0]) + fRec14[0]));
			output1[i] = (FAUSTFLOAT)(fSlow0 * (((((((fRec1[0] + fRec3[0]) + fRec5[0]) + fRec7[0]) + fRec9[0]) + fRec11[0]) + fRec13[0]) + fRec15[0]));
			// post processing
			fRec15[2] = fRec15[1]; fRec15[1] = fRec15[0];
			fRec14[2] = fRec14[1]; fRec14[1] = fRec14[0];
			fRec13[2] = fRec13[1]; fRec13[1] = fRec13[0];
			fRec12[2] = fRec12[1]; fRec12[1] = fRec12[0];
			fRec11[2] = fRec11[1]; fRec11[1] = fRec11[0];
			fRec10[2] = fRec10[1]; fRec10[1] = fRec10[0];
			fRec9[2] = fRec9[1]; fRec9[1] = fRec9[0];
			fRec8[2] = fRec8[1]; fRec8[1] = fRec8[0];
			fRec7[2] = fRec7[1]; fRec7[1] = fRec7[0];
			fRec6[2] = fRec6[1]; fRec6[1] = fRec6[0];
			fRec5[2] = fRec5[1]; fRec5[1] = fRec5[0];
			fRec4[2] = fRec4[1]; fRec4[1] = fRec4[0];
			fRec3[2] = fRec3[1]; fRec3[1] = fRec3[0];
			fRec2[2] = fRec2[1]; fRec2[1] = fRec2[0];
			fRec1[2] = fRec1[1]; fRec1[1] = fRec1[0];
			fVec51[1] = fVec51[0];
			fRec0[2] = fRec0[1]; fRec0[1] = fRec0[0];
			IOTA = IOTA+1;
			fRec368[2] = fRec368[1]; fRec368[1] = fRec368[0];
			fRec369[1] = fRec369[0];
			fRec364[2] = fRec364[1]; fRec364[1] = fRec364[0];
			fRec365[1] = fRec365[0];
			fVec49[1] = fVec49[0];
			fRec366[2] = fRec366[1]; fRec366[1] = fRec366[0];
			fRec367[1] = fRec367[0];
			fRec359[2] = fRec359[1]; fRec359[1] = fRec359[0];
			fRec360[2] = fRec360[1]; fRec360[1] = fRec360[0];
			fRec361[1] = fRec361[0];
			fVec48[1] = fVec48[0];
			fRec362[2] = fRec362[1]; fRec362[1] = fRec362[0];
			fRec363[1] = fRec363[0];
			fRec353[2] = fRec353[1]; fRec353[1] = fRec353[0];
			fRec354[2] = fRec354[1]; fRec354[1] = fRec354[0];
			fRec355[2] = fRec355[1]; fRec355[1] = fRec355[0];
			fRec356[1] = fRec356[0];
			fVec47[1] = fVec47[0];
			fRec357[2] = fRec357[1]; fRec357[1] = fRec357[0];
			fRec358[1] = fRec358[0];
			fRec348[2] = fRec348[1]; fRec348[1] = fRec348[0];
			fRec349[2] = fRec349[1]; fRec349[1] = fRec349[0];
			fRec350[2] = fRec350[1]; fRec350[1] = fRec350[0];
			fRec351[2] = fRec351[1]; fRec351[1] = fRec351[0];
			fRec352[1] = fRec352[0];
			fRec346[2] = fRec346[1]; fRec346[1] = fRec346[0];
			fRec347[1] = fRec347[0];
			fRec342[2] = fRec342[1]; fRec342[1] = fRec342[0];
			fRec343[1] = fRec343[0];
			fVec46[1] = fVec46[0];
			fRec344[2] = fRec344[1]; fRec344[1] = fRec344[0];
			fRec345[1] = fRec345[0];
			fRec337[2] = fRec337[1]; fRec337[1] = fRec337[0];
			fRec338[2] = fRec338[1]; fRec338[1] = fRec338[0];
			fRec339[1] = fRec339[0];
			fVec45[1] = fVec45[0];
			fRec340[2] = fRec340[1]; fRec340[1] = fRec340[0];
			fRec341[1] = fRec341[0];
			fRec331[2] = fRec331[1]; fRec331[1] = fRec331[0];
			fRec332[2] = fRec332[1]; fRec332[1] = fRec332[0];
			fRec333[2] = fRec333[1]; fRec333[1] = fRec333[0];
			fRec334[1] = fRec334[0];
			fVec44[1] = fVec44[0];
			fRec335[2] = fRec335[1]; fRec335[1] = fRec335[0];
			fRec336[1] = fRec336[0];
			fRec326[2] = fRec326[1]; fRec326[1] = fRec326[0];
			fRec327[2] = fRec327[1]; fRec327[1] = fRec327[0];
			fRec328[2] = fRec328[1]; fRec328[1] = fRec328[0];
			fRec329[2] = fRec329[1]; fRec329[1] = fRec329[0];
			fRec330[1] = fRec330[0];
			fRec324[2] = fRec324[1]; fRec324[1] = fRec324[0];
			fRec325[1] = fRec325[0];
			fRec320[2] = fRec320[1]; fRec320[1] = fRec320[0];
			fRec321[1] = fRec321[0];
			fVec43[1] = fVec43[0];
			fRec322[2] = fRec322[1]; fRec322[1] = fRec322[0];
			fRec323[1] = fRec323[0];
			fRec315[2] = fRec315[1]; fRec315[1] = fRec315[0];
			fRec316[2] = fRec316[1]; fRec316[1] = fRec316[0];
			fRec317[1] = fRec317[0];
			fVec42[1] = fVec42[0];
			fRec318[2] = fRec318[1]; fRec318[1] = fRec318[0];
			fRec319[1] = fRec319[0];
			fRec309[2] = fRec309[1]; fRec309[1] = fRec309[0];
			fRec310[2] = fRec310[1]; fRec310[1] = fRec310[0];
			fRec311[2] = fRec311[1]; fRec311[1] = fRec311[0];
			fRec312[1] = fRec312[0];
			fVec41[1] = fVec41[0];
			fRec313[2] = fRec313[1]; fRec313[1] = fRec313[0];
			fRec314[1] = fRec314[0];
			fRec304[2] = fRec304[1]; fRec304[1] = fRec304[0];
			fRec305[2] = fRec305[1]; fRec305[1] = fRec305[0];
			fRec306[2] = fRec306[1]; fRec306[1] = fRec306[0];
			fRec307[2] = fRec307[1]; fRec307[1] = fRec307[0];
			fRec308[1] = fRec308[0];
			fRec302[2] = fRec302[1]; fRec302[1] = fRec302[0];
			fRec303[1] = fRec303[0];
			fRec298[2] = fRec298[1]; fRec298[1] = fRec298[0];
			fRec299[1] = fRec299[0];
			fVec40[1] = fVec40[0];
			fRec300[2] = fRec300[1]; fRec300[1] = fRec300[0];
			fRec301[1] = fRec301[0];
			fRec293[2] = fRec293[1]; fRec293[1] = fRec293[0];
			fRec294[2] = fRec294[1]; fRec294[1] = fRec294[0];
			fRec295[1] = fRec295[0];
			fVec39[1] = fVec39[0];
			fRec296[2] = fRec296[1]; fRec296[1] = fRec296[0];
			fRec297[1] = fRec297[0];
			fRec287[2] = fRec287[1]; fRec287[1] = fRec287[0];
			fRec288[2] = fRec288[1]; fRec288[1] = fRec288[0];
			fRec289[2] = fRec289[1]; fRec289[1] = fRec289[0];
			fRec290[1] = fRec290[0];
			fVec38[1] = fVec38[0];
			fRec291[2] = fRec291[1]; fRec291[1] = fRec291[0];
			fRec292[1] = fRec292[0];
			fRec282[2] = fRec282[1]; fRec282[1] = fRec282[0];
			fRec283[2] = fRec283[1]; fRec283[1] = fRec283[0];
			fRec284[2] = fRec284[1]; fRec284[1] = fRec284[0];
			fRec285[2] = fRec285[1]; fRec285[1] = fRec285[0];
			fRec286[1] = fRec286[0];
			fRec280[2] = fRec280[1]; fRec280[1] = fRec280[0];
			fRec281[1] = fRec281[0];
			fRec276[2] = fRec276[1]; fRec276[1] = fRec276[0];
			fRec277[1] = fRec277[0];
			fVec37[1] = fVec37[0];
			fRec278[2] = fRec278[1]; fRec278[1] = fRec278[0];
			fRec279[1] = fRec279[0];
			fRec271[2] = fRec271[1]; fRec271[1] = fRec271[0];
			fRec272[2] = fRec272[1]; fRec272[1] = fRec272[0];
			fRec273[1] = fRec273[0];
			fVec36[1] = fVec36[0];
			fRec274[2] = fRec274[1]; fRec274[1] = fRec274[0];
			fRec275[1] = fRec275[0];
			fRec265[2] = fRec265[1]; fRec265[1] = fRec265[0];
			fRec266[2] = fRec266[1]; fRec266[1] = fRec266[0];
			fRec267[2] = fRec267[1]; fRec267[1] = fRec267[0];
			fRec268[1] = fRec268[0];
			fVec35[1] = fVec35[0];
			fRec269[2] = fRec269[1]; fRec269[1] = fRec269[0];
			fRec270[1] = fRec270[0];
			fRec260[2] = fRec260[1]; fRec260[1] = fRec260[0];
			fRec261[2] = fRec261[1]; fRec261[1] = fRec261[0];
			fRec262[2] = fRec262[1]; fRec262[1] = fRec262[0];
			fRec263[2] = fRec263[1]; fRec263[1] = fRec263[0];
			fRec264[1] = fRec264[0];
			fRec258[2] = fRec258[1]; fRec258[1] = fRec258[0];
			fRec259[1] = fRec259[0];
			fRec254[2] = fRec254[1]; fRec254[1] = fRec254[0];
			fRec255[1] = fRec255[0];
			fVec34[1] = fVec34[0];
			fRec256[2] = fRec256[1]; fRec256[1] = fRec256[0];
			fRec257[1] = fRec257[0];
			fRec249[2] = fRec249[1]; fRec249[1] = fRec249[0];
			fRec250[2] = fRec250[1]; fRec250[1] = fRec250[0];
			fRec251[1] = fRec251[0];
			fVec33[1] = fVec33[0];
			fRec252[2] = fRec252[1]; fRec252[1] = fRec252[0];
			fRec253[1] = fRec253[0];
			fRec243[2] = fRec243[1]; fRec243[1] = fRec243[0];
			fRec244[2] = fRec244[1]; fRec244[1] = fRec244[0];
			fRec245[2] = fRec245[1]; fRec245[1] = fRec245[0];
			fRec246[1] = fRec246[0];
			fVec32[1] = fVec32[0];
			fRec247[2] = fRec247[1]; fRec247[1] = fRec247[0];
			fRec248[1] = fRec248[0];
			fRec238[2] = fRec238[1]; fRec238[1] = fRec238[0];
			fRec239[2] = fRec239[1]; fRec239[1] = fRec239[0];
			fRec240[2] = fRec240[1]; fRec240[1] = fRec240[0];
			fRec241[2] = fRec241[1]; fRec241[1] = fRec241[0];
			fRec242[1] = fRec242[0];
			fRec236[2] = fRec236[1]; fRec236[1] = fRec236[0];
			fRec237[1] = fRec237[0];
			fRec232[2] = fRec232[1]; fRec232[1] = fRec232[0];
			fRec233[1] = fRec233[0];
			fVec31[1] = fVec31[0];
			fRec234[2] = fRec234[1]; fRec234[1] = fRec234[0];
			fRec235[1] = fRec235[0];
			fRec227[2] = fRec227[1]; fRec227[1] = fRec227[0];
			fRec228[2] = fRec228[1]; fRec228[1] = fRec228[0];
			fRec229[1] = fRec229[0];
			fVec30[1] = fVec30[0];
			fRec230[2] = fRec230[1]; fRec230[1] = fRec230[0];
			fRec231[1] = fRec231[0];
			fRec221[2] = fRec221[1]; fRec221[1] = fRec221[0];
			fRec222[2] = fRec222[1]; fRec222[1] = fRec222[0];
			fRec223[2] = fRec223[1]; fRec223[1] = fRec223[0];
			fRec224[1] = fRec224[0];
			fVec29[1] = fVec29[0];
			fRec225[2] = fRec225[1]; fRec225[1] = fRec225[0];
			fRec226[1] = fRec226[0];
			fRec216[2] = fRec216[1]; fRec216[1] = fRec216[0];
			fRec217[2] = fRec217[1]; fRec217[1] = fRec217[0];
			fRec218[2] = fRec218[1]; fRec218[1] = fRec218[0];
			fRec219[2] = fRec219[1]; fRec219[1] = fRec219[0];
			fRec220[1] = fRec220[0];
			fRec214[2] = fRec214[1]; fRec214[1] = fRec214[0];
			fRec215[1] = fRec215[0];
			fRec210[2] = fRec210[1]; fRec210[1] = fRec210[0];
			fRec211[1] = fRec211[0];
			fVec28[1] = fVec28[0];
			fRec212[2] = fRec212[1]; fRec212[1] = fRec212[0];
			fRec213[1] = fRec213[0];
			fRec205[2] = fRec205[1]; fRec205[1] = fRec205[0];
			fRec206[2] = fRec206[1]; fRec206[1] = fRec206[0];
			fRec207[1] = fRec207[0];
			fVec27[1] = fVec27[0];
			fRec208[2] = fRec208[1]; fRec208[1] = fRec208[0];
			fRec209[1] = fRec209[0];
			fRec199[2] = fRec199[1]; fRec199[1] = fRec199[0];
			fRec200[2] = fRec200[1]; fRec200[1] = fRec200[0];
			fRec201[2] = fRec201[1]; fRec201[1] = fRec201[0];
			fRec202[1] = fRec202[0];
			fVec26[1] = fVec26[0];
			fRec203[2] = fRec203[1]; fRec203[1] = fRec203[0];
			fRec204[1] = fRec204[0];
			fRec194[2] = fRec194[1]; fRec194[1] = fRec194[0];
			fRec195[2] = fRec195[1]; fRec195[1] = fRec195[0];
			fRec196[2] = fRec196[1]; fRec196[1] = fRec196[0];
			fRec197[2] = fRec197[1]; fRec197[1] = fRec197[0];
			fRec198[1] = fRec198[0];
			fRec192[2] = fRec192[1]; fRec192[1] = fRec192[0];
			fRec193[1] = fRec193[0];
			fRec188[2] = fRec188[1]; fRec188[1] = fRec188[0];
			fRec189[1] = fRec189[0];
			fVec25[1] = fVec25[0];
			fRec190[2] = fRec190[1]; fRec190[1] = fRec190[0];
			fRec191[1] = fRec191[0];
			fRec183[2] = fRec183[1]; fRec183[1] = fRec183[0];
			fRec184[2] = fRec184[1]; fRec184[1] = fRec184[0];
			fRec185[1] = fRec185[0];
			fVec24[1] = fVec24[0];
			fRec186[2] = fRec186[1]; fRec186[1] = fRec186[0];
			fRec187[1] = fRec187[0];
			fRec177[2] = fRec177[1]; fRec177[1] = fRec177[0];
			fRec178[2] = fRec178[1]; fRec178[1] = fRec178[0];
			fRec179[2] = fRec179[1]; fRec179[1] = fRec179[0];
			fRec180[1] = fRec180[0];
			fVec23[1] = fVec23[0];
			fRec181[2] = fRec181[1]; fRec181[1] = fRec181[0];
			fRec182[1] = fRec182[0];
			fRec172[2] = fRec172[1]; fRec172[1] = fRec172[0];
			fRec173[2] = fRec173[1]; fRec173[1] = fRec173[0];
			fRec174[2] = fRec174[1]; fRec174[1] = fRec174[0];
			fRec175[2] = fRec175[1]; fRec175[1] = fRec175[0];
			fRec176[1] = fRec176[0];
			fRec170[2] = fRec170[1]; fRec170[1] = fRec170[0];
			fRec171[1] = fRec171[0];
			fRec166[2] = fRec166[1]; fRec166[1] = fRec166[0];
			fRec167[1] = fRec167[0];
			fVec22[1] = fVec22[0];
			fRec168[2] = fRec168[1]; fRec168[1] = fRec168[0];
			fRec169[1] = fRec169[0];
			fRec161[2] = fRec161[1]; fRec161[1] = fRec161[0];
			fRec162[2] = fRec162[1]; fRec162[1] = fRec162[0];
			fRec163[1] = fRec163[0];
			fVec21[1] = fVec21[0];
			fRec164[2] = fRec164[1]; fRec164[1] = fRec164[0];
			fRec165[1] = fRec165[0];
			fRec155[2] = fRec155[1]; fRec155[1] = fRec155[0];
			fRec156[2] = fRec156[1]; fRec156[1] = fRec156[0];
			fRec157[2] = fRec157[1]; fRec157[1] = fRec157[0];
			fRec158[1] = fRec158[0];
			fVec20[1] = fVec20[0];
			fRec159[2] = fRec159[1]; fRec159[1] = fRec159[0];
			fRec160[1] = fRec160[0];
			fRec150[2] = fRec150[1]; fRec150[1] = fRec150[0];
			fRec151[2] = fRec151[1]; fRec151[1] = fRec151[0];
			fRec152[2] = fRec152[1]; fRec152[1] = fRec152[0];
			fRec153[2] = fRec153[1]; fRec153[1] = fRec153[0];
			fRec154[1] = fRec154[0];
			fRec148[2] = fRec148[1]; fRec148[1] = fRec148[0];
			fRec149[1] = fRec149[0];
			fRec144[2] = fRec144[1]; fRec144[1] = fRec144[0];
			fRec145[1] = fRec145[0];
			fVec19[1] = fVec19[0];
			fRec146[2] = fRec146[1]; fRec146[1] = fRec146[0];
			fRec147[1] = fRec147[0];
			fRec139[2] = fRec139[1]; fRec139[1] = fRec139[0];
			fRec140[2] = fRec140[1]; fRec140[1] = fRec140[0];
			fRec141[1] = fRec141[0];
			fVec18[1] = fVec18[0];
			fRec142[2] = fRec142[1]; fRec142[1] = fRec142[0];
			fRec143[1] = fRec143[0];
			fRec133[2] = fRec133[1]; fRec133[1] = fRec133[0];
			fRec134[2] = fRec134[1]; fRec134[1] = fRec134[0];
			fRec135[2] = fRec135[1]; fRec135[1] = fRec135[0];
			fRec136[1] = fRec136[0];
			fVec17[1] = fVec17[0];
			fRec137[2] = fRec137[1]; fRec137[1] = fRec137[0];
			fRec138[1] = fRec138[0];
			fRec128[2] = fRec128[1]; fRec128[1] = fRec128[0];
			fRec129[2] = fRec129[1]; fRec129[1] = fRec129[0];
			fRec130[2] = fRec130[1]; fRec130[1] = fRec130[0];
			fRec131[2] = fRec131[1]; fRec131[1] = fRec131[0];
			fRec132[1] = fRec132[0];
			fRec126[2] = fRec126[1]; fRec126[1] = fRec126[0];
			fRec127[1] = fRec127[0];
			fRec122[2] = fRec122[1]; fRec122[1] = fRec122[0];
			fRec123[1] = fRec123[0];
			fVec16[1] = fVec16[0];
			fRec124[2] = fRec124[1]; fRec124[1] = fRec124[0];
			fRec125[1] = fRec125[0];
			fRec117[2] = fRec117[1]; fRec117[1] = fRec117[0];
			fRec118[2] = fRec118[1]; fRec118[1] = fRec118[0];
			fRec119[1] = fRec119[0];
			fVec15[1] = fVec15[0];
			fRec120[2] = fRec120[1]; fRec120[1] = fRec120[0];
			fRec121[1] = fRec121[0];
			fRec111[2] = fRec111[1]; fRec111[1] = fRec111[0];
			fRec112[2] = fRec112[1]; fRec112[1] = fRec112[0];
			fRec113[2] = fRec113[1]; fRec113[1] = fRec113[0];
			fRec114[1] = fRec114[0];
			fVec14[1] = fVec14[0];
			fRec115[2] = fRec115[1]; fRec115[1] = fRec115[0];
			fRec116[1] = fRec116[0];
			fRec106[2] = fRec106[1]; fRec106[1] = fRec106[0];
			fRec107[2] = fRec107[1]; fRec107[1] = fRec107[0];
			fRec108[2] = fRec108[1]; fRec108[1] = fRec108[0];
			fRec109[2] = fRec109[1]; fRec109[1] = fRec109[0];
			fRec110[1] = fRec110[0];
			fRec104[2] = fRec104[1]; fRec104[1] = fRec104[0];
			fRec105[1] = fRec105[0];
			fRec100[2] = fRec100[1]; fRec100[1] = fRec100[0];
			fRec101[1] = fRec101[0];
			fVec13[1] = fVec13[0];
			fRec102[2] = fRec102[1]; fRec102[1] = fRec102[0];
			fRec103[1] = fRec103[0];
			fRec95[2] = fRec95[1]; fRec95[1] = fRec95[0];
			fRec96[2] = fRec96[1]; fRec96[1] = fRec96[0];
			fRec97[1] = fRec97[0];
			fVec12[1] = fVec12[0];
			fRec98[2] = fRec98[1]; fRec98[1] = fRec98[0];
			fRec99[1] = fRec99[0];
			fRec89[2] = fRec89[1]; fRec89[1] = fRec89[0];
			fRec90[2] = fRec90[1]; fRec90[1] = fRec90[0];
			fRec91[2] = fRec91[1]; fRec91[1] = fRec91[0];
			fRec92[1] = fRec92[0];
			fVec11[1] = fVec11[0];
			fRec93[2] = fRec93[1]; fRec93[1] = fRec93[0];
			fRec94[1] = fRec94[0];
			fRec84[2] = fRec84[1]; fRec84[1] = fRec84[0];
			fRec85[2] = fRec85[1]; fRec85[1] = fRec85[0];
			fRec86[2] = fRec86[1]; fRec86[1] = fRec86[0];
			fRec87[2] = fRec87[1]; fRec87[1] = fRec87[0];
			fRec88[1] = fRec88[0];
			fRec82[2] = fRec82[1]; fRec82[1] = fRec82[0];
			fRec83[1] = fRec83[0];
			fRec78[2] = fRec78[1]; fRec78[1] = fRec78[0];
			fRec79[1] = fRec79[0];
			fVec10[1] = fVec10[0];
			fRec80[2] = fRec80[1]; fRec80[1] = fRec80[0];
			fRec81[1] = fRec81[0];
			fRec73[2] = fRec73[1]; fRec73[1] = fRec73[0];
			fRec74[2] = fRec74[1]; fRec74[1] = fRec74[0];
			fRec75[1] = fRec75[0];
			fVec9[1] = fVec9[0];
			fRec76[2] = fRec76[1]; fRec76[1] = fRec76[0];
			fRec77[1] = fRec77[0];
			fRec67[2] = fRec67[1]; fRec67[1] = fRec67[0];
			fRec68[2] = fRec68[1]; fRec68[1] = fRec68[0];
			fRec69[2] = fRec69[1]; fRec69[1] = fRec69[0];
			fRec70[1] = fRec70[0];
			fVec8[1] = fVec8[0];
			fRec71[2] = fRec71[1]; fRec71[1] = fRec71[0];
			fRec72[1] = fRec72[0];
			fRec62[2] = fRec62[1]; fRec62[1] = fRec62[0];
			fRec63[2] = fRec63[1]; fRec63[1] = fRec63[0];
			fRec64[2] = fRec64[1]; fRec64[1] = fRec64[0];
			fRec65[2] = fRec65[1]; fRec65[1] = fRec65[0];
			fRec66[1] = fRec66[0];
			fRec60[2] = fRec60[1]; fRec60[1] = fRec60[0];
			fRec61[1] = fRec61[0];
			fRec56[2] = fRec56[1]; fRec56[1] = fRec56[0];
			fRec57[1] = fRec57[0];
			fVec7[1] = fVec7[0];
			fRec58[2] = fRec58[1]; fRec58[1] = fRec58[0];
			fRec59[1] = fRec59[0];
			fRec51[2] = fRec51[1]; fRec51[1] = fRec51[0];
			fRec52[2] = fRec52[1]; fRec52[1] = fRec52[0];
			fRec53[1] = fRec53[0];
			fVec6[1] = fVec6[0];
			fRec54[2] = fRec54[1]; fRec54[1] = fRec54[0];
			fRec55[1] = fRec55[0];
			fRec45[2] = fRec45[1]; fRec45[1] = fRec45[0];
			fRec46[2] = fRec46[1]; fRec46[1] = fRec46[0];
			fRec47[2] = fRec47[1]; fRec47[1] = fRec47[0];
			fRec48[1] = fRec48[0];
			fVec5[1] = fVec5[0];
			fRec49[2] = fRec49[1]; fRec49[1] = fRec49[0];
			fRec50[1] = fRec50[0];
			fRec40[2] = fRec40[1]; fRec40[1] = fRec40[0];
			fRec41[2] = fRec41[1]; fRec41[1] = fRec41[0];
			fRec42[2] = fRec42[1]; fRec42[1] = fRec42[0];
			fRec43[2] = fRec43[1]; fRec43[1] = fRec43[0];
			fRec44[1] = fRec44[0];
			fRec38[2] = fRec38[1]; fRec38[1] = fRec38[0];
			fRec39[1] = fRec39[0];
			fRec34[2] = fRec34[1]; fRec34[1] = fRec34[0];
			fRec35[1] = fRec35[0];
			fVec4[1] = fVec4[0];
			fRec36[2] = fRec36[1]; fRec36[1] = fRec36[0];
			fRec37[1] = fRec37[0];
			fRec29[2] = fRec29[1]; fRec29[1] = fRec29[0];
			fRec30[2] = fRec30[1]; fRec30[1] = fRec30[0];
			fRec31[1] = fRec31[0];
			fVec3[1] = fVec3[0];
			fRec32[2] = fRec32[1]; fRec32[1] = fRec32[0];
			fRec33[1] = fRec33[0];
			fRec23[2] = fRec23[1]; fRec23[1] = fRec23[0];
			fRec24[2] = fRec24[1]; fRec24[1] = fRec24[0];
			fRec25[2] = fRec25[1]; fRec25[1] = fRec25[0];
			fRec26[1] = fRec26[0];
			fVec2[1] = fVec2[0];
			fRec27[2] = fRec27[1]; fRec27[1] = fRec27[0];
			fRec28[1] = fRec28[0];
			fRec18[2] = fRec18[1]; fRec18[1] = fRec18[0];
			fRec19[2] = fRec19[1]; fRec19[1] = fRec19[0];
			fRec20[2] = fRec20[1]; fRec20[1] = fRec20[0];
			fRec21[2] = fRec21[1]; fRec21[1] = fRec21[0];
			fRec22[1] = fRec22[0];
			fVec1[1] = fVec1[0];
			fVec0[1] = fVec0[0];
			for (int i=3; i>0; i--) fRec16[i] = fRec16[i-1];
			iRec17[1] = iRec17[0];
		}
	}
};


