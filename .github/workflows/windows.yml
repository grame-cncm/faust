name: Windows

on:
  push:
    branches:
      - '*'  
  pull_request:
    branches: [ master-dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    if: github.repository_owner == 'grame-cncm' || github.event_name == 'pull_request'
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Get latest CMake and Ninja
      uses: lukka/get-cmake@latest

    - name: Install libcurl Development Package
      run: |
        curl -LO https://curl.se/windows/dl-8.11.1_3/curl-8.11.1_3-win64-mingw.zip
        mkdir libcurl
        tar -xf curl-8.11.1_3-win64-mingw.zip -C libcurl --strip-components=1
        echo "CURL_INCLUDE_DIR=${{ github.workspace }}/libcurl/include" >> $GITHUB_ENV
        echo "CURL_LIBRARY=${{ github.workspace }}/libcurl/lib/libcurl.a" >> $GITHUB_ENV
        echo "${{ github.workspace }}/libcurl/bin" >> $GITHUB_PATH
        curl --version 
        echo "::notice title=CURL Paths::"
        echo "<CURL_INCLUDE_DIR>${{ github.workspace }}/libcurl/include</CURL_INCLUDE_DIR>"
        echo "<CURL_LIBRARY>${{ github.workspace }}/libcurl/lib/libcurl.a</CURL_LIBRARY>"
  
    - name: Build Faust with CMake
      run: |
        cd faustdir
        cmake .. BACKENDS=regular.cmake TARGETS=win-ci.cmake -DCMAKE_VERBOSE_MAKEFILE=on
        make 
        # make -C build cmake BACKENDS=regular.cmake TARGETS=win-ci.cmake -DCMAKE_VERBOSE_MAKEFILE=on
        # make -C build
        
