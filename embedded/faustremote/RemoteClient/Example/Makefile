#############################################################################
# Makefile for building: RemoteClient.app/Contents/MacOS/RemoteClient
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Dec 6 15:56:58 2013
# Project:  RemoteClient.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/local/Qt4.8/mkspecs/macx-g++ -o Makefile RemoteClient.pro
#############################################################################

####### Compiler, tools and options

# These paths are searched for llvm-config* in reverse order (/opt/local/bin
# is included for compatibility with MacPorts).
llvm_paths = /usr/bin /opt/local/bin /usr/local/bin

# Search heuristic for finding a suitable llvm-config. This will select a
# default 'llvm-config', if it's on the PATH. Otherwise it will look for
# llvm-config* on the paths above and select the lexicographically greatest
# among these. Usually this will give the llvm-config for the latest LLVM
# version on your system, preferring later paths in the list (so /usr/local
# will be considered before /usr). If none of these work then you can either
# link a suitable llvm-config to a location somewhere on your PATH, or just
# set LLVM_CONFIG manually.

LLVM_CONFIG = $(lastword $(wildcard /usr/bin/llvm-config* /opt/local/bin/llvm-config* /usr/local/bin/llvm-config*) $(shell which llvm-config 2> /dev/null))

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -gdwarf-2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -Wno-unused-variable -g -g -gdwarf-2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Qt4.8/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I. -I/opt/local/include -I. -F/Library/Frameworks -I/opt/local/include/faust
LINK          = g++
LFLAGS        = -headerpad_max_install_names -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5
LIBS          = `$(LLVM_CONFIG) --ldflags` `$(LLVM_CONFIG) --libs` $(SUBLIBS) -F/Library/Frameworks -L/Library/Frameworks -lcurl -ljack -ljacknet -L/usr/local/lib -lfaust -lfaustremote -llo -framework CoreAudio -framework AudioUnit -framework CoreServices -framework QtGui -framework QtCore 


####### Install

first: all

OBJECTS = utilities.o main.o moc_faustqt.o 

TARGET = ./RemoteClient

all: $(OBJECTS)
	$(LINK) $(LFLAGS) $(CFLAGS) $(CXXFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS)

install:   FORCE

uninstall:   FORCE

clean: 
	rm -f $(OBJECTS)

FORCE:

####### Compile

moc_faustqt.o: moc_faustqt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_faustqt.o moc_faustqt.cpp
	
utilities.o: ../../utilities.cpp ../../utilities.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o utilities.o ../../utilities.cpp
	
main.o: main.cpp ../../utilities.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

moc_faustqt.cpp: /usr/local/include/faust/gui/faustqt.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ /usr/local/include/faust/gui/faustqt.h -o moc_faustqt.cpp

	
